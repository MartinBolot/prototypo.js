{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/deptree/index.js","node_modules/es6-object-assign/src/index.js","node_modules/lodash/internal/arrayCopy.js","node_modules/lodash/internal/arrayEach.js","node_modules/lodash/internal/baseAssign.js","node_modules/lodash/internal/baseClone.js","node_modules/lodash/internal/baseCopy.js","node_modules/lodash/internal/baseFor.js","node_modules/lodash/internal/baseForOwn.js","node_modules/lodash/internal/baseProperty.js","node_modules/lodash/internal/bindCallback.js","node_modules/lodash/internal/bufferClone.js","node_modules/lodash/internal/createBaseFor.js","node_modules/lodash/internal/getLength.js","node_modules/lodash/internal/getNative.js","node_modules/lodash/internal/initCloneArray.js","node_modules/lodash/internal/initCloneByTag.js","node_modules/lodash/internal/initCloneObject.js","node_modules/lodash/internal/isArrayLike.js","node_modules/lodash/internal/isIndex.js","node_modules/lodash/internal/isIterateeCall.js","node_modules/lodash/internal/isLength.js","node_modules/lodash/internal/isObjectLike.js","node_modules/lodash/internal/shimKeys.js","node_modules/lodash/internal/toObject.js","node_modules/lodash/lang/clone.js","node_modules/lodash/lang/isArguments.js","node_modules/lodash/lang/isArray.js","node_modules/lodash/lang/isFunction.js","node_modules/lodash/lang/isNative.js","node_modules/lodash/lang/isObject.js","node_modules/lodash/object/keys.js","node_modules/lodash/object/keysIn.js","node_modules/lodash/utility/identity.js","node_modules/plumin.js/dist/plumin.js","src/Utils.js","src/naive.js","src/prototypo.js","src/updateUtils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","prototypo","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"DepTree","nodes","prototype","add","node","dependants","Array","resolveNode","resolved","processing","deps","forEach","dep","indexOf","push","resolve","assign","target","firstSource","undefined","TypeError","to","Object","arguments","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","polyfill","defineProperty","configurable","writable","value","arrayCopy","source","array","index","arrayEach","iteratee","baseCopy","baseAssign","object","baseForOwn","initCloneArray","initCloneByTag","initCloneObject","isArray","isObject","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","cloneableTags","objectProto","objToString","toString","baseClone","isDeep","customizer","key","stackA","stackB","result","isArr","tag","isFunc","subValue","props","createBaseFor","baseFor","baseProperty","identity","bindCallback","func","thisArg","argCount","collection","accumulator","other","apply","ArrayBuffer","Uint8Array","bufferClone","buffer","byteLength","view","set","toObject","fromRight","keysFunc","iterable","getLength","isNative","getNative","hasOwnProperty","constructor","input","reFlags","Ctor","byteOffset","exec","lastIndex","isLength","isArrayLike","reIsUint","MAX_SAFE_INTEGER","isIndex","test","isIterateeCall","type","isObjectLike","isArguments","keysIn","shimKeys","propsLength","allowIndexes","clone","propertyIsEnumerable","nativeIsArray","isFunction","reIsHostCtor","fnToString","Function","reIsNative","RegExp","replace","nativeKeys","isProto","skipIndexes","plumin",2,"opentype","TINF_OK","TINF_DATA_ERROR","Tree","table","Uint16Array","trans","Data","dest","sourceIndex","bitcount","destLen","ltree","dtree","sltree","sdtree","length_bits","length_base","dist_bits","dist_base","clcidx","code_tree","lengths","tinf_build_bits_base","bits","base","delta","first","sum","tinf_build_fixed_trees","lt","dt","offs","tinf_build_tree","off","num","tinf_getbit","d","bit","tinf_read_bits","val","tinf_decode_symbol","cur","tinf_decode_trees","hlit","hdist","hclen","clen","sym","prev","tinf_inflate_block_data","dist","tinf_inflate_uncompressed_block","invlength","tinf_uncompress","bfinal","res","btype","slice","subarray","argument","predicate","message","assert",3,"line","ctx","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke",4,"cffStandardStrings","cffStandardEncoding","cffExpertEncoding","standardNames","DefaultEncoding","font","charToGlyphIndex","c","charCodeAt","glyphs","glyph","get","j","unicodes","CmapEncoding","cmap","glyphIndexMap","CffEncoding","encoding","charset","charName","GlyphNames","post","version","names","numberOfGlyphs","glyphNameIndex","nameToGlyphIndex","name","glyphIndexToName","gid","addGlyphNames","tables","charCodes","glyphIndex","addUnicode","parseInt","cffEncoding","glyphNames",5,"path","sfnt","glyphset","util","Font","options","empty","checkArgument","familyName","styleName","unitsPerEm","ascender","descender","fontFamily","en","fontSubfamily","fullName","postScriptName","designer","designerURL","manufacturer","manufacturerURL","license","licenseURL","description","copyright","trademark","supported","GlyphSet","hasChar","charToGlyph","stringToGlyphs","nameToGlyph","nametoGlyphIndex","getKerningValue","leftGlyph","rightGlyph","gposKerning","getGposKerningValue","kerningPairs","forEachGlyph","text","x","y","fontSize","callback","kerning","fontScale","advanceWidth","kerningValue","getPath","fullPath","Path","gX","gY","gFontSize","glyphPath","extend","getPaths","glyphPaths","draw","drawPoints","drawMetrics","getEnglishName","translations","validate","warnings","_this","assertNamePresent","englishName","trim","toTables","fontToTable","toBuffer","console","warn","toArrayBuffer","sfntTable","bytes","encode","intArray","download","fileName","arrayBuffer","isBrowser","requestFileSystem","webkitRequestFileSystem","TEMPORARY","fs","root","getFile","create","fileEntry","createWriter","writer","dataView","DataView","blob","Blob","write","addEventListener","location","href","toURL","err","arrayBufferToNodeBuffer","writeFileSync","./encoding","./glyphset","./path","./tables/sfnt","./util",6,"check","getPathDefinition","_path","commands","p","Glyph","bindConstructorValues","unicode","xMin","yMin","xMax","yMax","scale","cmd","quadraticCurveTo","curveTo","closePath","getContours","points","contours","currentContour","pt","lastPointOfContour","getMetrics","xCoords","yCoords","metrics","Math","min","max","leftSideBearing","isFinite","rightSideBearing","drawCircles","PI_SQ","PI","arc","fill","blueCircles","redCircles","fillStyle","lineWidth","strokeStyle","./check","./draw",7,"_glyph","loader","glyphLoader","ttfGlyphLoader","parseGlyph","data","position","buildPath","cffGlyphLoader","parseCFFCharstring","charstring","./glyph",8,"inflate","_font","parse","cff","fvar","glyf","gpos","head","hhea","hmtx","kern","ltag","loca","maxp","_name","os2","loadFromFile","readFile","nodeBufferToArrayBuffer","loadFromUrl","url","request","XMLHttpRequest","open","responseType","onload","status","statusText","response","send","parseOpenTypeTableEntries","numTables","tableEntries","getTag","offset","getULong","compression","parseWOFFTableEntries","compLength","origLength","compressedLength","originalLength","uncompressTable","tableEntry","inBuffer","outBuffer","parseBuffer","indexToLocFormat","ltagTable","signature","String","fromCharCode","outlinesFormat","getUShort","flavor","cffTableEntry","fvarTableEntry","glyfTableEntry","gposTableEntry","hmtxTableEntry","kernTableEntry","locaTableEntry","nameTableEntry","numberOfHMetrics","numGlyphs","nameTable","shortVersion","locaTable","locaOffsets","glyfTable","cffTable","hmtxTable","kernTable","gposTable","fvarTable","load","isNode","loadFn","loadSync","readFileSync","_parse","./font","./parse","./tables/cff","./tables/cmap","./tables/fvar","./tables/glyf","./tables/gpos","./tables/head","./tables/hhea","./tables/hmtx","./tables/kern","./tables/loca","./tables/ltag","./tables/maxp","./tables/name","./tables/os2","./tables/post","tiny-inflate",9,"getByte","getUint8","getCard8","getUint16","getCard16","getShort","getInt16","getUint32","getFixed","decimal","fraction","getInt8","getOffset","offSize","v","getBytes","startOffset","endOffset","bytesToString","typeOffsets","byte","uShort","short","uLong","fixed","longDateTime","Parser","relativeOffset","parseByte","parseChar","parseCard8","parseUShort","parseCard16","parseSID","parseOffset16","parseShort","parseF2Dot14","parseULong","parseFixed","parseOffset16List","parseUShortList","count","offsets","parseString","string","parseTag","parseLongDateTime","parseVersion","major","minor","skip","amount",10,"strokeWidth","bezierCurveTo","quadTo","close","pathOrCommands","toPathData","decimalPlaces","floatToString","round","toFixed","packValues","toSVG","svg",11,"sizeOf","Table","tableName","fields","field","optionKeys","k","sizeOfFunction","TABLE","./types",12,"equals","b","parseCFFIndex","start","conversionFn","objects","objectOffset","offsetSize","pos","parseFloatOperand","parser","eof","lookup","n1","n2","parseFloat","parseOperand","b0","b1","b2","b3","b4","entriesToObject","entries","values","parseCFFDict","size","operands","op","getCFFString","strings","interpretDict","dict","meta","newDict","m","parseCFFHeader","header","formatMajor","formatMinor","TOP_DICT_META","PRIVATE_DICT_META","parseCFFTopDict","parseCFFPrivateDict","parseCFFCharset","nGlyphs","sid","format","parseCFFEncoding","enc","nCodes","nRanges","nLeft","c1x","c1y","c2x","c2y","stack","nStems","haveWidth","width","defaultWidthX","newContour","parseStems","hasWidthArg","shift","nominalWidthX","codeIndex","subrCode","jpx","jpy","c3x","c3y","c4x","c4y","pop","subrsBias","subrs","abs","log","gsubrsBias","gsubrs","calcCFFSubroutineBias","bias","parseCFFTable","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDictData","topDict","privateDictOffset","privateDict","subrOffset","subrIndex","charStringsIndex","charStrings","charString","encodeString","makeHeader","makeNameIndex","fontNames","makeDict","attrs","entry","makeTopDict","makeTopDictIndex","topDicts","makeStringIndex","makeGlobalSubrIndex","makeCharsets","glyphName","glyphSID","glyphToOps","ops","dx","dy","_13","_23","dx1","dy1","dx2","dy2","makeCharStringsIndex","makePrivateDict","makeCFFTable","weight","weightName","fontBBox","fontMatrix","private","privateAttrs","charsets","make","../encoding","../glyphset","../parse","../path","../table",13,"parseCmapTable","platformId","encodingId","language","segCount","endCountParser","startCountParser","idDeltaParser","idRangeOffsetParser","glyphIndexOffset","endCount","startCount","idDelta","idRangeOffset","addSegment","segments","end","addTerminatorSegment","makeCmapTable","sort","segCountX2","searchRange","pow","floor","entrySelector","rangeShift","endCounts","startCounts","idDeltas","idRangeOffsets","glyphIds","segment","concat","glyphId","../check",14,"addName","nameString","JSON","stringify","nameID","nameKey","makeFvarAxis","axis","minValue","defaultValue","maxValue","parseFvarAxis","makeFvarInstance","inst","axes","axisTag","coordinates","parseFvarInstance","makeFvarTable","instances","offsetToData","parseFvarTable","tableVersion","axisCount","axisSize","instanceCount","instanceSize","instanceStart",15,"parseGlyphCoordinate","flag","previousValue","shortVectorBitMask","sameBitMask","numberOfContours","flags","endPointIndices","instructionLength","instructions","numberOfCoordinates","repeatCount","point","onCurve","px","py","isComposite","components","moreComponents","component","xScale","scale01","scale10","yScale","transformPoints","transform","newPoints","newPt","contour","firstPt","lastPt","curvePt","realFirstPoint","prevPt","midPt","componentGlyph","transformedPoints","parseGlyfTable","nextOffset",16,"parseTaggedListTable","list","parseCoverageTable","coverage","begin","parseClassDefTable","startGlyph","glyphCount","classes","glyphID","rangeCount","startGlyphs","endGlyphs","classValues","parsePairPosSubTable","coverageOffset","valueFormat1","valueFormat2","value1","value2","sharedPairSets","pairSetCount","pairSet","pairSetOffsets","firstGlyph","pairSetOffset","sharedPairSet","pairValueCount","secondGlyph","pairs","classDef1Offset","classDef2Offset","class1Count","class2Count","getClass1","getClass2","kerningMatrix","kerningRow","covered","class1","class2","parseLookupTable","lookupType","lookupFlag","useMarkFilteringSet","subTableCount","subTableOffsets","markFilteringSet","subtables","parseGposTable","lookupListOffset","lookupCount","lookupTableOffsets","lookupListAbsoluteOffset",17,"parseHeadTable","fontRevision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","glyphDataFormat","makeHeadTable",18,"parseHheaTable","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","makeHheaTable",19,"parseHmtxTable","numMetrics","makeHmtxTable",20,"parseKernTable","subTableVersion","nPairs","leftIndex","rightIndex",21,"parseLocaTable","parseFn","glyphOffsets","glyphOffset",22,"makeLtagTable","tags","stringPool","stringPoolOffset","parseLtagTable","numTags",23,"parseMaxpTable","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","makeMaxpTable",24,"types","decode","nameTableNames","macLanguages",0,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,"macLanguageToScript","windowsLanguages",1078,1052,1156,1118,5121,15361,3073,2049,11265,13313,12289,4097,6145,8193,16385,1025,10241,7169,14337,9217,1067,1101,2092,1068,1133,1069,1059,2117,1093,8218,5146,1150,1026,1027,3076,5124,2052,4100,1028,1155,1050,4122,1029,1030,1164,1125,2067,1043,3081,10249,4105,9225,16393,6153,8201,17417,5129,13321,18441,7177,11273,2057,1033,12297,1061,1080,1124,1035,2060,3084,1036,5132,6156,4108,1122,1110,1079,3079,1031,5127,4103,2055,1032,1135,1095,1128,1037,1081,1038,1039,1136,1057,1117,2141,2108,1076,1077,1040,2064,1041,1099,1087,1107,1158,1159,1089,1111,1042,1088,1108,1062,1063,2094,1134,1071,2110,1086,1100,1082,1153,1146,1102,1148,1104,2128,1121,1044,2068,1154,1096,1123,1045,1046,2070,1094,1131,2155,3179,1048,1047,1049,9275,4155,5179,3131,1083,2107,8251,6203,7227,1103,7194,3098,6170,2074,1132,1074,1115,1051,1060,11274,16394,13322,9226,5130,7178,12298,17418,4106,18442,2058,19466,6154,15370,10250,20490,3082,1034,21514,14346,8202,2077,1053,1114,1064,2143,1097,1092,1098,1054,1105,1055,1090,1152,1058,1070,1056,2115,1091,1066,1106,1160,1157,1144,1130,"getLanguageCode","platformID","languageID","utf16","macScriptEncodings","macLanguageEncodings","getEncoding","encodingID","parseNameTable","stringOffset","property","UTF16","MACSTRING","langTagCount","reverseDict","makeNameRecord","findSubArray","needle","haystack","needleLength","limit","loop","addStringToPool","pool","makeNameTable","nameIDs","namesWithNumericKeys","nameTableIds","id","macLanguageIds","windowsLanguageIds","nameRecords","lang","macPlatform","macLanguage","macScript","macEncoding","macName","macNameOffset","winLanguage","winName","winNameOffset","../types","unicodeRanges","getUnicodeRange","range","parseOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContent","makeOS2Table","parsePostTable","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","nameLength","makePostTable","log2","computeCheckSum","makeTableRecord","checkSum","makeSfntTable","highestPowerOf2","recordFields","tableFields","tableLength","tableRecord","isNaN","r1","r2","metricsForChar","chars","notFoundMetrics","average","vs","fontToSfntTable","xMins","yMins","xMaxs","yMaxs","advanceWidths","leftSideBearings","rightSideBearings","firstCharIndex","lastCharIndex","globals","advanceWidthAvg","maxLeftSideBearing","headTable","hheaTable","maxpTable","os2Table","cmapTable","englishFamilyName","englishStyleName","englishFullName","uniqueID","preferredFamily","preferredSubfamily","languageTags","postTable","checkSumAdjusted","./cff","./cmap","./head","./hhea","./hmtx","./ltag","./maxp","./name","./os2","./post","LIMIT16","LIMIT32","constant","BYTE","CHAR","CHARARRAY","USHORT","SHORT","UINT24","ULONG","LONG","FIXED","FWORD","UFWORD","LONGDATETIME","TAG","Card8","Card16","OffSize","SID","NUMBER","NUMBER16","NUMBER32","REAL","epsilon","nibbles","ii","out","substr","NAME","STRING","numBytes","codePoints","numChars","codepoint","eightBitMacEncodings","x-mac-croatian","x-mac-cyrillic","x-mac-gaelic","x-mac-greek","x-mac-icelandic","x-mac-inuit","x-mac-ce","macintosh","x-mac-romanian","x-mac-turkish","dataLength","macEncodingTableCache","WeakMap","macEncodingCacheKeys","getMacEncodingTable","cacheKey","cachedTable","decodingTable","encodingTable","str","INDEX","dataSize","OBJECT","encodedOffsets","offsetEncoder","encodedOffset","DICT","OPERAND","OPERATOR","OP","wmm","CHARSTRING","cachedValue","encodingFunction","LITERAL","ab","Buffer","expression","paper","noCanvas","process","browser","WorkerGlobalScope","Base","hidden","iter","bind","forIn","proto","__proto__","describe","obj","__lookupGetter__","__lookupSetter__","_define","__defineGetter__","__defineSetter__","inject","src","beans","preserve","beansNames","substring","bean","match","toLowerCase","isPlainObject","part","each","exclude","statics","ctor","initialize","pick","_id","_class","Formatter","instance","number","join","getClassName","exportJSON","toJSON","serialize","_set","dontCheck","_filtering","obj1","obj2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","formatter","precision","definitions","references","item","ref","unshift","_serialize","_compact","deserialize","json","_data","_isDictionary","isRoot","isDictionary","args","importJSON","isTarget","Item","Layer","insert","splice","items","remove","append","_index","removed","capitalize","toUpperCase","camelize","all","chr","hyphenate","Emitter","on","_eventTypes","handlers","_callbacks","install","uninstall","once","emit","event","stop","responds","attach","detach","fire","_installEvents","events","_events","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","project","projects","tools","palettes","_scopes","support","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","agent","navigator","userAgent","platform","v1","v2","rv","chrome","versionNumber","webkit","atom","getView","getPaper","execute","PaperScript","View","updateFocus","scope","that","setup","element","Project","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","val1","val2","separator","height","rectangle","Numerical","abscissas","weights","sqrt","EPSILON","MACHINE_EPSILON","clip","TOLERANCE","CURVETIME_EPSILON","GEOMETRIC_EPSILON","WINDING_EPSILON","TRIGONOMETRIC_EPSILON","CLIPPING_EPSILON","KAPPA","isZero","integrate","w","A","B","Ax","findRoot","df","tolerance","fx","nx","solveQuadratic","roots","eMin","eMax","Infinity","D","gmC","mult","LOG10E","Q","R","solveCubic","c2","ec","x0","q","qd","tmp","UID","_pools","Point","arg0","arg1","hasY","angle","setAngle","setLength","_angle","cos","sin","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","atan2","div","NaN","dot","acos","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","current","rotate","center","subtract","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","contains","isClose","isCollinear","isColinear","isOrthogonal","point1","point2","random","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","next","rect","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","left","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","concatenate","a1","c1","d1","a2","d2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","bounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","p1x","p1y","v1x","v1y","p2x","p2y","v2x","v2y","u1","u2","uMin","uMax","vx","vy","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","_drawSelection","Symbol","dontCenter","setDefinition","_definition","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","PlacedSymbol","symbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","visible","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","parent","setParent","_installEvent","_uninstallEvent","onFrame","_animateItem","onLoad","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","children","_children","namedChildren","_namedChildren","orig","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","_updateBoundsCache","child","setBounds","cache","cached","_internal","_boundsCache","ids","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","copy","includeMatrix","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","ceil","raster","Raster","canvas","setCanvas","_contains","getInternalBounds","_asPathItem","getIntersections","guides","parentTotalMatrix","_totalMatrix","totalMatrix","tolerancePadding","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","class","checkBounds","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","matches","compare","matchObject","firstOnly","overlapping","inside","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","reduce","namedArray","notifyParent","replaceWith","reverseChildren","reverse","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isSibling","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","toCanvasStyle","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","getViewMatrix","normalBlend","nativeBlend","direct","dontStart","_canComposite","mainCtx","itemOffset","prevOffset","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","getWindingRule","getCornerCenter","halfSize","dir","corner","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","crossOrigin","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","_crossOrigin","getElement","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","modify","setContext","context","toDataURL","loaded","update","document","getElementById","Image","setTimeout","DomEvent","getCrossOrigin","setCrossOrigin","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","hasHandles","_point","_handleIn","_handleOut","curves","_curves","curve","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","clearHandles","_selectionState","state","oldState","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","getNext","getPrevious","isFirst","isLast","inX","inY","reversed","removeSegment","interpolate","segment0","segment1","coef","dxPoint","dyPoint","dxHandleIn","dyHandleIn","dxHandleOut","dyHandleOut","change","Curve","arg6","arg7","seg1","seg2","handle1","handle2","segment2","_segment2","getPoint1","getHandle1","getHandle2","getPoint2","_length","setPoint1","setPoint2","setHandle1","setHandle2","getSegment1","getSegment2","getPoints","getLine","getPart","getPartLength","_getIntersections","_getParameter","isParameter","parameter","getParameterAt","_setHandles","tMin","tMax","subdivide","setHandles","split","p1","h1","h2","p2","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","geomEpsilon","getNearestParameter","isStraight","minDist","minT","refine","step","flip","isFlatEnough","ux","uy","h1x","h1y","h2x","h2y","_addBounds","v0","v3","padding","isLinear","third","isHorizontal","getTangentAt","isVertical","getLocationAt","getLocationOf","getOffsetOf","loc","getNearestLocation","getNearestPoint","methods","evaluateMethods","getLengthIntegrand","ax","bx","ay","by","getIterations","evaluate","normalized","ds","forward","rangeLength","guess","getTangent","getWeightedTangent","getNormal","getWeightedNormal","getCurvature","addLocation","locations","t1","t2","overlap","startConnected","endConnected","renormalize","loc1","loc2","_intersection","addCurveIntersections","oldTDiff","recursion","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","hull","getConvexHull","tMinClip","tMaxClip","clipConvexHull","tDiff","tMinNew","tMaxNew","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","distRatio","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rvc","tc","pc","tl","pl","addLineIntersection","_getSelfIntersection","c1p1x","c1p1y","c1p2x","c1p2y","c2p1x","c2p1y","c2p2x","c2p2y","c1s1x","c1s1y","c1s2x","c1s2y","c2s1x","c2s1y","c2s2x","c2s2y","overlaps","getOverlaps","straight1","straight2","straight","before","c1p1","c1p2","c2p1","c2p2","side1","side2","edgeSum","ac","bc","tSplit","maxCurvature","curvature","getCurvatureAt","timeEpsilon","getLineLengthSquared","l1","l2","o1","o2","_overlap","_distance","_setCurve","_parameter","getPointAt","_next","_prev","_version","_curve","_segment","_setSegment","getSegment","getParameter","_offset","trySegment","getCurveOffset","getIntersection","_ignoreOther","diff","isTouching","inter","curve1","curve2","isCrossing","c4","c3","isInRange","a3","a4","isOverlap","merge","search","found","path1","path2","expanded","_returnFirst","matrix1","matrix2","curves1","curves2","length1","length2","values2","arrays","values1","getCrossings","setPathData","relative","previous","control","getCoord","command","lower","move","cubicCurveTo","arcTo","winding","_getWinding","closed","setSegments","_clockwise","_area","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","curX","curY","prevX","prevY","outX","outY","skipLine","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","last","area","isClockwise","setClockwise","clockwise","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","simplify","fitter","PathFitter","fit","last1","last2","first1","first2","toShape","topCenter","seg3","seg4","isArc","pt1","pt2","shape","numSegments","strokePadding","cap","hitStroke","hitFill","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","_addBevelJoin","_addSquareCap","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","knots","f1","f2","ie","je","getCurrentSegment","moveBy","through","extent","vector","middle","large","rxSq","rySq","xSq","ySq","throughSide","centerSide","ext","inc","z","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","prevCoords","processSegment","joinBounds","addRound","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","paths","getCurrentPath","operators","preparePath","resolveCrossings","reorient","finishBoolean","computeBoolean","operation","computeOpenBoolean","_path1","_path2","crossings","divideLocations","monoCurves","collect","_getMonoCurves","propagateWinding","_winding","tracePaths","sub","addPath","linkIntersections","noHandles","clearSegments","prevCurve","prevT","origT","getWinding","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","startCounted","slope","counted","totalLength","windingSum","curveLength","otherStart","operator","overlapWinding","isValid","adjusted","_visited","isStart","findBestIntersection","strict","nextSeg","nextInter","findStartSegment","finished","firstSegment","error","insertCurve","y0","handleCurve","y3","getInteriorPoint","xIntercepts","counters","maxRecursion","minDifference","addCurve","computeParts","maxT","halfT","prevVal","prevLen","weighted","fitCubic","tan1","tan2","uPrime","chordLengthParameterize","maxError","parametersInOrder","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","C","X","detC0C1","alpha1","alpha2","detC0X","detXC1","c0","segLength","eps","degree","maxDist","P","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","gray","rgb","hsb","hsl","gradient","componentParsers","colorCache","colorCtx","fromCSS","hsbIndices","converters","rgb-hsb","h","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","t3","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","hasOverlap","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","_stops","origin","destination","canvasGradient","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","nativeRequest","requested","callbacks","focused","timer","focus","blur","handleCallbacks","setInterval","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","getCanvasSize","_windowEvents","resize","setViewSize","_setViewSize","Stats","_stats","stats","domElement","appendChild","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","_time","_count","_requestFrame","_requested","_handleFrame","now","Date","_before","_handlingFrame","time","animate","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tool","prevFocus","tempFocus","dragging","handleMouseMove","_handleEvent","mousedown","mousemove","mouseup","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","mouseFlags","mousedrag","click","doubleclick","mouseenter","mouseleave","_eventCounters","HTMLCanvasElement","deviceRatio","backingStoreRatio","firefox","parentNode","temp","createElement","removeChild","prevFont","measureText","force","downPoint","lastPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","callEvent","mouseEvent","MouseEvent","isStopped","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","specialKeys",224,"specialChars","option","capsLock","space","charCodeMap","keyMap","commandFixMap","downCode","handleKey","keyCode","charCode","specialKey","mac","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","method","async","xhr","ActiveXObject","overrideMimeType","onreadystatechange","readyState","responseText","canvases","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","attribute","fromSVG","exportFilter","SVGNamespaces","xlink","setAttributes","namespace","setAttributeNS","createElementNS","getTransform","exportGroup","childNode","exportSVG","clip-path","exportRaster","embedImages","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","exporters","applyStyle","visibility","svgs","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","map","importGroup","childNodes","isClip","currentStyle","applyAttributes","querySelectorAll","importSVG","importPoly","importPath","pathData","importGradient","isRadial","importers","#document","nextSibling","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","applyTransform","transforms","applyOpacity","attributes","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","styles","group","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","onImport","expandShapes","Collection","cb","wrapConstructor","useConstructed","wrapper","arr","params","rconstructor","constructorFilter","unwrapArg","isPlural","unwrapArgs","proxy","methodNames","getOwnPropertyNames","filter","plural","fontinfo","ot","glyphMap","charMap","altMap","_subset","fontMap","addGlyph","addGlyphs","fonts","styleElement","styleSheet","styleSheets","ss","ownerNode","_lastSubset","normalizeSubset","lastIndexOf","getGlyphSubset","subset","setAlternateFor","font0","font1","updateSVGData","updateOTCommands","merged","updateOT","shouldUpdateCommands","importOT","otFont","otGlyph","_URL","URL","webkitURL","addToFonts","enFamilyName","delete","fontface","FontFace","createObjectURL","fontObjectURL","revokeObjectURL","deleteRule","insertRule","triggerDownload","onloadend","dispatchEvent","readAsDataURL","user","fetch","headers","Content-Type","then","bufferToDownload","../node_modules/opentype.js/dist/opentype.js","../node_modules/paper/dist/paper-core.js","./Glyph.js","es6-object-assign","Outline","anchors","parentAnchors","addAnchor","addAnchors","addParentAnchor","glyph0","glyph1","svgData","addContour","./Outline.js","fromPath","outline0","outline1","defineProperties","firstNode","lastNode","_updateData","pushSimple","pushBezier","exportReversed","ctrl1","ctrl2","Node","./Collection.js","./Font.js","./Node.js","./Outline","./Path.js","updateUtils","Utils","_","ufoToPaper","parameters","outline","parentParameters","lib","transformOrigin","solvingOrder","fontFromSrc","info","filteredSrc","controls","presets","createUpdaters","mergeStatic","solveDependencyTree","glyphFromSrc","fontSrc","naive","embed","anchorSrc","contourSrc","nodeSrc","embedComponents","componentSrc","annotator","addComponent","cursor","propFromCursor","_dependencies","_parameters","_updaters","leaf","_operation","createUpdater","updaterCache","sOperation","depTree","dependencyTree","order","simplified","simplifyResolutionOrder","parentSrc","leafSrc","currCursor","rdeg","transformsToMatrix","Float32Array","curr","rslt","updateParameters","updateProperties","_cursor","propName","updateXscenderProperties","xscenderProperties","groupName","sign","autoExpandableNodeSrc","inSkeleton","autoExpandedNodeSrc","side","expandedNodeUpdater","expandedTo","skeletonCopier","explicitExpandableNodeSrc","explicitExpandedNodeSrc","expandedContourSrc","curviness","prepareContour","updateContour","additionalContours","skeleton","leftContour","rightContour","leftNodes","rightNodes","leftNodesSrc","rightNodesSrc","leftSrc","rightSrc","expandedFrom","typeIn","typeOut","addContours","isLeft","distr","_dirOut","_dirIn","tensionIn","tensionOut","tension","lineAngle","startCtrl","endCtrl","startType","endType","startTension","endTension","startDir","endDir","rri","rayRayIntersection","_expand","dirIn","dirOut","psProto","parametricFont","glyphSrc","_params","indivParam","groups","_node","_contour","prepareDataUpdate","isPrepared","lineLineIntersection","p4","x3","x4","y4","onLine","pointOnCurve","pointHandleOut","pointHandleIn","distanceFromOut","inverseOrientation","linePrecision","previousPoint","deCasteljau"],"mappings":"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AAAxwC,KAAAoX,IAAA/iB,GAAAF,GAAA,GAAA6L,KAAAoX,IAAAhjB,GAAAE,GAAA,IAGA8uG,OAAAnxF,IAAA,WACAnW,QAAAmW,IAAArlB,MAAAkP,QAAAlU,UACA,OAAAA,WAAA,GAGAhD,QAAAD,QAAAy+G;AtCzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChhEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpnxphninfile":"generated.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var DepTree = function() {\n  this.nodes = {}; \n};\n\nDepTree.prototype.add = function(node, dependants) {\n  var self = this;\n\n  if (!dependants) {\n    dependants = [];\n  } else if (!(dependants instanceof Array)) {\n    dependants = [dependants];\n  }\n\n  this.nodes[node] = dependants;\n};\n\n\nDepTree.prototype.resolveNode = function(node, resolved, processing) {\n\n  var self = this;\n\n  resolved = resolved || [];\n  processing = processing || {};\n  var deps = this.nodes[node] || [];\n\n  processing[node] = true;\n\n  deps.forEach(function(dep) {\n    if (resolved.indexOf(dep) != -1) {\n      return;\n    }\n    if (processing[dep]) {\n      throw new Error('Circular dependency: '+dep);\n    }\n    self.resolveNode(dep, resolved, processing);\n  });\n\n  if (resolved.indexOf(node) == -1) {\n    processing[node] = false;\n    resolved.push(node);\n  }\n  return resolved;\n};\n\nDepTree.prototype.resolve = function() {\n\n  var resolved = [];\n  for (var node in this.nodes) {\n    this.resolveNode(node, resolved);\n  }\n\n  return resolved;\n\n};\n\n\nmodule.exports = DepTree;\n","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction arrayCopy(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayCopy;\n","/**\n * A specialized version of `_.forEach` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var baseCopy = require('./baseCopy'),\n    keys = require('../object/keys');\n\n/**\n * The base implementation of `_.assign` without support for argument juggling,\n * multiple sources, and `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return source == null\n    ? object\n    : baseCopy(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var arrayCopy = require('./arrayCopy'),\n    arrayEach = require('./arrayEach'),\n    baseAssign = require('./baseAssign'),\n    baseForOwn = require('./baseForOwn'),\n    initCloneArray = require('./initCloneArray'),\n    initCloneByTag = require('./initCloneByTag'),\n    initCloneObject = require('./initCloneObject'),\n    isArray = require('../lang/isArray'),\n    isObject = require('../lang/isObject');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\ncloneableTags[dateTag] = cloneableTags[float32Tag] =\ncloneableTags[float64Tag] = cloneableTags[int8Tag] =\ncloneableTags[int16Tag] = cloneableTags[int32Tag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[stringTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[mapTag] = cloneableTags[setTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * The base implementation of `_.clone` without support for argument juggling\n * and `this` binding `customizer` functions.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The object `value` belongs to.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates clones with source counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return arrayCopy(value, result);\n    }\n  } else {\n    var tag = objToString.call(value),\n        isFunc = tag == funcTag;\n\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return baseAssign(result, value);\n      }\n    } else {\n      return cloneableTags[tag]\n        ? initCloneByTag(value, tag, isDeep)\n        : (object ? value : {});\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == value) {\n      return stackB[length];\n    }\n  }\n  // Add the source value to the stack of traversed objects and associate it with its clone.\n  stackA.push(value);\n  stackB.push(result);\n\n  // Recursively populate clone (susceptible to call stack limits).\n  (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n    result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @returns {Object} Returns `object`.\n */\nfunction baseCopy(source, props, object) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    object[key] = source[key];\n  }\n  return object;\n}\n\nmodule.exports = baseCopy;\n","var createBaseFor = require('./createBaseFor');\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./baseFor'),\n    keys = require('../object/keys');\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var identity = require('../utility/identity');\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\nmodule.exports = bindCallback;\n","(function (global){\n/** Native method references. */\nvar ArrayBuffer = global.ArrayBuffer,\n    Uint8Array = global.Uint8Array;\n\n/**\n * Creates a clone of the given array buffer.\n *\n * @private\n * @param {ArrayBuffer} buffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction bufferClone(buffer) {\n  var result = new ArrayBuffer(buffer.byteLength),\n      view = new Uint8Array(result);\n\n  view.set(new Uint8Array(buffer));\n  return result;\n}\n\nmodule.exports = bufferClone;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9sb2Rhc2gvaW50ZXJuYWwvYnVmZmVyQ2xvbmUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIE5hdGl2ZSBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBBcnJheUJ1ZmZlciA9IGdsb2JhbC5BcnJheUJ1ZmZlcixcbiAgICBVaW50OEFycmF5ID0gZ2xvYmFsLlVpbnQ4QXJyYXk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGNsb25lIG9mIHRoZSBnaXZlbiBhcnJheSBidWZmZXIuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXlCdWZmZXJ9IGJ1ZmZlciBUaGUgYXJyYXkgYnVmZmVyIHRvIGNsb25lLlxuICogQHJldHVybnMge0FycmF5QnVmZmVyfSBSZXR1cm5zIHRoZSBjbG9uZWQgYXJyYXkgYnVmZmVyLlxuICovXG5mdW5jdGlvbiBidWZmZXJDbG9uZShidWZmZXIpIHtcbiAgdmFyIHJlc3VsdCA9IG5ldyBBcnJheUJ1ZmZlcihidWZmZXIuYnl0ZUxlbmd0aCksXG4gICAgICB2aWV3ID0gbmV3IFVpbnQ4QXJyYXkocmVzdWx0KTtcblxuICB2aWV3LnNldChuZXcgVWludDhBcnJheShidWZmZXIpKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBidWZmZXJDbG9uZTtcbiJdfQ==","var toObject = require('./toObject');\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var baseProperty = require('./baseProperty');\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n","var isNative = require('../lang/isNative');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add array properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var bufferClone = require('./bufferClone');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    stringTag = '[object String]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return bufferClone(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      var buffer = object.buffer;\n      return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      var result = new Ctor(object.source, reFlags.exec(object));\n      result.lastIndex = object.lastIndex;\n  }\n  return result;\n}\n\nmodule.exports = initCloneByTag;\n","/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  var Ctor = object.constructor;\n  if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n    Ctor = Object;\n  }\n  return new Ctor;\n}\n\nmodule.exports = initCloneObject;\n","var getLength = require('./getLength'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\nmodule.exports = isArrayLike;\n","/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n","var isArrayLike = require('./isArrayLike'),\n    isIndex = require('./isIndex'),\n    isObject = require('../lang/isObject');\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('./isIndex'),\n    isLength = require('./isLength'),\n    keysIn = require('../object/keysIn');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = !!length && isLength(length) &&\n    (isArray(object) || isArguments(object));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = shimKeys;\n","var isObject = require('../lang/isObject');\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\nmodule.exports = toObject;\n","var baseClone = require('../internal/baseClone'),\n    bindCallback = require('../internal/bindCallback'),\n    isIterateeCall = require('../internal/isIterateeCall');\n\n/**\n * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n * otherwise they are assigned by reference. If `customizer` is provided it's\n * invoked to produce the cloned values. If `customizer` returns `undefined`\n * cloning is handled by the method instead. The `customizer` is bound to\n * `thisArg` and invoked with up to three argument; (value [, index|key, object]).\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n * The enumerable properties of `arguments` objects and objects created by\n * constructors other than `Object` are cloned to plain `Object` objects. An\n * empty object is returned for uncloneable values such as functions, DOM nodes,\n * Maps, Sets, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {*} Returns the cloned value.\n * @example\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * var shallow = _.clone(users);\n * shallow[0] === users[0];\n * // => true\n *\n * var deep = _.clone(users, true);\n * deep[0] === users[0];\n * // => false\n *\n * // using a customizer callback\n * var el = _.clone(document.body, function(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(false);\n *   }\n * });\n *\n * el === document.body\n * // => false\n * el.nodeName\n * // => BODY\n * el.childNodes.length;\n * // => 0\n */\nfunction clone(value, isDeep, customizer, thisArg) {\n  if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n    isDeep = false;\n  }\n  else if (typeof isDeep == 'function') {\n    thisArg = customizer;\n    customizer = isDeep;\n    isDeep = false;\n  }\n  return typeof customizer == 'function'\n    ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 3))\n    : baseClone(value, isDeep);\n}\n\nmodule.exports = clone;\n","var isArrayLike = require('../internal/isArrayLike'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && isArrayLike(value) &&\n    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n}\n\nmodule.exports = isArguments;\n","var getNative = require('../internal/getNative'),\n    isLength = require('../internal/isLength'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\nmodule.exports = isArray;\n","var isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 which returns 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\nmodule.exports = isFunction;\n","var isFunction = require('./isFunction'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = isNative;\n","/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var getNative = require('../internal/getNative'),\n    isArrayLike = require('../internal/isArrayLike'),\n    isObject = require('../lang/isObject'),\n    shimKeys = require('../internal/shimKeys');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = getNative(Object, 'keys');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  var Ctor = object == null ? undefined : object.constructor;\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && isArrayLike(object))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\nmodule.exports = keys;\n","var isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('../internal/isIndex'),\n    isLength = require('../internal/isLength'),\n    isObject = require('../lang/isObject');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keysIn;\n","/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.plumin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n\n},{}],2:[function(require,module,exports){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.opentype = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar TINF_OK = 0;\nvar TINF_DATA_ERROR = -3;\n\nfunction Tree() {\n  this.table = new Uint16Array(16);   /* table of code length counts */\n  this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n}\n\nfunction Data(source, dest) {\n  this.source = source;\n  this.sourceIndex = 0;\n  this.tag = 0;\n  this.bitcount = 0;\n  \n  this.dest = dest;\n  this.destLen = 0;\n  \n  this.ltree = new Tree();  /* dynamic length/symbol tree */\n  this.dtree = new Tree();  /* dynamic distance tree */\n}\n\n/* --------------------------------------------------- *\n * -- uninitialized global data (static structures) -- *\n * --------------------------------------------------- */\n\nvar sltree = new Tree();\nvar sdtree = new Tree();\n\n/* extra bits and base tables for length codes */\nvar length_bits = new Uint8Array(30);\nvar length_base = new Uint16Array(30);\n\n/* extra bits and base tables for distance codes */\nvar dist_bits = new Uint8Array(30);\nvar dist_base = new Uint16Array(30);\n\n/* special ordering of code length codes */\nvar clcidx = new Uint8Array([\n  16, 17, 18, 0, 8, 7, 9, 6,\n  10, 5, 11, 4, 12, 3, 13, 2,\n  14, 1, 15\n]);\n\n/* used by tinf_decode_trees, avoids allocations every call */\nvar code_tree = new Tree();\nvar lengths = new Uint8Array(288 + 32);\n\n/* ----------------------- *\n * -- utility functions -- *\n * ----------------------- */\n\n/* build extra bits and base tables */\nfunction tinf_build_bits_base(bits, base, delta, first) {\n  var i, sum;\n\n  /* build bits table */\n  for (i = 0; i < delta; ++i) bits[i] = 0;\n  for (i = 0; i < 30 - delta; ++i) bits[i + delta] = i / delta | 0;\n\n  /* build base table */\n  for (sum = first, i = 0; i < 30; ++i) {\n    base[i] = sum;\n    sum += 1 << bits[i];\n  }\n}\n\n/* build the fixed huffman trees */\nfunction tinf_build_fixed_trees(lt, dt) {\n  var i;\n\n  /* build fixed length tree */\n  for (i = 0; i < 7; ++i) lt.table[i] = 0;\n\n  lt.table[7] = 24;\n  lt.table[8] = 152;\n  lt.table[9] = 112;\n\n  for (i = 0; i < 24; ++i) lt.trans[i] = 256 + i;\n  for (i = 0; i < 144; ++i) lt.trans[24 + i] = i;\n  for (i = 0; i < 8; ++i) lt.trans[24 + 144 + i] = 280 + i;\n  for (i = 0; i < 112; ++i) lt.trans[24 + 144 + 8 + i] = 144 + i;\n\n  /* build fixed distance tree */\n  for (i = 0; i < 5; ++i) dt.table[i] = 0;\n\n  dt.table[5] = 32;\n\n  for (i = 0; i < 32; ++i) dt.trans[i] = i;\n}\n\n/* given an array of code lengths, build a tree */\nvar offs = new Uint16Array(16);\n\nfunction tinf_build_tree(t, lengths, off, num) {\n  var i, sum;\n\n  /* clear code length count table */\n  for (i = 0; i < 16; ++i) t.table[i] = 0;\n\n  /* scan symbol lengths, and sum code length counts */\n  for (i = 0; i < num; ++i) t.table[lengths[off + i]]++;\n\n  t.table[0] = 0;\n\n  /* compute offset table for distribution sort */\n  for (sum = 0, i = 0; i < 16; ++i) {\n    offs[i] = sum;\n    sum += t.table[i];\n  }\n\n  /* create code->symbol translation table (symbols sorted by code) */\n  for (i = 0; i < num; ++i) {\n    if (lengths[off + i]) t.trans[offs[lengths[off + i]]++] = i;\n  }\n}\n\n/* ---------------------- *\n * -- decode functions -- *\n * ---------------------- */\n\n/* get one bit from source stream */\nfunction tinf_getbit(d) {\n  /* check if tag is empty */\n  if (!d.bitcount--) {\n    /* load next tag */\n    d.tag = d.source[d.sourceIndex++];\n    d.bitcount = 7;\n  }\n\n  /* shift bit out of tag */\n  var bit = d.tag & 1;\n  d.tag >>>= 1;\n\n  return bit;\n}\n\n/* read a num bit value from a stream and add base */\nfunction tinf_read_bits(d, num, base) {\n  if (!num)\n    return base;\n\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n\n  var val = d.tag & (0xffff >>> (16 - num));\n  d.tag >>>= num;\n  d.bitcount -= num;\n  return val + base;\n}\n\n/* given a data stream and a tree, decode a symbol */\nfunction tinf_decode_symbol(d, t) {\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n  \n  var sum = 0, cur = 0, len = 0;\n  var tag = d.tag;\n\n  /* get more bits while code value is above sum */\n  do {\n    cur = 2 * cur + (tag & 1);\n    tag >>>= 1;\n    ++len;\n\n    sum += t.table[len];\n    cur -= t.table[len];\n  } while (cur >= 0);\n  \n  d.tag = tag;\n  d.bitcount -= len;\n\n  return t.trans[sum + cur];\n}\n\n/* given a data stream, decode dynamic trees from it */\nfunction tinf_decode_trees(d, lt, dt) {\n  var hlit, hdist, hclen;\n  var i, num, length;\n\n  /* get 5 bits HLIT (257-286) */\n  hlit = tinf_read_bits(d, 5, 257);\n\n  /* get 5 bits HDIST (1-32) */\n  hdist = tinf_read_bits(d, 5, 1);\n\n  /* get 4 bits HCLEN (4-19) */\n  hclen = tinf_read_bits(d, 4, 4);\n\n  for (i = 0; i < 19; ++i) lengths[i] = 0;\n\n  /* read code lengths for code length alphabet */\n  for (i = 0; i < hclen; ++i) {\n    /* get 3 bits code length (0-7) */\n    var clen = tinf_read_bits(d, 3, 0);\n    lengths[clcidx[i]] = clen;\n  }\n\n  /* build code length tree */\n  tinf_build_tree(code_tree, lengths, 0, 19);\n\n  /* decode code lengths for the dynamic trees */\n  for (num = 0; num < hlit + hdist;) {\n    var sym = tinf_decode_symbol(d, code_tree);\n\n    switch (sym) {\n      case 16:\n        /* copy previous code length 3-6 times (read 2 bits) */\n        var prev = lengths[num - 1];\n        for (length = tinf_read_bits(d, 2, 3); length; --length) {\n          lengths[num++] = prev;\n        }\n        break;\n      case 17:\n        /* repeat code length 0 for 3-10 times (read 3 bits) */\n        for (length = tinf_read_bits(d, 3, 3); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      case 18:\n        /* repeat code length 0 for 11-138 times (read 7 bits) */\n        for (length = tinf_read_bits(d, 7, 11); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      default:\n        /* values 0-15 represent the actual code lengths */\n        lengths[num++] = sym;\n        break;\n    }\n  }\n\n  /* build dynamic trees */\n  tinf_build_tree(lt, lengths, 0, hlit);\n  tinf_build_tree(dt, lengths, hlit, hdist);\n}\n\n/* ----------------------------- *\n * -- block inflate functions -- *\n * ----------------------------- */\n\n/* given a stream and two trees, inflate a block of data */\nfunction tinf_inflate_block_data(d, lt, dt) {\n  while (1) {\n    var sym = tinf_decode_symbol(d, lt);\n\n    /* check for end of block */\n    if (sym === 256) {\n      return TINF_OK;\n    }\n\n    if (sym < 256) {\n      d.dest[d.destLen++] = sym;\n    } else {\n      var length, dist, offs;\n      var i;\n\n      sym -= 257;\n\n      /* possibly get more bits from length code */\n      length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n      dist = tinf_decode_symbol(d, dt);\n\n      /* possibly get more bits from distance code */\n      offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n      /* copy match */\n      for (i = offs; i < offs + length; ++i) {\n        d.dest[d.destLen++] = d.dest[i];\n      }\n    }\n  }\n}\n\n/* inflate an uncompressed block of data */\nfunction tinf_inflate_uncompressed_block(d) {\n  var length, invlength;\n  var i;\n  \n  /* unread from bitbuffer */\n  while (d.bitcount > 8) {\n    d.sourceIndex--;\n    d.bitcount -= 8;\n  }\n\n  /* get length */\n  length = d.source[d.sourceIndex + 1];\n  length = 256 * length + d.source[d.sourceIndex];\n\n  /* get one's complement of length */\n  invlength = d.source[d.sourceIndex + 3];\n  invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n  /* check length */\n  if (length !== (~invlength & 0x0000ffff))\n    return TINF_DATA_ERROR;\n\n  d.sourceIndex += 4;\n\n  /* copy block */\n  for (i = length; i; --i)\n    d.dest[d.destLen++] = d.source[d.sourceIndex++];\n\n  /* make sure we start next block on a byte boundary */\n  d.bitcount = 0;\n\n  return TINF_OK;\n}\n\n/* inflate stream from source to dest */\nfunction tinf_uncompress(source, dest) {\n  var d = new Data(source, dest);\n  var bfinal, res;\n\n  do {\n    /* read final block flag */\n    bfinal = tinf_getbit(d);\n\n    /* read block type (2 bits) */\n    btype = tinf_read_bits(d, 2, 0);\n\n    /* decompress block */\n    switch (btype) {\n      case 0:\n        /* decompress uncompressed block */\n        res = tinf_inflate_uncompressed_block(d);\n        break;\n      case 1:\n        /* decompress block with fixed huffman trees */\n        res = tinf_inflate_block_data(d, sltree, sdtree);\n        break;\n      case 2:\n        /* decompress block with dynamic huffman trees */\n        tinf_decode_trees(d, d.ltree, d.dtree);\n        res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n        break;\n      default:\n        res = TINF_DATA_ERROR;\n    }\n\n    if (res !== TINF_OK)\n      throw new Error('Data error');\n\n  } while (!bfinal);\n\n  if (d.destLen < d.dest.length) {\n    if (typeof d.dest.slice === 'function')\n      return d.dest.slice(0, d.destLen);\n    else\n      return d.dest.subarray(0, d.destLen);\n  }\n  \n  return d.dest;\n}\n\n/* -------------------- *\n * -- initialization -- *\n * -------------------- */\n\n/* build fixed huffman trees */\ntinf_build_fixed_trees(sltree, sdtree);\n\n/* build extra bits and base tables */\ntinf_build_bits_base(length_bits, length_base, 4, 3);\ntinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n/* fix a special case */\nlength_bits[28] = 0;\nlength_base[28] = 258;\n\nmodule.exports = tinf_uncompress;\n\n},{}],2:[function(require,module,exports){\n// Run-time checking of preconditions.\n\n'use strict';\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nexports.argument = function(predicate, message) {\n    if (!predicate) {\n        throw new Error(message);\n    }\n};\n\n// Precondition function that checks if the given assertion is true.\n// If not, it will throw an error.\nexports.assert = exports.argument;\n\n},{}],3:[function(require,module,exports){\n// Drawing utility functions.\n\n'use strict';\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexports.line = line;\n\n},{}],4:[function(require,module,exports){\n// Glyph encoding\n\n'use strict';\n\nvar cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nvar cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n// This is the encoding used for fonts created from scratch.\n// It loops through all glyphs and finds the appropriate unicode value.\n// Since it's linear time, other encodings will be faster.\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    var code = c.charCodeAt(0);\n    var glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs.get(i);\n            for (var j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    } else {\n        return null;\n    }\n};\n\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n};\n\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    var code = s.charCodeAt(0);\n    var charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction GlyphNames(post) {\n    var i;\n    switch (post.version) {\n    case 1:\n        this.names = exports.standardNames.slice();\n        break;\n    case 2:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] < exports.standardNames.length) {\n                this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n            } else {\n                this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n            }\n        }\n\n        break;\n    case 2.5:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n        }\n\n        break;\n    case 3:\n        this.names = [];\n        break;\n    }\n}\n\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNames(font) {\n    var glyph;\n    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    var charCodes = Object.keys(glyphIndexMap);\n\n    for (var i = 0; i < charCodes.length; i += 1) {\n        var c = charCodes[i];\n        var glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs.get(glyphIndex);\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs.get(i);\n        if (font.cffEncoding) {\n            glyph.name = font.cffEncoding.charset[i];\n        } else {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexports.cffStandardStrings = cffStandardStrings;\nexports.cffStandardEncoding = cffStandardEncoding;\nexports.cffExpertEncoding = cffExpertEncoding;\nexports.standardNames = standardNames;\nexports.DefaultEncoding = DefaultEncoding;\nexports.CmapEncoding = CmapEncoding;\nexports.CffEncoding = CffEncoding;\nexports.GlyphNames = GlyphNames;\nexports.addGlyphNames = addGlyphNames;\n\n},{}],5:[function(require,module,exports){\n// The Font object\n\n'use strict';\n\nvar path = require('./path');\nvar sfnt = require('./tables/sfnt');\nvar encoding = require('./encoding');\nvar glyphset = require('./glyphset');\nvar util = require('./util');\n\n// A Font represents a loaded OpenType font file.\n// It contains a set of glyphs and methods to draw text on a drawing context,\n// or to get a path representing the text.\nfunction Font(options) {\n    options = options || {};\n\n    if (!options.empty) {\n        // Check that we've provided the minimum set of names.\n        util.checkArgument(options.familyName, 'When creating a new Font object, familyName is required.');\n        util.checkArgument(options.styleName, 'When creating a new Font object, styleName is required.');\n        util.checkArgument(options.unitsPerEm, 'When creating a new Font object, unitsPerEm is required.');\n        util.checkArgument(options.ascender, 'When creating a new Font object, ascender is required.');\n        util.checkArgument(options.descender, 'When creating a new Font object, descender is required.');\n        util.checkArgument(options.descender < 0, 'Descender should be negative (e.g. -512).');\n\n        // OS X will complain if the names are empty, so we put a single space everywhere by default.\n        this.names = {\n            fontFamily: {en: options.familyName || ' '},\n            fontSubfamily: {en: options.styleName || ' '},\n            fullName: {en: options.fullName || options.familyName + ' ' + options.styleName},\n            postScriptName: {en: options.postScriptName || options.familyName + options.styleName},\n            designer: {en: options.designer || ' '},\n            designerURL: {en: options.designerURL || ' '},\n            manufacturer: {en: options.manufacturer || ' '},\n            manufacturerURL: {en: options.manufacturerURL || ' '},\n            license: {en: options.license || ' '},\n            licenseURL: {en: options.licenseURL || ' '},\n            version: {en: options.version || 'Version 0.1'},\n            description: {en: options.description || ' '},\n            copyright: {en: options.copyright || ' '},\n            trademark: {en: options.trademark || ' '}\n        };\n        this.unitsPerEm = options.unitsPerEm || 1000;\n        this.ascender = options.ascender;\n        this.descender = options.descender;\n    }\n\n    this.supported = true; // Deprecated: parseBuffer will throw an error if font is not supported.\n    this.glyphs = new glyphset.GlyphSet(this, options.glyphs || []);\n    this.encoding = new encoding.DefaultEncoding(this);\n    this.tables = {};\n}\n\n// Check if the font has a glyph for the given character.\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n// Convert the given character to a single glyph index.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n// Convert the given character to a single Glyph object.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyph = function(c) {\n    var glyphIndex = this.charToGlyphIndex(c);\n    var glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n// Convert the given text to a list of Glyph objects.\n// Note that there is no strict one-to-one mapping between characters and\n// glyphs, so the list of returned glyphs can be larger or smaller than the\n// length of the given string.\nFont.prototype.stringToGlyphs = function(s) {\n    var glyphs = [];\n    for (var i = 0; i < s.length; i += 1) {\n        var c = s[i];\n        glyphs.push(this.charToGlyph(c));\n    }\n\n    return glyphs;\n};\n\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\nFont.prototype.nameToGlyph = function(name) {\n    var glyphIndex = this.nametoGlyphIndex(name);\n    var glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n// Retrieve the value of the kerning pair between the left glyph (or its index)\n// and the right glyph (or its index). If no kerning pair is found, return 0.\n// The kerning value gets added to the advance width when calculating the spacing\n// between glyphs.\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.getGposKerningValue;\n    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n};\n\n// Helper function that invokes the given callback for each glyph in the given text.\n// The callback gets `(glyph, x, y, fontSize, options)`.\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || {};\n    var kerning = options.kerning === undefined ? true : options.kerning;\n    var fontScale = 1 / this.unitsPerEm * fontSize;\n    var glyphs = this.stringToGlyphs(text);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        callback(glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (kerning && i < glyphs.length - 1) {\n            var kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n    }\n};\n\n// Create a Path object that represents the given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns a Path object.\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    var fullPath = new path.Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        fullPath.extend(glyphPath);\n    });\n\n    return fullPath;\n};\n\n// Create an array of Path objects that represent the glyps of a given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns an array of Path objects.\nFont.prototype.getPaths = function(text, x, y, fontSize, options) {\n    var glyphPaths = [];\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        glyphPaths.push(glyphPath);\n    });\n\n    return glyphPaths;\n};\n\n// Draw the text on the given drawing context.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n// Draw the points of all glyphs in the text.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Draw lines indicating important font measurements for all glyphs in the text.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\nFont.prototype.getEnglishName = function(name) {\n    var translations = this.names[name];\n    if (translations) {\n        return translations.en;\n    }\n};\n\n// Validate\nFont.prototype.validate = function() {\n    var warnings = [];\n    var _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertNamePresent(name) {\n        var englishName = _this.getEnglishName(name);\n        assert(englishName && englishName.trim().length > 0,\n               'No English ' + name + ' specified.');\n    }\n\n    // Identification information\n    assertNamePresent('fontFamily');\n    assertNamePresent('weightName');\n    assertNamePresent('manufacturer');\n    assertNamePresent('copyright');\n    assertNamePresent('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n\nFont.prototype.toBuffer = function() {\n    console.warn('Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.');\n    return this.toArrayBuffer();\n};\n\nFont.prototype.toArrayBuffer = function() {\n    var sfntTable = this.toTables();\n    var bytes = sfntTable.encode();\n    var buffer = new ArrayBuffer(bytes.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n// Initiate a download of the OpenType font.\nFont.prototype.download = function() {\n    var familyName = this.getEnglishName('fontFamily');\n    var styleName = this.getEnglishName('fontSubfamily');\n    var fileName = familyName.replace(/\\s/g, '') + '-' + styleName + '.otf';\n    var arrayBuffer = this.toArrayBuffer();\n\n    if (util.isBrowser()) {\n        window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n        window.requestFileSystem(window.TEMPORARY, arrayBuffer.byteLength, function(fs) {\n            fs.root.getFile(fileName, {create: true}, function(fileEntry) {\n                fileEntry.createWriter(function(writer) {\n                    var dataView = new DataView(arrayBuffer);\n                    var blob = new Blob([dataView], {type: 'font/opentype'});\n                    writer.write(blob);\n\n                    writer.addEventListener('writeend', function() {\n                        // Navigating to the file will download it.\n                        location.href = fileEntry.toURL();\n                    }, false);\n                });\n            });\n        },\n        function(err) {\n            throw err;\n        });\n    } else {\n        var fs = require('fs');\n        var buffer = util.arrayBufferToNodeBuffer(arrayBuffer);\n        fs.writeFileSync(fileName, buffer);\n    }\n};\n\nexports.Font = Font;\n\n},{\"./encoding\":4,\"./glyphset\":7,\"./path\":10,\"./tables/sfnt\":27,\"./util\":29,\"fs\":undefined}],6:[function(require,module,exports){\n// The Glyph object\n\n'use strict';\n\nvar check = require('./check');\nvar draw = require('./draw');\nvar path = require('./path');\n\nfunction getPathDefinition(glyph, path) {\n    var _path = path || { commands: [] };\n    return {\n        configurable: true,\n\n        get: function() {\n            if (typeof _path === 'function') {\n                _path = _path();\n            }\n\n            return _path;\n        },\n\n        set: function(p) {\n            _path = p;\n        }\n    };\n}\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\nfunction Glyph(options) {\n    // By putting all the code on a prototype function (which is only declared once)\n    // we reduce the memory requirements for larger fonts by some 2%\n    this.bindConstructorValues(options);\n}\n\nGlyph.prototype.bindConstructorValues = function(options) {\n    this.index = options.index || 0;\n\n    // These three values cannnot be deferred for memory optimization:\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n\n    // But by binding these values only when necessary, we reduce can\n    // the memory requirements by almost 3% for larger fonts.\n    if (options.xMin) {\n        this.xMin = options.xMin;\n    }\n\n    if (options.yMin) {\n        this.yMin = options.yMin;\n    }\n\n    if (options.xMax) {\n        this.xMax = options.xMax;\n    }\n\n    if (options.yMax) {\n        this.yMax = options.yMax;\n    }\n\n    if (options.advanceWidth) {\n        this.advanceWidth = options.advanceWidth;\n    }\n\n    // The path for a glyph is the most memory intensive, and is bound as a value\n    // with a getter/setter to ensure we actually do path parsing only once the\n    // path is actually needed by anything.\n    Object.defineProperty(this, 'path', getPathDefinition(this, options.path));\n};\n\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n// Convert the glyph to a Path we can draw on a drawing context.\n//\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.getPath = function(x, y, fontSize) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    var scale = 1 / this.path.unitsPerEm * fontSize;\n    var p = new path.Path();\n    var commands = this.path.commands;\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                               x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                      x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n                      x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n// Split the glyph into contours.\n// This function is here for backwards compatibility, and to\n// provide raw access to the TrueType glyph outlines.\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < this.points.length; i += 1) {\n        var pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n// Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\nGlyph.prototype.getMetrics = function() {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: 0\n    };\n\n    if (!isFinite(metrics.xMin)) {\n        metrics.xMin = 0;\n    }\n\n    if (!isFinite(metrics.xMax)) {\n        metrics.xMax = this.advanceWidth;\n    }\n\n    if (!isFinite(metrics.yMin)) {\n        metrics.yMin = 0;\n    }\n\n    if (!isFinite(metrics.yMax)) {\n        metrics.yMax = 0;\n    }\n\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// Draw the glyph on the given context.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.draw = function(ctx, x, y, fontSize) {\n    this.getPath(x, y, fontSize).draw(ctx);\n};\n\n// Draw the points of the glyph.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n\n    function drawCircles(l, x, y, scale) {\n        var PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (var j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    var scale = 1 / this.path.unitsPerEm * fontSize;\n\n    var blueCircles = [];\n    var redCircles = [];\n    var path = this.path;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n// Draw lines indicating important font measurements.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    var scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.path.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // This code is here due to memory optimization: by not using\n    // defaults in the constructor, we save a notable amount of memory.\n    var xMin = this.xMin || 0;\n    var yMin = this.yMin || 0;\n    var xMax = this.xMax || 0;\n    var yMax = this.yMax || 0;\n    var advanceWidth = this.advanceWidth || 0;\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (xMin * scale), -10000, x + (xMin * scale), 10000);\n    draw.line(ctx, x + (xMax * scale), -10000, x + (xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-yMin * scale), 10000, y + (-yMin * scale));\n    draw.line(ctx, -10000, y + (-yMax * scale), 10000, y + (-yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (advanceWidth * scale), -10000, x + (advanceWidth * scale), 10000);\n};\n\nexports.Glyph = Glyph;\n\n},{\"./check\":2,\"./draw\":3,\"./path\":10}],7:[function(require,module,exports){\n// The GlyphSet object\n\n'use strict';\n\nvar _glyph = require('./glyph');\n\n// A GlyphSet represents all glyphs available in the font, but modelled using\n// a deferred glyph loader, for retrieving glyphs only once they are absolutely\n// necessary, to keep the memory footprint down.\nfunction GlyphSet(font, glyphs) {\n    this.font = font;\n    this.glyphs = {};\n    if (Array.isArray(glyphs)) {\n        for (var i = 0; i < glyphs.length; i++) {\n            this.glyphs[i] = glyphs[i];\n        }\n    }\n\n    this.length = (glyphs && glyphs.length) || 0;\n}\n\nGlyphSet.prototype.get = function(index) {\n    if (typeof this.glyphs[index] === 'function') {\n        this.glyphs[index] = this.glyphs[index]();\n    }\n\n    return this.glyphs[index];\n};\n\nGlyphSet.prototype.push = function(index, loader) {\n    this.glyphs[index] = loader;\n    this.length++;\n};\n\nfunction glyphLoader(font, index) {\n    return new _glyph.Glyph({index: index, font: font});\n}\n\n/**\n * Generate a stub glyph that can be filled with all metadata *except*\n * the \"points\" and \"path\" properties, which must be loaded only once\n * the glyph's path is actually requested for text shaping.\n */\n\nfunction ttfGlyphLoader(font, index, parseGlyph, data, position, buildPath) {\n    return function() {\n        var glyph = new _glyph.Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            parseGlyph(glyph, data, position);\n            var path = buildPath(font.glyphs, glyph);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        return glyph;\n    };\n}\n\nfunction cffGlyphLoader(font, index, parseCFFCharstring, charstring) {\n    return function() {\n        var glyph = new _glyph.Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            var path = parseCFFCharstring(font, glyph, charstring);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        return glyph;\n    };\n}\n\nexports.GlyphSet = GlyphSet;\nexports.glyphLoader = glyphLoader;\nexports.ttfGlyphLoader = ttfGlyphLoader;\nexports.cffGlyphLoader = cffGlyphLoader;\n\n},{\"./glyph\":6}],8:[function(require,module,exports){\n// opentype.js\n// https://github.com/nodebox/opentype.js\n// (c) 2015 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global DataView, Uint8Array, XMLHttpRequest  */\n\n'use strict';\n\nvar inflate = require('tiny-inflate');\n\nvar encoding = require('./encoding');\nvar _font = require('./font');\nvar glyph = require('./glyph');\nvar parse = require('./parse');\nvar path = require('./path');\nvar util = require('./util');\n\nvar cmap = require('./tables/cmap');\nvar cff = require('./tables/cff');\nvar fvar = require('./tables/fvar');\nvar glyf = require('./tables/glyf');\nvar gpos = require('./tables/gpos');\nvar head = require('./tables/head');\nvar hhea = require('./tables/hhea');\nvar hmtx = require('./tables/hmtx');\nvar kern = require('./tables/kern');\nvar ltag = require('./tables/ltag');\nvar loca = require('./tables/loca');\nvar maxp = require('./tables/maxp');\nvar _name = require('./tables/name');\nvar os2 = require('./tables/os2');\nvar post = require('./tables/post');\n\n// File loaders /////////////////////////////////////////////////////////\n\nfunction loadFromFile(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, util.nodeBufferToArrayBuffer(buffer));\n    });\n}\n\nfunction loadFromUrl(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.status !== 200) {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n\n        return callback(null, request.response);\n    };\n\n    request.send();\n}\n\n// Table Directory Entries //////////////////////////////////////////////\n\nfunction parseOpenTypeTableEntries(data, numTables) {\n    var tableEntries = [];\n    var p = 12;\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var offset = parse.getULong(data, p + 8);\n        tableEntries.push({tag: tag, offset: offset, compression: false});\n        p += 16;\n    }\n\n    return tableEntries;\n}\n\nfunction parseWOFFTableEntries(data, numTables) {\n    var tableEntries = [];\n    var p = 44; // offset to the first table directory entry.\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var offset = parse.getULong(data, p + 4);\n        var compLength = parse.getULong(data, p + 8);\n        var origLength = parse.getULong(data, p + 12);\n        var compression;\n        if (compLength < origLength) {\n            compression = 'WOFF';\n        } else {\n            compression = false;\n        }\n\n        tableEntries.push({tag: tag, offset: offset, compression: compression,\n            compressedLength: compLength, originalLength: origLength});\n        p += 20;\n    }\n\n    return tableEntries;\n}\n\nfunction uncompressTable(data, tableEntry) {\n    if (tableEntry.compression === 'WOFF') {\n        var inBuffer = new Uint8Array(data.buffer, tableEntry.offset + 2, tableEntry.compressedLength - 2);\n        var outBuffer = new Uint8Array(tableEntry.originalLength);\n        inflate(inBuffer, outBuffer);\n        if (outBuffer.byteLength !== tableEntry.originalLength) {\n            throw new Error('Decompression error: ' + tableEntry.tag + ' decompressed length doesn\\'t match recorded length');\n        }\n\n        var view = new DataView(outBuffer.buffer, 0);\n        return {data: view, offset: 0};\n    } else {\n        return {data: data, offset: tableEntry.offset};\n    }\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n// Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n// Throws an error if the font could not be parsed.\nfunction parseBuffer(buffer) {\n    var indexToLocFormat;\n    var ltagTable;\n\n    // Since the constructor can also be called to create new fonts from scratch, we indicate this\n    // should be an empty font that we'll fill with our own data.\n    var font = new _font.Font({empty: true});\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n    var data = new DataView(buffer, 0);\n    var numTables;\n    var tableEntries = [];\n    var signature = parse.getTag(data, 0);\n    if (signature === String.fromCharCode(0, 1, 0, 0)) {\n        font.outlinesFormat = 'truetype';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'OTTO') {\n        font.outlinesFormat = 'cff';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'wOFF') {\n        var flavor = parse.getTag(data, 4);\n        if (flavor === String.fromCharCode(0, 1, 0, 0)) {\n            font.outlinesFormat = 'truetype';\n        } else if (flavor === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType flavor ' + signature);\n        }\n\n        numTables = parse.getUShort(data, 12);\n        tableEntries = parseWOFFTableEntries(data, numTables);\n    } else {\n        throw new Error('Unsupported OpenType signature ' + signature);\n    }\n\n    var cffTableEntry;\n    var fvarTableEntry;\n    var glyfTableEntry;\n    var gposTableEntry;\n    var hmtxTableEntry;\n    var kernTableEntry;\n    var locaTableEntry;\n    var nameTableEntry;\n\n    for (var i = 0; i < numTables; i += 1) {\n        var tableEntry = tableEntries[i];\n        var table;\n        switch (tableEntry.tag) {\n        case 'cmap':\n            table = uncompressTable(data, tableEntry);\n            font.tables.cmap = cmap.parse(table.data, table.offset);\n            font.encoding = new encoding.CmapEncoding(font.tables.cmap);\n            break;\n        case 'fvar':\n            fvarTableEntry = tableEntry;\n            break;\n        case 'head':\n            table = uncompressTable(data, tableEntry);\n            font.tables.head = head.parse(table.data, table.offset);\n            font.unitsPerEm = font.tables.head.unitsPerEm;\n            indexToLocFormat = font.tables.head.indexToLocFormat;\n            break;\n        case 'hhea':\n            table = uncompressTable(data, tableEntry);\n            font.tables.hhea = hhea.parse(table.data, table.offset);\n            font.ascender = font.tables.hhea.ascender;\n            font.descender = font.tables.hhea.descender;\n            font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n            break;\n        case 'hmtx':\n            hmtxTableEntry = tableEntry;\n            break;\n        case 'ltag':\n            table = uncompressTable(data, tableEntry);\n            ltagTable = ltag.parse(table.data, table.offset);\n            break;\n        case 'maxp':\n            table = uncompressTable(data, tableEntry);\n            font.tables.maxp = maxp.parse(table.data, table.offset);\n            font.numGlyphs = font.tables.maxp.numGlyphs;\n            break;\n        case 'name':\n            nameTableEntry = tableEntry;\n            break;\n        case 'OS/2':\n            table = uncompressTable(data, tableEntry);\n            font.tables.os2 = os2.parse(table.data, table.offset);\n            break;\n        case 'post':\n            table = uncompressTable(data, tableEntry);\n            font.tables.post = post.parse(table.data, table.offset);\n            font.glyphNames = new encoding.GlyphNames(font.tables.post);\n            break;\n        case 'glyf':\n            glyfTableEntry = tableEntry;\n            break;\n        case 'loca':\n            locaTableEntry = tableEntry;\n            break;\n        case 'CFF ':\n            cffTableEntry = tableEntry;\n            break;\n        case 'kern':\n            kernTableEntry = tableEntry;\n            break;\n        case 'GPOS':\n            gposTableEntry = tableEntry;\n            break;\n        }\n    }\n\n    var nameTable = uncompressTable(data, nameTableEntry);\n    font.tables.name = _name.parse(nameTable.data, nameTable.offset, ltagTable);\n    font.names = font.tables.name;\n\n    if (glyfTableEntry && locaTableEntry) {\n        var shortVersion = indexToLocFormat === 0;\n        var locaTable = uncompressTable(data, locaTableEntry);\n        var locaOffsets = loca.parse(locaTable.data, locaTable.offset, font.numGlyphs, shortVersion);\n        var glyfTable = uncompressTable(data, glyfTableEntry);\n        font.glyphs = glyf.parse(glyfTable.data, glyfTable.offset, locaOffsets, font);\n    } else if (cffTableEntry) {\n        var cffTable = uncompressTable(data, cffTableEntry);\n        cff.parse(cffTable.data, cffTable.offset, font);\n    } else {\n        throw new Error('Font doesn\\'t contain TrueType or CFF outlines.');\n    }\n\n    var hmtxTable = uncompressTable(data, hmtxTableEntry);\n    hmtx.parse(hmtxTable.data, hmtxTable.offset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n    encoding.addGlyphNames(font);\n\n    if (kernTableEntry) {\n        var kernTable = uncompressTable(data, kernTableEntry);\n        font.kerningPairs = kern.parse(kernTable.data, kernTable.offset);\n    } else {\n        font.kerningPairs = {};\n    }\n\n    if (gposTableEntry) {\n        var gposTable = uncompressTable(data, gposTableEntry);\n        gpos.parse(gposTable.data, gposTable.offset, font);\n    }\n\n    if (fvarTableEntry) {\n        var fvarTable = uncompressTable(data, fvarTableEntry);\n        font.tables.fvar = fvar.parse(fvarTable.data, fvarTable.offset, font.names);\n    }\n\n    return font;\n}\n\n// Asynchronously load the font from a URL or a filesystem. When done, call the callback\n// with two arguments `(err, font)`. The `err` will be null on success,\n// the `font` is a Font object.\n//\n// We use the node.js callback convention so that\n// opentype.js can integrate with frameworks like async.js.\nfunction load(url, callback) {\n    var isNode = typeof window === 'undefined';\n    var loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function(err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n\n        var font = parseBuffer(arrayBuffer);\n        return callback(null, font);\n    });\n}\n\n// Syncronously load the font from a URL or file.\n// When done, return the font object or throw an error.\nfunction loadSync(url) {\n    var fs = require('fs');\n    var buffer = fs.readFileSync(url);\n    return parseBuffer(util.nodeBufferToArrayBuffer(buffer));\n}\n\nexports._parse = parse;\nexports.Font = _font.Font;\nexports.Glyph = glyph.Glyph;\nexports.Path = path.Path;\nexports.parse = parseBuffer;\nexports.load = load;\nexports.loadSync = loadSync;\n\n},{\"./encoding\":4,\"./font\":5,\"./glyph\":6,\"./parse\":9,\"./path\":10,\"./tables/cff\":12,\"./tables/cmap\":13,\"./tables/fvar\":14,\"./tables/glyf\":15,\"./tables/gpos\":16,\"./tables/head\":17,\"./tables/hhea\":18,\"./tables/hmtx\":19,\"./tables/kern\":20,\"./tables/loca\":21,\"./tables/ltag\":22,\"./tables/maxp\":23,\"./tables/name\":24,\"./tables/os2\":25,\"./tables/post\":26,\"./util\":29,\"fs\":undefined,\"tiny-inflate\":1}],9:[function(require,module,exports){\n// Parsing utility functions\n\n'use strict';\n\n// Retrieve an unsigned byte from the DataView.\nexports.getByte = function getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n};\n\nexports.getCard8 = exports.getByte;\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getUShort = function(dataView, offset) {\n    return dataView.getUint16(offset, false);\n};\n\nexports.getCard16 = exports.getUShort;\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getShort = function(dataView, offset) {\n    return dataView.getInt16(offset, false);\n};\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nexports.getULong = function(dataView, offset) {\n    return dataView.getUint32(offset, false);\n};\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nexports.getFixed = function(dataView, offset) {\n    var decimal = dataView.getInt16(offset, false);\n    var fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n};\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nexports.getTag = function(dataView, offset) {\n    var tag = '';\n    for (var i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n};\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nexports.getOffset = function(dataView, offset, offSize) {\n    var v = 0;\n    for (var i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n};\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nexports.getBytes = function(dataView, startOffset, endOffset) {\n    var bytes = [];\n    for (var i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n};\n\n// Convert the list of bytes to a string.\nexports.bytesToString = function(bytes) {\n    var s = '';\n    for (var i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n};\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    var offsets = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = exports.getUShort(dataView, offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\nParser.prototype.parseString = function(length) {\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    var string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\nParser.prototype.parseLongDateTime = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v / 65536;\n};\n\nParser.prototype.parseVersion = function() {\n    var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // This returns the correct number if minor = 0xN000 where N is 0-9\n    var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    return major + minor / 0x1000 / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\nexports.Parser = Parser;\n\n},{}],10:[function(require,module,exports){\n// Geometric objects\n\n'use strict';\n\n// A bézier path containing a set of path commands similar to a SVG path.\n// Paths can be drawn on a context using `draw`.\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n// Add the given path or list of commands to the commands of this path.\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n// Draw the path to a 2D context.\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n// Convert the Path to a string of path data instructions\n// See http://www.w3.org/TR/SVG/paths.html#PathData\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n// Convert the path to a SVG <path> element, as a string.\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toSVG = function(decimalPlaces) {\n    var svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill & this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\nexports.Path = Path;\n\n},{}],11:[function(require,module,exports){\n// Table metadata\n\n'use strict';\n\nvar check = require('./check');\nvar encode = require('./types').encode;\nvar sizeOf = require('./types').sizeOf;\n\nfunction Table(tableName, fields, options) {\n    var i;\n    for (i = 0; i < fields.length; i += 1) {\n        var field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        var optionKeys = Object.keys(options);\n        for (i = 0; i < optionKeys.length; i += 1) {\n            var k = optionKeys[i];\n            var v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\nTable.prototype.sizeOf = function() {\n    var v = 0;\n    for (var i = 0; i < this.fields.length; i += 1) {\n        var field = this.fields[i];\n        var value = this[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        if (typeof value.sizeOf === 'function') {\n            v += value.sizeOf();\n        } else {\n            var sizeOfFunction = sizeOf[field.type];\n            check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n            v += sizeOfFunction(value);\n        }\n    }\n\n    return v;\n};\n\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\nexports.Table = Table;\n\n},{\"./check\":2,\"./types\":28}],12:[function(require,module,exports){\n// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar glyphset = require('../glyphset');\nvar parse = require('../parse');\nvar path = require('../path');\nvar table = require('../table');\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (var i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    //var i, objectOffset, endOffset;\n    var offsets = [];\n    var objects = [];\n    var count = parse.getCard16(data, start);\n    var i;\n    var objectOffset;\n    var endOffset;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        var pos = start + 3;\n        for (i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (i = 0; i < offsets.length - 1; i += 1) {\n        var value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s = '';\n    var eof = 15;\n    var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        var b = parser.parseByte();\n        var n1 = b >> 4;\n        var n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1;\n    var b2;\n    var b3;\n    var b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o = {};\n    for (var i = 0; i < entries.length; i += 1) {\n        var key = entries[i][0];\n        var values = entries[i][1];\n        var value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key)) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    var parser = new parse.Parser(data, start);\n    var entries = [];\n    var operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        var op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = encoding.cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var newDict = {};\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (var i = 0; i < meta.length; i += 1) {\n        var m = meta[i];\n        var value = dict[m.op];\n        if (value === undefined) {\n            value = m.value !== undefined ? m.value : null;\n        }\n\n        if (m.type === 'SID') {\n            value = getCFFString(strings, value);\n        }\n\n        newDict[m.name] = value;\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n];\n\nvar PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var i;\n    var sid;\n    var count;\n    var parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    var charset = ['.notdef'];\n\n    var format = parser.parseCard8();\n    if (format === 0) {\n        for (i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var i;\n    var code;\n    var enc = {};\n    var parser = new parse.Parser(data, start);\n    var format = parser.parseCard8();\n    if (format === 0) {\n        var nCodes = parser.parseCard8();\n        for (i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        var nRanges = parser.parseCard8();\n        code = 1;\n        for (i = 0; i < nRanges; i += 1) {\n            var first = parser.parseCard8();\n            var nLeft = parser.parseCard8();\n            for (var j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new encoding.CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(font, glyph, code) {\n    var c1x;\n    var c1y;\n    var c2x;\n    var c2y;\n    var p = new path.Path();\n    var stack = [];\n    var nStems = 0;\n    var haveWidth = false;\n    var width = font.defaultWidthX;\n    var open = false;\n    var x = 0;\n    var y = 0;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + font.nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var b1;\n        var b2;\n        var b3;\n        var b4;\n        var codeIndex;\n        var subrCode;\n        var jpx;\n        var jpy;\n        var c3x;\n        var c3y;\n        var c4x;\n        var c4y;\n\n        var i = 0;\n        while (i < code.length) {\n            var v = code[i];\n            i += 1;\n            switch (v) {\n            case 1: // hstem\n                parseStems();\n                break;\n            case 3: // vstem\n                parseStems();\n                break;\n            case 4: // vmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                newContour(x, y);\n                break;\n            case 5: // rlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 6: // hlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 7: // vlineto\n                while (stack.length > 0) {\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 8: // rrcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 10: // callsubr\n                codeIndex = stack.pop() + font.subrsBias;\n                subrCode = font.subrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 11: // return\n                return;\n            case 12: // flex operators\n                v = code[i];\n                i += 1;\n                switch (v) {\n                case 35: // flex\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    y = c4y + stack.shift();      // dy6\n                    stack.shift();                // flex depth\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 34: // hflex\n                    // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y;                      // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = y;                      // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 36: // hflex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 37: // flex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                        x = c4x + stack.shift();\n                    } else {\n                        y = c4y + stack.shift();\n                    }\n\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                default:\n                    console.log('Glyph ' + glyph.index + ': unknown operator ' + 1200 + v);\n                    stack.length = 0;\n                }\n                break;\n            case 14: // endchar\n                if (stack.length > 0 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                if (open) {\n                    p.closePath();\n                    open = false;\n                }\n\n                break;\n            case 18: // hstemhm\n                parseStems();\n                break;\n            case 19: // hintmask\n            case 20: // cntrmask\n                parseStems();\n                i += (nStems + 7) >> 3;\n                break;\n            case 21: // rmoveto\n                if (stack.length > 2 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 22: // hmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 23: // vstemhm\n                parseStems();\n                break;\n            case 24: // rcurveline\n                while (stack.length > 2) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                x += stack.shift();\n                y += stack.shift();\n                p.lineTo(x, y);\n                break;\n            case 25: // rlinecurve\n                while (stack.length > 6) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                break;\n            case 26: // vvcurveto\n                if (stack.length % 2) {\n                    x += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x;\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 27: // hhcurveto\n                if (stack.length % 2) {\n                    y += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y;\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 28: // shortint\n                b1 = code[i];\n                b2 = code[i + 1];\n                stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                i += 2;\n                break;\n            case 29: // callgsubr\n                codeIndex = stack.pop() + font.gsubrsBias;\n                subrCode = font.gsubrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 30: // vhcurveto\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 31: // hvcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            default:\n                if (v < 32) {\n                    console.log('Glyph ' + glyph.index + ': unknown operator ' + v);\n                } else if (v < 247) {\n                    stack.push(v - 139);\n                } else if (v < 251) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push((v - 247) * 256 + b1 + 108);\n                } else if (v < 255) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push(-(v - 251) * 256 - b1 - 108);\n                } else {\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    b3 = code[i + 2];\n                    b4 = code[i + 3];\n                    i += 4;\n                    stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                }\n            }\n        }\n    }\n\n    parse(code);\n\n    glyph.advanceWidth = width;\n    return p;\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    font.tables.cff = {};\n    var header = parseCFFHeader(data, start);\n    var nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    var stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n    var topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n    font.tables.cff.topDict = topDict;\n\n    var privateDictOffset = start + topDict['private'][1];\n    var privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        var subrOffset = privateDictOffset + privateDict.subrs;\n        var subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    var charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    var charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) { // Standard encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) { // Expert encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = new glyphset.GlyphSet(font);\n    for (var i = 0; i < font.nGlyphs; i += 1) {\n        var charString = charStringsIndex.objects[i];\n        font.glyphs.push(i, glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString));\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    var sid;\n\n    // Is the string in the CFF standard strings?\n    var i = encoding.cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + encoding.cffStandardStrings.length;\n    } else {\n        sid = encoding.cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Table('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    var t = new table.Table('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (var i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    var m = {};\n    for (var i = 0; i < meta.length; i += 1) {\n        var entry = meta[i];\n        var value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    var t = new table.Table('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    var t = new table.Table('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    var t = new table.Table('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (var i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Table('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    var t = new table.Table('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (var i = 0; i < glyphNames.length; i += 1) {\n        var glyphName = glyphNames[i];\n        var glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    var ops = [];\n    var path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    var x = 0;\n    var y = 0;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var dx;\n        var dy;\n        var cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            var _13 = 1 / 3;\n            var _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            var dx1 = Math.round(cmd.x1 - x);\n            var dy1 = Math.round(cmd.y1 - y);\n            var dx2 = Math.round(cmd.x2 - cmd.x1);\n            var dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    var t = new table.Table('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs.get(i);\n        var ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    var t = new table.Table('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    var t = new table.Table('CFF ', [\n        {name: 'header', type: 'TABLE'},\n        {name: 'nameIndex', type: 'TABLE'},\n        {name: 'topDictIndex', type: 'TABLE'},\n        {name: 'stringIndex', type: 'TABLE'},\n        {name: 'globalSubrIndex', type: 'TABLE'},\n        {name: 'charsets', type: 'TABLE'},\n        {name: 'charStringsIndex', type: 'TABLE'},\n        {name: 'privateDict', type: 'TABLE'}\n    ]);\n\n    var fontScale = 1 / options.unitsPerEm;\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    var attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        fontBBox: options.fontBBox || [0, 0, 0, 0],\n        fontMatrix: [fontScale, 0, 0, fontScale, 0, 0],\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    var privateAttrs = {};\n\n    var glyphNames = [];\n    var glyph;\n\n    // Skip first glyph (.notdef)\n    for (var i = 1; i < glyphs.length; i += 1) {\n        glyph = glyphs.get(i);\n        glyphNames.push(glyph.name);\n    }\n\n    var strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    var topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    t.privateDict = makePrivateDict(privateAttrs, strings);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    var startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexports.parse = parseCFFTable;\nexports.make = makeCFFTable;\n\n},{\"../encoding\":4,\"../glyphset\":7,\"../parse\":9,\"../path\":10,\"../table\":11}],13:[function(require,module,exports){\n// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var i;\n    var cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 3\" table. This is a Windows format.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    var offset = -1;\n    for (i = 0; i < cmap.numTables; i += 1) {\n        var platformId = parse.getUShort(data, start + 4 + (i * 8));\n        var encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support, so return null.\n        // This font will be marked as unsupported.\n        return null;\n    }\n\n    var p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n    check.argument(cmap.format === 4, 'Only format 4 cmap tables are supported.');\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    var segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n\n    var endCountParser = new parse.Parser(data, start + offset + 14);\n    var startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    var idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    var idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    var glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (i = 0; i < segCount - 1; i += 1) {\n        var glyphIndex;\n        var endCount = endCountParser.parseUShort();\n        var startCount = startCountParser.parseUShort();\n        var idDelta = idDeltaParser.parseShort();\n        var idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (var c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\nfunction makeCmapTable(glyphs) {\n    var i;\n    var t = new table.Table('cmap', [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: 1},\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: 12},\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs.get(i);\n        for (var j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function(a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    var segCount;\n    segCount = t.segments.length;\n    t.segCountX2 = segCount * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    // Set up parallel segment arrays.\n    var endCounts = [];\n    var startCounts = [];\n    var idDeltas = [];\n    var idRangeOffsets = [];\n    var glyphIds = [];\n\n    for (i = 0; i < segCount; i += 1) {\n        var segment = t.segments[i];\n        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n        if (segment.glyphId !== undefined) {\n            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n        }\n    }\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    return t;\n}\n\nexports.parse = parseCmapTable;\nexports.make = makeCmapTable;\n\n},{\"../check\":2,\"../parse\":9,\"../table\":11}],14:[function(require,module,exports){\n// The `fvar` table stores font variation axes and instances.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6fvar.html\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\nfunction addName(name, names) {\n    var nameString = JSON.stringify(name);\n    var nameID = 256;\n    for (var nameKey in names) {\n        var n = parseInt(nameKey);\n        if (!n || n < 256) {\n            continue;\n        }\n\n        if (JSON.stringify(names[nameKey]) === nameString) {\n            return n;\n        }\n\n        if (nameID <= n) {\n            nameID = n + 1;\n        }\n    }\n\n    names[nameID] = name;\n    return nameID;\n}\n\nfunction makeFvarAxis(axis, names) {\n    var nameID = addName(axis.name, names);\n    return new table.Table('fvarAxis', [\n        {name: 'tag', type: 'TAG', value: axis.tag},\n        {name: 'minValue', type: 'FIXED', value: axis.minValue << 16},\n        {name: 'defaultValue', type: 'FIXED', value: axis.defaultValue << 16},\n        {name: 'maxValue', type: 'FIXED', value: axis.maxValue << 16},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'nameID', type: 'USHORT', value: nameID}\n    ]);\n}\n\nfunction parseFvarAxis(data, start, names) {\n    var axis = {};\n    var p = new parse.Parser(data, start);\n    axis.tag = p.parseTag();\n    axis.minValue = p.parseFixed();\n    axis.defaultValue = p.parseFixed();\n    axis.maxValue = p.parseFixed();\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n    axis.name = names[p.parseUShort()] || {};\n    return axis;\n}\n\nfunction makeFvarInstance(inst, axes, names) {\n    var nameID = addName(inst.name, names);\n    var fields = [\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'flags', type: 'USHORT', value: 0}\n    ];\n\n    for (var i = 0; i < axes.length; ++i) {\n        var axisTag = axes[i].tag;\n        fields.push({\n            name: 'axis ' + axisTag,\n            type: 'FIXED',\n            value: inst.coordinates[axisTag] << 16\n        });\n    }\n\n    return new table.Table('fvarInstance', fields);\n}\n\nfunction parseFvarInstance(data, start, axes, names) {\n    var inst = {};\n    var p = new parse.Parser(data, start);\n    inst.name = names[p.parseUShort()] || {};\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n\n    inst.coordinates = {};\n    for (var i = 0; i < axes.length; ++i) {\n        inst.coordinates[axes[i].tag] = p.parseFixed();\n    }\n\n    return inst;\n}\n\nfunction makeFvarTable(fvar, names) {\n    var result = new table.Table('fvar', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'offsetToData', type: 'USHORT', value: 0},\n        {name: 'countSizePairs', type: 'USHORT', value: 2},\n        {name: 'axisCount', type: 'USHORT', value: fvar.axes.length},\n        {name: 'axisSize', type: 'USHORT', value: 20},\n        {name: 'instanceCount', type: 'USHORT', value: fvar.instances.length},\n        {name: 'instanceSize', type: 'USHORT', value: 4 + fvar.axes.length * 4}\n    ]);\n    result.offsetToData = result.sizeOf();\n\n    for (var i = 0; i < fvar.axes.length; i++) {\n        result.fields.push({\n            name: 'axis ' + i,\n            type: 'TABLE',\n            value: makeFvarAxis(fvar.axes[i], names)});\n    }\n\n    for (var j = 0; j < fvar.instances.length; j++) {\n        result.fields.push({\n            name: 'instance ' + j,\n            type: 'TABLE',\n            value: makeFvarInstance(fvar.instances[j], fvar.axes, names)\n        });\n    }\n\n    return result;\n}\n\nfunction parseFvarTable(data, start, names) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseULong();\n    check.argument(tableVersion === 0x00010000, 'Unsupported fvar table version.');\n    var offsetToData = p.parseOffset16();\n    // Skip countSizePairs.\n    p.skip('uShort', 1);\n    var axisCount = p.parseUShort();\n    var axisSize = p.parseUShort();\n    var instanceCount = p.parseUShort();\n    var instanceSize = p.parseUShort();\n\n    var axes = [];\n    for (var i = 0; i < axisCount; i++) {\n        axes.push(parseFvarAxis(data, start + offsetToData + i * axisSize, names));\n    }\n\n    var instances = [];\n    var instanceStart = start + offsetToData + axisCount * axisSize;\n    for (var j = 0; j < instanceCount; j++) {\n        instances.push(parseFvarInstance(data, instanceStart + j * instanceSize, axes, names));\n    }\n\n    return {axes:axes, instances:instances};\n}\n\nexports.make = makeFvarTable;\nexports.parse = parseFvarTable;\n\n},{\"../check\":2,\"../parse\":9,\"../table\":11}],15:[function(require,module,exports){\n// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\n'use strict';\n\nvar check = require('../check');\nvar glyphset = require('../glyphset');\nvar parse = require('../parse');\nvar path = require('../path');\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(glyph, data, start) {\n    var p = new parse.Parser(data, start);\n    glyph.numberOfContours = p.parseShort();\n    glyph.xMin = p.parseShort();\n    glyph.yMin = p.parseShort();\n    glyph.xMax = p.parseShort();\n    glyph.yMax = p.parseShort();\n    var flags;\n    var flag;\n    if (glyph.numberOfContours > 0) {\n        var i;\n        // This glyph is not a composite.\n        var endPointIndices = glyph.endPointIndices = [];\n        for (i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                var repeatCount = p.parseByte();\n                for (var j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            var points = [];\n            var point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                var px = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                var py = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        var moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            var component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                component.dx = p.parseShort();\n                component.dy = p.parseShort();\n            } else {\n                // The arguments are bytes\n                component.dx = p.parseChar();\n                component.dy = p.parseChar();\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n    }\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        var newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p = new path.Path();\n    if (!points) {\n        return p;\n    }\n\n    var contours = getContours(points);\n    for (var i = 0; i < contours.length; i += 1) {\n        var contour = contours[i];\n        var firstPt = contour[0];\n        var lastPt = contour[contour.length - 1];\n        var curvePt;\n        var realFirstPoint;\n        if (firstPt.onCurve) {\n            curvePt = null;\n            // The first point will be consumed by the moveTo command,\n            // so skip it in the loop.\n            realFirstPoint = true;\n        } else {\n            if (lastPt.onCurve) {\n                // If the first point is off-curve and the last point is on-curve,\n                // start at the last point.\n                firstPt = lastPt;\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n            }\n\n            curvePt = firstPt;\n            // The first point is synthesized, so don't skip the real first point.\n            realFirstPoint = false;\n        }\n\n        p.moveTo(firstPt.x, firstPt.y);\n\n        for (var j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n            var pt = contour[j];\n            var prevPt = j === 0 ? firstPt : contour[j - 1];\n            if (prevPt.onCurve && pt.onCurve) {\n                // This is a straight line.\n                p.lineTo(pt.x, pt.y);\n            } else if (prevPt.onCurve && !pt.onCurve) {\n                curvePt = pt;\n            } else if (!prevPt.onCurve && !pt.onCurve) {\n                var midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n                p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n                curvePt = pt;\n            } else if (!prevPt.onCurve && pt.onCurve) {\n                // Previous point off-curve, this point on-curve.\n                p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                curvePt = null;\n            } else {\n                throw new Error('Invalid state.');\n            }\n        }\n\n        if (firstPt !== lastPt) {\n            // Connect the last and first points\n            if (curvePt) {\n                p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            } else {\n                p.lineTo(firstPt.x, firstPt.y);\n            }\n        }\n    }\n\n    p.closePath();\n    return p;\n}\n\nfunction buildPath(glyphs, glyph) {\n    if (glyph.isComposite) {\n        for (var j = 0; j < glyph.components.length; j += 1) {\n            var component = glyph.components[j];\n            var componentGlyph = glyphs.get(component.glyphIndex);\n            // Force the ttfGlyphLoader to parse the glyph.\n            componentGlyph.getPath();\n            if (componentGlyph.points) {\n                var transformedPoints = transformPoints(componentGlyph.points, component);\n                glyph.points = glyph.points.concat(transformedPoints);\n            }\n        }\n    }\n\n    return getPath(glyph.points);\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    var glyphs = new glyphset.GlyphSet(font);\n    var i;\n\n    // The last element of the loca table is invalid.\n    for (i = 0; i < loca.length - 1; i += 1) {\n        var offset = loca[i];\n        var nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    }\n\n    return glyphs;\n}\n\nexports.parse = parseGlyfTable;\n\n},{\"../check\":2,\"../glyphset\":7,\"../parse\":9,\"../path\":10}],16:[function(require,module,exports){\n// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n// These lists are unused by now, this function is just the basis for a real parsing.\nfunction parseTaggedListTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var n = p.parseUShort();\n    var list = [];\n    for (var i = 0; i < n; i++) {\n        list[p.parseTag()] = { offset: p.parseUShort() };\n    }\n\n    return list;\n}\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// Format 1 is a simple list of glyph ids,\n// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\nfunction parseCoverageTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    var count =  p.parseUShort();\n    if (format === 1) {\n        return p.parseUShortList(count);\n    }\n    else if (format === 2) {\n        var coverage = [];\n        for (; count--;) {\n            var begin = p.parseUShort();\n            var end = p.parseUShort();\n            var index = p.parseUShort();\n            for (var i = begin; i <= end; i++) {\n                coverage[index++] = i;\n            }\n        }\n\n        return coverage;\n    }\n}\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// Returns a function that gets a class value from a glyph ID.\nfunction parseClassDefTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    if (format === 1) {\n        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n        var startGlyph = p.parseUShort();\n        var glyphCount = p.parseUShort();\n        var classes = p.parseUShortList(glyphCount);\n        return function(glyphID) {\n            return classes[glyphID - startGlyph] || 0;\n        };\n    }\n    else if (format === 2) {\n        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n        var rangeCount = p.parseUShort();\n        var startGlyphs = [];\n        var endGlyphs = [];\n        var classValues = [];\n        for (var i = 0; i < rangeCount; i++) {\n            startGlyphs[i] = p.parseUShort();\n            endGlyphs[i] = p.parseUShort();\n            classValues[i] = p.parseUShort();\n        }\n\n        return function(glyphID) {\n            var l = 0;\n            var r = startGlyphs.length - 1;\n            while (l < r) {\n                var c = (l + r + 1) >> 1;\n                if (glyphID < startGlyphs[c]) {\n                    r = c - 1;\n                } else {\n                    l = c;\n                }\n            }\n\n            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                return classValues[l] || 0;\n            }\n\n            return 0;\n        };\n    }\n}\n\n// Parse a pair adjustment positioning subtable, format 1 or format 2\n// The subtable is returned in the form of a lookup function.\nfunction parsePairPosSubTable(data, start) {\n    var p = new parse.Parser(data, start);\n    // This part is common to format 1 and format 2 subtables\n    var format = p.parseUShort();\n    var coverageOffset = p.parseUShort();\n    var coverage = parseCoverageTable(data, start + coverageOffset);\n    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n    // Only valueFormat1=4 and valueFormat2=0 is supported.\n    var valueFormat1 = p.parseUShort();\n    var valueFormat2 = p.parseUShort();\n    var value1;\n    var value2;\n    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n    var sharedPairSets = {};\n    if (format === 1) {\n        // Pair Positioning Adjustment: Format 1\n        var pairSetCount = p.parseUShort();\n        var pairSet = [];\n        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n        var pairSetOffsets = p.parseOffset16List(pairSetCount);\n        for (var firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n            var pairSetOffset = pairSetOffsets[firstGlyph];\n            var sharedPairSet = sharedPairSets[pairSetOffset];\n            if (!sharedPairSet) {\n                // Parse a pairset table in a pair adjustment subtable format 1\n                sharedPairSet = {};\n                p.relativeOffset = pairSetOffset;\n                var pairValueCount = p.parseUShort();\n                for (; pairValueCount--;) {\n                    var secondGlyph = p.parseUShort();\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) value2 = p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    sharedPairSet[secondGlyph] = value1;\n                }\n            }\n\n            pairSet[coverage[firstGlyph]] = sharedPairSet;\n        }\n\n        return function(leftGlyph, rightGlyph) {\n            var pairs = pairSet[leftGlyph];\n            if (pairs) return pairs[rightGlyph];\n        };\n    }\n    else if (format === 2) {\n        // Pair Positioning Adjustment: Format 2\n        var classDef1Offset = p.parseUShort();\n        var classDef2Offset = p.parseUShort();\n        var class1Count = p.parseUShort();\n        var class2Count = p.parseUShort();\n        var getClass1 = parseClassDefTable(data, start + classDef1Offset);\n        var getClass2 = parseClassDefTable(data, start + classDef2Offset);\n\n        // Parse kerning values by class pair.\n        var kerningMatrix = [];\n        for (var i = 0; i < class1Count; i++) {\n            var kerningRow = kerningMatrix[i] = [];\n            for (var j = 0; j < class2Count; j++) {\n                if (valueFormat1) value1 = p.parseShort();\n                if (valueFormat2) value2 = p.parseShort();\n                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                // so value1 is the XAdvance and value2 is empty.\n                kerningRow[j] = value1;\n            }\n        }\n\n        // Convert coverage list to a hash\n        var covered = {};\n        for (i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\n        // Get the kerning value for a specific glyph pair.\n        return function(leftGlyph, rightGlyph) {\n            if (!covered[leftGlyph]) return;\n            var class1 = getClass1(leftGlyph);\n            var class2 = getClass2(rightGlyph);\n            var kerningRow = kerningMatrix[class1];\n\n            if (kerningRow) {\n                return kerningRow[class2];\n            }\n        };\n    }\n}\n\n// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\nfunction parseLookupTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var lookupType = p.parseUShort();\n    var lookupFlag = p.parseUShort();\n    var useMarkFilteringSet = lookupFlag & 0x10;\n    var subTableCount = p.parseUShort();\n    var subTableOffsets = p.parseOffset16List(subTableCount);\n    var table = {\n        lookupType: lookupType,\n        lookupFlag: lookupFlag,\n        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n    };\n    // LookupType 2, Pair adjustment\n    if (lookupType === 2) {\n        var subtables = [];\n        for (var i = 0; i < subTableCount; i++) {\n            subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n        }\n        // Return a function which finds the kerning values in the subtables.\n        table.getKerningValue = function(leftGlyph, rightGlyph) {\n            for (var i = subtables.length; i--;) {\n                var value = subtables[i](leftGlyph, rightGlyph);\n                if (value !== undefined) return value;\n            }\n\n            return 0;\n        };\n    }\n\n    return table;\n}\n\n// Parse the `GPOS` table which contains, among other things, kerning pairs.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\nfunction parseGposTable(data, start, font) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseFixed();\n    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n    // ScriptList and FeatureList - ignored for now\n    parseTaggedListTable(data, start + p.parseUShort());\n    // 'kern' is the feature we are looking for.\n    parseTaggedListTable(data, start + p.parseUShort());\n\n    // LookupList\n    var lookupListOffset = p.parseUShort();\n    p.relativeOffset = lookupListOffset;\n    var lookupCount = p.parseUShort();\n    var lookupTableOffsets = p.parseOffset16List(lookupCount);\n    var lookupListAbsoluteOffset = start + lookupListOffset;\n    for (var i = 0; i < lookupCount; i++) {\n        var table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n    }\n}\n\nexports.parse = parseGposTable;\n\n},{\"../check\":2,\"../parse\":9}],17:[function(require,module,exports){\n// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {};\n    var p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: 0},\n        {name: 'modified', type: 'LONGDATETIME', value: 0},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHeadTable;\nexports.make = makeHeadTable;\n\n},{\"../check\":2,\"../parse\":9,\"../table\":11}],18:[function(require,module,exports){\n// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {};\n    var p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHheaTable;\nexports.make = makeHheaTable;\n\n},{\"../parse\":9,\"../table\":11}],19:[function(require,module,exports){\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    var advanceWidth;\n    var leftSideBearing;\n    var p = new parse.Parser(data, start);\n    for (var i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        var glyph = glyphs.get(i);\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    var t = new table.Table('hmtx', []);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs.get(i);\n        var advanceWidth = glyph.advanceWidth || 0;\n        var leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexports.parse = parseHmtxTable;\nexports.make = makeHmtxTable;\n\n},{\"../parse\":9,\"../table\":11}],20:[function(require,module,exports){\n// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var pairs = {};\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseUShort();\n    check.argument(tableVersion === 0, 'Unsupported kern table version.');\n    // Skip nTables.\n    p.skip('uShort', 1);\n    var subTableVersion = p.parseUShort();\n    check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subTableLength, subTableCoverage\n    p.skip('uShort', 2);\n    var nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (var i = 0; i < nPairs; i += 1) {\n        var leftIndex = p.parseUShort();\n        var rightIndex = p.parseUShort();\n        var value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n\n    return pairs;\n}\n\nexports.parse = parseKernTable;\n\n},{\"../check\":2,\"../parse\":9}],21:[function(require,module,exports){\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\n'use strict';\n\nvar parse = require('../parse');\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p = new parse.Parser(data, start);\n    var parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    var glyphOffsets = [];\n    for (var i = 0; i < numGlyphs + 1; i += 1) {\n        var glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexports.parse = parseLocaTable;\n\n},{\"../parse\":9}],22:[function(require,module,exports){\n// The `ltag` table stores IETF BCP-47 language tags. It allows supporting\n// languages for which TrueType does not assign a numeric code.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6ltag.html\n// http://www.w3.org/International/articles/language-tags/\n// http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\nfunction makeLtagTable(tags) {\n    var result = new table.Table('ltag', [\n        {name: 'version', type: 'ULONG', value: 1},\n        {name: 'flags', type: 'ULONG', value: 0},\n        {name: 'numTags', type: 'ULONG', value: tags.length}\n    ]);\n\n    var stringPool = '';\n    var stringPoolOffset = 12 + tags.length * 4;\n    for (var i = 0; i < tags.length; ++i) {\n        var pos = stringPool.indexOf(tags[i]);\n        if (pos < 0) {\n            pos = stringPool.length;\n            stringPool += tags[i];\n        }\n\n        result.fields.push({name: 'offset ' + i, type: 'USHORT', value: stringPoolOffset + pos});\n        result.fields.push({name: 'length ' + i, type: 'USHORT', value: tags[i].length});\n    }\n\n    result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n    return result;\n}\n\nfunction parseLtagTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported ltag table version.');\n    // The 'ltag' specification does not define any flags; skip the field.\n    p.skip('uLong', 1);\n    var numTags = p.parseULong();\n\n    var tags = [];\n    for (var i = 0; i < numTags; i++) {\n        var tag = '';\n        var offset = start + p.parseUShort();\n        var length = p.parseUShort();\n        for (var j = offset; j < offset + length; ++j) {\n            tag += String.fromCharCode(data.getInt8(j));\n        }\n\n        tags.push(tag);\n    }\n\n    return tags;\n}\n\nexports.make = makeLtagTable;\nexports.parse = parseLtagTable;\n\n},{\"../check\":2,\"../parse\":9,\"../table\":11}],23:[function(require,module,exports){\n// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {};\n    var p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexports.parse = parseMaxpTable;\nexports.make = makeMaxpTable;\n\n},{\"../parse\":9,\"../table\":11}],24:[function(require,module,exports){\n// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\n'use strict';\n\nvar types = require('../types');\nvar decode = types.decode;\nvar encode = types.encode;\nvar parse = require('../parse');\nvar table = require('../table');\n\n// NameIDs for the name table.\nvar nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'license',                // 13\n    'licenseURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\nvar macLanguages = {\n    0: 'en',\n    1: 'fr',\n    2: 'de',\n    3: 'it',\n    4: 'nl',\n    5: 'sv',\n    6: 'es',\n    7: 'da',\n    8: 'pt',\n    9: 'no',\n    10: 'he',\n    11: 'ja',\n    12: 'ar',\n    13: 'fi',\n    14: 'el',\n    15: 'is',\n    16: 'mt',\n    17: 'tr',\n    18: 'hr',\n    19: 'zh-Hant',\n    20: 'ur',\n    21: 'hi',\n    22: 'th',\n    23: 'ko',\n    24: 'lt',\n    25: 'pl',\n    26: 'hu',\n    27: 'es',\n    28: 'lv',\n    29: 'se',\n    30: 'fo',\n    31: 'fa',\n    32: 'ru',\n    33: 'zh',\n    34: 'nl-BE',\n    35: 'ga',\n    36: 'sq',\n    37: 'ro',\n    38: 'cz',\n    39: 'sk',\n    40: 'si',\n    41: 'yi',\n    42: 'sr',\n    43: 'mk',\n    44: 'bg',\n    45: 'uk',\n    46: 'be',\n    47: 'uz',\n    48: 'kk',\n    49: 'az-Cyrl',\n    50: 'az-Arab',\n    51: 'hy',\n    52: 'ka',\n    53: 'mo',\n    54: 'ky',\n    55: 'tg',\n    56: 'tk',\n    57: 'mn-CN',\n    58: 'mn',\n    59: 'ps',\n    60: 'ks',\n    61: 'ku',\n    62: 'sd',\n    63: 'bo',\n    64: 'ne',\n    65: 'sa',\n    66: 'mr',\n    67: 'bn',\n    68: 'as',\n    69: 'gu',\n    70: 'pa',\n    71: 'or',\n    72: 'ml',\n    73: 'kn',\n    74: 'ta',\n    75: 'te',\n    76: 'si',\n    77: 'my',\n    78: 'km',\n    79: 'lo',\n    80: 'vi',\n    81: 'id',\n    82: 'tl',\n    83: 'ms',\n    84: 'ms-Arab',\n    85: 'am',\n    86: 'ti',\n    87: 'om',\n    88: 'so',\n    89: 'sw',\n    90: 'rw',\n    91: 'rn',\n    92: 'ny',\n    93: 'mg',\n    94: 'eo',\n    128: 'cy',\n    129: 'eu',\n    130: 'ca',\n    131: 'la',\n    132: 'qu',\n    133: 'gn',\n    134: 'ay',\n    135: 'tt',\n    136: 'ug',\n    137: 'dz',\n    138: 'jv',\n    139: 'su',\n    140: 'gl',\n    141: 'af',\n    142: 'br',\n    143: 'iu',\n    144: 'gd',\n    145: 'gv',\n    146: 'ga',\n    147: 'to',\n    148: 'el-polyton',\n    149: 'kl',\n    150: 'az',\n    151: 'nn'\n};\n\n// MacOS language ID → MacOS script ID\n//\n// Note that the script ID is not sufficient to determine what encoding\n// to use in TrueType files. For some languages, MacOS used a modification\n// of a mainstream script. For example, an Icelandic name would be stored\n// with smRoman in the TrueType naming table, but the actual encoding\n// is a special Icelandic version of the normal Macintosh Roman encoding.\n// As another example, Inuktitut uses an 8-bit encoding for Canadian Aboriginal\n// Syllables but MacOS had run out of available script codes, so this was\n// done as a (pretty radical) \"modification\" of Ethiopic.\n//\n// http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nvar macLanguageToScript = {\n    0: 0,  // langEnglish → smRoman\n    1: 0,  // langFrench → smRoman\n    2: 0,  // langGerman → smRoman\n    3: 0,  // langItalian → smRoman\n    4: 0,  // langDutch → smRoman\n    5: 0,  // langSwedish → smRoman\n    6: 0,  // langSpanish → smRoman\n    7: 0,  // langDanish → smRoman\n    8: 0,  // langPortuguese → smRoman\n    9: 0,  // langNorwegian → smRoman\n    10: 5,  // langHebrew → smHebrew\n    11: 1,  // langJapanese → smJapanese\n    12: 4,  // langArabic → smArabic\n    13: 0,  // langFinnish → smRoman\n    14: 6,  // langGreek → smGreek\n    15: 0,  // langIcelandic → smRoman (modified)\n    16: 0,  // langMaltese → smRoman\n    17: 0,  // langTurkish → smRoman (modified)\n    18: 0,  // langCroatian → smRoman (modified)\n    19: 2,  // langTradChinese → smTradChinese\n    20: 4,  // langUrdu → smArabic\n    21: 9,  // langHindi → smDevanagari\n    22: 21,  // langThai → smThai\n    23: 3,  // langKorean → smKorean\n    24: 29,  // langLithuanian → smCentralEuroRoman\n    25: 29,  // langPolish → smCentralEuroRoman\n    26: 29,  // langHungarian → smCentralEuroRoman\n    27: 29,  // langEstonian → smCentralEuroRoman\n    28: 29,  // langLatvian → smCentralEuroRoman\n    29: 0,  // langSami → smRoman\n    30: 0,  // langFaroese → smRoman (modified)\n    31: 4,  // langFarsi → smArabic (modified)\n    32: 7,  // langRussian → smCyrillic\n    33: 25,  // langSimpChinese → smSimpChinese\n    34: 0,  // langFlemish → smRoman\n    35: 0,  // langIrishGaelic → smRoman (modified)\n    36: 0,  // langAlbanian → smRoman\n    37: 0,  // langRomanian → smRoman (modified)\n    38: 29,  // langCzech → smCentralEuroRoman\n    39: 29,  // langSlovak → smCentralEuroRoman\n    40: 0,  // langSlovenian → smRoman (modified)\n    41: 5,  // langYiddish → smHebrew\n    42: 7,  // langSerbian → smCyrillic\n    43: 7,  // langMacedonian → smCyrillic\n    44: 7,  // langBulgarian → smCyrillic\n    45: 7,  // langUkrainian → smCyrillic (modified)\n    46: 7,  // langByelorussian → smCyrillic\n    47: 7,  // langUzbek → smCyrillic\n    48: 7,  // langKazakh → smCyrillic\n    49: 7,  // langAzerbaijani → smCyrillic\n    50: 4,  // langAzerbaijanAr → smArabic\n    51: 24,  // langArmenian → smArmenian\n    52: 23,  // langGeorgian → smGeorgian\n    53: 7,  // langMoldavian → smCyrillic\n    54: 7,  // langKirghiz → smCyrillic\n    55: 7,  // langTajiki → smCyrillic\n    56: 7,  // langTurkmen → smCyrillic\n    57: 27,  // langMongolian → smMongolian\n    58: 7,  // langMongolianCyr → smCyrillic\n    59: 4,  // langPashto → smArabic\n    60: 4,  // langKurdish → smArabic\n    61: 4,  // langKashmiri → smArabic\n    62: 4,  // langSindhi → smArabic\n    63: 26,  // langTibetan → smTibetan\n    64: 9,  // langNepali → smDevanagari\n    65: 9,  // langSanskrit → smDevanagari\n    66: 9,  // langMarathi → smDevanagari\n    67: 13,  // langBengali → smBengali\n    68: 13,  // langAssamese → smBengali\n    69: 11,  // langGujarati → smGujarati\n    70: 10,  // langPunjabi → smGurmukhi\n    71: 12,  // langOriya → smOriya\n    72: 17,  // langMalayalam → smMalayalam\n    73: 16,  // langKannada → smKannada\n    74: 14,  // langTamil → smTamil\n    75: 15,  // langTelugu → smTelugu\n    76: 18,  // langSinhalese → smSinhalese\n    77: 19,  // langBurmese → smBurmese\n    78: 20,  // langKhmer → smKhmer\n    79: 22,  // langLao → smLao\n    80: 30,  // langVietnamese → smVietnamese\n    81: 0,  // langIndonesian → smRoman\n    82: 0,  // langTagalog → smRoman\n    83: 0,  // langMalayRoman → smRoman\n    84: 4,  // langMalayArabic → smArabic\n    85: 28,  // langAmharic → smEthiopic\n    86: 28,  // langTigrinya → smEthiopic\n    87: 28,  // langOromo → smEthiopic\n    88: 0,  // langSomali → smRoman\n    89: 0,  // langSwahili → smRoman\n    90: 0,  // langKinyarwanda → smRoman\n    91: 0,  // langRundi → smRoman\n    92: 0,  // langNyanja → smRoman\n    93: 0,  // langMalagasy → smRoman\n    94: 0,  // langEsperanto → smRoman\n    128: 0,  // langWelsh → smRoman (modified)\n    129: 0,  // langBasque → smRoman\n    130: 0,  // langCatalan → smRoman\n    131: 0,  // langLatin → smRoman\n    132: 0,  // langQuechua → smRoman\n    133: 0,  // langGuarani → smRoman\n    134: 0,  // langAymara → smRoman\n    135: 7,  // langTatar → smCyrillic\n    136: 4,  // langUighur → smArabic\n    137: 26,  // langDzongkha → smTibetan\n    138: 0,  // langJavaneseRom → smRoman\n    139: 0,  // langSundaneseRom → smRoman\n    140: 0,  // langGalician → smRoman\n    141: 0,  // langAfrikaans → smRoman\n    142: 0,  // langBreton → smRoman (modified)\n    143: 28,  // langInuktitut → smEthiopic (modified)\n    144: 0,  // langScottishGaelic → smRoman (modified)\n    145: 0,  // langManxGaelic → smRoman (modified)\n    146: 0,  // langIrishGaelicScript → smRoman (modified)\n    147: 0,  // langTongan → smRoman\n    148: 6,  // langGreekAncient → smRoman\n    149: 0,  // langGreenlandic → smRoman\n    150: 0,  // langAzerbaijanRoman → smRoman\n    151: 0   // langNynorsk → smRoman\n};\n\n// While Microsoft indicates a region/country for all its language\n// IDs, we omit the region code if it's equal to the \"most likely\n// region subtag\" according to Unicode CLDR. For scripts, we omit\n// the subtag if it is equal to the Suppress-Script entry in the\n// IANA language subtag registry for IETF BCP 47.\n//\n// For example, Microsoft states that its language code 0x041A is\n// Croatian in Croatia. We transform this to the BCP 47 language code 'hr'\n// and not 'hr-HR' because Croatia is the default country for Croatian,\n// according to Unicode CLDR. As another example, Microsoft states\n// that 0x101A is Croatian (Latin) in Bosnia-Herzegovina. We transform\n// this to 'hr-BA' and not 'hr-Latn-BA' because Latin is the default script\n// for the Croatian language, according to IANA.\n//\n// http://www.unicode.org/cldr/charts/latest/supplemental/likely_subtags.html\n// http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\nvar windowsLanguages = {\n    0x0436: 'af',\n    0x041C: 'sq',\n    0x0484: 'gsw',\n    0x045E: 'am',\n    0x1401: 'ar-DZ',\n    0x3C01: 'ar-BH',\n    0x0C01: 'ar',\n    0x0801: 'ar-IQ',\n    0x2C01: 'ar-JO',\n    0x3401: 'ar-KW',\n    0x3001: 'ar-LB',\n    0x1001: 'ar-LY',\n    0x1801: 'ary',\n    0x2001: 'ar-OM',\n    0x4001: 'ar-QA',\n    0x0401: 'ar-SA',\n    0x2801: 'ar-SY',\n    0x1C01: 'aeb',\n    0x3801: 'ar-AE',\n    0x2401: 'ar-YE',\n    0x042B: 'hy',\n    0x044D: 'as',\n    0x082C: 'az-Cyrl',\n    0x042C: 'az',\n    0x046D: 'ba',\n    0x042D: 'eu',\n    0x0423: 'be',\n    0x0845: 'bn',\n    0x0445: 'bn-IN',\n    0x201A: 'bs-Cyrl',\n    0x141A: 'bs',\n    0x047E: 'br',\n    0x0402: 'bg',\n    0x0403: 'ca',\n    0x0C04: 'zh-HK',\n    0x1404: 'zh-MO',\n    0x0804: 'zh',\n    0x1004: 'zh-SG',\n    0x0404: 'zh-TW',\n    0x0483: 'co',\n    0x041A: 'hr',\n    0x101A: 'hr-BA',\n    0x0405: 'cs',\n    0x0406: 'da',\n    0x048C: 'prs',\n    0x0465: 'dv',\n    0x0813: 'nl-BE',\n    0x0413: 'nl',\n    0x0C09: 'en-AU',\n    0x2809: 'en-BZ',\n    0x1009: 'en-CA',\n    0x2409: 'en-029',\n    0x4009: 'en-IN',\n    0x1809: 'en-IE',\n    0x2009: 'en-JM',\n    0x4409: 'en-MY',\n    0x1409: 'en-NZ',\n    0x3409: 'en-PH',\n    0x4809: 'en-SG',\n    0x1C09: 'en-ZA',\n    0x2C09: 'en-TT',\n    0x0809: 'en-GB',\n    0x0409: 'en',\n    0x3009: 'en-ZW',\n    0x0425: 'et',\n    0x0438: 'fo',\n    0x0464: 'fil',\n    0x040B: 'fi',\n    0x080C: 'fr-BE',\n    0x0C0C: 'fr-CA',\n    0x040C: 'fr',\n    0x140C: 'fr-LU',\n    0x180C: 'fr-MC',\n    0x100C: 'fr-CH',\n    0x0462: 'fy',\n    0x0456: 'gl',\n    0x0437: 'ka',\n    0x0C07: 'de-AT',\n    0x0407: 'de',\n    0x1407: 'de-LI',\n    0x1007: 'de-LU',\n    0x0807: 'de-CH',\n    0x0408: 'el',\n    0x046F: 'kl',\n    0x0447: 'gu',\n    0x0468: 'ha',\n    0x040D: 'he',\n    0x0439: 'hi',\n    0x040E: 'hu',\n    0x040F: 'is',\n    0x0470: 'ig',\n    0x0421: 'id',\n    0x045D: 'iu',\n    0x085D: 'iu-Latn',\n    0x083C: 'ga',\n    0x0434: 'xh',\n    0x0435: 'zu',\n    0x0410: 'it',\n    0x0810: 'it-CH',\n    0x0411: 'ja',\n    0x044B: 'kn',\n    0x043F: 'kk',\n    0x0453: 'km',\n    0x0486: 'quc',\n    0x0487: 'rw',\n    0x0441: 'sw',\n    0x0457: 'kok',\n    0x0412: 'ko',\n    0x0440: 'ky',\n    0x0454: 'lo',\n    0x0426: 'lv',\n    0x0427: 'lt',\n    0x082E: 'dsb',\n    0x046E: 'lb',\n    0x042F: 'mk',\n    0x083E: 'ms-BN',\n    0x043E: 'ms',\n    0x044C: 'ml',\n    0x043A: 'mt',\n    0x0481: 'mi',\n    0x047A: 'arn',\n    0x044E: 'mr',\n    0x047C: 'moh',\n    0x0450: 'mn',\n    0x0850: 'mn-CN',\n    0x0461: 'ne',\n    0x0414: 'nb',\n    0x0814: 'nn',\n    0x0482: 'oc',\n    0x0448: 'or',\n    0x0463: 'ps',\n    0x0415: 'pl',\n    0x0416: 'pt',\n    0x0816: 'pt-PT',\n    0x0446: 'pa',\n    0x046B: 'qu-BO',\n    0x086B: 'qu-EC',\n    0x0C6B: 'qu',\n    0x0418: 'ro',\n    0x0417: 'rm',\n    0x0419: 'ru',\n    0x243B: 'smn',\n    0x103B: 'smj-NO',\n    0x143B: 'smj',\n    0x0C3B: 'se-FI',\n    0x043B: 'se',\n    0x083B: 'se-SE',\n    0x203B: 'sms',\n    0x183B: 'sma-NO',\n    0x1C3B: 'sms',\n    0x044F: 'sa',\n    0x1C1A: 'sr-Cyrl-BA',\n    0x0C1A: 'sr',\n    0x181A: 'sr-Latn-BA',\n    0x081A: 'sr-Latn',\n    0x046C: 'nso',\n    0x0432: 'tn',\n    0x045B: 'si',\n    0x041B: 'sk',\n    0x0424: 'sl',\n    0x2C0A: 'es-AR',\n    0x400A: 'es-BO',\n    0x340A: 'es-CL',\n    0x240A: 'es-CO',\n    0x140A: 'es-CR',\n    0x1C0A: 'es-DO',\n    0x300A: 'es-EC',\n    0x440A: 'es-SV',\n    0x100A: 'es-GT',\n    0x480A: 'es-HN',\n    0x080A: 'es-MX',\n    0x4C0A: 'es-NI',\n    0x180A: 'es-PA',\n    0x3C0A: 'es-PY',\n    0x280A: 'es-PE',\n    0x500A: 'es-PR',\n\n    // Microsoft has defined two different language codes for\n    // “Spanish with modern sorting” and “Spanish with traditional\n    // sorting”. This makes sense for collation APIs, and it would be\n    // possible to express this in BCP 47 language tags via Unicode\n    // extensions (eg., es-u-co-trad is Spanish with traditional\n    // sorting). However, for storing names in fonts, the distinction\n    // does not make sense, so we give “es” in both cases.\n    0x0C0A: 'es',\n    0x040A: 'es',\n\n    0x540A: 'es-US',\n    0x380A: 'es-UY',\n    0x200A: 'es-VE',\n    0x081D: 'sv-FI',\n    0x041D: 'sv',\n    0x045A: 'syr',\n    0x0428: 'tg',\n    0x085F: 'tzm',\n    0x0449: 'ta',\n    0x0444: 'tt',\n    0x044A: 'te',\n    0x041E: 'th',\n    0x0451: 'bo',\n    0x041F: 'tr',\n    0x0442: 'tk',\n    0x0480: 'ug',\n    0x0422: 'uk',\n    0x042E: 'hsb',\n    0x0420: 'ur',\n    0x0843: 'uz-Cyrl',\n    0x0443: 'uz',\n    0x042A: 'vi',\n    0x0452: 'cy',\n    0x0488: 'wo',\n    0x0485: 'sah',\n    0x0478: 'ii',\n    0x046A: 'yo'\n};\n\n// Returns a IETF BCP 47 language code, for example 'zh-Hant'\n// for 'Chinese in the traditional script'.\nfunction getLanguageCode(platformID, languageID, ltag) {\n    switch (platformID) {\n    case 0:  // Unicode\n        if (languageID === 0xFFFF) {\n            return 'und';\n        } else if (ltag) {\n            return ltag[languageID];\n        }\n\n        break;\n\n    case 1:  // Macintosh\n        return macLanguages[languageID];\n\n    case 3:  // Windows\n        return windowsLanguages[languageID];\n    }\n\n    return undefined;\n}\n\nvar utf16 = 'utf-16';\n\n// MacOS script ID → encoding. This table stores the default case,\n// which can be overridden by macLanguageEncodings.\nvar macScriptEncodings = {\n    0: 'macintosh',           // smRoman\n    1: 'x-mac-japanese',      // smJapanese\n    2: 'x-mac-chinesetrad',   // smTradChinese\n    3: 'x-mac-korean',        // smKorean\n    6: 'x-mac-greek',         // smGreek\n    7: 'x-mac-cyrillic',      // smCyrillic\n    9: 'x-mac-devanagai',     // smDevanagari\n    10: 'x-mac-gurmukhi',     // smGurmukhi\n    11: 'x-mac-gujarati',     // smGujarati\n    12: 'x-mac-oriya',        // smOriya\n    13: 'x-mac-bengali',      // smBengali\n    14: 'x-mac-tamil',        // smTamil\n    15: 'x-mac-telugu',       // smTelugu\n    16: 'x-mac-kannada',      // smKannada\n    17: 'x-mac-malayalam',    // smMalayalam\n    18: 'x-mac-sinhalese',    // smSinhalese\n    19: 'x-mac-burmese',      // smBurmese\n    20: 'x-mac-khmer',        // smKhmer\n    21: 'x-mac-thai',         // smThai\n    22: 'x-mac-lao',          // smLao\n    23: 'x-mac-georgian',     // smGeorgian\n    24: 'x-mac-armenian',     // smArmenian\n    25: 'x-mac-chinesesimp',  // smSimpChinese\n    26: 'x-mac-tibetan',      // smTibetan\n    27: 'x-mac-mongolian',    // smMongolian\n    28: 'x-mac-ethiopic',     // smEthiopic\n    29: 'x-mac-ce',           // smCentralEuroRoman\n    30: 'x-mac-vietnamese',   // smVietnamese\n    31: 'x-mac-extarabic'     // smExtArabic\n};\n\n// MacOS language ID → encoding. This table stores the exceptional\n// cases, which override macScriptEncodings. For writing MacOS naming\n// tables, we need to emit a MacOS script ID. Therefore, we cannot\n// merge macScriptEncodings into macLanguageEncodings.\n//\n// http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nvar macLanguageEncodings = {\n    15: 'x-mac-icelandic',    // langIcelandic\n    17: 'x-mac-turkish',      // langTurkish\n    18: 'x-mac-croatian',     // langCroatian\n    24: 'x-mac-ce',           // langLithuanian\n    25: 'x-mac-ce',           // langPolish\n    26: 'x-mac-ce',           // langHungarian\n    27: 'x-mac-ce',           // langEstonian\n    28: 'x-mac-ce',           // langLatvian\n    30: 'x-mac-icelandic',    // langFaroese\n    37: 'x-mac-romanian',     // langRomanian\n    38: 'x-mac-ce',           // langCzech\n    39: 'x-mac-ce',           // langSlovak\n    40: 'x-mac-ce',           // langSlovenian\n    143: 'x-mac-inuit',       // langInuktitut\n    146: 'x-mac-gaelic'       // langIrishGaelicScript\n};\n\nfunction getEncoding(platformID, encodingID, languageID) {\n    switch (platformID) {\n    case 0:  // Unicode\n        return utf16;\n\n    case 1:  // Apple Macintosh\n        return macLanguageEncodings[languageID] || macScriptEncodings[encodingID];\n\n    case 3:  // Microsoft Windows\n        if (encodingID === 1 || encodingID === 10) {\n            return utf16;\n        }\n\n        break;\n    }\n\n    return undefined;\n}\n\n// Parse the naming `name` table.\n// FIXME: Format 1 additional fields are not supported yet.\n// ltag is the content of the `ltag' table, such as ['en', 'zh-Hans', 'de-CH-1904'].\nfunction parseNameTable(data, start, ltag) {\n    var name = {};\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    var count = p.parseUShort();\n    var stringOffset = p.offset + p.parseUShort();\n    for (var i = 0; i < count; i++) {\n        var platformID = p.parseUShort();\n        var encodingID = p.parseUShort();\n        var languageID = p.parseUShort();\n        var nameID = p.parseUShort();\n        var property = nameTableNames[nameID] || nameID;\n        var byteLength = p.parseUShort();\n        var offset = p.parseUShort();\n        var language = getLanguageCode(platformID, languageID, ltag);\n        var encoding = getEncoding(platformID, encodingID, languageID);\n        if (encoding !== undefined && language !== undefined) {\n            var text;\n            if (encoding === utf16) {\n                text = decode.UTF16(data, stringOffset + offset, byteLength);\n            } else {\n                text = decode.MACSTRING(data, stringOffset + offset, byteLength, encoding);\n            }\n\n            if (text) {\n                var translations = name[property];\n                if (translations === undefined) {\n                    translations = name[property] = {};\n                }\n\n                translations[language] = text;\n            }\n        }\n    }\n\n    var langTagCount = 0;\n    if (format === 1) {\n        // FIXME: Also handle Microsoft's 'name' table 1.\n        langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\n// {23: 'foo'} → {'foo': 23}\n// ['bar', 'baz'] → {'bar': 0, 'baz': 1}\nfunction reverseDict(dict) {\n    var result = {};\n    for (var key in dict) {\n        result[dict[key]] = parseInt(key);\n    }\n\n    return result;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Table('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\n// Finds the position of needle in haystack, or -1 if not there.\n// Like String.indexOf(), but for arrays.\nfunction findSubArray(needle, haystack) {\n    var needleLength = needle.length;\n    var limit = haystack.length - needleLength + 1;\n\n    loop:\n    for (var pos = 0; pos < limit; pos++) {\n        for (; pos < limit; pos++) {\n            for (var k = 0; k < needleLength; k++) {\n                if (haystack[pos + k] !== needle[k]) {\n                    continue loop;\n                }\n            }\n\n            return pos;\n        }\n    }\n\n    return -1;\n}\n\nfunction addStringToPool(s, pool) {\n    var offset = findSubArray(s, pool);\n    if (offset < 0) {\n        offset = pool.length;\n        for (var i = 0, len = s.length; i < len; ++i) {\n            pool.push(s[i]);\n        }\n\n    }\n\n    return offset;\n}\n\nfunction makeNameTable(names, ltag) {\n    var nameID;\n    var nameIDs = [];\n\n    var namesWithNumericKeys = {};\n    var nameTableIds = reverseDict(nameTableNames);\n    for (var key in names) {\n        var id = nameTableIds[key];\n        if (id === undefined) {\n            id = key;\n        }\n\n        nameID = parseInt(id);\n        namesWithNumericKeys[nameID] = names[key];\n        nameIDs.push(nameID);\n    }\n\n    var macLanguageIds = reverseDict(macLanguages);\n    var windowsLanguageIds = reverseDict(windowsLanguages);\n\n    var nameRecords = [];\n    var stringPool = [];\n\n    for (var i = 0; i < nameIDs.length; i++) {\n        nameID = nameIDs[i];\n        var translations = namesWithNumericKeys[nameID];\n        for (var lang in translations) {\n            var text = translations[lang];\n\n            // For MacOS, we try to emit the name in the form that was introduced\n            // in the initial version of the TrueType spec (in the late 1980s).\n            // However, this can fail for various reasons: the requested BCP 47\n            // language code might not have an old-style Mac equivalent;\n            // we might not have a codec for the needed character encoding;\n            // or the name might contain characters that cannot be expressed\n            // in the old-style Macintosh encoding. In case of failure, we emit\n            // the name in a more modern fashion (Unicode encoding with BCP 47\n            // language tags) that is recognized by MacOS 10.5, released in 2009.\n            // If fonts were only read by operating systems, we could simply\n            // emit all names in the modern form; this would be much easier.\n            // However, there are many applications and libraries that read\n            // 'name' tables directly, and these will usually only recognize\n            // the ancient form (silently skipping the unrecognized names).\n            var macPlatform = 1;  // Macintosh\n            var macLanguage = macLanguageIds[lang];\n            var macScript = macLanguageToScript[macLanguage];\n            var macEncoding = getEncoding(macPlatform, macScript, macLanguage);\n            var macName = encode.MACSTRING(text, macEncoding);\n            if (macName === undefined) {\n                macPlatform = 0;  // Unicode\n                macLanguage = ltag.indexOf(lang);\n                if (macLanguage < 0) {\n                    macLanguage = ltag.length;\n                    ltag.push(lang);\n                }\n\n                macScript = 4;  // Unicode 2.0 and later\n                macName = encode.UTF16(text);\n            }\n\n            var macNameOffset = addStringToPool(macName, stringPool);\n            nameRecords.push(makeNameRecord(macPlatform, macScript, macLanguage,\n                                            nameID, macName.length, macNameOffset));\n\n            var winLanguage = windowsLanguageIds[lang];\n            if (winLanguage !== undefined) {\n                var winName = encode.UTF16(text);\n                var winNameOffset = addStringToPool(winName, stringPool);\n                nameRecords.push(makeNameRecord(3, 1, winLanguage,\n                                                nameID, winName.length, winNameOffset));\n            }\n        }\n    }\n\n    nameRecords.sort(function(a, b) {\n        return ((a.platformID - b.platformID) ||\n                (a.encodingID - b.encodingID) ||\n                (a.languageID - b.languageID) ||\n                (a.nameID - b.nameID));\n    });\n\n    var t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: nameRecords.length},\n        {name: 'stringOffset', type: 'USHORT', value: 6 + nameRecords.length * 12}\n    ]);\n\n    for (var r = 0; r < nameRecords.length; r++) {\n        t.fields.push({name: 'record_' + r, type: 'TABLE', value: nameRecords[r]});\n    }\n\n    t.fields.push({name: 'strings', type: 'LITERAL', value: stringPool});\n    return t;\n}\n\nexports.parse = parseNameTable;\nexports.make = makeNameTable;\n\n},{\"../parse\":9,\"../table\":11,\"../types\":28}],25:[function(require,module,exports){\n// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\nvar unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (var i = 0; i < unicodeRanges.length; i += 1) {\n        var range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {};\n    var p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.unicodeRanges = unicodeRanges;\nexports.getUnicodeRange = getUnicodeRange;\nexports.parse = parseOS2Table;\nexports.make = makeOS2Table;\n\n},{\"../parse\":9,\"../table\":11}],26:[function(require,module,exports){\n// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {};\n    var p = new parse.Parser(data, start);\n    var i;\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n    case 1:\n        post.names = encoding.standardNames.slice();\n        break;\n    case 2:\n        post.numberOfGlyphs = p.parseUShort();\n        post.glyphNameIndex = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.glyphNameIndex[i] = p.parseUShort();\n        }\n\n        post.names = [];\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n                var nameLength = p.parseChar();\n                post.names.push(p.parseString(nameLength));\n            }\n        }\n\n        break;\n    case 2.5:\n        post.numberOfGlyphs = p.parseUShort();\n        post.offset = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.offset[i] = p.parseChar();\n        }\n\n        break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexports.parse = parsePostTable;\nexports.make = makePostTable;\n\n},{\"../encoding\":4,\"../parse\":9,\"../table\":11}],27:[function(require,module,exports){\n// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\n'use strict';\n\nvar check = require('../check');\nvar table = require('../table');\n\nvar cmap = require('./cmap');\nvar cff = require('./cff');\nvar head = require('./head');\nvar hhea = require('./hhea');\nvar hmtx = require('./hmtx');\nvar ltag = require('./ltag');\nvar maxp = require('./maxp');\nvar _name = require('./name');\nvar os2 = require('./os2');\nvar post = require('./post');\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    var sum = 0;\n    for (var i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Table('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    var sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    var recordFields = [];\n    var tableFields = [];\n\n    var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (var i = 0; i < tables.length; i += 1) {\n        var t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        var tableLength = t.sizeOf();\n        var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (var i = 0; i < chars.length; i += 1) {\n        var glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            var glyph = font.glyphs.get(glyphIndex);\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    var sum = 0;\n    for (var i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    var xMins = [];\n    var yMins = [];\n    var xMaxs = [];\n    var yMaxs = [];\n    var advanceWidths = [];\n    var leftSideBearings = [];\n    var rightSideBearings = [];\n    var firstCharIndex;\n    var lastCharIndex = 0;\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n\n    for (var i = 0; i < font.glyphs.length; i += 1) {\n        var glyph = font.glyphs.get(i);\n        var unicode = glyph.unicode | 0;\n        if (firstCharIndex > unicode || firstCharIndex === null) {\n            firstCharIndex = unicode;\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        var position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        var metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    var globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n    globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\n    var headTable = head.make({\n        flags: 3, // 00000011 (baseline for font at y=0; left sidebearing point at x=0)\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax,\n        lowestRecPPEM: 3\n    });\n\n    var hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    var maxpTable = maxp.make(font.glyphs.length);\n\n    var os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: 500, // Medium FIXME Make this configurable\n        usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        fsSelection: 64, // REGULAR\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.yMax,\n        usWinDescent: Math.abs(globals.yMin),\n        ulCodePageRange1: 1, // FIXME: hard-code Latin 1 support for now\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: Math.round(globals.ascender / 2)}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usDefaultChar: font.hasChar(' ') ? 32 : 0, // Use space as the default character, if available.\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n    var hmtxTable = hmtx.make(font.glyphs);\n    var cmapTable = cmap.make(font.glyphs);\n\n    var englishFamilyName = font.getEnglishName('fontFamily');\n    var englishStyleName = font.getEnglishName('fontSubfamily');\n    var englishFullName = englishFamilyName + ' ' + englishStyleName;\n    var postScriptName = font.getEnglishName('postScriptName');\n    if (!postScriptName) {\n        postScriptName = englishFamilyName.replace(/\\s/g, '') + '-' + englishStyleName;\n    }\n\n    var names = {};\n    for (var n in font.names) {\n        names[n] = font.names[n];\n    }\n\n    if (!names.uniqueID) {\n        names.uniqueID = {en: font.getEnglishName('manufacturer') + ':' + englishFullName};\n    }\n\n    if (!names.postScriptName) {\n        names.postScriptName = {en: postScriptName};\n    }\n\n    if (!names.preferredFamily) {\n        names.preferredFamily = font.names.fontFamily;\n    }\n\n    if (!names.preferredSubfamily) {\n        names.preferredSubfamily = font.names.fontSubfamily;\n    }\n\n    var languageTags = [];\n    var nameTable = _name.make(names, languageTags);\n    var ltagTable = (languageTags.length > 0 ? ltag.make(languageTags) : undefined);\n\n    var postTable = post.make();\n    var cffTable = cff.make(font.glyphs, {\n        version: font.getEnglishName('version'),\n        fullName: englishFullName,\n        familyName: englishFamilyName,\n        weightName: englishStyleName,\n        postScriptName: postScriptName,\n        unitsPerEm: font.unitsPerEm,\n        fontBBox: [0, globals.yMin, globals.ascender, globals.advanceWidthMax]\n    });\n\n    // The order does not matter because makeSfntTable() will sort them.\n    var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n    if (ltagTable) {\n        tables.push(ltagTable);\n    }\n\n    var sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    var bytes = sfntTable.encode();\n    var checkSum = computeCheckSum(bytes);\n    var tableFields = sfntTable.fields;\n    var checkSumAdjusted = false;\n    for (i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexports.computeCheckSum = computeCheckSum;\nexports.make = makeSfntTable;\nexports.fontToTable = fontToSfntTable;\n\n},{\"../check\":2,\"../table\":11,\"./cff\":12,\"./cmap\":13,\"./head\":17,\"./hhea\":18,\"./hmtx\":19,\"./ltag\":22,\"./maxp\":23,\"./name\":24,\"./os2\":25,\"./post\":26}],28:[function(require,module,exports){\n// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = require('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\nvar decode = {};\nvar encode = {};\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n// Convert an 8-bit unsigned integer to a list of 1 byte.\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert a 8-bit signed integer to a list of 1 byte.\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\nsizeOf.CHAR = constant(1);\n\n// Convert an ASCII string to a list of bytes.\nencode.CHARARRAY = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n// Convert a 16-bit unsigned integer to a list of 2 bytes.\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.USHORT = constant(2);\n\n// Convert a 16-bit signed integer to a list of 2 bytes.\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.SHORT = constant(2);\n\n// Convert a 24-bit unsigned integer to a list of 3 bytes.\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.UINT24 = constant(3);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.ULONG = constant(4);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n// FIXME Implement LONGDATETIME\nencode.LONGDATETIME = function() {\n    return [0, 0, 0, 0, 0, 0, 0, 0];\n};\n\nsizeOf.LONGDATETIME = constant(8);\n\n// Convert a 4-char tag to a list of 4 bytes.\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n// Convert a signed number between -32768 and +32767 to a three-byte value.\n// This ensures we always use three bytes, but is not the most compact format.\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER16 = constant(3);\n\n// Convert a signed number between -(2^31) and +(2^31-1) to a five-byte value.\n// This is useful if you want to be sure you always use four bytes,\n// at the expense of wasting a few bytes for smaller numbers.\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER32 = constant(5);\n\nencode.REAL = function(v) {\n    var value = v.toString();\n\n    // Some numbers use an epsilon to encode the value. (e.g. JavaScript will store 0.0000001 as 1e-7)\n    // This code converts it back to a number without the epsilon.\n    var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n    if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(v * epsilon) / epsilon).toString();\n    }\n\n    var nibbles = '';\n    var i;\n    var ii;\n    for (i = 0, ii = value.length; i < ii; i += 1) {\n        var c = value[i];\n        if (c === 'e') {\n            nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (c === '.') {\n            nibbles += 'a';\n        } else if (c === '-') {\n            nibbles += 'e';\n        } else {\n            nibbles += c;\n        }\n    }\n\n    nibbles += (nibbles.length & 1) ? 'f' : 'ff';\n    var out = [30];\n    for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n    }\n\n    return out;\n};\n\nsizeOf.REAL = function(v) {\n    return encode.REAL(v).length;\n};\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\ndecode.UTF16 = function(data, offset, numBytes) {\n    var codePoints = [];\n    var numChars = numBytes / 2;\n    for (var j = 0; j < numChars; j++, offset += 2) {\n        codePoints[j] = data.getUint16(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n// Convert a JavaScript string to UTF16-BE.\nencode.UTF16 = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        var codepoint = v.charCodeAt(i);\n        b.push((codepoint >> 8) & 0xFF);\n        b.push(codepoint & 0xFF);\n    }\n\n    return b;\n};\n\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Data for converting old eight-bit Macintosh encodings to Unicode.\n// This representation is optimized for decoding; encoding is slower\n// and needs more memory. The assumption is that all opentype.js users\n// want to open fonts, but saving a font will be comperatively rare\n// so it can be more expensive. Keyed by IANA character set name.\n//\n// Python script for generating these strings:\n//\n//     s = u''.join([chr(c).decode('mac_greek') for c in range(128, 256)])\n//     print(s.encode('utf-8'))\nvar eightBitMacEncodings = {\n    'x-mac-croatian':  // Python: 'mac_croatian'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø' +\n        '¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ',\n    'x-mac-cyrillic':  // Python: 'mac_cyrillic'\n        'АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњ' +\n        'јЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю',\n    'x-mac-gaelic':\n        // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/GAELIC.TXT\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæø' +\n        'ṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ',\n    'x-mac-greek':  // Python: 'mac_greek'\n        'Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩ' +\n        'άΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\\u00AD',\n    'x-mac-icelandic':  // Python: 'mac_iceland'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n        '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-inuit':\n        // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/INUIT.TXT\n        'ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗ' +\n        'ᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł',\n    'x-mac-ce':  // Python: 'mac_latin2'\n        'ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅ' +\n        'ņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ',\n    macintosh:  // Python: 'mac_roman'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n        '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-romanian':  // Python: 'mac_romanian'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș' +\n        '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-turkish':  // Python: 'mac_turkish'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n        '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ'\n};\n\n// Decodes an old-style Macintosh string. Returns either a Unicode JavaScript\n// string, or 'undefined' if the encoding is unsupported. For example, we do\n// not support Chinese, Japanese or Korean because these would need large\n// mapping tables.\ndecode.MACSTRING = function(dataView, offset, dataLength, encoding) {\n    var table = eightBitMacEncodings[encoding];\n    if (table === undefined) {\n        return undefined;\n    }\n\n    var result = '';\n    for (var i = 0; i < dataLength; i++) {\n        var c = dataView.getUint8(offset + i);\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c <= 0x7F) {\n            result += String.fromCharCode(c);\n        } else {\n            result += table[c & 0x7F];\n        }\n    }\n\n    return result;\n};\n\n// Helper function for encode.MACSTRING. Returns a dictionary for mapping\n// Unicode character codes to their 8-bit MacOS equivalent. This table\n// is not exactly a super cheap data structure, but we do not care because\n// encoding Macintosh strings is only rarely needed in typical applications.\nvar macEncodingTableCache = typeof WeakMap === 'function' && new WeakMap();\nvar macEncodingCacheKeys;\nvar getMacEncodingTable = function(encoding) {\n    // Since we use encoding as a cache key for WeakMap, it has to be\n    // a String object and not a literal. And at least on NodeJS 2.10.1,\n    // WeakMap requires that the same String instance is passed for cache hits.\n    if (!macEncodingCacheKeys) {\n        macEncodingCacheKeys = {};\n        for (var e in eightBitMacEncodings) {\n            /*jshint -W053 */  // Suppress \"Do not use String as a constructor.\"\n            macEncodingCacheKeys[e] = new String(e);\n        }\n    }\n\n    var cacheKey = macEncodingCacheKeys[encoding];\n    if (cacheKey === undefined) {\n        return undefined;\n    }\n\n    // We can't do \"if (cache.has(key)) {return cache.get(key)}\" here:\n    // since garbage collection may run at any time, it could also kick in\n    // between the calls to cache.has() and cache.get(). In that case,\n    // we would return 'undefined' even though we do support the encoding.\n    if (macEncodingTableCache) {\n        var cachedTable = macEncodingTableCache.get(cacheKey);\n        if (cachedTable !== undefined) {\n            return cachedTable;\n        }\n    }\n\n    var decodingTable = eightBitMacEncodings[encoding];\n    if (decodingTable === undefined) {\n        return undefined;\n    }\n\n    var encodingTable = {};\n    for (var i = 0; i < decodingTable.length; i++) {\n        encodingTable[decodingTable.charCodeAt(i)] = i + 0x80;\n    }\n\n    if (macEncodingTableCache) {\n        macEncodingTableCache.set(cacheKey, encodingTable);\n    }\n\n    return encodingTable;\n};\n\n// Encodes an old-style Macintosh string. Returns a byte array upon success.\n// If the requested encoding is unsupported, or if the input string contains\n// a character that cannot be expressed in the encoding, the function returns\n// 'undefined'.\nencode.MACSTRING = function(str, encoding) {\n    var table = getMacEncodingTable(encoding);\n    if (table === undefined) {\n        return undefined;\n    }\n\n    var result = [];\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c >= 0x80) {\n            c = table[c];\n            if (c === undefined) {\n                // str contains a Unicode character that cannot be encoded\n                // in the requested encoding.\n                return undefined;\n            }\n        }\n\n        result.push(c);\n    }\n\n    return result;\n};\n\nsizeOf.MACSTRING = function(str, encoding) {\n    var b = encode.MACSTRING(str, encoding);\n    if (b !== undefined) {\n        return b.length;\n    } else {\n        return 0;\n    }\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\nencode.INDEX = function(l) {\n    var i;\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    dataSize, i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    var offset = 1; // First offset is always 1.\n    var offsets = [offset];\n    var data = [];\n    var dataSize = 0;\n    for (i = 0; i < l.length; i += 1) {\n        var v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        dataSize += v.length;\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    var encodedOffsets = [];\n    var offSize = (1 + Math.floor(Math.log(dataSize) / Math.log(2)) / 8) | 0;\n    var offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        var encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n// Convert an object to a CFF DICT structure.\n// The keys should be numeric.\n// The values should be objects containing name / type / value.\nencode.DICT = function(m) {\n    var d = [];\n    var keys = Object.keys(m);\n    var length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\nencode.OPERAND = function(v, type) {\n    var d = [];\n    if (Array.isArray(type)) {\n        for (var i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else if (type === 'number') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'real') {\n            d = d.concat(encode.REAL(v));\n        } else {\n            throw new Error('Unknown operand type ' + type);\n            // FIXME Add support for booleans\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n// Convert a list of CharString operations to bytes.\nencode.CHARSTRING = function(ops) {\n    // See encode.MACSTRING for why we don't do \"if (wmm && wmm.has(ops))\".\n    if (wmm) {\n        var cachedValue = wmm.get(ops);\n        if (cachedValue !== undefined) {\n            return cachedValue;\n        }\n    }\n\n    var d = [];\n    var length = ops.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n// Convert an object containing name / type / value to bytes.\nencode.OBJECT = function(v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\nsizeOf.OBJECT = function(v) {\n    var sizeOfFunction = sizeOf[v.type];\n    check.argument(sizeOfFunction !== undefined, 'No sizeOf function for type ' + v.type);\n    return sizeOfFunction(v.value);\n};\n\n// Convert a table object to bytes.\n// A table contains a list of fields containing the metadata (name, type and default value).\n// The table itself has the field values set as attributes.\nencode.TABLE = function(table) {\n    var d = [];\n    var length = table.fields.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        var bytes = encodingFunction(value);\n        d = d.concat(bytes);\n    }\n\n    return d;\n};\n\nsizeOf.TABLE = function(table) {\n    var numBytes = 0;\n    var length = table.fields.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var sizeOfFunction = sizeOf[field.type];\n        check.argument(sizeOfFunction !== undefined, 'No sizeOf function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        numBytes += sizeOfFunction(value);\n    }\n\n    return numBytes;\n};\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n\n},{\"./check\":2}],29:[function(require,module,exports){\n'use strict';\n\nexports.isBrowser = function() {\n    return typeof window !== 'undefined';\n};\n\nexports.isNode = function() {\n    return typeof window === 'undefined';\n};\n\nexports.nodeBufferToArrayBuffer = function(buffer) {\n    var ab = new ArrayBuffer(buffer.length);\n    var view = new Uint8Array(ab);\n    for (var i = 0; i < buffer.length; ++i) {\n        view[i] = buffer[i];\n    }\n\n    return ab;\n};\n\nexports.arrayBufferToNodeBuffer = function(ab) {\n    var buffer = new Buffer(ab.byteLength);\n    var view = new Uint8Array(ab);\n    for (var i = 0; i < buffer.length; ++i) {\n        buffer[i] = view[i];\n    }\n\n    return buffer;\n};\n\nexports.checkArgument = function(expression, message) {\n    if (!expression) {\n        throw message;\n    }\n};\n\n},{}]},{},[8])(8)\n});\n},{}],3:[function(require,module,exports){\n/*!\n * Paper.js v0.9.25 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Wed Dec 9 17:33:02 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\n\t\t  var noCanvas =\n\t\t\t  ( typeof process === 'object' && process.browser !== true ) ||\n\t\t\t  ( typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope );\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && (!exclude || !exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tctor.prototype = create(this.prototype);\n\t\t\tctor.base = base;\n\t\t\tdefine(ctor.prototype, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\treturn arguments.length ? this.inject.apply(ctor, arguments) : ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function() {\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\t\tif (arguments[i] !== undefined)\n\t\t\t\t\t\treturn arguments[i];\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar keys = Object.keys(props._filtering || props);\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tif (!(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (obj1 && obj2\n\t\t\t\t\t&& typeof obj1 === 'object' && typeof obj2 === 'object') {\n\t\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\t\tvar length = obj1.length;\n\t\t\t\t\tif (length !== obj2.length)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\tif (!Base.equals(obj1[length], obj2[length]))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar keys = Object.keys(obj1),\n\t\t\t\t\t\tlength = keys.length;\n\t\t\t\t\tif (length !== Object.keys(obj2).length)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\tvar key = keys[length];\n\t\t\t\t\t\tif (!(obj2.hasOwnProperty(key)\n\t\t\t\t\t\t\t\t&& Base.equals(obj1[key], obj2[key])))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tvar keys = Object.keys(obj);\n\t\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\t\tvar key = keys[i];\n\t\t\t\t\tres[key] = Base.serialize(obj[key], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\t}\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data, _isDictionary) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (json.length == 1 && /^#/.test(type))\n\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\ttype = Base.exports[type];\n\t\t\t\tres = [];\n\t\t\t\tif (_isDictionary)\n\t\t\t\t\t_data.dictionary = res;\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data,\n\t\t\t\t\t\t\tisDictionary));\n\t\t\t\tif (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tif (_isDictionary)\n\t\t\t\t\t_data.dictionary = res;\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar types = this._eventTypes,\n\t\t\t\tentry = types && types[type],\n\t\t\t\thandlers = this._callbacks = this._callbacks || {};\n\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\thandlers.push(func);\n\t\t\t\tif (entry && entry.install && handlers.length === 1)\n\t\t\t\t\tentry.install.call(this, type);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar types = this._eventTypes,\n\t\t\tentry = types && types[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry && entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\thandlers = handlers.slice();\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false) {\n\t\t\t\tif (event && event.stop)\n\t\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar types = this._eventTypes,\n\t\t\t\t\tentry = types && types[type],\n\t\t\t\t\tfunc = entry && entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif ( noCanvas ) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar agent = navigator.userAgent.toLowerCase(),\n\t\t\t\tplatform = (/(win)/.exec(agent)\n\t\t\t\t\t\t|| /(mac)/.exec(agent)\n\t\t\t\t\t\t|| /(linux)/.exec(agent)\n\t\t\t\t\t\t|| [])[0],\n\t\t\t\tbrowser = proto.browser = { platform: platform };\n\t\t\tif (platform)\n\t\t\t\tbrowser[platform] = true;\n\t\t\tagent.replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: \"0.9.25\",\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = Base.pick(precision, 5);\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\tfunction clip(value, min, max) {\n\t\treturn value < min ? min : value > max ? max : value;\n\t}\n\n\treturn {\n\t\tTOLERANCE: 1e-6,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tCURVETIME_EPSILON: 4e-7,\n\t\tGEOMETRIC_EPSILON: 2e-7,\n\t\tWINDING_EPSILON: 2e-7,\n\t\tTRIGONOMETRIC_EPSILON: 1e-7,\n\t\tCLIPPING_EPSILON: 1e-7,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn val >= -EPSILON && val <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\teMin = min - EPSILON,\n\t\t\t\teMax = max + EPSILON,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= -2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (D !== 0 && abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar gmC = pow(abs(a * b * c), 1 / 3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\tvar mult = pow(10,\n\t\t\t\t\t\t\tabs(Math.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\tif (abs(B) < EPSILON)\n\t\t\t\t\treturn abs(c) < EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else if (D >= -MACHINE_EPSILON) {\n\t\t\t\tvar Q = D < 0 ? 0 : sqrt(D),\n\t\t\t\t\tR = b + (b < 0 ? -Q : Q);\n\t\t\t\tif (R === 0) {\n\t\t\t\t\tx1 = c / a;\n\t\t\t\t\tx2 = -x1;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = R / a;\n\t\t\t\t\tx2 = c / R;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 > eMin && x1 < eMax))\n\t\t\t\troots[count++] = min == null ? x1 : clip(x1, min, max);\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 > eMin && x2 < eMax))\n\t\t\t\troots[count++] = min == null ? x2 : clip(x2, min, max);\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx, b1, c2;\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (abs(d) < EPSILON) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x;\n\t\t\t\tb1 = tmp + b;\n\t\t\t\tc2 = b1 * x + c;\n\t\t\t\tqd = (tmp + b1) * x + c2;\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x;\n\t\t\t\t\t\tb1 = tmp + b;\n\t\t\t\t\t\tc2 = b1 * x + c;\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2;\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x > min - EPSILON && x < max + EPSILON))\n\t\t\t\troots[count++] = min == null ? x : clip(x, min, max);\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar UID = {\n\t_id: 1,\n\t_pools: {},\n\n\tget: function(ctor) {\n\t\tif (ctor) {\n\t\t\tvar name = ctor._class,\n\t\t\t\tpool = this._pools[name];\n\t\t\tif (!pool)\n\t\t\t\tpool = this._pools[name] = { _id: 1 };\n\t\t\treturn pool._id++;\n\t\t} else {\n\t\t\treturn this._id++;\n\t\t}\n\t}\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * cos - point.y * sin,\n\t\t\tpoint.x * sin + point.y * cos\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\ttolerance = Base.read(arguments);\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisCollinear: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isCollinear(this.x, this.y, point.x, point.y);\n\t},\n\n\tisColinear: '#isCollinear',\n\n\tisOrthogonal: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isOrthogonal(this.x, this.y, point.x, point.y);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tscale = point.isZero() ? 0 : this.dot(point) / point.dot(point);\n\t\treturn new Point(\n\t\t\tpoint.x * scale,\n\t\t\tpoint.y * scale\n\t\t);\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t},\n\n\t\tisCollinear: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * y2 - y1 * x2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-7;\n\t\t},\n\n\t\tisOrthogonal: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * x2 + y1 * y2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-7;\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n},\nnew function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = min.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point, isInfinite) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true, isInfinite);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tisCollinear: function(line) {\n\t\treturn Point.isCollinear(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tisOrthogonal: function(line) {\n\t\treturn Point.isOrthogonal(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tstatics: {\n\t\tintersect: function(p1x, p1y, v1x, v1y, p2x, p2y, v2x, v2y, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tv1x -= p1x;\n\t\t\t\tv1y -= p1y;\n\t\t\t\tv2x -= p2x;\n\t\t\t\tv2y -= p2y;\n\t\t\t}\n\t\t\tvar cross = v1x * v2y - v1y * v2x;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = p1x - p2x,\n\t\t\t\t\tdy = p1y - p2y,\n\t\t\t\t\tu1 = (v2x * dy - v2y * dx) / cross,\n\t\t\t\t\tu2 = (v1x * dy - v1y * dx) / cross,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\tuMin = -epsilon,\n\t\t\t\t\tuMax = 1 + epsilon;\n\t\t\t\tif (isInfinite\n\t\t\t\t\t\t|| uMin < u1 && u1 < uMax && uMin < u2 && u2 < uMax) {\n\t\t\t\t\tif (!isInfinite) {\n\t\t\t\t\t\tu1 = u1 <= 0 ? 0 : u1 >= 1 ? 1 : u1;\n\t\t\t\t\t}\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\tp1x + u1 * v1x,\n\t\t\t\t\t\t\tp1y + u1 * v1y);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector, isInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0 && !isInfinite) {\n\t\t\t\tccw = (v2x * vx + v2x * vx) / (vx * vx + vy * vy);\n\t\t\t\tif (ccw >= 0 && ccw <= 1)\n\t\t\t\t\tccw = 0;\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn vx === 0 ? vy > 0 ? x - px : px - x\n\t\t\t\t : vy === 0 ? vx < 0 ? y - py : py - y\n\t\t\t\t : ((x-px) * vy - (y-py) * vx) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = UID.get();\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = UID.get();\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, project: true, parent: true },\n\t\t\t\t\ttrue);\n\t\treturn hasProps;\n\t},\n\n\t_events: Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\tfunction(name) {\n\t\t\tthis[name] = {\n\t\t\t\tinstall: function(type) {\n\t\t\t\t\tthis.getView()._installEvent(type);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function(type) {\n\t\t\t\t\tthis.getView()._uninstallEvent(type);\n\t\t\t\t}\n\t\t\t};\n\t\t}, {\n\t\t\tonFrame: {\n\t\t\t\tinstall: function() {\n\t\t\t\t\tthis.getView()._animateItem(this, true);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function() {\n\t\t\t\t\tthis.getView()._animateItem(this, false);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLoad: {}\n\t\t}\n\t),\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length === 0)\n\t\t\treturn new Rectangle();\n\t\tItem._updateBoundsCache(this, cacheItem);\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width !== 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height !== 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tItem._updateBoundsCache(this._parent || this._parentSymbol, cacheItem);\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_updateBoundsCache: function(parent, item) {\n\t\t\tif (parent) {\n\t\t\t\tvar id = item._id,\n\t\t\t\t\tref = parent._boundsCache = parent._boundsCache || {\n\t\t\t\t\t\tids: {},\n\t\t\t\t\t\tlist: []\n\t\t\t\t\t};\n\t\t\t\tif (!ref.ids[id]) {\n\t\t\t\t\tref.list.push(item);\n\t\t\t\t\tref.ids[id] = item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++){\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function() {\n\t\tvar matrix = this._matrix;\n\t\tmatrix.initialize.apply(matrix, arguments);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert, includeMatrix) {\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide'],\n\t\t\tchildren = this._children;\n\t\tcopy.setStyle(this._style);\n\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\tcopy.addChild(children[i].clone(false), true);\n\t\t}\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tif (includeMatrix !== false)\n\t\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy.setApplyMatrix(this._applyMatrix);\n\t\tcopy.setPivot(this._pivot);\n\t\tcopy.setSelected(this._selected);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\tif (!size.isZero()) {\n\t\t\tvar canvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\t\tctx = canvas.getContext('2d'),\n\t\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\t\tctx.save();\n\t\t\tmatrix.applyToContext(ctx);\n\t\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\t\tctx.restore();\n\t\t\traster.setCanvas(canvas);\n\t\t}\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(), null,\n\t\t\t\t_matrix || item._matrix, true).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 1e-6)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tvar type = typeof name;\n\t\tif (type === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (type === 'function') {\n\t\t\treturn name(this);\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param && typeof match === 'object') {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect = bounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: !!inside,\n\t\t\t\t\toverlapping: !!overlapping,\n\t\t\t\t\trect: rect,\n\t\t\t\t\tpath: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param && param.items,\n\t\t\t\trect = param && param.rect;\n\t\t\tmatrix = rect && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (rect) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!rect.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(param.inside && rect.contains(bounds))\n\t\t\t\t\t\t\t&& !(param.overlapping && (bounds.contains(rect)\n\t\t\t\t\t\t\t\t|| param.path.intersects(child, childMatrix))))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisSibling: function(item) {\n\t\treturn this._parent === item._parent;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio || 1,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2,\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = this._clone(new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t}), insert);\n\t\tif (paper.settings.applyMatrix)\n\t\t\tpath.setApplyMatrix(true);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tcrossOrigin: null,\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\tcopy._crossOrigin = this._crossOrigin;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\tcrossOrigin = this._crossOrigin,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\timage = document.getElementById(src) || new Image();\n\t\tif (crossOrigin)\n\t\t\timage.crossOrigin = crossOrigin;\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, { load: loaded });\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetCrossOrigin: function() {\n\t\treturn this._image && this._image.crossOrigin || this._crossOrigin || '';\n\t},\n\n\tsetCrossOrigin: function(crossOrigin) {\n\t\tthis._crossOrigin = crossOrigin;\n\t\tif (this._image)\n\t\t\tthis._image.crossOrigin = crossOrigin;\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL.apply(canvas, arguments) : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif ('point' in arg0) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t? [this._point, this._handleIn, this._handleOut]\n\t\t\t\t: this._point,\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\thasHandles: function() {\n\t\treturn !this._handleIn.isZero() || !this._handleOut.isZero();\n\t},\n\n\tclearHandles: function() {\n\t\tthis._handleIn.set(0, 0);\n\t\tthis._handleOut.set(0, 0);\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn this._index === 0;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._index === path._segments.length - 1 || false;\n\t},\n\n\treverse: function() {\n\t\tvar handleIn = this._handleIn,\n\t\t\thandleOut = this._handleOut,\n\t\t\tinX = handleIn._x,\n\t\t\tinY = handleIn._y;\n\t\thandleIn.set(handleOut._x, handleOut._y);\n\t\thandleOut.set(inX, inY);\n\t},\n\n\treversed: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(segment0, segment1, coef) {\n\t\tvar dxPoint = segment1._point._x - segment0._point._x,\n\t\t\tdyPoint = segment1._point._y - segment0._point._y,\n\t\t\tdxHandleIn = segment1._handleIn._x - segment0._handleIn._x,\n\t\t\tdyHandleIn = segment1._handleIn._y - segment0._handleIn._y,\n\t\t\tdxHandleOut = segment1._handleOut._x - segment0._handleOut._x,\n\t\t\tdyHandleOut = segment1._handleOut._y - segment0._handleOut._y;\n\n\t\tthis._point._x = segment0._point._x + dxPoint * coef;\n\t\tthis._point._y = segment0._point._y + dyPoint * coef;\n\t\tthis._handleIn._x = segment0._handleIn._x + dxHandleIn * coef;\n\t\tthis._handleIn._y = segment0._handleIn._y + dyHandleIn * coef;\n\t\tthis._handleOut._x = segment0._handleOut._x + dxHandleOut * coef;\n\t\tthis._handleOut._y = segment0._handleOut._y + dyHandleOut * coef;\n\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length,\n\t\t\tseg1, seg2,\n\t\t\tpoint1, point2,\n\t\t\thandle1, handle2;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tseg1 = arg1;\n\t\t\tseg2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tseg1 = new Segment();\n\t\t\tseg2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tif ('segment1' in arg0) {\n\t\t\t\tseg1 = new Segment(arg0.segment1);\n\t\t\t\tseg2 = new Segment(arg0.segment2);\n\t\t\t} else if ('point1' in arg0) {\n\t\t\t\tpoint1 = arg0.point1;\n\t\t\t\thandle1 = arg0.handle1;\n\t\t\t\thandle2 = arg0.handle2;\n\t\t\t\tpoint2 = arg0.point2;\n\t\t\t} else if (Array.isArray(arg0)) {\n\t\t\t\tpoint1 = [arg0[0], arg0[1]];\n\t\t\t\tpoint2 = [arg0[6], arg0[7]];\n\t\t\t\thandle1 = [arg0[2] - arg0[0], arg0[3] - arg0[1]];\n\t\t\t\thandle2 = [arg0[4] - arg0[6], arg0[5] - arg0[7]];\n\t\t\t}\n\t\t} else if (count === 2) {\n\t\t\tseg1 = new Segment(arg0);\n\t\t\tseg2 = new Segment(arg1);\n\t\t} else if (count === 4) {\n\t\t\tpoint1 = arg0;\n\t\t\thandle1 = arg1;\n\t\t\thandle2 = arg2;\n\t\t\tpoint2 = arg3;\n\t\t} else if (count === 8) {\n\t\t\tpoint1 = [arg0, arg1];\n\t\t\tpoint2 = [arg6, arg7];\n\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t}\n\t\tthis._segment1 = seg1 || new Segment(point1, null, handle1);\n\t\tthis._segment2 = seg2 || new Segment(point2, handle2, null);\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t? [this.getPoint1(), this.getHandle1(), this.getHandle2(),\n\t\t\t\t\tthis.getPoint2()]\n\t\t\t\t: [this.getPoint1(), this.getPoint2()],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn this._segment1._index === 0;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._segment1._index === path._curves.length - 1\n\t\t\t\t|| false;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null)\n\t\t\tthis._length = Curve.getLength(this.getValues(), 0, 1);\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetLine: function() {\n\t\treturn new Line(this._segment1._point, this._segment2._point);\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve._getIntersections(this.getValues(),\n\t\t\t\tcurve && curve !== this ? curve.getValues() : null,\n\t\t\t\tthis, curve, [], {});\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, _setHandles) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tres = null;\n\t\tif (parameter >= tMin && parameter <= tMax) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1],\n\t\t\t\tsetHandles = _setHandles || this.hasHandles(),\n\t\t\t\tsegment1 = this._segment1,\n\t\t\t\tsegment2 = this._segment2,\n\t\t\t\tpath = this._path;\n\t\t\tif (setHandles) {\n\t\t\t\tsegment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tsegment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\tsetHandles && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\tsetHandles && new Point(right[2] - x, right[3] - y));\n\t\t\tif (path) {\n\t\t\t\tpath.insert(segment1._index + 1, segment);\n\t\t\t\tres = this.getNext();\n\t\t\t} else {\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, segment2);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treversed: function() {\n\t\treturn new Curve(this._segment2.reversed(), this._segment1.reversed());\n\t},\n\n\tclearHandles: function() {\n\t\tthis._segment1._handleOut.set(0, 0);\n\t\tthis._segment2._handleIn.set(0, 0);\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, point) {\n\t\tvar p1 = new Point(v[0], v[1]),\n\t\t\tp2 = new Point(v[6], v[7]),\n\t\t\tepsilon = 1e-12,\n\t\t\tt = point.isClose(p1, epsilon) ? 0\n\t\t\t  : point.isClose(p2, epsilon) ? 1\n\t\t\t  : null;\n\t\tif (t !== null)\n\t\t\treturn t;\n\t\tvar coords = [point.x, point.y],\n\t\t\troots = [],\n\t\t\tgeomEpsilon = 2e-7;\n\t\tfor (var c = 0; c < 2; c++) {\n\t\t\tvar count = Curve.solveCubic(v, c, coords[c], roots, 0, 1);\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tt = roots[i];\n\t\t\t\tif (point.isClose(Curve.getPoint(v, t), geomEpsilon))\n\t\t\t\t\treturn t;\n\t\t\t}\n\t\t}\n\t\treturn point.isClose(p1, geomEpsilon) ? 0\n\t\t\t : point.isClose(p2, geomEpsilon) ? 1\n\t\t\t : null;\n\t},\n\n\tgetNearestParameter: function(v, point) {\n\t\tif (Curve.isStraight(v)) {\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tp2x = v[6], p2y = v[7],\n\t\t\t\tvx = p2x - p1x, vy = p2y - p1y,\n\t\t\t\tdet = vx * vx + vy * vy;\n\t\t\tif (det === 0)\n\t\t\t\treturn 0;\n\t\t\tvar u = ((point.x - p1x) * vx + (point.y - p1y) * vy) / det;\n\t\t\treturn u < 1e-12 ? 0\n\t\t\t\t : u > 0.999999999999 ? 1\n\t\t\t\t : Curve.getParameterOf(v,\n\t\t\t\t\tnew Point(p1x + u * vx, p1y + u * vy));\n\t\t}\n\n\t\tvar count = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(Curve.getPoint(v, t), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 4e-7) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\treturn minT;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tvar flip = from > to;\n\t\tif (flip) {\n\t\t\tvar tmp = from;\n\t\t\tfrom = to;\n\t\t\tto = tmp;\n\t\t}\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn flip\n\t\t\t\t? [v[6], v[7], v[4], v[5], v[2], v[3], v[0], v[1]]\n\t\t\t\t: v;\n\t},\n\n\thasHandles: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn !(isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]));\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\th1x = (v[2] + p1x) / 2,\n\t\t\th1y = (v[3] + p1y) / 2,\n\t\t\th2x = (v[4] + v[6]) / 2,\n\t\t\th2y = (v[5] + v[7]) / 2;\n\t\treturn 6 * ((p1x - h1x) * (h1y + p1y)\n\t\t\t\t  + (h1x - h2x) * (h2y + h1y)\n\t\t\t\t  + (h2x - p2x) * (p2y + h2y)) / 10;\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(\n\t['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tvar path = this._path;\n\t\t\t\tbounds = this._bounds[name] = Path[name](\n\t\t\t\t\t\t[this._segment1, this._segment2], false,\n\t\t\t\t\t\tpath && path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each({\n\tisStraight: function(l, h1, h2) {\n\t\tif (h1.isZero() && h2.isZero()) {\n\t\t\treturn true;\n\t\t} else if (l.isZero()) {\n\t\t\treturn false;\n\t\t} else if (h1.isCollinear(l) && h2.isCollinear(l)) {\n\t\t\tvar div = l.dot(l),\n\t\t\t\tp1 = l.dot(h1) / div,\n\t\t\t\tp2 = l.dot(h2) / div;\n\t\t\treturn p1 >= 0 && p1 <= 1 && p2 <= 0 && p2 >= -1;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisLinear: function(l, h1, h2) {\n\t\tvar third = l.divide(3);\n\t\treturn h1.equals(third) && h2.negate().equals(third);\n\t}\n}, function(test, name) {\n\tthis[name] = function() {\n\t\tvar seg1 = this._segment1,\n\t\t\tseg2 = this._segment2;\n\t\treturn test(seg2._point.subtract(seg1._point),\n\t\t\t\tseg1._handleOut, seg2._handleIn);\n\t};\n\n\tthis.statics[name] = function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn test(new Point(p2x - p1x, p2y - p1y),\n\t\t\t\tnew Point(v[2] - p1x, v[3] - p1y),\n\t\t\t\tnew Point(v[4] - p2x, v[5] - p2y));\n\t};\n}, {\n\tstatics: {},\n\n\thasHandles: function() {\n\t\treturn !this._segment1._handleOut.isZero()\n\t\t\t\t|| !this._segment2._handleIn.isZero();\n\t},\n\n\tisCollinear: function(curve) {\n\t\treturn curve && this.isStraight() && curve.isStraight()\n\t\t\t\t&& this.getLine().isCollinear(curve.getLine());\n\t},\n\n\tisHorizontal: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAt(0.5, true).y)\n\t\t\t\t< 1e-7;\n\t},\n\n\tisVertical: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAt(0.5, true).x)\n\t\t\t\t< 1e-7;\n\t}\n}), {\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\treturn Curve.getParameterOf(this.getValues(), Point.read(arguments));\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar t = isParameter ? offset : this.getParameterAt(offset);\n\t\treturn t != null && t >= 0 && t <= 1\n\t\t\t\t? new CurveLocation(this, t)\n\t\t\t\t: null;\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tt = Curve.getNearestParameter(values, point),\n\t\t\tpt = Curve.getPoint(values, t);\n\t\treturn new CurveLocation(this, t, pt, null, point.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n},\nnew function() {\n\tvar methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent',\n\t\t'getWeightedNormal', 'getCurvature'];\n\treturn Base.each(methods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve[name](values, isParameter ? offset\n\t\t\t\t\t: Curve.getParameterAt(values, offset, 0));\n\t\t};\n\t}, {\n\t\tstatics: {\n\t\t\tevaluateMethods: methods\n\t\t}\n\t});\n},\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\tfunction evaluate(v, t, type, normalized) {\n\t\tif (t == null || t < 0 || t > 1)\n\t\t\treturn null;\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tMin || t > tMax)) {\n\t\t\tvar isZero = t < tMin;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tMin) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > tMax) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (normalized) {\n\t\t\t\t\tif (x === 0 && y === 0 && (t < tMin || t > tMax)) {\n\t\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t\t}\n\t\t\t\t\tvar len = Math.sqrt(x * x + y * y);\n\t\t\t\t\tif (len) {\n\t\t\t\t\t\tx /= len;\n\t\t\t\t\t\ty /= len;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by,\n\t\t\t\t\t\td = Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t\tx = d !== 0 ? (x * y2 - y * x2) / d : 0;\n\t\t\t\t\ty = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t}\n\n\treturn { statics: {\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tif (a === 0 && b === 1 && Curve.isStraight(v)) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0;\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar abs = Math.abs,\n\t\t\t\tforward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (abs(offset - rangeLength) < 1e-12) {\n\t\t\t\treturn forward ? b : a;\n\t\t\t} else if (abs(offset) > rangeLength) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 32,\n\t\t\t\t\t1e-12);\n\t\t},\n\n\t\tgetPoint: function(v, t) {\n\t\t\treturn evaluate(v, t, 0, false);\n\t\t},\n\n\t\tgetTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, true);\n\t\t},\n\n\t\tgetWeightedTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, false);\n\t\t},\n\n\t\tgetNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, true);\n\t\t},\n\n\t\tgetWeightedNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, false);\n\t\t},\n\n\t\tgetCurvature: function(v, t) {\n\t\t\treturn evaluate(v, t, 3, false).x;\n\t\t}\n\t}};\n},\nnew function() {\n\n\tfunction addLocation(locations, param, v1, c1, t1, p1, v2, c2, t2, p2,\n\t\t\toverlap) {\n\t\tvar startConnected = param.startConnected,\n\t\t\tendConnected = param.endConnected,\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (t1 == null)\n\t\t\tt1 = Curve.getParameterOf(v1, p1);\n\t\tif (t1 !== null && t1 >= (startConnected ? tMin : 0) &&\n\t\t\tt1 <= (endConnected ? tMax : 1)) {\n\t\t\tif (t2 == null)\n\t\t\t\tt2 = Curve.getParameterOf(v2, p2);\n\t\t\tif (t2 !== null && t2 >= (endConnected ? tMin : 0) &&\n\t\t\t\tt2 <= (startConnected ? tMax : 1)) {\n\t\t\t\tvar renormalize = param.renormalize;\n\t\t\t\tif (renormalize) {\n\t\t\t\t\tvar res = renormalize(t1, t2);\n\t\t\t\t\tt1 = res[0];\n\t\t\t\t\tt2 = res[1];\n\t\t\t\t}\n\t\t\t\tvar loc1 = new CurveLocation(c1, t1,\n\t\t\t\t\t\tp1 || Curve.getPoint(v1, t1), overlap),\n\t\t\t\t\tloc2 = new CurveLocation(c2, t2,\n\t\t\t\t\t\tp2 || Curve.getPoint(v2, t2), overlap),\n\t\t\t\t\tflip = loc1.getPath() === loc2.getPath()\n\t\t\t\t\t\t&& loc1.getIndex() > loc2.getIndex(),\n\t\t\t\t\tloc = flip ? loc2 : loc1,\n\t\t\t\t\tinclude = param.include;\n\t\t\t\tloc1._intersection = loc2;\n\t\t\t\tloc2._intersection = loc1;\n\t\t\t\tif (!include || include(loc)) {\n\t\t\t\t\tCurveLocation.insert(locations, loc, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addCurveIntersections(v1, v2, c1, c2, locations, param,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (++recursion >= 24)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]),\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]),\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\thull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\ttop = hull[0],\n\t\t\tbottom = hull[1],\n\t\t\ttMinClip,\n\t\t\ttMaxClip;\n\t\tif ((tMinClip = clipConvexHull(top, bottom, dMin, dMax)) == null ||\n\t\t\t(tMaxClip = clipConvexHull(top.reverse(), bottom.reverse(),\n\t\t\t\tdMin, dMax)) == null)\n\t\t\treturn;\n\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\tvar tDiff = tMaxClip - tMinClip,\n\t\t\ttMinNew = tMin + (tMax - tMin) * tMinClip,\n\t\t\ttMaxNew = tMin + (tMax - tMin) * tMaxClip;\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, c2, c1, locations, param,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, c2, c1, locations, param,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew)\n\t\t\t\t< 1e-7) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tv1 = c1.getValues();\n\t\t\tv2 = c2.getValues();\n\t\t\taddLocation(locations, param,\n\t\t\t\treverse ? v2 : v1, reverse ? c2 : c1, reverse ? t2 : t1, null,\n\t\t\t\treverse ? v1 : v2, reverse ? c1 : c2, reverse ? t1 : t2, null);\n\t\t} else if (tDiff > 1e-12) {\n\t\t\taddCurveIntersections(v2, v1, c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tdist1 = dq1 - (2 * dq0 + dq3) / 3,\n\t\t\tdist2 = dq2 - (dq0 + 2 * dq3) / 3,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t} else {\n\t\t\tvar distRatio = dist1 / dist2;\n\t\t\thull = [\n\t\t\t\tdistRatio >= 2 ? [p0, p1, p3]\n\t\t\t\t: distRatio <= 0.5 ? [p0, p2, p3]\n\t\t\t\t: [p0, p1, p2, p3],\n\t\t\t\t[p0, p3]\n\t\t\t];\n\t\t}\n\t\treturn (dist1 || dist2) < 0 ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold) {\n\t\t\t\treturn qy === threshold ? qx\n\t\t\t\t\t\t: px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\t}\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, c1, c2, locations, param) {\n\t\tvar flip = Curve.isStraight(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\tx * sin + y * cos);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tpc = Curve.getPoint(vc, tc),\n\t\t\t\ttl = Curve.getParameterOf(vl, pc);\n\t\t\tif (tl !== null) {\n\t\t\t\tvar pl = Curve.getPoint(vl, tl),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\tif (!param.endConnected || t2 > Numerical.CURVETIME_EPSILON) {\n\t\t\t\t\taddLocation(locations, param,\n\t\t\t\t\t\t\tv1, c1, t1, flip ? pl : pc,\n\t\t\t\t\t\t\tv2, c2, t2, flip ? pc : pl);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, c1, c2, locations, param) {\n\t\tvar pt = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (pt) {\n\t\t\taddLocation(locations, param, v1, c1, null, pt, v2, c2, null, pt);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\t_getIntersections: function(v1, v2, c1, c2, locations, param) {\n\t\t\tif (!v2) {\n\t\t\t\treturn Curve._getSelfIntersection(v1, c1, locations, param);\n\t\t\t}\n\t\t\tvar c1p1x = v1[0], c1p1y = v1[1],\n\t\t\t\tc1p2x = v1[6], c1p2y = v1[7],\n\t\t\t\tc2p1x = v2[0], c2p1y = v2[1],\n\t\t\t\tc2p2x = v2[6], c2p2y = v2[7],\n\t\t\t\tc1s1x = (3 * v1[2] + c1p1x) / 4,\n\t\t\t\tc1s1y = (3 * v1[3] + c1p1y) / 4,\n\t\t\t\tc1s2x = (3 * v1[4] + c1p2x) / 4,\n\t\t\t\tc1s2y = (3 * v1[5] + c1p2y) / 4,\n\t\t\t\tc2s1x = (3 * v2[2] + c2p1x) / 4,\n\t\t\t\tc2s1y = (3 * v2[3] + c2p1y) / 4,\n\t\t\t\tc2s2x = (3 * v2[4] + c2p2x) / 4,\n\t\t\t\tc2s2y = (3 * v2[5] + c2p2y) / 4,\n\t\t\t\tmin = Math.min,\n\t\t\t\tmax = Math.max;\n\t\t\tif (!(\tmax(c1p1x, c1s1x, c1s2x, c1p2x) >=\n\t\t\t\t\tmin(c2p1x, c2s1x, c2s2x, c2p2x) &&\n\t\t\t\t\tmin(c1p1x, c1s1x, c1s2x, c1p2x) <=\n\t\t\t\t\tmax(c2p1x, c2s1x, c2s2x, c2p2x) &&\n\t\t\t\t\tmax(c1p1y, c1s1y, c1s2y, c1p2y) >=\n\t\t\t\t\tmin(c2p1y, c2s1y, c2s2y, c2p2y) &&\n\t\t\t\t\tmin(c1p1y, c1s1y, c1s2y, c1p2y) <=\n\t\t\t\t\tmax(c2p1y, c2s1y, c2s2y, c2p2y)))\n\t\t\t\treturn locations;\n\t\t\tif (!param.startConnected && !param.endConnected) {\n\t\t\t\tvar overlaps = Curve.getOverlaps(v1, v2);\n\t\t\t\tif (overlaps) {\n\t\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\t\tvar overlap = overlaps[i];\n\t\t\t\t\t\taddLocation(locations, param,\n\t\t\t\t\t\t\tv1, c1, overlap[0], null,\n\t\t\t\t\t\t\tv2, c2, overlap[1], null, true);\n\t\t\t\t\t}\n\t\t\t\t\treturn locations;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar straight1 = Curve.isStraight(v1),\n\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\tstraight = straight1 && straight2,\n\t\t\t\tepsilon = 1e-12,\n\t\t\t\tbefore = locations.length;\n\t\t\t(straight\n\t\t\t\t? addLineIntersection\n\t\t\t\t: straight1 || straight2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, param,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (straight && locations.length > before)\n\t\t\t\treturn locations;\n\t\t\tvar c1p1 = new Point(c1p1x, c1p1y),\n\t\t\t\tc1p2 = new Point(c1p2x, c1p2y),\n\t\t\t\tc2p1 = new Point(c2p1x, c2p1y),\n\t\t\t\tc2p2 = new Point(c2p2x, c2p2y);\n\t\t\tif (c1p1.isClose(c2p1, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 0, c1p1, v2, c2, 0, c2p1);\n\t\t\tif (!param.startConnected && c1p1.isClose(c2p2, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 0, c1p1, v2, c2, 1, c2p2);\n\t\t\tif (!param.endConnected && c1p2.isClose(c2p1, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 1, c1p2, v2, c2, 0, c2p1);\n\t\t\tif (c1p2.isClose(c2p2, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 1, c1p2, v2, c2, 1, c2p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\t_getSelfIntersection: function(v1, c1, locations, param) {\n\t\t\tvar p1x = v1[0], p1y = v1[1],\n\t\t\t\th1x = v1[2], h1y = v1[3],\n\t\t\t\th2x = v1[4], h2y = v1[5],\n\t\t\t\tp2x = v1[6], p2y = v1[7];\n\t\t\tvar line = new Line(p1x, p1y, p2x, p2y, false),\n\t\t\t\tside1 = line.getSide(new Point(h1x, h1y), true),\n\t\t\t\tside2 = line.getSide(new Point(h2x, h2y), true);\n\t\t\tif (side1 === side2) {\n\t\t\t\tvar edgeSum = (p1x - h2x) * (h1y - p2y)\n\t\t\t\t\t\t\t+ (h1x - p2x) * (h2y - p1y);\n\t\t\t\tif (edgeSum * side1 > 0)\n\t\t\t\t\treturn locations;\n\t\t\t}\n\t\t\tvar ax = p2x - 3 * h2x + 3 * h1x - p1x,\n\t\t\t\tbx = h2x - 2 * h1x + p1x,\n\t\t\t\tcx = h1x - p1x,\n\t\t\t\tay = p2y - 3 * h2y + 3 * h1y - p1y,\n\t\t\t\tby = h2y - 2 * h1y + p1y,\n\t\t\t\tcy = h1y - p1y,\n\t\t\t\tac = ay * cx - ax * cy,\n\t\t\t\tab = ay * bx - ax * by,\n\t\t\t\tbc = by * cx - bx * cy;\n\t\t\tif (ac * ac - 4 * ab * bc < 0) {\n\t\t\t\tvar roots = [],\n\t\t\t\t\ttSplit,\n\t\t\t\t\tcount = Numerical.solveCubic(\n\t\t\t\t\t\t\tax * ax\t + ay * ay,\n\t\t\t\t\t\t\t3 * (ax * bx + ay * by),\n\t\t\t\t\t\t\t2 * (bx * bx + by * by) + ax * cx + ay * cy,\n\t\t\t\t\t\t\tbx * cx + by * cy,\n\t\t\t\t\t\t\troots, 0, 1);\n\t\t\t\tif (count > 0) {\n\t\t\t\t\tfor (var i = 0, maxCurvature = 0; i < count; i++) {\n\t\t\t\t\t\tvar curvature = Math.abs(\n\t\t\t\t\t\t\t\tc1.getCurvatureAt(roots[i], true));\n\t\t\t\t\t\tif (curvature > maxCurvature) {\n\t\t\t\t\t\t\tmaxCurvature = curvature;\n\t\t\t\t\t\t\ttSplit = roots[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar parts = Curve.subdivide(v1, tSplit);\n\t\t\t\t\tparam.endConnected = true;\n\t\t\t\t\tparam.renormalize = function(t1, t2) {\n\t\t\t\t\t\treturn [t1 * tSplit, t2 * (1 - tSplit) + tSplit];\n\t\t\t\t\t};\n\t\t\t\t\tCurve._getIntersections(parts[0], parts[1], c1, c1,\n\t\t\t\t\t\t\tlocations, param);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn locations;\n\t\t},\n\n\t\tgetOverlaps: function(v1, v2) {\n\t\t\tvar abs = Math.abs,\n\t\t\t\ttimeEpsilon = 4e-7,\n\t\t\t\tgeomEpsilon = 2e-7,\n\t\t\t\tstraight1 = Curve.isStraight(v1),\n\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\tstraight =\tstraight1 && straight2;\n\n\t\t\tfunction getLineLengthSquared(v) {\n\t\t\t\tvar x = v[6] - v[0],\n\t\t\t\t\ty = v[7] - v[1];\n\t\t\t\treturn x * x + y * y;\n\t\t\t}\n\n\t\t\tif (straight) {\n\t\t\t\tvar flip = getLineLengthSquared(v1) < getLineLengthSquared(v2),\n\t\t\t\t\tl1 = flip ? v2 : v1,\n\t\t\t\t\tl2 = flip ? v1 : v2,\n\t\t\t\t\tline = new Line(l1[0], l1[1], l1[6], l1[7]);\n\t\t\t\tif (line.getDistance(new Point(l2[0], l2[1])) > geomEpsilon ||\n\t\t\t\t\tline.getDistance(new Point(l2[6], l2[7])) > geomEpsilon)\n\t\t\t\t\treturn null;\n\t\t\t} else if (straight1 ^ straight2) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar v = [v1, v2],\n\t\t\t\tpairs = [];\n\t\t\tfor (var i = 0, t1 = 0;\n\t\t\t\t\ti < 2 && pairs.length < 2;\n\t\t\t\t\ti += t1 === 0 ? 0 : 1, t1 = t1 ^ 1) {\n\t\t\t\tvar t2 = Curve.getParameterOf(v[i ^ 1], new Point(\n\t\t\t\t\t\tv[i][t1 === 0 ? 0 : 6],\n\t\t\t\t\t\tv[i][t1 === 0 ? 1 : 7]));\n\t\t\t\tif (t2 != null) {\n\t\t\t\t\tvar pair = i === 0 ? [t1, t2] : [t2, t1];\n\t\t\t\t\tif (pairs.length === 0 ||\n\t\t\t\t\t\tabs(pair[0] - pairs[0][0]) > timeEpsilon &&\n\t\t\t\t\t\tabs(pair[1] - pairs[0][1]) > timeEpsilon)\n\t\t\t\t\t\tpairs.push(pair);\n\t\t\t\t}\n\t\t\t\tif (i === 1 && pairs.length === 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (pairs.length !== 2) {\n\t\t\t\tpairs = null;\n\t\t\t} else if (!straight) {\n\t\t\t\tvar o1 = Curve.getPart(v1, pairs[0][0], pairs[1][0]),\n\t\t\t\t\to2 = Curve.getPart(v2, pairs[0][1], pairs[1][1]);\n\t\t\t\tif (abs(o2[2] - o1[2]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[3] - o1[3]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[4] - o1[4]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[5] - o1[5]) > geomEpsilon)\n\t\t\t\t\tpairs = null;\n\t\t\t}\n\t\t\treturn pairs;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point,\n\t\t\t_overlap, _distance) {\n\t\tif (parameter > 0.9999996) {\n\t\t\tvar next = curve.getNext();\n\t\t\tif (next) {\n\t\t\t\tparameter = 0;\n\t\t\t\tcurve = next;\n\t\t\t}\n\t\t}\n\t\tthis._id = UID.get(CurveLocation);\n\t\tthis._setCurve(curve);\n\t\tthis._parameter = parameter;\n\t\tthis._point = point || curve.getPointAt(parameter, true);\n\t\tthis._overlap = _overlap;\n\t\tthis._distance = _distance;\n\t\tthis._intersection = this._next = this._prev = null;\n\t},\n\n\t_setCurve: function(curve) {\n\t\tvar path = curve._path;\n\t\tthis._version = path ? path._version : 0;\n\t\tthis._curve = curve;\n\t\tthis._segment = null;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t},\n\n\t_setSegment: function(segment) {\n\t\tthis._setCurve(segment.getCurve());\n\t\tthis._segment = segment;\n\t\tthis._parameter = segment === this._segment1 ? 0 : 1;\n\t\tthis._point = segment._point.clone();\n\t},\n\n\tgetSegment: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tsegment = this._segment;\n\t\tif (!segment) {\n\t\t\tvar parameter = this.getParameter();\n\t\t\tif (parameter === 0) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (parameter === 1) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else if (parameter != null) {\n\t\t\t\tsegment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tthis._segment = segment;\n\t\t}\n\t\treturn segment;\n\t},\n\n\tgetCurve: function() {\n\t\tvar curve = this._curve,\n\t\t\tpath = curve && curve._path,\n\t\t\tthat = this;\n\t\tif (path && path._version !== this._version) {\n\t\t\tcurve = this._parameter = this._curve = this._offset = null;\n\t\t}\n\n\t\tfunction trySegment(segment) {\n\t\t\tvar curve = segment && segment.getCurve();\n\t\t\tif (curve && (that._parameter = curve.getParameterOf(that._point))\n\t\t\t\t\t!= null) {\n\t\t\t\tthat._setCurve(curve);\n\t\t\t\tthat._segment = segment;\n\t\t\t\treturn curve;\n\t\t\t}\n\t\t}\n\n\t\treturn curve\n\t\t\t|| trySegment(this._segment)\n\t\t\t|| trySegment(this._segment1)\n\t\t\t|| trySegment(this._segment2.getPrevious());\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetParameter: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this._parameter;\n\t\treturn curve && parameter == null\n\t\t\t? this._parameter = curve.getParameterOf(this._point)\n\t\t\t: parameter;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tgetOffset: function() {\n\t\tvar offset = this._offset;\n\t\tif (offset == null) {\n\t\t\toffset = 0;\n\t\t\tvar path = this.getPath(),\n\t\t\t\tindex = this.getIndex();\n\t\t\tif (path && index != null) {\n\t\t\t\tvar curves = path.getCurves();\n\t\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\t\toffset += curves[i].getLength();\n\t\t\t}\n\t\t\tthis._offset = offset += this.getCurveOffset();\n\t\t}\n\t\treturn offset;\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetIntersection: function() {\n\t\treturn this._intersection;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tres = null;\n\t\tif (curve) {\n\t\t\tres = curve.divide(this.getParameter(), true);\n\t\t\tif (res)\n\t\t\t\tthis._setSegment(res._segment1);\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve ? curve.split(this.getParameter(), true) : null;\n\t},\n\n\tequals: function(loc, _ignoreOther) {\n\t\tvar res = this === loc,\n\t\t\tepsilon = 2e-7;\n\t\tif (!res && loc instanceof CurveLocation\n\t\t\t\t&& this.getPath() === loc.getPath()\n\t\t\t\t&& this.getPoint().isClose(loc.getPoint(), epsilon)) {\n\t\t\tvar c1 = this.getCurve(),\n\t\t\t\tc2 = loc.getCurve(),\n\t\t\t\tabs = Math.abs,\n\t\t\t\tdiff = abs(\n\t\t\t\t\t((c1.isLast() && c2.isFirst() ? -1 : c1.getIndex())\n\t\t\t\t\t\t\t+ this.getParameter()) -\n\t\t\t\t\t((c2.isLast() && c1.isFirst() ? -1 : c2.getIndex())\n\t\t\t\t\t\t\t+ loc.getParameter()));\n\t\t\tres = (diff < 4e-7\n\t\t\t\t|| ((diff = abs(this.getOffset() - loc.getOffset())) < epsilon\n\t\t\t\t\t|| abs(this.getPath().getLength() - diff) < epsilon))\n\t\t\t\t&& (_ignoreOther\n\t\t\t\t\t|| (!this._intersection && !loc._intersection\n\t\t\t\t\t\t|| this._intersection && this._intersection.equals(\n\t\t\t\t\t\t\t\tloc._intersection, true)));\n\t\t}\n\t\treturn res;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tisTouching: function() {\n\t\tvar inter = this._intersection;\n\t\tif (inter && this.getTangent().isCollinear(inter.getTangent())) {\n\t\t\tvar curve1 = this.getCurve(),\n\t\t\t\tcurve2 = inter.getCurve();\n\t\t\treturn !(curve1.isStraight() && curve2.isStraight()\n\t\t\t\t\t&& curve1.getLine().intersect(curve2.getLine()));\n\t\t}\n\t\treturn false;\n\t},\n\n\tisCrossing: function() {\n\t\tvar inter = this._intersection;\n\t\tif (!inter)\n\t\t\treturn false;\n\t\tvar t1 = this.getParameter(),\n\t\t\tt2 = inter.getParameter(),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (t1 >= tMin && t1 <= tMax || t2 >= tMin && t2 <= tMax)\n\t\t\treturn !this.isTouching();\n\t\tvar c2 = this.getCurve(),\n\t\t\tc1 = c2.getPrevious(),\n\t\t\tc4 = inter.getCurve(),\n\t\t\tc3 = c4.getPrevious(),\n\t\t\tPI = Math.PI;\n\t\tif (!c1 || !c3)\n\t\t\treturn false;\n\n\t\tfunction isInRange(angle, min, max) {\n\t\t\treturn min < max\n\t\t\t\t? angle > min && angle < max\n\t\t\t\t: angle > min && angle <= PI || angle >= -PI && angle < max;\n\t\t}\n\n\t\tvar a1 = c1.getTangentAt(tMax, true).negate().getAngleInRadians(),\n\t\t\ta2 = c2.getTangentAt(tMin, true).getAngleInRadians(),\n\t\t\ta3 = c3.getTangentAt(tMax, true).negate().getAngleInRadians(),\n\t\t\ta4 = c4.getTangentAt(tMin, true).getAngleInRadians();\n\n\t\treturn (isInRange(a3, a1, a2) ^ isInRange(a4, a1, a2))\n\t\t\t&& (isInRange(a3, a2, a1) ^ isInRange(a4, a2, a1));\n\t},\n\n\tisOverlap: function() {\n\t\treturn !!this._overlap;\n\t}\n}, Base.each(Curve.evaluateMethods, function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {\n\tpreserve: true\n}),\nnew function() {\n\n\tfunction insert(locations, loc, merge) {\n\t\tvar length = locations.length,\n\t\t\tl = 0,\n\t\t\tr = length - 1;\n\n\t\tfunction search(index, dir) {\n\t\t\tfor (var i = index + dir; i >= -1 && i <= length; i += dir) {\n\t\t\t\tvar loc2 = locations[((i % length) + length) % length];\n\t\t\t\tif (!loc.getPoint().isClose(loc2.getPoint(),\n\t\t\t\t\t\t2e-7))\n\t\t\t\t\tbreak;\n\t\t\t\tif (loc.equals(loc2))\n\t\t\t\t\treturn loc2;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (l <= r) {\n\t\t\tvar m = (l + r) >>> 1,\n\t\t\t\tloc2 = locations[m],\n\t\t\t\tfound;\n\t\t\tif (merge && (found = loc.equals(loc2) ? loc2\n\t\t\t\t\t: (search(m, -1) || search(m, 1)))) {\n\t\t\t\tif (loc._overlap) {\n\t\t\t\t\tfound._overlap = found._intersection._overlap = true;\n\t\t\t\t}\n\t\t\t\treturn found;\n\t\t\t}\n\t\tvar path1 = loc.getPath(),\n\t\t\tpath2 = loc2.getPath(),\n\t\t\tdiff = path1 === path2\n\t\t\t\t? (loc.getIndex() + loc.getParameter())\n\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t: path1._id - path2._id;\n\t\t\tif (diff < 0) {\n\t\t\t\tr = m - 1;\n\t\t\t} else {\n\t\t\t\tl = m + 1;\n\t\t\t}\n\t\t}\n\t\tlocations.splice(l, 0, loc);\n\t\treturn loc;\n\t}\n\n\treturn { statics: {\n\t\tinsert: insert,\n\n\t\texpand: function(locations) {\n\t\t\tvar expanded = locations.slice();\n\t\t\tfor (var i = 0, l = locations.length; i < l; i++) {\n\t\t\t\tinsert(expanded, locations[i]._intersection, false);\n\t\t\t}\n\t\t\treturn expanded;\n\t\t}\n\t}};\n});\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, include, _matrix, _returnFirst) {\n\t\tvar self = this === path || !path,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = self ? matrix1\n\t\t\t\t: (_matrix || path._matrix).orNullIfIdentity();\n\t\tif (!self && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tvar curves1 = this.getCurves(),\n\t\t\tcurves2 = self ? curves1 : path.getCurves(),\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = self ? length1 : curves2.length,\n\t\t\tvalues2 = [],\n\t\t\tarrays = [],\n\t\t\tlocations,\n\t\t\tpath;\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = self ? values2[i] : curve1.getValues(matrix1),\n\t\t\t\tpath1 = curve1.getPath();\n\t\t\tif (path1 !== path) {\n\t\t\t\tpath = path1;\n\t\t\t\tlocations = [];\n\t\t\t\tarrays.push(locations);\n\t\t\t}\n\t\t\tif (self) {\n\t\t\t\tCurve._getSelfIntersection(values1, curve1, locations, {\n\t\t\t\t\tinclude: include,\n\t\t\t\t\tstartConnected: length1 === 1 &&\n\t\t\t\t\t\t\tcurve1.getPoint1().equals(curve1.getPoint2())\n\t\t\t\t});\n\t\t\t}\n\t\t\tfor (var j = self ? i + 1 : 0; j < length2; j++) {\n\t\t\t\tif (_returnFirst && locations.length)\n\t\t\t\t\treturn locations;\n\t\t\t\tvar curve2 = curves2[j];\n\t\t\t\tCurve._getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curve2, locations,\n\t\t\t\t\t{\n\t\t\t\t\t\tinclude: include,\n\t\t\t\t\t\tstartConnected: self && curve1.getPrevious() === curve2,\n\t\t\t\t\t\tendConnected: self && curve1.getNext() === curve2\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tlocations = [];\n\t\tfor (var i = 0, l = arrays.length; i < l; i++) {\n\t\t\tlocations.push.apply(locations, arrays[i]);\n\t\t}\n\t\treturn locations;\n\t},\n\n\tgetCrossings: function(path) {\n\t\treturn this.getIntersections(path, function(inter) {\n\t\t\treturn inter.isOverlap() || inter.isCrossing();\n\t\t});\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[0], +coords[1]),\n\t\t\t\t\t\t\t+coords[2], +coords[4], +coords[3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tthis._version = 0;\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._area = this._clockwise = this._monoCurves =\n\t\t\t\t\tundefined;\n\t\t\tif (flags & 16) {\n\t\t\t\tthis._version++;\n\t\t\t} else if (this._curves) {\n\t\t\t   for (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves) {\n\t\t\tvar total = this._countCurves(),\n\t\t\t\tfrom = index > 0 && index + amount - 1 === total ? index - 1\n\t\t\t\t\t: index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, total);\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\thasHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tif (segments[i].hasHandles())\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tclearHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsegments[i].clearHandles();\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tlength = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tlength += curves[i].getLength();\n\t\t\tthis._length = length;\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tif (this._area == null) {\n\t\t\tvar segments = this._segments,\n\t\t\t\tcount = segments.length,\n\t\t\t\tlast = count - 1,\n\t\t\t\tarea = 0;\n\t\t\tfor (var i = 0, l = this._closed ? count : last; i < l; i++) {\n\t\t\t\tarea += Curve.getArea(Curve.getValues(\n\t\t\t\t\t\tsegments[i], segments[i < last ? i + 1 : 0]));\n\t\t\t}\n\t\t\tthis._area = area;\n\t\t}\n\t\treturn this._area;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn this.getArea() >= 0;\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.getPointAt(pos)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (!curve.hasHandles() && (curve.getLength() === 0\n\t\t\t\t\t|| curve.isCollinear(curve.getNext())))\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null;\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (parameter >= tMax) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter >= tMin) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\tpath.insertAbove(this, true);\n\t\t\t\tthis._clone(path);\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first1,\n\t\t\t\tfirst2 = path.getFirstSegment();\n\t\t\tif (last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tfirst1 = this.getFirstSegment();\n\t\t\t\tif (first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path._closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isCollinear(i, j) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\tseg3 = segments[j],\n\t\t\t\tseg4 = seg3.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg3._handleOut.isZero() && seg4._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isCollinear(\n\t\t\t\t\t\tseg4._point.subtract(seg3._point));\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\tvar seg2 = segments[i],\n\t\t\t\tseg1 = seg2.getPrevious(),\n\t\t\t\tseg3 = seg2.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg2._handleOut.isZero() && seg3._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isOrthogonal(\n\t\t\t\t\t\tseg3._point.subtract(seg2._point));\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\thandle1 = seg1._handleOut,\n\t\t\t\thandle2 = seg2._handleIn,\n\t\t\t\tkappa = 0.5522847498307936;\n\t\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\t\tvar pt1 = seg1._point,\n\t\t\t\t\tpt2 = seg2._point,\n\t\t\t\t\tcorner = new Line(pt1, handle1, true).intersect(\n\t\t\t\t\t\t\tnew Line(pt2, handle2, true), true);\n\t\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt1).getLength() - kappa)\n\t\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt2).getLength() - kappa);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (!this.hasHandles() && segments.length === 4\n\t\t\t\t&& isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = this._clone(new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t}), insert, false);\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(Curve.evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset,\n\t\t\t\tcurve = curves[index];\n\t\t\treturn curve ? curve.getLocationAt(offset - index, true) : null;\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (curves.length > 0 && offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}),\nnew function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n},\nnew function() {\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n},\nnew function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < 1e-12)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isCollinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().multiply(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\tvar item = items[i];\n\t\t\tif (item instanceof CompoundPath) {\n\t\t\t\titems.splice.apply(items, [i, 1].concat(item.removeChildren()));\n\t\t\t\titem.remove();\n\t\t\t}\n\t\t}\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tvar children = this._children;\n\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\tvar path = children[i].reduce();\n\t\t\tif (path.isEmpty())\n\t\t\t\tchildren.splice(i, 1);\n\t\t}\n\t\tif (children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t}\n\t\treturn reduce.base.call(this);\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : _matrix, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n},\nnew function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current\n\t\t\t\t\t\t: new Path(Item.NO_INSERT);\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction preparePath(path, resolve) {\n\t\tvar res = path.clone(false).reduce().transform(null, true, true);\n\t\treturn resolve ? res.resolveCrossings().reorient() : res;\n\t}\n\n\tfunction finishBoolean(ctor, paths, path1, path2, reduce) {\n\t\tvar result = new ctor(Item.NO_INSERT);\n\t\tresult.addChildren(paths, true);\n\t\tif (reduce)\n\t\t\tresult = result.reduce();\n\t\tresult.insertAbove(path2 && path1.isSibling(path2)\n\t\t\t\t&& path1.getIndex() < path2.getIndex()\n\t\t\t\t\t? path2 : path1);\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tif (!path1._children && !path1._closed)\n\t\t\treturn computeOpenBoolean(path1, path2, operation);\n\t\tvar _path1 = preparePath(path1, true),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2, true);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tvar crossings = CurveLocation.expand(_path1.getCrossings(_path2));\n\t\tdivideLocations(crossings);\n\n\t\tvar segments = [],\n\t\t\tmonoCurves = [];\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tfor (var i = 0, l = crossings.length; i < l; i++) {\n\t\t\tpropagateWinding(crossings[i]._segment, _path1, _path2, monoCurves,\n\t\t\t\t\toperation);\n\t\t}\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding == null) {\n\t\t\t\tpropagateWinding(segment, _path1, _path2, monoCurves,\n\t\t\t\t\t\toperation);\n\t\t\t}\n\t\t}\n\t\treturn finishBoolean(CompoundPath, tracePaths(segments, operation),\n\t\t\t\tpath1, path2, true);\n\t}\n\n\tfunction computeOpenBoolean(path1, path2, operation) {\n\t\tif (!path2 || !path2._children && !path2._closed\n\t\t\t\t|| !/^(subtract|intersect)$/.test(operation))\n\t\t\treturn null;\n\t\tvar _path1 = preparePath(path1, false),\n\t\t\t_path2 = preparePath(path2, false),\n\t\t\tcrossings = _path1.getCrossings(_path2),\n\t\t\tsub = operation === 'subtract',\n\t\t\tpaths = [];\n\n\t\tfunction addPath(path) {\n\t\t\tif (_path2.contains(path.getPointAt(path.getLength() / 2)) ^ sub) {\n\t\t\t\tpaths.unshift(path);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = crossings.length - 1; i >= 0; i--) {\n\t\t\tvar path = crossings[i].split();\n\t\t\tif (path) {\n\t\t\t\tif (addPath(path))\n\t\t\t\t\tpath.getFirstSegment().setHandleIn(0, 0);\n\t\t\t\t_path1.getLastSegment().setHandleOut(0, 0);\n\t\t\t}\n\t\t}\n\t\taddPath(_path1);\n\t\treturn finishBoolean(Group, paths, path1, path2);\n\t}\n\n\tfunction linkIntersections(from, to) {\n\t\tvar prev = from;\n\t\twhile (prev) {\n\t\t\tif (prev === to)\n\t\t\t\treturn;\n\t\t\tprev = prev._prev;\n\t\t}\n\t\twhile (from._next && from._next !== to)\n\t\t\tfrom = from._next;\n\t\tif (!from._next) {\n\t\t\twhile (to._prev)\n\t\t\t\tto = to._prev;\n\t\t\tfrom._next = to;\n\t\t\tto._prev = from;\n\t\t}\n\t}\n\n\tfunction divideLocations(locations) {\n\t\tvar tMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tnoHandles = false,\n\t\t\tclearSegments = [],\n\t\t\tprevCurve,\n\t\t\tprevT;\n\n\t\tfor (var i = locations.length - 1; i >= 0; i--) {\n\t\t\tvar loc = locations[i],\n\t\t\t\tcurve = loc._curve,\n\t\t\t\tt = loc._parameter,\n\t\t\t\torigT = t;\n\t\t\tif (curve !== prevCurve) {\n\t\t\t\tnoHandles = !curve.hasHandles();\n\t\t\t} else if (prevT > 0) {\n\t\t\t\tt /= prevT;\n\t\t\t}\n\t\t\tvar segment;\n\t\t\tif (t < tMin) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (t > tMax) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else {\n\t\t\t\tsegment = curve.divide(t, true, true)._segment1;\n\t\t\t\tif (noHandles)\n\t\t\t\t\tclearSegments.push(segment);\n\t\t\t}\n\t\t\tloc._setSegment(segment);\n\t\t\tvar inter = segment._intersection,\n\t\t\t\tdest = loc._intersection;\n\t\t\tif (inter) {\n\t\t\t\tlinkIntersections(inter, dest);\n\t\t\t\tvar other = inter;\n\t\t\t\twhile (other) {\n\t\t\t\t\tlinkIntersections(other._intersection, inter);\n\t\t\t\t\tother = other._next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsegment._intersection = dest;\n\t\t\t}\n\t\t\tprevCurve = curve;\n\t\t\tprevT = origT;\n\t\t}\n\t\tfor (var i = 0, l = clearSegments.length; i < l; i++) {\n\t\t\tclearSegments[i].clearHandles();\n\t\t}\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar epsilon = 2e-7,\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - epsilon,\n\t\t\t\tyAfter = py + epsilon;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.getPoint(values, roots[j]).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves, false,\n\t\t\t\t\t\ttestContains);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves, false,\n\t\t\t\t\t\ttestContains);\n\t\t} else {\n\t\t\tvar xBefore = px - epsilon,\n\t\t\t\txAfter = px + epsilon;\n\t\t\tvar startCounted = false,\n\t\t\t\tprevCurve,\n\t\t\t\tprevT;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0];\n\t\t\t\t\tif (!(\n\t\t\t\t\t\tt > tMax && startCounted && curve.next !== curves[i + 1]\n\t\t\t\t\t\t|| t < tMin && prevT > tMax\n\t\t\t\t\t\t\t&& curve.previous === prevCurve)) {\n\t\t\t\t\t\tvar x = Curve.getPoint(values, t).x,\n\t\t\t\t\t\t\tslope = Curve.getTangent(values, t).y,\n\t\t\t\t\t\t\tcounted = false;\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isStraight(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (curve.previous !== curves[i - 1])\n\t\t\t\t\t\t\tstartCounted = t < tMin && counted;\n\t\t\t\t\t}\n\t\t\t\t\tprevCurve = curve;\n\t\t\t\t\tprevT = t;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction propagateWinding(segment, path1, path2, monoCurves, operation) {\n\t\tvar epsilon = 2e-7,\n\t\t\tchain = [],\n\t\t\tstart = segment,\n\t\t\ttotalLength = 0,\n\t\t\twindingSum = 0;\n\t\tdo {\n\t\t\tvar curve = segment.getCurve(),\n\t\t\t\tlength = curve.getLength();\n\t\t\tchain.push({ segment: segment, curve: curve, length: length });\n\t\t\ttotalLength += length;\n\t\t\tsegment = segment.getNext();\n\t\t} while (segment && !segment._intersection && segment !== start);\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tvar length = totalLength * (i + 1) / 4;\n\t\t\tfor (var k = 0, m = chain.length; k < m; k++) {\n\t\t\t\tvar node = chain[k],\n\t\t\t\t\tcurveLength = node.length;\n\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\tif (length < epsilon || curveLength - length < epsilon)\n\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\tvar curve = node.curve,\n\t\t\t\t\t\tpath = curve._path,\n\t\t\t\t\t\tparent = path._parent,\n\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\thor = curve.isHorizontal();\n\t\t\t\t\tif (parent instanceof CompoundPath)\n\t\t\t\t\t\tpath = parent;\n\t\t\t\t\twindingSum += operation === 'subtract' && path2\n\t\t\t\t\t\t&& (path === path1 && path2._getWinding(pt, hor)\n\t\t\t\t\t\t|| path === path2 && !path1._getWinding(pt, hor))\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlength -= curveLength;\n\t\t\t}\n\t\t}\n\t\tvar winding = Math.round(windingSum / 3);\n\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\tchain[j].segment._winding = winding;\n\t}\n\n\tfunction tracePaths(segments, operation) {\n\t\tvar paths = [],\n\t\t\tstart,\n\t\t\totherStart,\n\t\t\toperator = operators[operation],\n\t\t\toverlapWinding = {\n\t\t\t\tunite: { 1: 2 },\n\t\t\t\tintersect: { 2: 1 }\n\t\t\t}[operation];\n\n\t\tfunction isValid(seg, adjusted) {\n\t\t\tif (seg._visited)\n\t\t\t\treturn false;\n\t\t\tif (!operator)\n\t\t\t\treturn true;\n\t\t\tvar winding = seg._winding,\n\t\t\t\tinter = seg._intersection;\n\t\t\tif (inter && adjusted && overlapWinding && inter.isOverlap())\n\t\t\t\twinding = overlapWinding[winding] || winding;\n\t\t\treturn operator(winding);\n\t\t}\n\n\t\tfunction isStart(seg) {\n\t\t\treturn seg === start || seg === otherStart;\n\t\t}\n\n\t\tfunction findBestIntersection(inter, strict) {\n\t\t\tif (!inter._next)\n\t\t\t\treturn inter;\n\t\t\twhile (inter) {\n\t\t\t\tvar seg = inter._segment,\n\t\t\t\t\tnextSeg = seg.getNext(),\n\t\t\t\t\tnextInter = nextSeg._intersection;\n\t\t\t\tif (isStart(nextSeg)\n\t\t\t\t\t|| !seg._visited && !nextSeg._visited\n\t\t\t\t\t&& (!operator\n\t\t\t\t\t\t|| (!strict || isValid(seg))\n\t\t\t\t\t\t&& (!(strict && nextInter && nextInter.isOverlap())\n\t\t\t\t\t\t\t&& isValid(nextSeg)\n\t\t\t\t\t\t\t|| !strict && nextInter\n\t\t\t\t\t\t\t&& isValid(nextInter._segment))\n\t\t\t\t\t))\n\t\t\t\t\treturn inter;\n\t\t\t\tinter = inter._next;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tfunction findStartSegment(inter, next) {\n\t\t\twhile (inter) {\n\t\t\t\tvar seg = inter._segment;\n\t\t\t\tif (isStart(seg))\n\t\t\t\t\treturn seg;\n\t\t\t\tinter = inter[next ? '_next' : '_prev'];\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar seg = segments[i],\n\t\t\t\tpath = null,\n\t\t\t\tfinished = false;\n\t\t\tif (!isValid(seg, true))\n\t\t\t\tcontinue;\n\t\t\tstart = otherStart = null;\n\t\t\twhile (!finished) {\n\t\t\t\tvar inter = seg._intersection,\n\t\t\t\t\thandleIn = path && seg._handleIn;\n\t\t\t\tinter = inter && (findBestIntersection(inter, true)\n\t\t\t\t\t\t|| findBestIntersection(inter, false)) || inter;\n\t\t\t\tvar other = inter && inter._segment;\n\t\t\t\tif (other && isValid(other))\n\t\t\t\t\tseg = other;\n\t\t\t\tif (seg._visited) {\n\t\t\t\t\tfinished = isStart(seg);\n\t\t\t\t\tif (!finished && inter) {\n\t\t\t\t\t\tvar found = findStartSegment(inter, true)\n\t\t\t\t\t\t\t|| findStartSegment(inter, false);\n\t\t\t\t\t\tif (found) {\n\t\t\t\t\t\t\tseg = found;\n\t\t\t\t\t\t\tfinished = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!path) {\n\t\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\t\tstart = seg;\n\t\t\t\t\totherStart = other;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, handleIn, seg._handleOut));\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = seg.getNext();\n\t\t\t\tfinished = isStart(seg);\n\t\t\t}\n\t\t\tif (finished) {\n\t\t\t\tpath.firstSegment.setHandleIn(seg._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else if (path) {\n\t\t\t\tvar length = path.getLength();\n\t\t\t\tif (length >= 2e-7) {\n\t\t\t\t\tconsole.error('Boolean operation resulted in open path',\n\t\t\t\t\t\t\t'segments =', path._segments.length,\n\t\t\t\t\t\t\t'length =', length);\n\t\t\t\t}\n\t\t\t\tpath = null;\n\t\t\t}\n\t\t\tif (path && (path._segments.length > 8\n\t\t\t\t\t|| !Numerical.isZero(path.getArea()))) {\n\t\t\t\tpaths.push(path);\n\t\t\t\tpath = null;\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn finishBoolean(Group,\n\t\t\t\t\t[this.subtract(path), this.intersect(path)],\n\t\t\t\t\tthis, path, true);\n\t\t},\n\n\t\tresolveCrossings: function() {\n\t\t\tvar crossings = this.getCrossings();\n\t\t\tif (!crossings.length)\n\t\t\t\treturn this;\n\t\t\tdivideLocations(CurveLocation.expand(crossings));\n\t\t\tvar paths = this._children || [this],\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tsegments.push.apply(segments, paths[i]._segments);\n\t\t\t}\n\t\t\treturn finishBoolean(CompoundPath, tracePaths(segments),\n\t\t\t\t\tthis, null, false);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isStraight(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttMin = 4e-7,\n\t\t\t\t\ttMax = 1 - tMin,\n\t\t\t\t\troots = [],\n\t\t\t\t\tn = Numerical.solveQuadratic(a, b, c, roots, tMin, tMax);\n\t\t\t\tif (n === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (n > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.getPoint(values, roots[j]).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve, 0.5),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 1e-6) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j === 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(Curve.evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, weighted) {\n\t\t\tvar param = this.getParameterAt(offset);\n\t\t\treturn Curve[name](this.curves[param.index], param.value, weighted);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit,\n\t\t\tparametersInOrder = true;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error && parametersInOrder) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tparametersInOrder = this.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1),\n\t\t\teps = epsilon * segLength,\n\t\t\thandle1,\n\t\t\thandle2;\n\t\tif (alpha1 < eps || alpha2 < eps) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t} else {\n\t\t\tvar line = pt2.subtract(pt1);\n\t\t\thandle1 = tan1.normalize(alpha1);\n\t\t\thandle2 = tan2.normalize(alpha2);\n\t\t\tif (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n\t\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t\t\thandle1 = handle2 = null;\n\t\t\t}\n\t\t}\n\n\t\treturn [pt1, pt1.add(handle1 || tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(handle2 || tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t\tfor (var i = 1, l = u.length; i < l; i++) {\n\t\t\tif (u[i] <= u[i - 1])\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 1e-6)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert, includeMatrix) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert, includeMatrix);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tthis._components[index] = parser.call(this, value);\n\t\t\t\tthis._changed();\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type],\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tthis._id = UID.get(Color);\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n},\nnew function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = UID.get();\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops, this._radial);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = typeof window === 'object' &&\n\t\t\tDomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tif ( typeof window === 'object' ) {\n\t\tDomEvent.add(window, {\n\t\t\tfocus: function() {\n\t\t\t\tfocused = true;\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tfocused = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t   if ( !noCanvas ) {\n\t\tif (!this._pixelRatio)\n\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\tthis._id = element.getAttribute('id');\n\t\tif (this._id == null)\n\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\tDomEvent.add(element, this._viewEvents);\n\t\tvar none = 'none';\n\t\tDomElement.setPrefixed(element.style, {\n\t\t\tuserSelect: none,\n\t\t\ttouchAction: none,\n\t\t\ttouchCallout: none,\n\t\t\tcontentZooming: none,\n\t\t\tuserDrag: none,\n\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t});\n\n\t\tfunction getSize(name) {\n\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t}\n\n\t\tfunction getCanvasSize() {\n\t\t\tvar size = DomElement.getSize(element);\n\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t: size;\n\t\t}\n\n\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\tvar that = this;\n\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\tresize: function() {\n\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._setViewSize(size = getCanvasSize());\n\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\tthis._stats = new Stats();\n\t\t\tvar stats = this._stats.domElement,\n\t\t\t\tstyle = stats.style,\n\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\tstyle.position = 'absolute';\n\t\t\tstyle.left = offset.x + 'px';\n\t\t\tstyle.top = offset.y + 'px';\n\t\t\tdocument.body.appendChild(stats);\n\t\t}\n\n\t   } else {\n\t\tif (!this._pixelRatio)\n\t\t\tthis._pixelRatio = 1;\n\t\tthis._id = 'view-' + View._id++;\n\t\tsize = new Size(element.width, element.height);\n\t   }\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: Base.each(['onResize', 'onMouseDown', 'onMouseUp', 'onMouseMove'],\n\t\tfunction(name) {\n\t\t\tthis[name] = {\n\t\t\t\tinstall: function(type) {\n\t\t\t\t\tthis._installEvent(type);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function(type) {\n\t\t\t\t\tthis._uninstallEvent(type);\n\t\t\t\t}\n\t\t\t};\n\t\t}, {\n\t\t\tonFrame: {\n\t\t\t\tinstall: function() {\n\t\t\t\t\tthis.play();\n\t\t\t\t},\n\n\t\t\t\tuninstall: function() {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t),\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n},\nnew function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\tvar mouseFlags = {\n\t\tmousedown: {\n\t\t\tmousedown: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmouseup: {\n\t\t\tmouseup: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmousemove: {\n\t\t\tmousedrag: 1,\n\t\t\tmousemove: 1,\n\t\t\tmouseenter: 1,\n\t\t\tmouseleave: 1\n\t\t}\n\t};\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\t_installEvent: function(type) {\n\t\t\tvar counters = this._eventCounters;\n\t\t\tif (counters) {\n\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_uninstallEvent: function(type) {\n\t\t\tvar counters = this._eventCounters;\n\t\t\tif (counters) {\n\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif ( !noCanvas ) {\n\t\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tif (size.isZero())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t\t}\n\t\t\tthis._context = canvas.getContext('2d');\n\t\t}\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!noCanvas && !/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar browser = paper.browser,\n\t\t\tpixels;\n\t\tif (browser && browser.firefox) {\n\t\t\tvar parent = this._element.parentNode,\n\t\t\t\ttemp = document.createElement('div');\n\t\t\ttemp.style.fontSize = size;\n\t\t\tparent.appendChild(temp);\n\t\t\tpixels = parseFloat(DomElement.getStyles(temp).fontSize);\n\t\t\tparent.removeChild(temp);\n\t\t} else {\n\t\t\tvar ctx = this._context,\n\t\t\t\tprevFont = ctx.font;\n\t\t\tctx.font = size + ' serif';\n\t\t\tpixels = parseFloat(ctx.font);\n\t\t\tctx.font = prevFont;\n\t\t}\n\t\treturn pixels;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function(force) {\n\t\tvar project = this._project;\n\t\tif (!project || !force && !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n},\nnew function() {\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tcommandFixMap,\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers) {\n\t\t\tmodifiers[name] = down;\n\t\t\tvar browser = paper.browser;\n\t\t\tif (name === 'command' && browser && browser.mac) {\n\t\t\t\tif (down) {\n\t\t\t\t\tcommandFixMap = {};\n\t\t\t\t} else {\n\t\t\t\t\tfor (var code in commandFixMap) {\n\t\t\t\t\t\tif (code in charCodeMap)\n\t\t\t\t\t\t\thandleKey(false, code, commandFixMap[code], event);\n\t\t\t\t\t}\n\t\t\t\t\tcommandFixMap = null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (down && commandFixMap) {\n\t\t\tcommandFixMap[keyCode] = charCode;\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (minDistance != null && this._maxDistance != null\n\t\t\t\t&& minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && maxDistance != null\n\t\t\t\t&& maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = this._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tif (maxDistance != null && maxDistance !== 0) {\n\t\t\t\t\tif (distance > maxDistance) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDistance));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback, async) {\n\t\tasync = (async === undefined) ? true : async;\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, async);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif ( noCanvas ) {\n\t\t\treturn { getContext: function() {} };\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize(),\n\t\t\timage = item.getImage();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = options.embedImages === false && image && image.src\n\t\t\t\t|| item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tvar matchShapes = options.matchShapes;\n\t\tif (matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (matchShapes && !item.hasHandles()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tif (isRoot) {\n\t\t\tvar defs = node.querySelectorAll('defs');\n\t\t\tfor (var i = 0, l = defs.length; i < l; i++) {\n\t\t\t\timportSVG(defs[i], options, false);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& childNode.nodeName.toLowerCase() !== 'defs'\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.set(Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {}), {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (item && Base.pick(options.applyMatrix, applyMatrix))\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n\n},{}],4:[function(require,module,exports){\nfunction Collection( args ) {\n\t// already a Collection? Job's done\n\tif ( arguments.length === 1 && args instanceof Collection ) {\n\t\treturn args;\n\n\t} else if ( arguments.length > 1 || !Array.isArray( args ) ) {\n\t\targs = [].slice.call( arguments, 0 );\n\t}\n\n\tthis.length = 0;\n\n\targs.forEach(function( arg ) {\n\t\t// unwrap any collection\n\t\tif ( arg instanceof Collection ) {\n\t\t\tfor ( var i = -1; ++i < arg.length; ) {\n\t\t\t\tthis[this.length++] = arg[i];\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis[this.length++] = arg;\n\t\t}\n\n\t}, this);\n\n\treturn this;\n}\n\nCollection.prototype.forEach = function(cb, scope) {\n\tfor ( var i = -1; ++i < this.length; ) {\n\t\tcb.call(scope || this[i], this[i], i, this);\n\t}\n\n\treturn this;\n};\n\nCollection.prototype.prop = function(name, val) {\n\tvar i;\n\n\t// object setter\n\tif ( typeof name === 'object' ) {\n\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\tthis[i].set( name );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// getter\n\tif ( val === undefined ) {\n\t\treturn this[0][name];\n\t}\n\n\t// simple setter\n\tfor ( i = -1; ++i < this.length; ) {\n\t\tthis[i][name] = val;\n\t}\n\n\treturn this;\n};\n\nfunction wrapConstructor( constructor, prototype, useConstructed ) {\n\treturn function wrapper() {\n\t\tvar c,\n\t\t\ttmp,\n\t\t\tarr = [];\n\n\t\t// constructor used with new\n\t\tif ( this instanceof wrapper ) {\n\t\t\t// proxy to paper native constructor\n\t\t\tc = Object.create(prototype);\n\t\t\ttmp = constructor.apply(c, arguments);\n\t\t\treturn useConstructed ?\n\t\t\t\ttmp : c;\n\n\t\t// without new, build a collection\n\t\t} else {\n\t\t\tif ( Array.isArray( arguments[0] ) ) {\n\t\t\t\targuments[0].forEach(function(params, i) {\n\t\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\t\tc = constructor.call( arr[i], params );\n\t\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\t\tarr[i] = c;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\tc = constructor.apply( arr[0], arguments );\n\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\tarr[0] = c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Collection( arr );\n\t\t}\n\t};\n}\n\nvar rconstructor = /(^|\\.)[A-Z][A-z]+$/;\nfunction constructorFilter( name ) {\n\treturn typeof this[name] === 'function' && rconstructor.test(name);\n}\n\n// unwrap a collection or array of collection\nfunction unwrapArg( arr, id, isPlural ) {\n\t// unwrap a single collection\n\tif ( arr && arr[id] instanceof Collection ) {\n\t\tarr[id] = isPlural ?\n\t\t\t[].slice.call( arr[id], 0 ) :\n\t\t\tarr[id][0];\n\n\t// unwrap an array of collection\n\t} else if ( arr && arr[id].length && arr[id][0] instanceof Collection ) {\n\t\tfor ( var i = -1; ++i < arr[id].length; ) {\n\t\t\tarr[id][i] = arr[id][i][0];\n\t\t}\n\t}\n}\n\nfunction unwrapArgs() {\n\tvar isPlural = this.isPlural,\n\t\targs = [].slice.call( arguments, 0 ),\n\t\tid,\n\t\ti;\n\n\t// first arg is an object and might have a collection or array of collection\n\t// Todo: objects should be unwrapped recursively\n\tif ( args[0] && args[0].constructor === Object ) {\n\t\tif ( 'children' in args[0] ) {\n\t\t\tid = 'children';\n\n\t\t} else if ( 'segments' in args[0] ) {\n\t\t\tid = 'segments';\n\n\t\t} else if ( 'nodes' in args[0] ) {\n\t\t\tid = 'nodes';\n\t\t}\n\n\t\tunwrapArg( args[0], id, true );\n\n\t// otherwise unwrap each arg\n\t} else {\n\t\tfor ( i = -1; ++i < args.length; ) {\n\t\t\t// if the method is plural (addChildren) and we're unwrapping\n\t\t\t// the last argument, we want to keep it in an array\n\t\t\tunwrapArg( args, i, i === args.length - 1 && isPlural );\n\t\t}\n\t}\n\n\treturn args;\n}\n\nCollection.proxy = function( paper ) {\n\tvar plumin = this;\n\n\tplumin.paper = paper;\n\n\tvar methodNames = {};\n\tObject.getOwnPropertyNames( paper.PaperScope.prototype )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype )\n\t\t.forEach(function(name) {\n\t\t\tplumin[name] = wrapConstructor( this[name], this[name].prototype );\n\n\t\t\t// we don't want to proxy methods of Collection\n\t\t\tif ( name === 'Collection' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tObject.getOwnPropertyNames( this[name].prototype )\n\t\t\t\t.forEach(function(_name) {\n\t\t\t\t\t// collect unique method names (first test avoids getters)\n\t\t\t\t\tif ( !Object.getOwnPropertyDescriptor(this, _name).get &&\n\t\t\t\t\t\t\ttypeof this[_name] === 'function' ) {\n\n\t\t\t\t\t\tmethodNames[_name] = true;\n\t\t\t\t\t}\n\n\t\t\t\t}, this[name].prototype);\n\n\t\t}, paper.PaperScope.prototype);\n\n\tObject.keys( paper.PaperScope.prototype.Path )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Path )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Path[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Path );\n\n\tObject.keys( paper.PaperScope.prototype.Shape )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Shape )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Shape[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Shape );\n\n\t// proxy the most commonly used method of paper\n\t// do it only after proxying constructors otherwise it's overwritten\n\tplumin.setup = paper.setup.bind(paper);\n\n\t// proxy all methods from every constructor\n\t// by default methods aren't chainable\n\tObject.keys( methodNames ).sort().forEach(function(name) {\n\t\t// please oh please, don't overwrite my constructor, I need it.\n\t\tif ( name === 'constructor' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(null, arguments),\n\t\t\t\ti,\n\t\t\t\tresult;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tresult = this[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// by default methods aren't chainable\n\t\t\t// return the last result\n\t\t\treturn result;\n\t\t};\n\t});\n\n\t\t// addChild( item ) and other methods with similar signatures\n\t\t// that we want to make chainable\n\tvar chain = [\n\t\t\t'set',\n\t\t\t'setX',\n\t\t\t'setY',\n\t\t\t'insertAbove',\n\t\t\t'insertBelow',\n\t\t\t'sendToBack',\n\t\t\t'bringToFront',\n\t\t\t'remove',\n\t\t\t'removeChildren',\n\t\t\t'reverseChildren',\n\n\t\t\t'translate',\n\t\t\t'rotate',\n\t\t\t'scale',\n\t\t\t'shear',\n\t\t\t'skew',\n\t\t\t'transform',\n\t\t\t'fitBounds',\n\t\t\t'emit',\n\n\t\t\t'activate',\n\n\t\t\t'setPixel',\n\n\t\t\t'smooth',\n\t\t\t'moveTo',\n\t\t\t'lineTo',\n\t\t\t'cubicCurveTo',\n\t\t\t'quadraticCurveTo',\n\t\t\t'curveTo',\n\t\t\t'arcTo',\n\t\t\t'closePath',\n\t\t\t'moveBy',\n\t\t\t'lineBy',\n\t\t\t'cubicCurveBy',\n\t\t\t'quadraticCurveBy',\n\t\t\t'curveBy',\n\t\t\t'arcBy',\n\n\t\t\t'removeSegments',\n\t\t\t'simplify',\n\t\t\t'reverse',\n\n\t\t\t// Rectangle\n\t\t\t'include',\n\t\t\t'expand',\n\t\t\t'scale',\n\t\t// ],\n\t\t// createAndChain = [\n\t\t\t'addChild',\n\t\t\t'insertChild',\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'replaceWith',\n\n\t\t\t'appendTop',\n\t\t\t'appendBottom',\n\n\t\t\t'add',\n\t\t\t'insert',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNode',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\n\t\t\t'addGlyph',\n\t\t\t'addGlyphs',\n\n\t\t\t'addContour',\n\t\t\t'insertContour',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addAnchor',\n\t\t\t'addAnchors',\n\t\t\t'addComponent',\n\t\t\t'addComponents',\n\n\t\t\t'addUnicode',\n\t\t\t'prepareOt',\n\t\t\t'addToFonts',\n\t\t\t'download'\n\t\t],\n\t\tplural = [\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\t\t\t'addGlyphs',\n\t\t\t'addAnchors',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addComponents'\n\t\t]/*,\n\t\tmathPoinFn = [\n\t\t\t'round',\n\t\t\t'ceil',\n\t\t\t'floor',\n\t\t\t'abs'\n\t\t],\n\t\tbooleanPathOp = [\n\t\t\t'unite',\n\t\t\t'intersect',\n\t\t\t'subtract',\n\t\t\t'exclude',\n\t\t\t'divide'\n\t\t]*/;\n\n\tchain.forEach(function(name) {\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(\n\t\t\t\t\t{ isPlural: plural.indexOf(name) !== -1 },\n\t\t\t\t\targuments\n\t\t\t\t),\n\t\t\t\ti;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tthis[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// make method chainable\n\t\t\treturn this;\n\t\t};\n\t});\n\n\t// singular chainable method\n};\n\nmodule.exports = Collection;\n\n},{}],5:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tGlyph = require('./Glyph.js'),\n\tassign = require('es6-object-assign').assign;\n\nfunction Font( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\targs = assign({\n\t\tfamilyName: 'Default familyName',\n\t\tstyleName: 'Regular',\n\t\tascender: 1,\n\t\tdescender: -1,\n\t\tunitsPerEm: 1024\n\t}, args);\n\n\tthis.fontinfo = this.ot = new opentype.Font( args );\n\n\tthis.glyphMap = {};\n\tthis.charMap = {};\n\tthis.altMap = {};\n\tthis._subset = false;\n\tthis.fontMap = {};\n\n\tthis.addGlyph(new Glyph({\n\t\tname: '.notdef',\n\t\tunicode: 0,\n\t\tadvanceWidth: 650\n\t}));\n\n\tif ( args && args.glyphs ) {\n\t\tthis.addGlyphs( args.glyphs );\n\t}\n\n\tif ( typeof window === 'object' && window.document && !document.fonts ) {\n\t\tdocument.head.appendChild(\n\t\t\tthis.styleElement = document.createElement('style')\n\t\t);\n\t\t// let's find the corresponding CSSStyleSheet\n\t\t// (would be much easier with Array#find)\n\t\tthis.styleSheet = document.styleSheets[\n\t\t\t[].map.call(document.styleSheets, function(ss) {\n\t\t\t\treturn ss.ownerNode;\n\t\t\t}).indexOf(this.styleElement)\n\t\t];\n\t}\n}\n\nFont.prototype = Object.create(paper.Group.prototype);\nFont.prototype.constructor = Font;\n\n// proxy .glyphs to .children\n// TODO: handle unicode updates\nObject.defineProperty(\n\tFont.prototype,\n\t'glyphs',\n\tObject.getOwnPropertyDescriptor( paper.Item.prototype, 'children' )\n);\n\n// TODO: proper proxying of ...Glyph[s] methods to ...Child[ren] methods\n// see Glyph.js\nFont.prototype.addGlyph = function( glyph ) {\n\tthis.addChild( glyph );\n\tthis.glyphMap[glyph.name] = glyph;\n\n\tif ( glyph.ot.unicode === undefined ) {\n\t\treturn glyph;\n\t}\n\n\t// build the default cmap\n\t// if multiple glyphs share the same unicode, use the glyph where unicode\n\t// and name are equal\n\tif ( !this.charMap[glyph.ot.unicode] ||\n\t\t\t( glyph.name.length === 1 &&\n\t\t\t\tglyph.name.charCodeAt(0) === glyph.ot.unicode ) ) {\n\n\t\tthis.charMap[glyph.ot.unicode] = glyph;\n\t}\n\n\t// build the alternates map\n\tif ( !this.altMap[glyph.ot.unicode] ) {\n\t\tthis.altMap[glyph.ot.unicode] = [];\n\t}\n\tthis.altMap[glyph.ot.unicode].push( glyph );\n\n\t// invalidate glyph subset cache\n\t// TODO: switch to immutable.js to avoid this maddness\n\tthis._lastSubset = undefined;\n\n\treturn glyph;\n};\n\nFont.prototype.addGlyphs = function( glyphs ) {\n\treturn glyphs.forEach(function( glyph ) {\n\t\tthis.addGlyph(glyph);\n\n\t}, this);\n};\n\nObject.defineProperty( Font.prototype, 'subset', {\n\tget: function() {\n\t\tif ( !this._subset ) {\n\t\t\tthis._subset = this.normalizeSubset( false );\n\t\t}\n\t\treturn this._subset;\n\t},\n\tset: function( set ) {\n\t\tthis._subset = this.normalizeSubset( set );\n\t}\n});\n\nFont.prototype.normalizeSubset = function( _set ) {\n\tvar set;\n\n\t// two cases where _set isn't an array\n\t// false set = all glyphs in the charMap\n\tif ( _set === false ) {\n\t\tset = Object.keys( this.charMap ).map(function( unicode ) {\n\t\t\treturn this.charMap[unicode];\n\t\t}.bind(this));\n\n\t// convert string to array of chars\n\t} else if ( typeof _set === 'string' ) {\n\t\tset = _set.split('').map(function(e) {\n\t\t\treturn e.charCodeAt(0);\n\t\t});\n\n\t} else {\n\t\tset = _set;\n\t}\n\n\t// convert array of number to array of glyphs\n\tif ( Array.isArray( set ) && typeof set[0] === 'number' ) {\n\t\tset = set.map(function( unicode ) {\n\t\t\treturn this.charMap[ unicode ];\n\t\t}.bind(this));\n\t}\n\n\t// always include .undef\n\tif ( set.indexOf( this.glyphMap['.notdef'] ) === -1 ) {\n\t\tset.unshift( this.glyphMap['.notdef'] );\n\t}\n\n\t// remove undefined glyphs and dedupe the set\n\treturn set.filter(function(e, i, arr) {\n\t\treturn e && arr.lastIndexOf(e) === i;\n\t});\n};\n\nFont.prototype.getGlyphSubset = function( _set ) {\n\treturn _set !== undefined ? this.normalizeSubset( _set ) : this.subset;\n};\n\nFont.prototype.setAlternateFor = function( unicode, glyphName ) {\n\tthis.charMap[ unicode ] = this.glyphMap[ glyphName ];\n};\n\nFont.prototype.interpolate = function( font0, font1, coef, set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\tglyph.interpolate(\n\t\t\tfont0.glyphMap[glyph.name],\n\t\t\tfont1.glyphMap[glyph.name],\n\t\t\tcoef\n\t\t);\n\t});\n\n\t// TODO: evaluate if taking subsetting into account makes kerning\n\t// interpolation faster or slower.\n\tif ( this.ot.kerningPairs ) {\n\t\tfor ( var i in this.ot.kerningPairs ) {\n\t\t\tthis.ot.kerningPairs[i] =\n\t\t\t\tfont0.ot.kerningPairs[i] +\n\t\t\t\t( font1.ot.kerningPairs[i] - font0.ot.kerningPairs[i] ) * coef;\n\t\t}\n\t}\n\n\tthis.ot.ascender =\n\t\tfont0.ot.ascender + ( font1.ot.ascender - font0.ot.ascender ) * coef;\n\tthis.ot.descender =\n\t\tfont0.ot.descender + ( font1.ot.descender - font0.ot.descender ) * coef;\n\n\treturn this;\n};\n\nFont.prototype.updateSVGData = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateSVGData();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.updateOTCommands = function( set, merged ) {\n\treturn this.updateOT({\n\t\tset: set,\n\t\tshouldUpdateCommands: true,\n\t\tmerged: merged\n\t});\n};\n\nFont.prototype.updateOT = function( args ) {\n\tthis.ot.glyphs.glyphs = (\n\t\tthis.getGlyphSubset( args && args.set ).reduce(function(o, glyph, i) {\n\t\t\to[i] = args && args.shouldUpdateCommands ?\n\t\t\t\tglyph.updateOTCommands( null, args && args.merged ) :\n\t\t\t\tglyph.ot;\n\t\t\treturn o;\n\t\t}, {})\n\t);\n\tthis.ot.glyphs.length = Object.keys(this.ot.glyphs.glyphs).length;\n\treturn this;\n};\n\nFont.prototype.toArrayBuffer = function() {\n\t// rewrite the postScriptName to remove invalid characters\n\t// TODO: this should be fixed in opentype.js\n\tthis.ot.names.postScriptName.en = (\n\t\tthis.ot.names.postScriptName.en.replace(/[^A-z]/g, '_')\n\t);\n\n\treturn this.ot.toArrayBuffer();\n}\n\nFont.prototype.importOT = function( otFont ) {\n\tthis.ot = otFont;\n\n\totFont.glyphs.forEach(function( otGlyph ) {\n\t\tvar glyph = new Glyph({\n\t\t\t\tname: otGlyph.name,\n\t\t\t\tunicode: otGlyph.unicode\n\t\t\t});\n\n\t\tthis.addGlyph( glyph );\n\t\tglyph.importOT( otGlyph );\n\n\t}, this);\n\n\treturn this;\n};\n\nif ( typeof window === 'object' && window.document ) {\n\n\tvar _URL = window.URL || window.webkitURL;\n\tFont.prototype.addToFonts = document.fonts ?\n\t\t// CSS font loading, lightning fast\n\t\tfunction( buffer ) {\n\t\t\tvar enFamilyName = this.ot.getEnglishName('fontFamily');\n\n\t\t\tif ( this.fontMap[ enFamilyName ] ) {\n\t\t\t\tdocument.fonts.delete( this.fontMap[ enFamilyName ] );\n\t\t\t}\n\n\t\t\tvar fontface = this.fontMap[ enFamilyName ] = (\n\t\t\t\tnew window.FontFace(\n\t\t\t\t\tenFamilyName,\n\t\t\t\t\tbuffer || this.toArrayBuffer()\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tif ( fontface.status === 'error' ) {\n\t\t\t\tthrow new Error('Fontface is invalid and cannot be displayed');\n\t\t\t}\n\n\t\t\tdocument.fonts.add( fontface );\n\n\t\t\treturn this;\n\t\t} :\n\t\tfunction( buffer ) {\n\t\t\tvar enFamilyName = this.ot.getEnglishName('fontFamily');\n\t\t\tvar url = _URL.createObjectURL(\n\t\t\t\t\tnew Blob(\n\t\t\t\t\t\t[ new DataView( buffer || this.toArrayBuffer() ) ],\n\t\t\t\t\t\t{ type: 'font/opentype' }\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tif ( this.fontObjectURL ) {\n\t\t\t\t_URL.revokeObjectURL( this.fontObjectURL );\n\t\t\t\tthis.styleSheet.deleteRule(0);\n\t\t\t}\n\n\t\t\tthis.styleSheet.insertRule(\n\t\t\t\t'@font-face { font-family: \"' + enFamilyName + '\";' +\n\t\t\t\t'src: url(' + url + '); }',\n\t\t\t\t0\n\t\t\t);\n\t\t\tthis.fontObjectURL = url;\n\n\t\t\treturn this;\n\t\t};\n\n\tvar a = document.createElement('a');\n\n\tvar triggerDownload = function( font, arrayBuffer ) {\n\t\tvar reader = new FileReader();\n\t\tvar enFamilyName = font.ot.getEnglishName('fontFamily');\n\n\t\treader.onloadend = function() {\n\t\t\ta.download = enFamilyName + '.otf';\n\t\t\ta.href = reader.result;\n\t\t\ta.dispatchEvent(new MouseEvent('click'));\n\n\t\t\tsetTimeout(function() {\n\t\t\t\ta.href = '#';\n\t\t\t\t_URL.revokeObjectURL( reader.result );\n\t\t\t}, 100);\n\t\t};\n\n\t\treader.readAsDataURL(new Blob(\n\t\t\t[ new DataView( arrayBuffer || font.toArrayBuffer() ) ],\n\t\t\t{ type: 'font/opentype' }\n\t\t));\n\t};\n\n\tFont.prototype.download = function( arrayBuffer, merged, name, user ) {\n\t\tif ( merged ) {\n\t\t\t// TODO: replace that with client-side font merging\n\t\t\tfetch('http://fontforgeconv.cloudapp.net/' + name + '/' + user, {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: { 'Content-Type': 'application/otf' },\n\t\t\t\t\tbody: arrayBuffer\n\t\t\t\t})\n\t\t\t\t.then(function( response ) {\n\t\t\t\t\treturn response.arrayBuffer();\n\t\t\t\t})\n\t\t\t\t.then(function( bufferToDownload ) {\n\t\t\t\t\ttriggerDownload( this, bufferToDownload );\n\t\t\t\t}.bind(this));\n\n\t\t} else {\n\t\t\ttriggerDownload( this, arrayBuffer );\n\t\t}\n\n\t\treturn this;\n\t};\n\n}\n\nmodule.exports = Font;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":2,\"../node_modules/paper/dist/paper-core.js\":3,\"./Glyph.js\":6,\"es6-object-assign\":1}],6:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tOutline = require('./Outline.js');\n\nfunction Glyph( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\tif ( args && typeof args.unicode === 'string' ) {\n\t\targs.unicode = args.unicode.charCodeAt(0);\n\t}\n\n\tthis.ot = new opentype.Glyph( args );\n\tthis.ot.path = new opentype.Path();\n\n\tthis.name = args.name;\n\t// workaround opentype 'unicode === 0' bug\n\tthis.ot.unicode = args.unicode;\n\n\tthis.addChild( new Outline() );\n\t// the second child will hold all components\n\tthis.addChild( new paper.Group() );\n\t// Should all anchors and parentAnchors also leave in child groups?\n\tthis.anchors = ( args && args.anchors ) || [];\n\tthis.parentAnchors = ( args && args.parentAnchors ) || [];\n\n\t// each individual glyph must be explicitely made visible\n\tthis.visible = false;\n\t// default colors required to display the glyph in a canvas\n\tthis.fillColor = new paper.Color(0, 0, 0);\n\t// stroke won't be displayed unless strokeWidth is set to 1\n\tthis.strokeColor = new paper.Color(0, 0, 0);\n\tthis.strokeScaling = false;\n}\n\nGlyph.prototype = Object.create(paper.Group.prototype);\nGlyph.prototype.constructor = Glyph;\n\n// Todo: handle unicode updates\nObject.defineProperty(Glyph.prototype, 'unicode', {\n\tset: function( code ) {\n\t\tthis.ot.unicode = typeof code === 'string' ?\n\t\t\tcode.charCodeAt(0) :\n\t\t\tcode;\n\t},\n\tget: function() {\n\t\treturn this.ot.unicode;\n\t}\n});\n\n// alias .advanceWidth to .ot.advanceWidth\nObject.defineProperty(Glyph.prototype, 'advanceWidth', {\n\tset: function( value ) {\n\t\tthis.ot.advanceWidth = value;\n\t},\n\tget: function() {\n\t\treturn this.ot.advanceWidth;\n\t}\n});\n\n// proxy .contours to .children[0]\nObject.defineProperty( Glyph.prototype, 'contours', {\n\tget: function() {\n\t\treturn this.children[0].children;\n\t}\n});\n\n// proxy .components to .children[1]\nObject.defineProperty( Glyph.prototype, 'components', {\n\tget: function() {\n\t\treturn this.children[1].children;\n\t}\n});\n\n// proxy ...Contour[s] methods to children[0]...Child[ren] methods\n// and proxy ...Component[s] methods to children[1]...Child[ren] methods\nObject.getOwnPropertyNames( paper.Item.prototype ).forEach(function(name) {\n\tvar proto = this;\n\n\t// exclude getters and non-methods\n\tif ( Object.getOwnPropertyDescriptor(proto, name).get ||\n\t\t\ttypeof proto[name] !== 'function' ) {\n\t\treturn;\n\t}\n\n\tif ( name.indexOf('Children') !== -1 ) {\n\t\tproto[name.replace('Children', 'Contours')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Children', 'Components')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\n\t} else if ( name.indexOf('Child') !== -1 ) {\n\t\tproto[name.replace('Child', 'Contour')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Child', 'Component')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\t}\n\n}, paper.Item.prototype);\n\nGlyph.prototype.addAnchor = function( item ) {\n\tthis.anchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addAnchors = function( anchors ) {\n\treturn anchors.forEach(function(anchor) {\n\t\tthis.addAnchor(anchor);\n\t}, this);\n};\n\nGlyph.prototype.addParentAnchor = function( item ) {\n\tthis.parentAnchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addUnicode = function( code ) {\n\tthis.ot.addUnicode( code );\n\n\treturn this;\n};\n\nGlyph.prototype.interpolate = function( glyph0, glyph1, coef ) {\n\t// If we added an interpolate method to Group, we'd be able to just\n\t// interpolate all this.children directly.\n\t// instead we interpolate the outline first\n\tthis.children[0].interpolate( glyph0.children[0], glyph1.children[0] );\n\t// and then the components\n\tthis.children[1].children.forEach(function(component, j) {\n\t\tcomponent.interpolate(\n\t\t\tglyph0.children[1].children[j], glyph1.children[1].children[j], coef\n\t\t);\n\t});\n\n\tthis.ot.advanceWidth =\n\t\tglyph0.ot.advanceWidth +\n\t\t( glyph1.ot.advanceWidth - glyph0.ot.advanceWidth ) * coef;\n\tthis.ot.leftSideBearing =\n\t\tglyph0.ot.leftSideBearing +\n\t\t( glyph1.ot.leftSideBearing - glyph0.ot.leftSideBearing ) * coef;\n\tthis.ot.xMax =\n\t\tglyph0.ot.xMax + ( glyph1.ot.xMax - glyph0.ot.xMax ) * coef;\n\tthis.ot.xMin =\n\t\tglyph0.ot.xMin + ( glyph1.ot.xMin - glyph0.ot.xMin ) * coef;\n\tthis.ot.yMax =\n\t\tglyph0.ot.yMax + ( glyph1.ot.yMax - glyph0.ot.yMax ) * coef;\n\tthis.ot.yMin =\n\t\tglyph0.ot.yMin + ( glyph1.ot.yMin - glyph0.ot.yMin ) * coef;\n\n\treturn this;\n};\n\nGlyph.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children[0].updateSVGData( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateSVGData( path );\n\t});\n\n\treturn this.svgData;\n};\n\nGlyph.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n/* eslint-disable */\n\tthis.children[0].updateOTCommands( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateOTCommands( path );\n\t});\n/* eslint-enable */\n\n\treturn this.ot;\n};\n\nGlyph.prototype.importOT = function( otGlyph ) {\n\tvar current;\n\tthis.ot = otGlyph;\n\n\tif ( !otGlyph.path || !otGlyph.path.commands ) {\n\t\treturn this;\n\t}\n\n\tthis.ot.path.commands.forEach(function(command) {\n\t\tswitch ( command.type ) {\n\t\t\tcase 'M':\n\t\t\t\tcurrent = new paper.Path();\n\t\t\t\tthis.addContour( current );\n\n\t\t\t\tcurrent.moveTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tcurrent.lineTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tcurrent.cubicCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\t[ command.x2, command.y2 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tcurrent.quadraticCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\t// When the glyph has no contour,\n\t\t\t\t// they contain a single Z command in\n\t\t\t\t// opentype.js.\n\t\t\t\t// TODO: see how we should handle that\n\t\t\t\tif ( current ) {\n\t\t\t\t\tcurrent.closePath();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}, this);\n\n\treturn this;\n};\n\nmodule.exports = Glyph;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":2,\"../node_modules/paper/dist/paper-core.js\":3,\"./Outline.js\":8}],7:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nObject.defineProperty( paper.Segment.prototype, 'x', {\n\tget: function() {\n\t\treturn this.point.x;\n\t},\n\tset: function( value ) {\n\t\tthis.point.x = value;\n\t}\n});\n\nObject.defineProperty( paper.Segment.prototype, 'y', {\n\tget: function() {\n\t\treturn this.point.y;\n\t},\n\tset: function( value ) {\n\t\tthis.point.y = value;\n\t}\n});\n\nmodule.exports = paper.Segment;\n\n},{\"../node_modules/paper/dist/paper-core.js\":3}],8:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nfunction Outline() {\n\tpaper.CompoundPath.prototype.constructor.apply( this );\n}\n\n// inehrit CompoundPath\nOutline.prototype = Object.create(paper.CompoundPath.prototype);\nOutline.prototype.constructor = Outline;\n\n// Fix two problems with CompoundPath#insertChildren:\n// - it arbitrarily changes the direction of paths\n// - it seems that it doesn't handle CompoundPath arguments\nOutline.prototype.insertChildren = function(index, items, _preserve) {\n\tif ( Array.isArray( items ) ) {\n\t\t// flatten items to handle CompoundPath children\n\t\titems = [].concat.apply([], items.map(function(item) {\n\t\t\treturn item instanceof paper.Path ? item : item.children;\n\t\t}));\n\t}\n\n\treturn paper.Item.prototype.insertChildren.call(\n\t\tthis, index, items, _preserve, paper.Path\n\t);\n};\n\nOutline.fromPath = function( path ) {\n\tvar result = new Outline();\n\treturn path._clone( result, false );\n};\n\nOutline.prototype.interpolate = function( outline0, outline1, coef ) {\n\tfor (var i = 0, l = this.contours.length; i < l; i++) {\n\t\t// The number of children should be the same everywhere,\n\t\t// but we're going to try our best anyway\n\t\tif ( !outline0.children[i] || !outline1.children[i] ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.children[i].interpolate(\n\t\t\toutline0.children[i],\n\t\t\toutline1.children[i],\n\t\t\tcoef\n\t\t);\n\t}\n\n\treturn this;\n};\n\nOutline.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateSVGData( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.svgData;\n};\n\nOutline.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateOTCommands( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.ot;\n};\n\nmodule.exports = Outline;\n\n},{\"../node_modules/paper/dist/paper-core.js\":3}],9:[function(require,module,exports){\n/* Extend the Path prototype to add OpenType conversion\n * and alias *segments methods and properties to *nodes\n */\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nvar proto = paper.PaperScope.prototype.Path.prototype;\n\n// alias *Segments methods to *Nodes equivalents\n[ 'add', 'insert', 'remove' ].forEach(function(name) {\n\tproto[name + 'Nodes'] =\n\t\tproto[name + 'Segments'];\n});\n\n// alias .segments to .nodes\nObject.defineProperties(proto, {\n\tnodes: Object.getOwnPropertyDescriptor( proto, 'segments' ),\n\tfirstNode: Object.getOwnPropertyDescriptor( proto, 'firstSegment' ),\n\tlastNode: Object.getOwnPropertyDescriptor( proto, 'lastSegment' )\n});\n\nproto._updateData = function( data, matrix, pushSimple, pushBezier ) {\n\tif ( this.visible === false || this.curves.length === 0) {\n\t\treturn data;\n\t}\n\n\t// prototypo needs to be able to change the direction of the updated data.\n\tvar reverse = this.exportReversed,\n\t\tcurves = this.curves,\n\t\tstart = curves[ reverse ? curves.length - 1 : 0 ]\n\t\t\t[ 'point' + ( reverse ? 2 : 1 ) ]\n\t\t\t.transform( matrix );\n\n\tpushSimple(\n\t\t'M',\n\t\tMath.round( start.x ) || 0,\n\t\tMath.round( start.y ) || 0\n\t);\n\n\tfor ( var i = -1, l = curves.length; ++i < l; ) {\n\t\tvar curve = curves[ reverse ? l - 1 - i : i ],\n\t\t\tend = curve['point' + ( reverse ? 1 : 2 ) ].transform( matrix );\n\n\t\tif ( curve.isStraight() ) {\n\t\t\tpushSimple(\n\t\t\t\t'L',\n\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\tMath.round( end.y ) || 0\n\t\t\t);\n\n\t\t} else {\n\t\t\tvar ctrl1 = new paper.Point(\n\t\t\t\t\tcurve.point1.x + curve.handle1.x,\n\t\t\t\t\tcurve.point1.y + curve.handle1.y\n\t\t\t\t).transform( matrix ),\n\t\t\t\tctrl2 = new paper.Point(\n\t\t\t\t\tcurve.point2.x + curve.handle2.x,\n\t\t\t\t\tcurve.point2.y + curve.handle2.y\n\t\t\t\t).transform( matrix );\n\n\t\t\tif ( reverse ) {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( this.closed ) {\n\t\tpushSimple('Z');\n\t}\n\n\treturn data;\n};\n\nproto.updateOTCommands = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx: arguments[1],\n\t\t\t\ty: arguments[2]\n\t\t\t});\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx1: arguments[1],\n\t\t\t\ty1: arguments[2],\n\t\t\t\tx2: arguments[3],\n\t\t\t\ty2: arguments[4],\n\t\t\t\tx: arguments[5],\n\t\t\t\ty: arguments[6]\n\t\t\t});\n\t\t}\n\t);\n};\n\nproto.updateSVGData = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t}\n\t);\n};\n\nmodule.exports = paper.Path;\n\n},{\"../node_modules/paper/dist/paper-core.js\":3}],10:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tFont = require('./Font.js'),\n\tGlyph = require('./Glyph.js'),\n\tOutline = require('./Outline'),\n\tPath = require('./Path.js'),\n\tNode = require('./Node.js'),\n\tCollection = require('./Collection.js');\n\npaper.PaperScope.prototype.Font = Font;\npaper.PaperScope.prototype.Glyph = Glyph;\npaper.PaperScope.prototype.Outline = Outline;\npaper.PaperScope.prototype.Path = Path;\npaper.PaperScope.prototype.Node = Node;\npaper.PaperScope.prototype.Collection = Collection;\n\nfunction plumin( arg ) {\n\tif ( arguments.length === 1 && arg instanceof Collection ) {\n\t\treturn arg;\n\t}\n\n\tvar c = Object.create( Collection.prototype );\n\tCollection.apply( c, arguments );\n\treturn c;\n}\n\nplumin.opentype = opentype;\n\nplumin.proxy = Collection.proxy.bind(plumin);\nplumin.proxy(paper);\n\nmodule.exports = plumin;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":2,\"../node_modules/paper/dist/paper-core.js\":3,\"./Collection.js\":4,\"./Font.js\":5,\"./Glyph.js\":6,\"./Node.js\":7,\"./Outline\":8,\"./Path.js\":9}]},{},[10,3])(10)\n});\n\n\n//# sourceMappingURL=plumin.js.map","var plumin = require('plumin.js'),\n\tDepTree = require('deptree'),\n\tclone = require('lodash/lang/clone'),\n\tassign = require('es6-object-assign').assign,\n\tupdateUtils = require('./updateUtils.js');\n\nvar paper = plumin.paper,\n\tUtils = updateUtils,\n\t_ = {\n\t\tclone: clone,\n\t\tassign: assign\n\t};\n\n// convert the glyph source from the ufo object model to the paper object model\n// this is the inverse operation done by jsufonify\nUtils.ufoToPaper = function( src ) {\n\tif ( src.parameter ) {\n\t\tsrc.parameters = src.parameter;\n\t\tdelete src.parameter;\n\t}\n\n\tif ( src.anchor ) {\n\t\tsrc.anchors = src.anchor;\n\t\tdelete src.anchor;\n\t}\n\n\tif ( src.outline && src.outline.contour ) {\n\t\tsrc.contours = src.outline.contour;\n\t\tdelete src.outline.contour;\n\t}\n\n\tif ( src.contours ) {\n\t\tsrc.contours.forEach(function(contour) {\n\t\t\tif ( contour.point ) {\n\t\t\t\tcontour.nodes = contour.point;\n\t\t\t\tdelete contour.point;\n\t\t\t}\n\t\t});\n\t}\n\n\tif ( src.outline && src.outline.component ) {\n\t\tsrc.components = src.outline.component;\n\n\t\tsrc.components.forEach(function(component) {\n\t\t\tif ( component.anchor ) {\n\t\t\t\tcomponent.parentAnchors = component.anchor;\n\t\t\t\tdelete component.anchor;\n\t\t\t}\n\n\t\t\tif ( component.parameter ) {\n\t\t\t\tcomponent.parentParameters = component.parameter;\n\t\t\t\tdelete component.parameter;\n\t\t\t}\n\t\t});\n\n\t\tdelete src.outline.component;\n\t}\n\n\tdelete src.outline;\n\n\tif ( src.lib && src.lib.transforms ) {\n\t\tsrc.transforms = src.lib.transforms;\n\t\tdelete src.lib.transforms;\n\t}\n\n\tif ( src.lib && src.lib.transformOrigin ) {\n\t\tsrc.transformOrigin = src.lib.transformOrigin;\n\t\tdelete src.lib.transformOrigin;\n\t}\n\n\tif ( src.lib && src.lib.parameters ) {\n\t\tsrc.parameters = src.lib.parameters;\n\t\tdelete src.lib.parameters;\n\t}\n\n\tif ( src.lib && src.lib.solvingOrder ) {\n\t\tsrc.solvingOrder = src.lib.solvingOrder;\n\t\tdelete src.lib.solvingOrder;\n\t}\n\n\treturn src;\n};\n\nUtils.fontFromSrc = function( src ) {\n\t// TODO: this, block is only here for backward compat\n\t// and should be removed at some point in the future\n\tif ( !src.fontinfo ) {\n\t\tsrc.fontinfo = src.info;\n\t}\n\n\tvar font = new paper.Font( _.assign({}, src.fontinfo, {\n\t\t// The font needs to be initialized with valid ascender/descender values\n\t\tascender: 1,\n\t\tdescender: -1\n\t}) );\n\n\tfont.src = Utils.ufoToPaper( src );\n\n\tvar filteredSrc = _.assign( {}, src );\n\tdelete filteredSrc.controls;\n\tdelete filteredSrc.presets;\n\tdelete filteredSrc.glyphs;\n\n\tUtils.createUpdaters( filteredSrc, 'font_' + src.fontinfo.familyName );\n\n\tfont.parameters = {};\n\tUtils.mergeStatic( font.parameters, font.src.parameters );\n\n\t// solvingOrder might be already available (if this is a subcomponent,\n\t// or precomputed in a worker)\n\tfont.solvingOrder = font.src.solvingOrder;\n\n\tif ( !font.solvingOrder ) {\n\t\tfont.solvingOrder = filteredSrc.solvingOrder =\n\t\t\tUtils.solveDependencyTree( font, filteredSrc );\n\t}\n\n\treturn font;\n};\n\n// create Glyph instance and all its child items: anchors, contours\n// and components\n// var wmm = typeof WeakMap === 'function' && new WeakMap();\nUtils.glyphFromSrc = function( src, fontSrc, naive, embed ) {\n\tvar glyph = new paper.Glyph({\n\t\tname: src.name,\n\t\tunicode: src.unicode\n\t});\n\n\t// Clone glyph src to allow altering it without impacting components srcs.\n\tglyph.src = _.clone( src, true );\n\t// turn ._operation strings to ._updaters functions\n\t// TODO: restore sourceURL pragma for debugging.\n\t// this should impact the way results are memoized\n\tUtils.createUpdaters( glyph.src/*, 'glyphs/glyph_' + name*/ );\n\tUtils.mergeStatic( glyph, glyph.src );\n\n\t// this will be used to hold local parameters that will be merged with\n\t// the font parameters\n\tglyph.parameters = {};\n\tUtils.mergeStatic( glyph.parameters, glyph.src.parameters );\n\n\t// solvingOrder might be already available (if this is a subcomponent,\n\t// or precomputed in a worker)\n\tglyph.solvingOrder = glyph.src.solvingOrder;\n\n\t(glyph.src.anchors || []).forEach(function(anchorSrc) {\n\t\tvar anchor = new paper.Node();\n\t\tanchor.src = anchorSrc;\n\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\tglyph.addAnchor( anchor );\n\t});\n\n\t(glyph.src.contours || []).forEach(function(contourSrc) {\n\t\tvar contour = new paper.Path();\n\t\tcontour.src = contourSrc;\n\t\tUtils.mergeStatic( contour, contourSrc );\n\n\t\tglyph.addContour( contour );\n\n\t\t// TODO: handle oncurve/offcurve points\n\t\tcontourSrc.nodes.forEach(function(nodeSrc) {\n\t\t\tvar node = new paper.Node();\n\t\t\tnode.src = nodeSrc;\n\t\t\tUtils.mergeStatic( node, nodeSrc );\n\n\t\t\tcontour.add( node );\n\t\t});\n\t});\n\n\tif ( !glyph.src.components ) {\n\t\treturn glyph;\n\t}\n\n\t// components can only be embedded once all glyphs have been generated\n\t// from source\n\tglyph.embedComponents = function() {\n\t\tglyph.src.components.forEach(function(componentSrc) {\n\t\t\t// components are glyphs, quite simply\n\t\t\tvar component = Utils.glyphFromSrc(\n\t\t\t\t\tfontSrc.glyphs[componentSrc.base],\n\t\t\t\t\tfontSrc,\n\t\t\t\t\tnaive,\n\t\t\t\t\t// components' subcomponents can be embedded immediatly\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\tcomponent.parentParameters = {};\n\t\t\tUtils.mergeStatic(\n\t\t\t\tcomponent.parentParameters,\n\t\t\t\tcomponentSrc.parentParameters\n\t\t\t);\n\n\t\t\tnaive.annotator( component );\n\t\t\tglyph.addComponent( component );\n\n\t\t\t(componentSrc.parentAnchors || []).forEach(function(anchorSrc) {\n\t\t\t\tvar anchor = new paper.Node();\n\t\t\t\tanchor.src = anchorSrc;\n\t\t\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\t\t\tcomponent.addParentAnchor( anchor );\n\t\t\t});\n\t\t});\n\n\t\tdelete glyph.embedComponents;\n\t};\n\n\tif ( embed ) {\n\t\tglyph.embedComponents();\n\t}\n\n\treturn glyph;\n};\n\n// build a full cursor from arguments\n// adds 'contours' and 'nodes' automagically when arguments start with a number\nUtils.cursor = function() {\n\tvar cursor = [];\n\n\tfor ( var i = -1; ++i < arguments.length; ) {\n\t\tif ( i === 0 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'contours' );\n\t\t}\n\t\tif ( i === 1 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'nodes' );\n\t\t}\n\t\tcursor.push( arguments[i] );\n\t}\n\n\treturn cursor.join('.');\n};\n\nUtils.propFromCursor = function( cursor, context, length ) {\n\tif ( length === undefined ) {\n\t\tlength = cursor.length;\n\t}\n\n\tfor ( var i = -1; ++i < length; ) {\n\t\tcontext = context[ cursor[i] ];\n\t}\n\n\treturn context;\n};\n\nUtils.mergeStatic = function( obj, src ) {\n\tfor ( var i in src ) {\n\t\tif ( typeof src[i] !== 'object' ) {\n\t\t\tobj[i] = src[i];\n\n\t\t// props that have empty dependencies and params are static\n\t\t} else if ( src[i]._dependencies && src[i]._dependencies.length === 0 &&\n\t\t\t\tsrc[i]._parameters.length === 0 ) {\n\n\t\t\tobj[i] = src[i]._updaters[0].apply(\n\t\t\t\tobj,\n\t\t\t\t[ null, null, null, null, Utils ]\n\t\t\t);\n\n\t\t\tdelete src[i];\n\t\t}\n\t}\n};\n\nUtils.createUpdaters = function( leaf, path ) {\n\tif ( leaf.constructor === Object && leaf._operation ) {\n\t\tleaf._updaters = [ Utils.createUpdater( leaf, path ) ];\n\n\t} else if ( leaf.constructor === Object ) {\n\t\tfor ( var i in leaf ) {\n\t\t\tUtils.createUpdaters( leaf[i], path + '.' + i );\n\t\t}\n\n\t} else if ( leaf.constructor === Array ) {\n\t\tleaf.forEach(function(child, j) {\n\t\t\tUtils.createUpdaters( child, path + '.' + j );\n\t\t});\n\t}\n};\n\nUtils.updaterCache = {};\nUtils.createUpdater = function( leaf/*, path*/ ) {\n\tvar sOperation = leaf._operation.toString(),\n\t\tcacheKey = ( leaf.parameters || [] ).join() + '#' + sOperation;\n\n\tif ( cacheKey in Utils.updaterCache ) {\n\t\treturn Utils.updaterCache[ cacheKey ];\n\t}\n\n\tUtils.updaterCache[ cacheKey ] = Function.apply( null, [\n\t\t\t'propName', 'contours', 'anchors', 'parentAnchors', 'Utils'\n\t\t]\n\t\t.concat( leaf._parameters || [] )\n\t\t.concat(\n\t\t\t( typeof leaf._operation === 'string' &&\n\t\t\t\t\tleaf._operation.indexOf('return ') === -1 ?\n\t\t\t\t'return ' : ''\n\t\t\t) +\n\t\t\t// The operation might be wrapped in a function (e.g. multi-\n\t\t\t// line code for debugging purpose). In this case, return\n\t\t\t// must be explicit\n\t\t\tsOperation\n\t\t\t\t// [\\s\\S] need to be used instead of . because\n\t\t\t\t// javascript doesn't have a dotall flag (s)\n\t\t\t\t.replace(/^function\\s*\\(\\)\\s*\\{([\\s\\S]*?)\\}$/, '$1')\n\t\t\t\t.trim()/* +\n\t\t\t// add sourceURL pragma to help debugging\n\t\t\t// TODO: restore sourceURL pragma if it proves necessary\n\t\t\t'\\n\\n//# sourceURL=' + path*/\n\t\t) );\n\n\treturn Utils.updaterCache[ cacheKey ];\n};\n\nUtils.solveDependencyTree = function( leaf, src ) {\n\tvar depTree = Utils.dependencyTree( src || leaf.src, null ),\n\t\torder = depTree.resolve().map(function( cursor ) {\n\t\t\treturn { cursor: cursor.split('.') };\n\t\t}),\n\t\tsimplified = Utils.simplifyResolutionOrder( leaf, order );\n\n\treturn simplified;\n};\n\nUtils.dependencyTree = function( parentSrc, cursor, depTree ) {\n\tif ( !depTree ) {\n\t\tdepTree = new DepTree();\n\t}\n\n\tObject.keys( parentSrc ).forEach(function( i ) {\n\t\t// don't inspect local parameters, private properties and non-object\n\t\tif ( i === 'parameters' || i.indexOf('_') === 0 ||\n\t\t\t\ttypeof parentSrc[i] !== 'object' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar leafSrc = parentSrc[i],\n\t\t\tcurrCursor = cursor ? cursor + '.' + i : i;\n\n\t\tif ( ( leafSrc._updaters && leafSrc._updaters.length ) ||\n\t\t\t\t( leafSrc._dependencies && leafSrc._dependencies.length ) ) {\n\n\t\t\tdepTree.add( currCursor,\n\t\t\t\tleafSrc._dependencies.filter(function(dep) {\n\t\t\t\t\t// parentAnchors are always here when you need them\n\t\t\t\t\treturn !/^parentAnchors/.test(dep);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif ( !leafSrc._operation ) {\n\t\t\tUtils.dependencyTree( leafSrc, currCursor, depTree );\n\t\t}\n\t});\n\n\treturn depTree;\n};\n\n// Simplify resolution order by removing cursors that don't point to objects\n// with updater functions\nUtils.simplifyResolutionOrder = function( leaf, depTree ) {\n\treturn depTree.filter(function( cursor ) {\n\t\tvar src = Utils.propFromCursor( cursor.cursor, leaf.src );\n\t\treturn src && src._updaters;\n\t});\n};\n\nvar rdeg = /deg$/;\nUtils.transformsToMatrix = function( transforms, origin ) {\n\tvar prev = new Float32Array(6),\n\t\tcurr = new Float32Array(6),\n\t\trslt = new Float32Array([ 1, 0, 0, 1, 0, 0 ]);\n\n\tif ( origin && Array.isArray( origin ) ) {\n\t\ttransforms.unshift([ 'translate', origin[0], origin[1] ]);\n\t\ttransforms.push([ 'translate', -origin[0], -origin[1] ]);\n\n\t} else if ( origin ) {\n\t\ttransforms.unshift([ 'translate', origin.x, origin.y ]);\n\t\ttransforms.push([ 'translate', -origin.x, -origin.y ]);\n\t}\n\n\ttransforms.forEach(function( transform ) {\n\t\tcurr[0] = curr[3] = 1;\n\t\tcurr[1] = curr[2] = curr[4] = curr[5] = 0;\n\n\t\t// convert degrees to radian\n\t\tfor ( var i = 1; i < transform.length; i++ ) {\n\t\t\tif ( transform[i] && typeof transform[i] === 'string' &&\n\t\t\t\t\trdeg.test(transform[i]) ) {\n\t\t\t\ttransform[i] = parseFloat(transform[i]) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\t\t}\n\n\t\tswitch ( transform[0] ) {\n\t\tcase 'translateX':\n\t\t\tcurr[4] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translateY':\n\t\t\tcurr[5] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translate':\n\t\t\tcurr[4] = transform[1];\n\t\t\tcurr[5] = transform[2] || 0;\n\t\t\tbreak;\n\n\t\tcase 'rotate':\n\t\t\tcurr[0] = Math.cos( transform[1] );\n\t\t\tcurr[1] = Math.sin( transform[1] );\n\t\t\tcurr[2] = -curr[1];\n\t\t\tcurr[3] = curr[0];\n\t\t\tbreak;\n\n\t\tcase 'scaleX':\n\t\t\tcurr[0] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scaleY':\n\t\t\tcurr[3] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scale':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[3] = transform.length > 2 ? transform[2] : transform[1];\n\t\t\tbreak;\n\n\t\tcase 'skewX':\n\t\t\t// stop parsing transform when encountering skewX(90)\n\t\t\t// see http://stackoverflow.com/questions/21094958/how-to-deal-with-infinity-in-a-2d-matrix\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[2] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'skewY':\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[1] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'matrix':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[1] = transform[2];\n\t\t\tcurr[2] = transform[3];\n\t\t\tcurr[3] = transform[4];\n\t\t\tcurr[4] = transform[5];\n\t\t\tcurr[5] = transform[6];\n\t\t\tbreak;\n\t\t}\n\n\t\tprev[0] = rslt[0];\n\t\tprev[1] = rslt[1];\n\t\tprev[2] = rslt[2];\n\t\tprev[3] = rslt[3];\n\t\tprev[4] = rslt[4];\n\t\tprev[5] = rslt[5];\n\n\t\trslt[0] = prev[0] * curr[0] + prev[2] * curr[1];\n\t\trslt[1] = prev[1] * curr[0] + prev[3] * curr[1];\n\t\trslt[2] = ( prev[0] * curr[2] || 0 ) + prev[2] * curr[3];\n\t\trslt[3] = ( prev[1] * curr[2] || 0 ) + prev[3] * curr[3];\n\t\trslt[4] = prev[0] * curr[4] + prev[2] * curr[5] + prev[4];\n\t\trslt[5] = prev[1] * curr[4] + prev[3] * curr[5] + prev[5];\n\t});\n\n\treturn new paper.Matrix(\n\t\trslt[0],\n\t\trslt[1],\n\t\trslt[2],\n\t\trslt[3],\n\t\trslt[4],\n\t\trslt[5]\n\t);\n};\n\nUtils.updateParameters = function( leaf, params ) {\n\tObject.keys( ( leaf.src && leaf.src.parameters ) || [] )\n\t\t.forEach(function( name ) {\n\t\t\tvar src = leaf.src.parameters[name];\n\n\t\t\tparams[name] = src._updaters ?\n\t\t\t\tsrc._updaters[0].apply( null, [\n\t\t\t\t\tname, [], [], leaf.parentAnchors, Utils\n\t\t\t\t].concat(\n\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\treturn params[_name];\n\t\t\t\t\t})\n\t\t\t\t)) :\n\t\t\t\tsrc;\n\n\t\t\t// if ( params['indiv_group_param'] ) {\n\t\t\t// \tObject.keys(params['indiv_group_param'])\n\t\t\t// \t\t.forEach(function( groupName ) {\n\t\t\t// \t\tvar needed = false;\n\t\t\t// \t\tvar group = params['indiv_group_param'][groupName];\n\t\t\t//\n\t\t\t// \t\tfunction handleGroup(_name) {\n\t\t\t// \t\t\treturn group[_name + '_rel'] ?\n\t\t\t// \t\t\t\t( group[_name + '_rel'].state === 'relative' ?\n\t\t\t// \t\t\t\t\tgroup[_name + '_rel'].value * params[_name] :\n\t\t\t// \t\t\t\t\tgroup[_name + '_rel'].value + params[_name]\n\t\t\t// \t\t\t\t)\n\t\t\t// \t\t\t\t: params[_name];\n\t\t\t// \t\t}\n\t\t\t//\n\t\t\t// \t\tif ( !src._parameters ) {\n\t\t\t// \t\t\tsrc._parameters.forEach(function( parameter ) {\n\t\t\t// \t\t\t\tneeded = needed || group[parameter + '_rel'];\n\t\t\t// \t\t\t});\n\t\t\t//\n\t\t\t// \t\t\tif ( needed ) {\n\t\t\t// \t\t\t\tgroup[name] = src._updaters ?\n\t\t\t// \t\t\t\t\tsrc._updaters[0].apply( null, [\n\t\t\t// \t\t\t\t\t\tname, [], [], leaf.parentAnchors, Utils\n\t\t\t// \t\t\t\t\t].concat(\n\t\t\t// \t\t\t\t\t\t( src._parameters || [] )\n\t\t\t// \t\t\t\t\t\t\t.map(handleGroup)\n\t\t\t// \t\t\t\t\t)) :\n\t\t\t// \t\t\t\t\tsrc;\n\t\t\t// \t\t\t}\n\t\t\t// \t\t}\n\t\t\t// \t});\n\t\t\t// }\n\t\t});\n};\n\nUtils.updateProperties = function( leaf, params ) {\n\tif ( !leaf.solvingOrder ) {\n\t\treturn;\n\t}\n\n\tleaf.solvingOrder.forEach(function(_cursor) {\n\t\tvar cursor = _cursor.cursor,\n\t\t\tpropName = cursor[ cursor.length - 1 ],\n\t\t\tsrc = _cursor.src || ( _cursor.src =\n\t\t\t\tUtils.propFromCursor( cursor, leaf.src ) ),\n\t\t\tobj = _cursor.obj || ( _cursor.obj =\n\t\t\t\tUtils.propFromCursor( cursor, leaf, cursor.length - 1 ) ),\n\t\t\t// TODO: one day we could allow multiple _updaters\n\t\t\tresult;\n\n\t\tif ( src && src._updaters ) {\n\t\t\ttry {\n\t\t\t\tresult = src._updaters[0].apply(\n\t\t\t\t\tobj,\n\t\t\t\t\t[\n\t\t\t\t\t\tpropName, leaf.contours, leaf.anchors,\n\t\t\t\t\t\tleaf.parentAnchors, Utils\n\t\t\t\t\t].concat(\n\t\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\t\treturn params[_name];\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t} catch (e) {\n\t\t\t\t/* eslint-disable no-console */\n\t\t\t\tconsole.error(\n\t\t\t\t\t[\n\t\t\t\t\t\t'Cannot update property',\n\t\t\t\t\t\tcursor.join('.'),\n\t\t\t\t\t\t'from component',\n\t\t\t\t\t\tleaf.name\n\t\t\t\t\t].join(' '),\n\t\t\t\t\te\n\t\t\t\t);\n\t\t\t\t/* eslint-enable no-console */\n\t\t\t}\n\t\t}\n\n\t\t// Assume that updaters returning undefined have their own\n\t\t// assignment logic\n\t\tif ( result !== undefined ) {\n\t\t\tobj[propName] = result;\n\t\t}\n\t}, this);\n};\n\n// The ascender and descender properties must be set to their maximum\n// values accross the individualized params groups\nUtils.updateXscenderProperties = function( font, params ) {\n\tif ( params['indiv_group_param'] ) {\n\t\tvar xscenderProperties = [\n\t\t\t'ascender',\n\t\t\t'descender',\n\t\t\t'cap-height',\n\t\t\t'descendent-height'\n\t\t];\n\n\t\txscenderProperties.forEach(function( name ) {\n\t\t\tvar src = font.src.fontinfo[ name ];\n\t\t\tObject.keys( params['indiv_group_param'] )\n\t\t\t\t.forEach(function( groupName ) {\n\t\t\t\tvar group = params['indiv_group_param'][groupName];\n\n\t\t\t\tvar sign = font.ot[name] > 0 ? 1 : -1;\n\n\t\t\t\tfont.ot[ name ] = sign * Math.max( Math.abs(font.ot[ name ]),\n\t\t\t\t\tMath.abs(src._updaters[0].apply(\n\t\t\t\t\t\tfont.ot,\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tname, null, null, null, Utils\n\t\t\t\t\t\t].concat(\n\t\t\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\t\t\treturn group[_name] || params[_name];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t\t))\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = Utils;\n","var plumin = require('plumin.js'),\n\tassign = require('es6-object-assign').assign,\n\tUtils = require('./Utils.js');\n\nvar paper = plumin.paper,\n\tnaive = {},\n\t_ = { assign: assign };\n\nfunction autoExpandableNodeSrc( node, i, j, inSkeleton ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\tUtils.cursor( i, j, 'y' )\n\t\t] },\n\t\tall: { _dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\treturn Utils.cursor( i, j, key );\n\t\t}) },\n\t\t_dependencies: inSkeleton ?\n\t\t\t// nodes in skeleton are never fully calculated (we don't calculate\n\t\t\t// the position of handles because we never draw their contour).\n\t\t\t// So we don't care about their dependencies.\n\t\t\t[] :\n\t\t\t[ Utils.cursor( 'contours', i, 'all' ) ]\n\t};\n}\n\nfunction autoExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tx: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\ty: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\tpoint: {\n\t\t\t_dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'y' ),\n\t\t\t\tUtils.cursor( i, j, 'expand' )\n\t\t\t],\n\t\t\t_parameters: [ 'width' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar width = arguments[\n\t\t\t\t\t\targuments.length - 1\n\t\t\t\t\t];\n\n\t\t\t\tnaive.expandedNodeUpdater(\n\t\t\t\t\tnode.expandedTo[side], side === 0, width\n\t\t\t\t);\n\t\t\t} ]\n\t\t},\n\t\tall: {\n\t\t\t_dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\t\treturn Utils.cursor( i, j, key );\n\t\t\t}).concat([\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t\t]),\n\t\t\t_updaters: [ function() {\n\t\t\t\tnaive.skeletonCopier( node );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'all' )\n\t\t]\n\t};\n}\n\nfunction explicitExpandableNodeSrc( node, i, j ) {\n\treturn {\n\t\tpoint: { _dependencies: [] },\n\t\tall: { _dependencies: [ 0, 1 ].map(function( side ) {\n\t\t\treturn Utils.cursor( i, j, 'expandedTo', side, 'all' );\n\t\t}) },\n\t\t_dependencies: []\n\t};\n}\n\nfunction explicitExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'y' )\n\t\t] },\n\t\tall: { _dependencies:\n\t\t\tObject.keys( node.src.expandedTo[ side ] ).map(function( key ) {\n\t\t\t\treturn Utils.cursor( i, j, 'expandedTo', side, key );\n\t\t\t})\n\t\t},\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'all' )\n\t\t]\n\t};\n}\n\nfunction expandedContourSrc( contour, i, side ) {\n\tvar half = contour.nodes.length / 2;\n\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function(node, j) {\n\t\t\t\treturn side !== undefined ?\n\t\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'all' ) :\n\t\t\t\t\tUtils.cursor(\n\t\t\t\t\t\ti, j % half, 'expandedTo', ( j < half ? 0 : 1 ), 'all'\n\t\t\t\t\t);\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t// nodes: nodesSrc,\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo', side || 0, 'all' )\n\t\t]\n\t};\n}\n\nfunction contourSrc( contour, i ) {\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\t\treturn Utils.cursor( i, j, 'all' );\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\treturn Utils.cursor( i, j );\n\t\t})\n\t};\n}\n\n// default method to expand skeletons:\n// derives two additional node from every node with an .expand object\nnaive.annotator = function( glyph ) {\n\tvar additionalContours = [];\n\n\tglyph.contours.forEach(function( contour, i ) {\n\t\tif ( contour.skeleton !== true ) {\n\t\t\t// annotate nodes+points that aren't in a skeleton\n\t\t\tcontour.nodes.forEach(function( node, j ) {\n\t\t\t\t_.assign( node.src, autoExpandableNodeSrc( node, i, j ) );\n\t\t\t});\n\n\t\t\t_.assign( contour.src, contourSrc( contour, i ) );\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar leftContour,\n\t\t\trightContour,\n\t\t\tleftNodes = [],\n\t\t\trightNodes = [],\n\t\t\tleftNodesSrc = [],\n\t\t\trightNodesSrc = [],\n\t\t\tfirstNode,\n\t\t\tlastNode;\n\n\t\t// skeletons should be hidden\n\t\tcontour.visible = false;\n\n\t\tcontour.nodes.forEach(function( node, j ) {\n\n\t\t\tvar left = new paper.Node(),\n\t\t\t\tright = new paper.Node(),\n\t\t\t\tleftSrc,\n\t\t\t\trightSrc;\n\n\t\t\tleftNodes.push(left);\n\t\t\trightNodes.unshift(right);\n\t\t\tnode.expandedTo = [ left, right ];\n\t\t\tleft.expandedFrom = right.expandedFrom = node;\n\n\t\t\tif ( !node.src.expandedTo ) {\n\t\t\t\t// annotate nodes+points that are automatically expanded\n\t\t\t\tleftSrc = autoExpandedNodeSrc( node, i, j, 0, contour.closed );\n\t\t\t\trightSrc = autoExpandedNodeSrc( node, i, j, 1, contour.closed );\n\t\t\t\tnode.src.expandedTo = [ leftSrc, rightSrc ];\n\t\t\t\t_.assign( node.src,\n\t\t\t\t\tautoExpandableNodeSrc( node, i, j, !!'inSkeleton' ) );\n\n\t\t\t// the expanded node might have been defined explicitely\n\t\t\t} else if ( node.src.expandedTo[0] &&\n\t\t\t\t\t!node.src.expandedTo[0]._updaters ) {\n\t\t\t\tnode.src.expandedTo.forEach(function( src, k ) {\n\t\t\t\t\tUtils.mergeStatic( node.expandedTo[k], src );\n\t\t\t\t});\n\n\t\t\t\t// annotate nodes+points that are explicitely expanded\n\t\t\t\tleftSrc = _.assign( node.src.expandedTo[0],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 0, contour.closed )\n\t\t\t\t);\n\t\t\t\trightSrc = _.assign( node.src.expandedTo[1],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 1, contour.closed )\n\t\t\t\t);\n\n\t\t\t\t_.assign( node.src,\n\t\t\t\t\texplicitExpandableNodeSrc( node, i, j ) );\n\n\t\t\t\t// A leaf shouldn't appear twice during the recursive\n\t\t\t\t// dependency-tree building. Make the expanded nodes accessible\n\t\t\t\t// from expanded contours, and provide accessors on the\n\t\t\t\t// .expandedFrom node.\n\t\t\t\t// leftNodesSrc.push( leftSrc );\n\t\t\t\t// rightNodesSrc.push( rightSrc );\n\t\t\t}\n\n\t\t\t// if ( leftSrc && rightSrc ) {\n\t\t\t// \tObject.defineProperties( node.src.expandedTo = {}, {\n\t\t\t// \t\t0: { get: function() {\n\t\t\t// \t\t\treturn leftSrc;\n\t\t\t// \t\t}},\n\t\t\t// \t\t1: { get: function() {\n\t\t\t// \t\t\t\treturn rightSrc;\n\t\t\t// \t\t}}\n\t\t\t// \t});\n\t\t\t// }\n\t\t});\n\n\t\tif ( !contour.expandedTo && !contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes.concat(rightNodes)\n\t\t\t});\n\t\t\tcontour.expandedTo = [ leftContour ];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i\n\t\t\t\t\t//, 0, leftNodesSrc.concat( rightNodesSrc )\n\t\t\t\t)\n\t\t\t];\n\t\t\tleftContour.expandedFrom = contour;\n\t\t\tadditionalContours.push( leftContour );\n\n\t\t\tfirstNode = contour.firstNode;\n\t\t\tlastNode = contour.lastNode;\n\n\t\t\tfirstNode.type = 'corner';\n\t\t\tlastNode.type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].type = 'corner';\n\t\t\tfirstNode.expandedTo[1].type = 'corner';\n\t\t\tlastNode.expandedTo[0].type = 'corner';\n\t\t\tlastNode.expandedTo[1].type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].typeIn = 'line';\n\t\t\tfirstNode.expandedTo[1].typeOut = 'line';\n\t\t\tlastNode.expandedTo[0].typeOut = 'line';\n\t\t\tlastNode.expandedTo[1].typeIn = 'line';\n\n\t\t} else if ( !contour.expandedTo && contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes\n\t\t\t});\n\t\t\tadditionalContours.push( leftContour );\n\t\t\trightContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: rightNodes\n\t\t\t});\n\t\t\tadditionalContours.push( rightContour );\n\n\t\t\tcontour.expandedTo = [\n\t\t\t\tleftContour,\n\t\t\t\trightContour\n\t\t\t];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i, 0, leftNodesSrc ),\n\t\t\t\texpandedContourSrc( rightContour, i, 1, rightNodesSrc )\n\t\t\t];\n\t\t\tleftContour.expandedFrom = rightContour.expandedFrom = contour;\n\t\t}\n\t});\n\n\tglyph.addContours( additionalContours );\n};\n\n// Calculate expanded node position\nnaive.expandedNodeUpdater = function( node, isLeft, _width ) {\n\tvar origin = node.expandedFrom,\n\t\texpand = origin.expand,\n\t\twidth = expand && expand.width !== undefined ?\n\t\t\texpand.width : _width,\n\t\tcoef = expand && expand.distr !== undefined ?\n\t\t\t( isLeft ? expand.distr : 1 - expand.distr ) :\n\t\t\t0.5,\n\t\tangle = ( isLeft ? Math.PI : 0 ) +\n\t\t\t( expand && expand.angle !== undefined ?\n\t\t\t\texpand.angle :\n\t\t\t\t// We resort to using directions.\n\t\t\t\t// This is wrong, directions are not included in the\n\t\t\t\t// dependencies of the updater and might not be ready yet.\n\t\t\t\t// TODO: Fix this (always require angle to be specified?)\n\t\t\t\t( origin._dirOut !== undefined ?\n\t\t\t\t\torigin._dirOut - Math.PI / 2 :\n\t\t\t\t\torigin._dirIn + Math.PI / 2\n\t\t\t\t)\n\t\t\t);\n\n\t// position\n\tnode.point.x = origin.point.x + ( width * coef * Math.cos( angle ) );\n\tnode.point.y = origin.point.y + ( width * coef * Math.sin( angle ) );\n};\n\n// copy skeleton properties such as types, directions and tensions to expanded\n// nodes\nnaive.skeletonCopier = function( node ) {\n\tvar angle = node.expand && node.expand.angle || 0,\n\t\tleft = node.expandedTo[0],\n\t\tright = node.expandedTo[1];\n\n\t// node type\n\tif ( node.type !== undefined ) {\n\t\tleft.type = right.type = node.type;\n\t}\n\n\t// direction type\n\tif ( node.typeIn !== undefined ) {\n\t\tleft.typeIn = right.typeOut = node.typeIn;\n\t}\n\tif ( node.typeOut !== undefined ) {\n\t\tleft.typeOut = right.typeIn = node.typeOut;\n\t}\n\n\t// direction\n\tif ( node._dirIn !== undefined ) {\n\t\tleft._dirIn = right._dirOut = node._dirIn;\n\n\t\tif ( node.type === 'smooth' && node._dirOut === undefined ) {\n\t\t\tleft._dirOut = right._dirIn = node._dirIn + Math.PI;\n\t\t}\n\t}\n\tif ( node._dirOut !== undefined ) {\n\t\tleft._dirOut = right._dirIn = node._dirOut;\n\n\t\tif ( node.type === 'smooth' && node._dirIn === undefined ) {\n\t\t\tleft._dirIn = right._dirOut = node._dirOut + Math.PI;\n\t\t}\n\t}\n\t// use angle if direction isn't already defined\n\tif ( left._dirIn === undefined ) { // implies right._dirOut === undefined\n\t\tleft._dirIn = angle - Math.PI / 2;\n\t\tright._dirOut = angle + Math.PI / 2;\n\t}\n\tif ( left._dirOut === undefined ) { // implies right._dirIn === undefined\n\t\tleft._dirOut = angle + Math.PI / 2;\n\t\tright._dirIn = angle - Math.PI / 2;\n\t}\n\n\t// tension\n\tleft.tensionIn = right.tensionOut = node.tensionIn !== undefined ?\n\t\tnode.tensionIn :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n\tleft.tensionOut = right.tensionIn = node.tensionOut !== undefined ?\n\t\tnode.tensionOut :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n};\n\n// Make sure 'line' types are set on both side of segments\n// and if a smooth node is used in a straight segment, update the directions\n// appropriately this can only be done once the types, directions and position\n// of all nodes have been updated can be renamed #prepareLines if no other\n// operation is added\n// TODO: try doing it at the same time as updateContour (once we have more\n// complex glyphs)\nnaive.prepareContour = function( path ) {\n\tpath.nodes.forEach(function(node) {\n\t\tif ( node.typeIn === 'line' && node.previous ) {\n\t\t\tnode.previous.typeOut = 'line';\n\t\t}\n\n\t\tif ( node.typeOut === 'line' && node.next ) {\n\t\t\tnode.next.typeIn = 'line';\n\t\t}\n\t});\n\n\tpath.nodes.forEach(function(node) {\n\t\tif ( node.typeIn === 'line' && node.type === 'smooth' &&\n\t\t\t\tnode.previous ) {\n\n\t\t\tnode._dirIn = Utils.lineAngle(\n\t\t\t\tnode.point, node.previous.point\n\t\t\t);\n\t\t\tnode._dirOut = node._dirIn + Math.PI;\n\t\t}\n\n\t\tif ( node.typeOut === 'line' && node.type === 'smooth' &&\n\t\t\t\tnode.next ) {\n\n\t\t\tnode._dirOut = Utils.lineAngle(\n\t\t\t\tnode.point, node.next.point\n\t\t\t);\n\t\t\tnode._dirIn = node._dirOut + Math.PI;\n\t\t}\n\t});\n};\n\n// sets the position of control points\n// can be renamed #updateControls if no other operation is added\nnaive.updateContour = function( path, curviness ) {\n\tif ( curviness === undefined ) {\n\t\tcurviness = 2 / 3;\n\t}\n\n\tpath.nodes.forEach(function(node) {\n\t\tvar start = node,\n\t\t\tend,\n\t\t\tstartCtrl,\n\t\t\tendCtrl,\n\t\t\tstartType,\n\t\t\tendType,\n\t\t\tstartTension,\n\t\t\tendTension,\n\t\t\tstartDir,\n\t\t\tendDir,\n\t\t\trri;\n\n\t\tif ( !node.next ) {\n\t\t\treturn;\n\t\t}\n\n\t\tend = node.next;\n\t\tstartCtrl = start.handleOut;\n\t\tendCtrl = end.handleIn;\n\n\t\tstartType = start.typeOut;\n\t\tendType = end.typeIn;\n\n\t\tif ( startType === 'line' || endType === 'line' ) {\n\t\t\tstartCtrl.x = 0;\n\t\t\tstartCtrl.y = 0;\n\t\t\tendCtrl.x = 0;\n\t\t\tendCtrl.y = 0;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartTension = start.tensionOut !== undefined ?\n\t\t\tstart.tensionOut :\n\t\t\t( start.tension !== undefined ? start.tension : 1 );\n\t\tendTension = end.tensionIn !== undefined ?\n\t\t\tend.tensionIn :\n\t\t\t( end.tension !== undefined ? end.tension : 1 );\n\n\t\tstartDir = start._dirOut !== undefined ?\n\t\t\tstart._dirOut :\n\t\t\t( start.type === 'smooth' ? start._dirIn + Math.PI : 0 );\n\t\tendDir = end._dirIn !== undefined ?\n\t\t\tend._dirIn :\n\t\t\t( end.type === 'smooth' ? end._dirOut - Math.PI : 0 );\n\n\t\trri = Utils.rayRayIntersection(\n\t\t\tstart._point,\n\t\t\tstartDir,\n\t\t\tend._point,\n\t\t\tendDir\n\t\t);\n\n\t\t// direction of handles is parallel\n\t\tif ( rri === null ) {\n\t\t\tvar angle = Utils.lineAngle( start._point, end._point ),\n\t\t\t\tmiddle = {\n\t\t\t\t\tx: ( end._point.x - start._point.x ) / 2 + start._point.x,\n\t\t\t\t\ty: ( end._point.y - start._point.y ) / 2 + start._point.y\n\t\t\t\t},\n\t\t\t\tp0 = Utils.rayRayIntersection(\n\t\t\t\t\tstart._point, startDir, middle, angle - Math.PI / 2\n\t\t\t\t),\n\t\t\t\tp1 = Utils.rayRayIntersection(\n\t\t\t\t\tmiddle, angle + Math.PI / 2, end._point, endDir\n\t\t\t\t);\n\n\t\t\tif ( p0 === null ) {\n\t\t\t\tstartCtrl.x = 0;\n\t\t\t\tstartCtrl.y = 0;\n\t\t\t\tendCtrl.x = 0;\n\t\t\t\tendCtrl.y = 0;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstartCtrl.x = ( Math.round(p0[0]) - start._point.x ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tstartCtrl.y = ( Math.round(p0[1]) - start._point.y ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tendCtrl.x = ( Math.round(p1[0]) - end._point.x ) *\n\t\t\t\tcurviness * endTension;\n\t\t\tendCtrl.y = ( Math.round(p1[1]) - end._point.y ) *\n\t\t\t\tcurviness * endTension;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartCtrl.x = ( Math.round(rri[0]) - start.point.x ) *\n\t\t\tcurviness * startTension;\n\t\tstartCtrl.y = ( Math.round(rri[1]) - start.point.y ) *\n\t\t\tcurviness * startTension;\n\t\tendCtrl.x = ( Math.round(rri[0]) - end.point.x ) *\n\t\t\tcurviness * endTension;\n\t\tendCtrl.y = ( Math.round(rri[1]) - end.point.y ) *\n\t\t\tcurviness * endTension;\n\t});\n};\n\nvar rdeg = /deg$/;\nObject.defineProperties(paper.PaperScope.prototype.Segment.prototype, {\n\texpand: {\n\t\tget: function() {\n\t\t\treturn this._expand;\n\t\t},\n\t\tset: function( expand ) {\n\t\t\tif ( typeof expand.angle === 'string' && rdeg.test(expand.angle) ) {\n\t\t\t\texpand.angle = parseFloat(expand.angle) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\n\t\t\tthis._expand = expand;\n\t\t}\n\t},\n\tdirIn: {\n\t\tget: function() {\n\t\t\treturn this._dirIn;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirIn = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirIn = dir;\n\t\t\t}\n\t\t}\n\t},\n\tdirOut: {\n\t\tget: function() {\n\t\t\treturn this._dirOut;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirOut = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirOut = dir;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = naive;\n","/*jshint -W098 */\nvar plumin = require('plumin.js'),\n\tassign = require('es6-object-assign').assign,\n\tUtils = require('./Utils.js'),\n\tnaive = require('./naive.js');\n\nvar paper = plumin.paper,\n\tpsProto = paper.PaperScope.prototype,\n\t_ = { assign: assign };\n\nfunction parametricFont( src ) {\n\tvar font = Utils.fontFromSrc( src );\n\n\tObject.keys( src.glyphs ).forEach(function( name ) {\n\t\tvar glyphSrc = src.glyphs[name];\n\n\t\tUtils.ufoToPaper( glyphSrc );\n\n\t\tvar glyph = Utils.glyphFromSrc( glyphSrc, src, naive );\n\n\t\tfont.addGlyph( glyph );\n\n\t\t// Create additional paths for skeletons and set ._dependencies\n\t\t// appropriately\n\t\tnaive.annotator( glyph );\n\n\t\t// solvingOrder might be already available (if this is a subcomponent,\n\t\t// or precomputed in a worker)\n\t\tif ( !glyph.solvingOrder ) {\n\t\t\tglyph.solvingOrder = glyphSrc.solvingOrder =\n\t\t\t\tUtils.solveDependencyTree( glyph );\n\t\t}\n\t});\n\n\t// all glyphs are ready, embed components now\n\tfont.glyphs.forEach(function( _glyph ) {\n\t\tif ( _glyph.embedComponents ) {\n\t\t\t_glyph.embedComponents();\n\t\t}\n\t});\n\n\treturn font;\n}\n\nplumin.parametricFont = parametricFont;\nplumin.Utils = Utils;\nplumin.Utils.naive = naive;\n\npsProto.Font.prototype.update = function( params, set ) {\n\tvar font = this;\n\n\tUtils.updateParameters( font, params );\n\n\tUtils.updateProperties( font, params );\n\n\tUtils.updateXscenderProperties( font, params );\n\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.update( params );\n\t}, this);\n\n\t// We no longer support font transforms. Transforms should happen at the\n\t// glyph level, where they can be individualized.\n\n\treturn this;\n};\n\n/* Update the shape of the glyph, according to formula and parameters\n * 0. before running, nodes have already been created by ParametricFont\n *   (including expanded ones thanks to naive.expandSkeletons). And static\n *   properties have been copied over to those nodes\n * 1. We use the solving order to calculate all node properties\n * 2. transform contours\n * 3. Update components and transform them\n */\npsProto.Glyph.prototype.update = function( _params ) {\n\tvar glyph = this,\n\t\tfont = glyph.parent,\n\t\tmatrix,\n\t\tparams;\n\n\t// 0. calculate local parameters\n\tif ( _params['indiv_glyphs'] &&\n\t\t\tObject.keys( _params['indiv_glyphs'] )\n\t\t\t\t.indexOf( '' + glyph.ot.unicode ) !== -1 ) {\n\n\t\tvar indivParam = {};\n\n\t\tObject.keys( _params ).forEach(function( param ) {\n\t\t\tif ( typeof _params[param] === 'number' ) {\n\t\t\t\tvar groups = _params['indiv_group_param'][\n\t\t\t\t\t\t_params['indiv_glyphs'][glyph.ot.unicode]\n\t\t\t\t\t],\n\t\t\t\t\tmultiplier = groups[param + '_rel'] || {\n\t\t\t\t\t\tstate: 'relative',\n\t\t\t\t\t\tvalue: 1\n\t\t\t\t\t};\n\n\t\t\t\tindivParam[param] = groups[param] ||\n\t\t\t\t\t( multiplier.state === 'relative' ?\n\t\t\t\t\t\t(multiplier.value * _params[param]) :\n\t\t\t\t\t\t(multiplier.value + _params[param])\n\t\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tparams = _.assign( {}, _params, indivParam, glyph.parentParameters );\n\t} else {\n\t\tparams = _.assign( {}, _params, glyph.parentParameters );\n\t}\n\n\tUtils.updateParameters( glyph, params );\n\n\t// parentParameters always overwrite glyph parameters. Use aliases\n\t// (e.g. _width) to let glyph hav the final word\n\t_.assign( params, glyph.parentParameters );\n\n\t// 1. calculate node properties\n\tUtils.updateProperties( glyph, params );\n\n\t// 2. transform contours\n\tthis.contours.forEach(function(contour) {\n\t\t// a. transform the nodes\n\t\tcontour.nodes.forEach(function(node) {\n\t\t\tif ( node.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tnode.transforms.slice(0), node.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\t\tnode.transform(matrix);\n\n\t\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t\t// expanded items\n\t\t\t\t} else {\n\t\t\t\t\tnode.expandedTo.forEach(function( _node ) {\n\t\t\t\t\t\t_node.transform(matrix);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// b. transform the contour\n\t\t// prepare and update outlines and expanded contours, but not\n\t\t// skeletons\n\t\tif ( contour.transforms ) {\n\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\tcontour.transforms.slice(0), contour.transformOrigin\n\t\t\t);\n\n\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\t// We don't want to apply the transforms immediatly on contours,\n\t\t\t\t// otherwise the transformation will add-up on each update.\n\t\t\t\tcontour.applyMatrix = false;\n\t\t\t\tcontour.matrix = matrix;\n\n\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t// expanded items\n\t\t\t} else {\n\t\t\t\tcontour.expandedTo.forEach(function( _contour ) {\n\t\t\t\t\t_contour.applyMatrix = false;\n\t\t\t\t\t_contour.matrix = matrix;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, this);\n\n\t// 3. update components and transform components\n\tif ( this.components.length && font ) {\n\t\t// subcomponents have the parent component as their parent\n\t\t// so search for the font\n\t\twhile ( !('glyphs' in font) ) {\n\t\t\tfont = font.parent;\n\t\t}\n\n\t\tthis.components.forEach(function(component) {\n\t\t\tcomponent.update( params );\n\n\t\t\tif ( component.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tcomponent.transforms.slice(0), component.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tcomponent.applyMatrix = false;\n\t\t\t\tcomponent.matrix = matrix;\n\t\t\t}\n\t\t}, this);\n\t}\n\n\t// 4. transform whole glyph\n\tif ( glyph.transforms ) {\n\n\t\tmatrix = Utils.transformsToMatrix(\n\t\t\tglyph.transforms.slice(0), glyph.transformOrigin\n\t\t);\n\n\t\tglyph.applyMatrix = false;\n\t\tglyph.matrix = matrix;\n\t}\n\n\treturn this;\n};\n\n// Before updating SVG or OpenType data, we must determine paths exports\n// directions. Basically, everything needs to be clockwise.\n// this method needs to be called only after the first update, otherwise the\n// directions won't be known\npsProto.Outline.prototype.prepareDataUpdate = function() {\n\tif ( this.isPrepared ) {\n\t\treturn;\n\t}\n\n\tthis.children.forEach(function(contour) {\n\t\t// expanded contours are handled from their skeleton\n\t\tif ( contour.expandedFrom ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( contour.skeleton !== true ) {\n\t\t\tcontour.exportReversed = !contour.isClockwise();\n\n\t\t} else if ( !contour.expandedTo[1] ) {\n\t\t\tcontour.expandedTo[0].exportReversed =\n\t\t\t\t!contour.expandedTo[0].isClockwise();\n\n\t\t} else {\n\t\t\tvar isClockwise = contour.isClockwise();\n\n\t\t\tcontour.expandedTo[0].exportReversed = !isClockwise;\n\t\t\tcontour.expandedTo[1].exportReversed = !isClockwise;\n\t\t}\n\t});\n\n\tthis.isPrepared = true;\n};\n\nvar updateSVGData =\n\t\tpaper.PaperScope.prototype.Outline.prototype.updateSVGData,\n\tupdateOTCommands =\n\t\tpaper.PaperScope.prototype.Outline.prototype.updateOTCommands;\n\npsProto.Outline.prototype.updateSVGData = function() {\n\tif ( !this.isPrepared ) {\n\t\tthis.prepareDataUpdate();\n\t}\n\n\tupdateSVGData.apply( this, arguments );\n};\n\npsProto.Outline.prototype.updateOTCommands = function() {\n\tif ( !this.isPrepared ) {\n\t\tthis.prepareDataUpdate();\n\t\tthis.isPrepared = true;\n\t}\n\n\tupdateOTCommands.apply( this, arguments );\n};\n\nmodule.exports = plumin;\n","var Utils = {};\n\n// The following function should be useless, thanks to paper\nUtils.lineLineIntersection = function( p1, p2, p3, p4 ) {\n\tvar x1 = p1.x,\n\t\ty1 = p1.y,\n\t\tx2 = p2.x,\n\t\ty2 = p2.y,\n\t\tx3 = p3.x,\n\t\ty3 = p3.y,\n\t\tx4 = p4.x,\n\t\ty4 = p4.y,\n\t\td = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n\tif ( d === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn new Float32Array([\n\t\t( (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4) ) /\n\t\td,\n\t\t( (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4) ) /\n\t\td\n\t]);\n};\n\n// Find the intersection of two rays.\n// A ray is defined by a point and an angle.\nUtils.rayRayIntersection = function( p1, a1, p2, a2 ) {\n\t// line equations\n\tvar a = Math.tan(a1),\n\t\tb = Math.tan(a2),\n\t\tc = p1.y - a * p1.x,\n\t\td = p2.y - b * p2.x,\n\t\tx,\n\t\ty;\n\n\t// When searching for lines intersection,\n\t// angles can be normalized to 0 < a < PI\n\t// This will be helpful in detecting special cases below.\n\ta1 = a1 % Math.PI;\n\tif ( a1 < 0 ) {\n\t\ta1 += Math.PI;\n\t}\n\ta2 = a2 % Math.PI;\n\tif ( a2 < 0 ) {\n\t\ta2 += Math.PI;\n\t}\n\n\t// no intersection\n\tif ( a1 === a2 ) {\n\t\treturn null;\n\t}\n\n\t// Optimize frequent and easy special cases.\n\t// Without optimization, results would be incorrect when cos(a) === 0\n\tif ( a1 === 0 ) {\n\t\ty = p1.y;\n\t} else if ( a1 === Math.PI / 2 ) {\n\t\tx = p1.x;\n\t}\n\tif ( a2 === 0 ) {\n\t\ty = p2.y;\n\t} else if ( a2 === Math.PI / 2 ) {\n\t\tx = p2.x;\n\t}\n\n\t// easiest case\n\tif ( x !== undefined && y !== undefined ) {\n\t\treturn new Float32Array([ x, y ]);\n\t}\n\n\t// other cases that can be optimized\n\tif ( a1 === 0 ) {\n\t\treturn new Float32Array([ ( y - d ) / b, y ]);\n\t}\n\tif ( a1 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, b * x + d ]);\n\t}\n\tif ( a2 === 0 ) {\n\t\treturn new Float32Array([ ( y - c ) / a, y ]);\n\t}\n\tif ( a2 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, a * x + c ]);\n\t}\n\n\t// intersection from two line equations\n\t// algo: http://en.wikipedia.org/wiki/Line–line_intersection#Given_the_equations_of_the_lines\n\treturn new Float32Array([\n\t\tx = (d - c) / (a - b),\n\t\t// this should work equally well with ax+c or bx+d\n\t\ta * x + c\n\t]);\n};\n\n// return the angle between two points\nUtils.lineAngle = function( p0, p1 ) {\n\treturn Math.atan2( p1.y - p0.y, p1.x - p0.x );\n};\n\nUtils.onLine = function( params ) {\n\tvar origin = params.on[0],\n\t\tvector = [\n\t\t\tparams.on[1].x - params.on[0].x,\n\t\t\tparams.on[1].y - params.on[0].y\n\t\t];\n\n\treturn 'x' in params ?\n\t\t( params.x - origin.x ) / vector[0] * vector[1] + origin.y :\n\t\t( params.y - origin.y ) / vector[1] * vector[0] + origin.x;\n};\n\nUtils.pointOnCurve = function(pointHandleOut,\n\tpointHandleIn,\n\tdistanceFromOut,\n\tinverseOrientation,\n\tlinePrecision) {\n\tlinePrecision = linePrecision || 3;\n\tvar length = 0;\n\tvar previousPoint;\n\n\tvar points;\n\tif (!inverseOrientation) {\n\t\tpoints = [\n\t\t\tpointHandleOut.point,\n\t\t\tpointHandleOut.point.add(pointHandleOut.handleOut),\n\t\t\tpointHandleIn.point.add(pointHandleIn.handleIn),\n\t\t\tpointHandleIn.point\n\t\t];\n\t} else {\n\t\tpoints = [\n\t\t\tpointHandleIn.point,\n\t\t\tpointHandleIn.point.add(pointHandleIn.handleIn),\n\t\t\tpointHandleOut.point.add(pointHandleOut.handleOut),\n\t\t\tpointHandleOut.point\n\t\t];\n\t}\n\n\tfor (var i = 0; i < linePrecision; i++) {\n\t\tvar point = Utils.deCasteljau(points,\n\t\t\t( i / ( linePrecision - 1 ) ) );\n\n\t\tif (previousPoint) {\n\t\t\tlength += Utils.distance(previousPoint.x,\n\t\t\t\tpreviousPoint.y,\n\t\t\t\tpoint.x,\n\t\t\t\tpoint.y);\n\n\t\t}\n\n\t\tpreviousPoint = point;\n\t}\n\n\tvar t = length === 0 ? 0 : distanceFromOut / length;\n\n\tt = Math.max(0.001, Math.min(1, t));\n\n    return Utils.deCasteljau(points, t);\n};\n\nUtils.deCasteljau = function(points, t) {\n\tvar newPoints = [];\n\tfor (var i = 1; i < points.length; i++) {\n\t\tnewPoints.push(\n\t\t\tpoints[i - 1]\n\t\t\t\t.multiply(1 - t)\n\t\t\t\t.add(\n\t\t\t\t\tpoints[i]\n\t\t\t\t\t\t.multiply(t)\n\t\t\t\t)\n\t\t\t);\n\t}\n\n\tif (newPoints.length === 1) {\n\t\tvar p0 = { x: 0, y: 0 },\n\t\t\tp1 = {\n\t\t\tx: points[1].x - points[0].x,\n\t\t\ty: points[1].y - points[0].y\n\t\t};\n\n\t\treturn {\n\t\t\tx: newPoints[0].x,\n\t\t\ty: newPoints[0].y,\n\t\t\tnormal: Utils.lineAngle(p0, p1)\n\t\t};\n\t} else {\n\t\treturn Utils.deCasteljau(newPoints, t);\n\t}\n};\n\nUtils.distance = function(x1, y1, x2, y2) {\n\treturn Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y1 - y2, 2));\n};\n\nUtils.log = function() {\n\tconsole.log.apply( console, arguments );\n\treturn arguments[0];\n};\n\nmodule.exports = Utils;\n"]}