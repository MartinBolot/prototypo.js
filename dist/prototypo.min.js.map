{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/deptree/index.js","node_modules/es6-object-assign/src/index.js","node_modules/lodash/internal/arrayCopy.js","node_modules/lodash/internal/arrayEach.js","node_modules/lodash/internal/baseAssign.js","node_modules/lodash/internal/baseClone.js","node_modules/lodash/internal/baseCopy.js","node_modules/lodash/internal/baseFor.js","node_modules/lodash/internal/baseForOwn.js","node_modules/lodash/internal/baseProperty.js","node_modules/lodash/internal/bindCallback.js","node_modules/lodash/internal/bufferClone.js","node_modules/lodash/internal/createBaseFor.js","node_modules/lodash/internal/getLength.js","node_modules/lodash/internal/getNative.js","node_modules/lodash/internal/initCloneArray.js","node_modules/lodash/internal/initCloneByTag.js","node_modules/lodash/internal/initCloneObject.js","node_modules/lodash/internal/isArrayLike.js","node_modules/lodash/internal/isIndex.js","node_modules/lodash/internal/isIterateeCall.js","node_modules/lodash/internal/isLength.js","node_modules/lodash/internal/isObjectLike.js","node_modules/lodash/internal/shimKeys.js","node_modules/lodash/internal/toObject.js","node_modules/lodash/lang/clone.js","node_modules/lodash/lang/isArguments.js","node_modules/lodash/lang/isArray.js","node_modules/lodash/lang/isFunction.js","node_modules/lodash/lang/isNative.js","node_modules/lodash/lang/isObject.js","node_modules/lodash/object/keys.js","node_modules/lodash/object/keysIn.js","node_modules/lodash/utility/identity.js","node_modules/plumin.js/dist/plumin.js","src/Utils.js","src/naive.js","src/prototypo.js","src/updateUtils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","prototypo","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"DepTree","nodes","prototype","add","node","dependants","Array","resolveNode","resolved","processing","deps","forEach","dep","indexOf","push","resolve","assign","target","firstSource","undefined","TypeError","to","Object","arguments","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","polyfill","defineProperty","configurable","writable","value","arrayCopy","source","array","index","arrayEach","iteratee","baseCopy","baseAssign","object","baseForOwn","initCloneArray","initCloneByTag","initCloneObject","isArray","isObject","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","cloneableTags","objectProto","objToString","toString","baseClone","isDeep","customizer","key","stackA","stackB","result","isArr","tag","isFunc","subValue","props","createBaseFor","baseFor","baseProperty","identity","bindCallback","func","thisArg","argCount","collection","accumulator","other","apply","ArrayBuffer","Uint8Array","bufferClone","buffer","byteLength","view","set","toObject","fromRight","keysFunc","iterable","getLength","isNative","getNative","hasOwnProperty","constructor","input","reFlags","Ctor","byteOffset","exec","lastIndex","isLength","isArrayLike","reIsUint","MAX_SAFE_INTEGER","isIndex","test","isIterateeCall","type","isObjectLike","isArguments","keysIn","shimKeys","propsLength","allowIndexes","clone","propertyIsEnumerable","nativeIsArray","isFunction","reIsHostCtor","fnToString","Function","reIsNative","RegExp","replace","nativeKeys","isProto","skipIndexes","plumin","opentype","argument","predicate","message","assert",2,"line","ctx","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke",3,"cffStandardStrings","cffStandardEncoding","cffExpertEncoding","standardNames","DefaultEncoding","font","charToGlyphIndex","c","charCodeAt","glyphs","glyph","j","unicodes","CmapEncoding","cmap","glyphIndexMap","CffEncoding","encoding","charset","charName","GlyphNames","post","version","names","slice","numberOfGlyphs","glyphNameIndex","nameToGlyphIndex","name","glyphIndexToName","gid","addGlyphNames","tables","charCodes","glyphIndex","addUnicode","parseInt","cffEncoding","glyphNames",4,"path","sfnt","Font","options","familyName","styleName","designer","designerURL","manufacturer","manufacturerURL","license","licenseURL","description","copyright","trademark","unitsPerEm","ascender","descender","supported","hasChar","charToGlyph","stringToGlyphs","nameToGlyph","nametoGlyphIndex","getKerningValue","leftGlyph","rightGlyph","gposKerning","getGposKerningValue","kerningPairs","forEachGlyph","text","x","y","fontSize","callback","kerning","fontScale","advanceWidth","kerningValue","getPath","fullPath","Path","gX","gY","gFontSize","glyphPath","extend","draw","drawPoints","drawMetrics","validate","warnings","_this","assertStringAttribute","attrName","trim","toTables","fontToTable","toBuffer","sfntTable","bytes","encode","intArray","download","fileName","requestFileSystem","webkitRequestFileSystem","TEMPORARY","fs","root","getFile","create","fileEntry","createWriter","writer","dataView","DataView","blob","Blob","write","addEventListener","location","href","toURL","err","./encoding","./path","./tables/sfnt",5,"check","Glyph","unicode","xMin","yMin","xMax","yMax","scale","p","commands","cmd","quadraticCurveTo","curveTo","closePath","getContours","points","contours","currentContour","pt","lastPointOfContour","getMetrics","xCoords","yCoords","metrics","Math","min","max","leftSideBearing","rightSideBearing","drawCircles","PI_SQ","PI","arc","fill","blueCircles","redCircles","fillStyle","lineWidth","strokeStyle","./check","./draw",6,"_font","parse","cff","glyf","gpos","head","hhea","hmtx","kern","loca","maxp","_name","os2","toArrayBuffer","arrayBuffer","data","loadFromFile","readFile","loadFromUrl","url","request","XMLHttpRequest","open","responseType","onload","status","statusText","response","send","parseBuffer","indexToLocFormat","hmtxOffset","glyfOffset","locaOffset","cffOffset","kernOffset","gposOffset","getFixed","outlinesFormat","getTag","numTables","getUShort","offset","getULong","numberOfHMetrics","numGlyphs","fontFamily","fontSubfamily","shortVersion","locaTable","load","isNode","loadFn","_parse","./font","./glyph","./parse","./tables/cff","./tables/cmap","./tables/glyf","./tables/gpos","./tables/head","./tables/hhea","./tables/hmtx","./tables/kern","./tables/loca","./tables/maxp","./tables/name","./tables/os2","./tables/post",7,"getByte","getUint8","getCard8","getUint16","getCard16","getShort","getInt16","getUint32","decimal","fraction","String","fromCharCode","getInt8","getOffset","offSize","v","getBytes","startOffset","endOffset","bytesToString","typeOffsets","byte","uShort","short","uLong","fixed","longDateTime","Parser","relativeOffset","parseByte","parseChar","parseCard8","parseUShort","parseCard16","parseSID","parseOffset16","parseShort","parseF2Dot14","parseULong","parseFixed","parseOffset16List","parseUShortList","count","offsets","parseString","string","parseTag","parseLongDateTime","parseVersion","major","minor","skip","amount",8,"strokeWidth","bezierCurveTo","quadTo","close","pathOrCommands","toPathData","decimalPlaces","floatToString","round","toFixed","packValues","d","toSVG","svg",9,"sizeOf","Table","tableName","fields","field","optionKeys","k","sizeOfFunction","TABLE","./types",10,"_glyph","table","equals","b","parseCFFIndex","start","conversionFn","objects","objectOffset","offsetSize","pos","parseFloatOperand","parser","eof","lookup","n1","n2","parseFloat","parseOperand","b0","b1","b2","b3","b4","entriesToObject","entries","values","parseCFFDict","size","operands","op","getCFFString","strings","interpretDict","dict","meta","newDict","m","parseCFFHeader","header","formatMajor","formatMinor","TOP_DICT_META","PRIVATE_DICT_META","parseCFFTopDict","parseCFFPrivateDict","parseCFFCharset","nGlyphs","sid","format","parseCFFEncoding","enc","nCodes","nRanges","first","nLeft","parseCFFCharstring","c1x","c1y","c2x","c2y","stack","nStems","haveWidth","width","defaultWidthX","newContour","parseStems","hasWidthArg","shift","nominalWidthX","codeIndex","subrCode","jpx","jpy","c3x","c3y","c4x","c4y","pop","subrsBias","subrs","abs","console","log","gsubrsBias","gsubrs","calcCFFSubroutineBias","bias","parseCFFTable","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDictData","topDict","privateDictOffset","privateDict","subrOffset","subrIndex","charStringsIndex","charStrings","charString","encodeString","makeHeader","makeNameIndex","fontNames","makeDict","attrs","entry","makeTopDict","makeTopDictIndex","topDicts","makeStringIndex","makeGlobalSubrIndex","makeCharsets","glyphName","glyphSID","glyphToOps","ops","dx","dy","_13","_23","dx1","dy1","dx2","dy2","makeCharStringsIndex","makePrivateDict","makePrivateDictIndex","privateDicts","makeCFFTable","fullName","weight","weightName","private","privateAttrs","postScriptName","charsets","privateDictIndex","make","../encoding","../glyph","../parse","../path","../table",11,"parseCmapTable","platformId","encodingId","language","segCount","endCountParser","startCountParser","idDeltaParser","idRangeOffsetParser","glyphIndexOffset","endCount","startCount","idDelta","idRangeOffset","addSegment","segments","end","delta","addTerminatorSegment","makeCmapTable","sort","segCountX2","searchRange","pow","floor","entrySelector","rangeShift","endCounts","startCounts","idDeltas","idRangeOffsets","glyphIds","segment","concat","glyphId","../check",12,"parseGlyphCoordinate","flag","previousValue","shortVectorBitMask","sameBitMask","parseGlyph","numberOfContours","flags","endPointIndices","instructionLength","instructions","numberOfCoordinates","repeatCount","point","onCurve","px","py","isComposite","components","moreComponents","component","xScale","scale01","scale10","yScale","transformPoints","transform","newPoints","newPt","contour","firstPt","lastPt","curvePt","realFirstPoint","prevPt","midPt","parseGlyfTable","nextOffset","componentGlyph","transformedPoints",13,"parseTaggedListTable","list","parseCoverageTable","coverage","begin","parseClassDefTable","startGlyph","glyphCount","classes","glyphID","rangeCount","startGlyphs","endGlyphs","classValues","parsePairPosSubTable","coverageOffset","valueFormat1","valueFormat2","value1","value2","sharedPairSets","pairSetCount","pairSet","pairSetOffsets","firstGlyph","pairSetOffset","sharedPairSet","pairValueCount","secondGlyph","pairs","classDef1Offset","classDef2Offset","class1Count","class2Count","getClass1","getClass2","kerningMatrix","kerningRow","covered","class1","class2","parseLookupTable","lookupType","lookupFlag","useMarkFilteringSet","subTableCount","subTableOffsets","markFilteringSet","subtables","parseGposTable","tableVersion","lookupListOffset","lookupCount","lookupTableOffsets","lookupListAbsoluteOffset",14,"parseHeadTable","fontRevision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","glyphDataFormat","makeHeadTable",15,"parseHheaTable","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","makeHheaTable",16,"parseHmtxTable","numMetrics","makeHmtxTable",17,"parseKernTable","subTableVersion","nPairs","leftIndex","rightIndex",18,"parseLocaTable","parseFn","glyphOffsets","glyphOffset",19,"parseMaxpTable","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","makeMaxpTable",20,"nameTableNames","parseNameTable","stringOffset","unknownCount","platformID","encodingID","languageID","nameID","property","codePoints","str","langTagCount","makeNameRecord","addMacintoshNameRecord","recordID","stringBytes","STRING","records","addWindowsNameRecord","utf16Bytes","UTF16","makeNameTable","../types",21,"unicodeRanges","getUnicodeRange","range","parseOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContent","makeOS2Table",22,"parsePostTable","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","nameLength","makePostTable",23,"log2","computeCheckSum","sum","makeTableRecord","checkSum","makeSfntTable","highestPowerOf2","recordFields","tableFields","tableLength","tableRecord","isNaN","r1","r2","metricsForChar","chars","notFoundMetrics","average","vs","fontToSfntTable","xMins","yMins","xMaxs","yMaxs","advanceWidths","leftSideBearings","rightSideBearings","firstCharIndex","lastCharIndex","position","globals","advanceWidthAvg","maxLeftSideBearing","headTable","hheaTable","maxpTable","os2Table","hmtxTable","cmapTable","nameTable","uniqueID","preferredFamily","preferredSubfamily","postTable","cffTable","checkSumAdjusted","./cff","./cmap","./head","./hhea","./hmtx","./maxp","./name","./os2","./post",24,"LIMIT16","LIMIT32","decode","constant","BYTE","CHAR","CHARARRAY","USHORT","SHORT","UINT24","ULONG","LONG","FIXED","FWORD","UFWORD","LONGDATETIME","TAG","Card8","Card16","OffSize","SID","NUMBER","NUMBER16","NUMBER32","NAME","INDEX","dataSize","OBJECT","encodedOffsets","offsetEncoder","encodedOffset","DICT","OPERAND","OPERATOR","OP","wmm","WeakMap","CHARSTRING","has","get","encodingFunction","LITERAL","paper","noCanvas","process","browser","WorkerGlobalScope","Base","hidden","iter","bind","forIn","proto","__proto__","describe","obj","__lookupGetter__","__lookupSetter__","_define","__defineGetter__","__defineSetter__","inject","dest","src","beans","preserve","beansNames","val","substring","res","prev","bean","base","match","toLowerCase","isPlainObject","part","each","exclude","statics","ctor","initialize","pick","_id","_class","Formatter","instance","number","join","getClassName","exportJSON","toJSON","serialize","_set","dontCheck","orig","_filtering","obj1","obj2","checkKeys","o1","o2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","formatter","precision","definitions","references","item","id","ref","unshift","_serialize","_compact","deserialize","json","_data","isRoot","isDictionary","args","JSON","stringify","importJSON","isTarget","Item","Layer","insert","splice","items","remove","append","_index","removed","capitalize","toUpperCase","camelize","all","chr","hyphenate","Emitter","on","_eventTypes","handlers","_callbacks","install","off","uninstall","once","emit","event","stop","responds","attach","detach","fire","_installEvents","events","_events","types","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","project","projects","tools","palettes","_scopes","support","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","navigator","userAgent","v1","v2","rv","chrome","versionNumber","webkit","atom","getView","getPaper","execute","PaperScript","View","updateFocus","scope","that","setup","element","Project","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","val1","val2","separator","height","rectangle","Numerical","abscissas","weights","sqrt","TOLERANCE","EPSILON","MACHINE_EPSILON","KAPPA","isZero","integrate","w","A","B","Ax","findRoot","df","tolerance","fx","nx","solveQuadratic","roots","Infinity","D","gmC","mult","LOG10E","isFinite","R","q","solveCubic","c2","ec","x0","qd","tmp","Point","arg0","arg1","hasY","angle","setAngle","setLength","_angle","cos","sin","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","atan2","div","NaN","dot","acos","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","current","rotate","center","subtract","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","contains","isClose","isColinear","isOrthogonal","point1","point2","random","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","next","rect","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","left","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","concatenate","a1","c1","d1","a2","d2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","bounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","apx","apy","avx","avy","bpx","bpy","bvx","bvy","ta","tb","vx","vy","v2x","v2y","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","_drawSelection","Symbol","dontCenter","setDefinition","_definition","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","PlacedSymbol","symbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","visible","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","parent","setParent","mouseFlags","mousedown","mousedrag","click","doubleclick","mouseup","mousemove","mouseenter","mouseleave","mouseEvent","counters","_eventCounters","onFrame","_animateItem","onLoad","animate","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","children","_children","namedChildren","_namedChildren","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getRegistration","setRegistration","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","child","setBounds","cache","_boundsCache","ids","cached","_internal","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","copy","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","ceil","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","getIntersections","guides","parentTotalMatrix","_totalMatrix","totalMatrix","tolerancePadding","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","class","checkBounds","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","matches","compare","matchObject","firstOnly","overlapping","inside","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","reduce","namedArray","notifyParent","replaceWith","reverseChildren","reverse","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","toCanvasStyle","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","getViewMatrix","normalBlend","nativeBlend","direct","dontStart","clip","_canComposite","mainCtx","itemOffset","prevOffset","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","getWindingRule","getCornerCenter","halfSize","dir","corner","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","getElement","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","modify","setContext","context","toDataURL","loaded","update","document","getElementById","Image","setTimeout","DomEvent","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","isLinear","_point","_handleIn","_handleOut","_path","curves","_curves","curve","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","setLinear","linear","next1","getNext","next2","getPrevious","isArc","handle1","handle2","_selectionState","state","oldState","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","removeSegment","interpolate","segment0","segment1","coef","dxPoint","dyPoint","dxHandleIn","dyHandleIn","dxHandleOut","dyHandleOut","change","Curve","arg6","arg7","_segment2","segment2","_length","getPoint1","setPoint1","getPoint2","setPoint2","getHandle1","setHandle1","getHandle2","setHandle2","getSegment1","getSegment2","getPoints","getPart","getPartLength","filterIntersections","_getParameter","isParameter","parameter","getParameterAt","ignoreLinear","subdivide","split","p1","h1","h2","p2","evaluate","p1x","p1y","p2x","p2y","bx","ax","by","ay","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","txs","tys","sx","sy","isFlatEnough","ux","uy","getEdgeSum","_addBounds","v0","v3","padding","tMin","tMax","getLocationAt","getLocationOf","getOffsetOf","loc","getNearestLocation","minDist","minT","refine","dist","step","getNearestPoint","getLengthIntegrand","getIterations","ds","forward","rangeLength","guess","addLocation","locations","curve1","t1","curve2","t2","addCurveIntersections","uMin","uMax","oldTDiff","recursion","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","tMinNew","tMaxNew","tDiff","hull","getConvexHull","tMinClip","tMaxClip","clipConvexHull","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","flip","pmax","distZero","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rlx2","rvl","rvc","tc","tl","addLineIntersection","linear1","linear2","c1p1","c1p2","c2p1","c2p2","_expand","last","_curve","_curve2","_parameter","_parameter2","loc1","loc2","path1","path2","getParameter","getIntersection","_point2","_distance","getSegment","_preferFirst","_segment","_uncached","intersection","_intersection","_getOffset","getCurveOffset","getPointAt","curves1","curves2","matrix1","matrix2","length1","length2","values2","values1","seg1","seg2","setPathData","relative","previous","control","getCoord","command","lower","move","cubicCurveTo","arcTo","winding","_getWinding","closed","setSegments","_clockwise","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","curX","curY","prevX","prevY","inX","inY","outX","outY","skipLine","isPolygon","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","simplify","fitter","PathFitter","fit","isClockwise","setClockwise","clockwise","last1","last2","first2","first1","path0","toShape","topCenter","shape","numSegments","strokePadding","cap","hitStroke","hitFill","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","_addBevelJoin","_addSquareCap","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","overlap","knots","f1","f2","ie","je","getCurrentSegment","moveBy","through","extent","vector","middle","large","epsilon","rxSq","rySq","xSq","ySq","l1","l2","throughSide","centerSide","ext","inc","z","out","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","prevCoords","processSegment","joinBounds","addRound","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getNormal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","compoundpath0","compoundpath1","paths","getCurrentPath","operators","computeBoolean","operation","operator","preparePath","reorient","_path1","_path2","splitPath","monoCurves","collect","_getMonoCurves","_winding","startSeg","totalLength","windingSum","curveLength","getTangentAt","getWinding","tracePaths","intersections","linearHandles","resetLinear","newCurve","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","prevT","slope","selfOp","_visited","inter","startInterSeg","added","interSeg","c4","c3","t3","t4","w3","w4","nextCurve","nextSeg","firstSegment","lastSegment","prevCurve","insertCurve","y0","handleCurve","y3","getInteriorPoint","xIntercepts","maxRecursion","minDifference","addCurve","computeParts","maxT","halfT","prevVal","prevLen","error","fitCubic","tan1","tan2","pt1","pt2","uPrime","chordLengthParameterize","maxError","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","C","X","detC0C1","alpha1","alpha2","detC0X","detXC1","c0","segLength","diff","degree","maxDist","P","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","gray","rgb","hsb","hsl","gradient","componentParsers","colorCache","colorCtx","fromCSS","hsbIndices","converters","rgb-hsb","h","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","hasOverlap","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","_stops","origin","destination","canvasGradient","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","acronym","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","nativeRequest","requested","callbacks","focused","timer","focus","blur","handleCallbacks","setInterval","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","getCanvasSize","_windowEvents","resize","setViewSize","_setViewSize","Stats","_stats","stats","domElement","appendChild","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","onResize","_time","_count","_requestFrame","_requested","_handleFrame","now","Date","_before","_handlingFrame","time","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tool","prevFocus","tempFocus","dragging","handleMouseMove","_handleEvent","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","HTMLCanvasElement","deviceRatio","backingStoreRatio","prevFont","measureText","downPoint","lastPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","callEvent","MouseEvent","isStopped","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","specialKeys",27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","space","charCodeMap","keyMap","downCode","handleKey","keyCode","charCode","specialKey","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","method","xhr","ActiveXObject","overrideMimeType","onreadystatechange","readyState","responseText","canvases","createElement","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","attribute","fromSVG","exportFilter","SVGNamespaces","xlink","setAttributes","namespace","setAttributeNS","createElementNS","getTransform","coordinates","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","exporters","applyStyle","visibility","svgs","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","map","importGroup","childNodes","isClip","currentStyle","applyAttributes","importSVG","importPoly","importPath","pathData","importGradient","isRadial","importers","#document","nextSibling","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","applyTransform","transforms","applyOpacity","attributes","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","styles","group","parentNode","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","onImport","expandShapes","Collection","cb","wrapConstructor","useConstructed","wrapper","arr","params","rconstructor","constructorFilter","unwrapArg","isPlural","unwrapArgs","proxy","methodNames","getOwnPropertyNames","filter","plural","fontinfo","ot","glyphMap","charMap","altMap","_subset","addGlyph","addGlyphs","fonts","addedFonts","delete","styleElement","styleSheet","styleSheets","ss","ownerNode","_lastSubset","normalizeSubset","lastIndexOf","getGlyphSubset","subset","font0","font1","updateSVGData","updateOTCommands","importOT","otFont","otGlyph","_URL","URL","webkitURL","addToFonts","fontface","FontFace","createObjectURL","fontObjectURL","revokeObjectURL","deleteRule","insertRule","onloadend","dispatchEvent","readAsDataURL","../node_modules/opentype.js/dist/opentype.js","../node_modules/paper/dist/paper-core.js","./Glyph.js","Outline","anchors","parentAnchors","addAnchor","addAnchors","addParentAnchor","glyph0","glyph1","svgData","addContour","./Outline.js","outline0","outline1","defineProperties","firstNode","lastNode","_updateData","pushSimple","pushBezier","exportReversed","ctrl1","ctrl2","Node","./Collection.js","./Font.js","./Node.js","./Outline","./Path.js","updateUtils","Utils","_","ufoToPaper","parameters","outline","parentParameters","lib","transformOrigin","solvingOrder","fontFromSrc","info","filteredSrc","controls","presets","createUpdaters","mergeStatic","solveDependencyTree","glyphFromSrc","fontSrc","naive","embed","anchorSrc","contourSrc","nodeSrc","embedComponents","componentSrc","annotator","addComponent","cursor","propFromCursor","_dependencies","_parameters","_updaters","leaf","_operation","depTree","dependencyTree","order","simplified","simplifyResolutionOrder","parentSrc","leafSrc","currCursor","rdeg","transformsToMatrix","Float32Array","curr","rslt","updateParameters","updateProperties","_cursor","propName","inSkeleton","autoExpandedNodeSrc","side","expandedNodeUpdater","expandedTo","skeletonCopier","explicitExpandedNodeSrc","expandedContourSrc","curviness","prepareContour","updateContour","additionalContours","skeleton","leftContour","rightContour","leftNodes","rightNodes","leftNodesSrc","rightNodesSrc","leftSrc","rightSrc","expandedFrom","typeIn","typeOut","addContours","isLeft","distr","_dirOut","_dirIn","tensionIn","tensionOut","tension","lineAngle","startCtrl","endCtrl","startType","endType","startTension","endTension","startDir","endDir","rri","rayRayIntersection","dirIn","dirOut","parametricFont","glyphSrc","_params","_node","_contour","prepareDataUpdate","isPrepared","lineLineIntersection","p4","x3","x4","y4","onLine","pointOnCurve","pointHandleOut","pointHandleIn","distanceFromOut","inverseOrientation","linePrecision","previousPoint","deCasteljau"],"mappings":"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IAAA,OACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,MAAAlE,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AAArf,GAAAF,GAAA,GAAAmK,KAAAoV,IAAAtf,GAAAE,GAAA,IAGA+tF,OAAAl0E,IAAA,WACAD,QAAAC,IAAA3d,MAAA0d,QAAA1iB,UACA,OAAAA,WAAA,GAGAhD,QAAAD,QAAA85F;AtCtLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChhEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACptkrgthjsourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var DepTree = function() {\n  this.nodes = {}; \n};\n\nDepTree.prototype.add = function(node, dependants) {\n  var self = this;\n\n  if (!dependants) {\n    dependants = [];\n  } else if (!(dependants instanceof Array)) {\n    dependants = [dependants];\n  }\n\n  this.nodes[node] = dependants;\n};\n\n\nDepTree.prototype.resolveNode = function(node, resolved, processing) {\n\n  var self = this;\n\n  resolved = resolved || [];\n  processing = processing || {};\n  var deps = this.nodes[node] || [];\n\n  processing[node] = true;\n\n  deps.forEach(function(dep) {\n    if (resolved.indexOf(dep) != -1) {\n      return;\n    }\n    if (processing[dep]) {\n      throw new Error('Circular dependency: '+dep);\n    }\n    self.resolveNode(dep, resolved, processing);\n  });\n\n  if (resolved.indexOf(node) == -1) {\n    processing[node] = false;\n    resolved.push(node);\n  }\n  return resolved;\n};\n\nDepTree.prototype.resolve = function() {\n\n  var resolved = [];\n  for (var node in this.nodes) {\n    this.resolveNode(node, resolved);\n  }\n\n  return resolved;\n\n};\n\n\nmodule.exports = DepTree;\n","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction arrayCopy(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayCopy;\n","/**\n * A specialized version of `_.forEach` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var baseCopy = require('./baseCopy'),\n    keys = require('../object/keys');\n\n/**\n * The base implementation of `_.assign` without support for argument juggling,\n * multiple sources, and `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return source == null\n    ? object\n    : baseCopy(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var arrayCopy = require('./arrayCopy'),\n    arrayEach = require('./arrayEach'),\n    baseAssign = require('./baseAssign'),\n    baseForOwn = require('./baseForOwn'),\n    initCloneArray = require('./initCloneArray'),\n    initCloneByTag = require('./initCloneByTag'),\n    initCloneObject = require('./initCloneObject'),\n    isArray = require('../lang/isArray'),\n    isObject = require('../lang/isObject');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\ncloneableTags[dateTag] = cloneableTags[float32Tag] =\ncloneableTags[float64Tag] = cloneableTags[int8Tag] =\ncloneableTags[int16Tag] = cloneableTags[int32Tag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[stringTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[mapTag] = cloneableTags[setTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * The base implementation of `_.clone` without support for argument juggling\n * and `this` binding `customizer` functions.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The object `value` belongs to.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates clones with source counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return arrayCopy(value, result);\n    }\n  } else {\n    var tag = objToString.call(value),\n        isFunc = tag == funcTag;\n\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return baseAssign(result, value);\n      }\n    } else {\n      return cloneableTags[tag]\n        ? initCloneByTag(value, tag, isDeep)\n        : (object ? value : {});\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == value) {\n      return stackB[length];\n    }\n  }\n  // Add the source value to the stack of traversed objects and associate it with its clone.\n  stackA.push(value);\n  stackB.push(result);\n\n  // Recursively populate clone (susceptible to call stack limits).\n  (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n    result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @returns {Object} Returns `object`.\n */\nfunction baseCopy(source, props, object) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    object[key] = source[key];\n  }\n  return object;\n}\n\nmodule.exports = baseCopy;\n","var createBaseFor = require('./createBaseFor');\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./baseFor'),\n    keys = require('../object/keys');\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var identity = require('../utility/identity');\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\nmodule.exports = bindCallback;\n","/** Native method references. */\nvar ArrayBuffer = global.ArrayBuffer,\n    Uint8Array = global.Uint8Array;\n\n/**\n * Creates a clone of the given array buffer.\n *\n * @private\n * @param {ArrayBuffer} buffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction bufferClone(buffer) {\n  var result = new ArrayBuffer(buffer.byteLength),\n      view = new Uint8Array(result);\n\n  view.set(new Uint8Array(buffer));\n  return result;\n}\n\nmodule.exports = bufferClone;\n","var toObject = require('./toObject');\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var baseProperty = require('./baseProperty');\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n","var isNative = require('../lang/isNative');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add array properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var bufferClone = require('./bufferClone');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    stringTag = '[object String]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return bufferClone(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      var buffer = object.buffer;\n      return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      var result = new Ctor(object.source, reFlags.exec(object));\n      result.lastIndex = object.lastIndex;\n  }\n  return result;\n}\n\nmodule.exports = initCloneByTag;\n","/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  var Ctor = object.constructor;\n  if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n    Ctor = Object;\n  }\n  return new Ctor;\n}\n\nmodule.exports = initCloneObject;\n","var getLength = require('./getLength'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\nmodule.exports = isArrayLike;\n","/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n","var isArrayLike = require('./isArrayLike'),\n    isIndex = require('./isIndex'),\n    isObject = require('../lang/isObject');\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('./isIndex'),\n    isLength = require('./isLength'),\n    keysIn = require('../object/keysIn');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = !!length && isLength(length) &&\n    (isArray(object) || isArguments(object));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = shimKeys;\n","var isObject = require('../lang/isObject');\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\nmodule.exports = toObject;\n","var baseClone = require('../internal/baseClone'),\n    bindCallback = require('../internal/bindCallback'),\n    isIterateeCall = require('../internal/isIterateeCall');\n\n/**\n * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n * otherwise they are assigned by reference. If `customizer` is provided it's\n * invoked to produce the cloned values. If `customizer` returns `undefined`\n * cloning is handled by the method instead. The `customizer` is bound to\n * `thisArg` and invoked with up to three argument; (value [, index|key, object]).\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n * The enumerable properties of `arguments` objects and objects created by\n * constructors other than `Object` are cloned to plain `Object` objects. An\n * empty object is returned for uncloneable values such as functions, DOM nodes,\n * Maps, Sets, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {*} Returns the cloned value.\n * @example\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * var shallow = _.clone(users);\n * shallow[0] === users[0];\n * // => true\n *\n * var deep = _.clone(users, true);\n * deep[0] === users[0];\n * // => false\n *\n * // using a customizer callback\n * var el = _.clone(document.body, function(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(false);\n *   }\n * });\n *\n * el === document.body\n * // => false\n * el.nodeName\n * // => BODY\n * el.childNodes.length;\n * // => 0\n */\nfunction clone(value, isDeep, customizer, thisArg) {\n  if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n    isDeep = false;\n  }\n  else if (typeof isDeep == 'function') {\n    thisArg = customizer;\n    customizer = isDeep;\n    isDeep = false;\n  }\n  return typeof customizer == 'function'\n    ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 3))\n    : baseClone(value, isDeep);\n}\n\nmodule.exports = clone;\n","var isArrayLike = require('../internal/isArrayLike'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && isArrayLike(value) &&\n    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n}\n\nmodule.exports = isArguments;\n","var getNative = require('../internal/getNative'),\n    isLength = require('../internal/isLength'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\nmodule.exports = isArray;\n","var isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 which returns 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\nmodule.exports = isFunction;\n","var isFunction = require('./isFunction'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = isNative;\n","/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var getNative = require('../internal/getNative'),\n    isArrayLike = require('../internal/isArrayLike'),\n    isObject = require('../lang/isObject'),\n    shimKeys = require('../internal/shimKeys');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = getNative(Object, 'keys');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  var Ctor = object == null ? undefined : object.constructor;\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && isArrayLike(object))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\nmodule.exports = keys;\n","var isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('../internal/isIndex'),\n    isLength = require('../internal/isLength'),\n    isObject = require('../lang/isObject');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keysIn;\n","/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.plumin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.opentype = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// Run-time checking of preconditions.\n\n'use strict';\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nexports.argument = function(predicate, message) {\n    if (!predicate) {\n        throw new Error(message);\n    }\n};\n\n// Precondition function that checks if the given assertion is true.\n// If not, it will throw an error.\nexports.assert = exports.argument;\n\n},{}],2:[function(require,module,exports){\n// Drawing utility functions.\n\n'use strict';\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexports.line = line;\n\n},{}],3:[function(require,module,exports){\n// Glyph encoding\n\n'use strict';\n\nvar cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nvar cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n// This is the encoding used for fonts created from scratch.\n// It loops through all glyphs and finds the appropriate unicode value.\n// Since it's linear time, other encodings will be faster.\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    var code = c.charCodeAt(0);\n    var glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs[i];\n            for (var j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    } else {\n        return null;\n    }\n};\n\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n};\n\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    var code = s.charCodeAt(0);\n    var charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction GlyphNames(post) {\n    var i;\n    switch (post.version) {\n    case 1:\n        this.names = exports.standardNames.slice();\n        break;\n    case 2:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] < exports.standardNames.length) {\n                this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n            } else {\n                this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n            }\n        }\n\n        break;\n    case 2.5:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n        }\n\n        break;\n    case 3:\n        this.names = [];\n        break;\n    }\n}\n\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNames(font) {\n    var glyph;\n    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    var charCodes = Object.keys(glyphIndexMap);\n    for (var i = 0; i < charCodes.length; i += 1) {\n        var c = charCodes[i];\n        var glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs[glyphIndex];\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs[i];\n        if (font.cffEncoding) {\n            glyph.name = font.cffEncoding.charset[i];\n        } else {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexports.cffStandardStrings = cffStandardStrings;\nexports.cffStandardEncoding = cffStandardEncoding;\nexports.cffExpertEncoding = cffExpertEncoding;\nexports.standardNames = standardNames;\nexports.DefaultEncoding = DefaultEncoding;\nexports.CmapEncoding = CmapEncoding;\nexports.CffEncoding = CffEncoding;\nexports.GlyphNames = GlyphNames;\nexports.addGlyphNames = addGlyphNames;\n\n},{}],4:[function(require,module,exports){\n// The Font object\n\n'use strict';\n\nvar path = require('./path');\nvar sfnt = require('./tables/sfnt');\nvar encoding = require('./encoding');\n\n// A Font represents a loaded OpenType font file.\n// It contains a set of glyphs and methods to draw text on a drawing context,\n// or to get a path representing the text.\nfunction Font(options) {\n    options = options || {};\n\n    // OS X will complain if the names are empty, so we put a single space everywhere by default.\n    this.familyName = options.familyName || ' ';\n    this.styleName = options.styleName || ' ';\n    this.designer = options.designer || ' ';\n    this.designerURL = options.designerURL || ' ';\n    this.manufacturer = options.manufacturer || ' ';\n    this.manufacturerURL = options.manufacturerURL || ' ';\n    this.license = options.license || ' ';\n    this.licenseURL = options.licenseURL || ' ';\n    this.version = options.version || 'Version 0.1';\n    this.description = options.description || ' ';\n    this.copyright = options.copyright || ' ';\n    this.trademark = options.trademark || ' ';\n    this.unitsPerEm = options.unitsPerEm || 1000;\n    this.ascender = options.ascender;\n    this.descender = options.descender;\n    this.supported = true;\n    this.glyphs = options.glyphs || [];\n    this.encoding = new encoding.DefaultEncoding(this);\n    this.tables = {};\n}\n\n// Check if the font has a glyph for the given character.\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n// Convert the given character to a single glyph index.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n// Convert the given character to a single Glyph object.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyph = function(c) {\n    var glyphIndex = this.charToGlyphIndex(c);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\n// Convert the given text to a list of Glyph objects.\n// Note that there is no strict one-to-one mapping between characters and\n// glyphs, so the list of returned glyphs can be larger or smaller than the\n// length of the given string.\nFont.prototype.stringToGlyphs = function(s) {\n    var glyphs = [];\n    for (var i = 0; i < s.length; i += 1) {\n        var c = s[i];\n        glyphs.push(this.charToGlyph(c));\n    }\n\n    return glyphs;\n};\n\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\nFont.prototype.nameToGlyph = function(name) {\n    var glyphIndex = this.nametoGlyphIndex(name);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n// Retrieve the value of the kerning pair between the left glyph (or its index)\n// and the right glyph (or its index). If no kerning pair is found, return 0.\n// The kerning value gets added to the advance width when calculating the spacing\n// between glyphs.\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.getGposKerningValue;\n    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n};\n\n// Helper function that invokes the given callback for each glyph in the given text.\n// The callback gets `(glyph, x, y, fontSize, options)`.\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    if (!this.supported) {\n        return;\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || {};\n    var kerning = options.kerning === undefined ? true : options.kerning;\n    var fontScale = 1 / this.unitsPerEm * fontSize;\n    var glyphs = this.stringToGlyphs(text);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        callback(glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (kerning && i < glyphs.length - 1) {\n            var kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n    }\n};\n\n// Create a Path object that represents the given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns a Path object.\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    var fullPath = new path.Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        fullPath.extend(glyphPath);\n    });\n\n    return fullPath;\n};\n\n// Draw the text on the given drawing context.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n// Draw the points of all glyphs in the text.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Draw lines indicating important font measurements for all glyphs in the text.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Validate\nFont.prototype.validate = function() {\n    var warnings = [];\n    var _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertStringAttribute(attrName) {\n        assert(_this[attrName] && _this[attrName].trim().length > 0, 'No ' + attrName + ' specified.');\n    }\n\n    // Identification information\n    assertStringAttribute('familyName');\n    assertStringAttribute('weightName');\n    assertStringAttribute('manufacturer');\n    assertStringAttribute('copyright');\n    assertStringAttribute('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n\nFont.prototype.toBuffer = function() {\n    var sfntTable = this.toTables();\n    var bytes = sfntTable.encode();\n    var buffer = new ArrayBuffer(bytes.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n// Initiate a download of the OpenType font.\nFont.prototype.download = function() {\n    var fileName = this.familyName.replace(/\\s/g, '') + '-' + this.styleName + '.otf';\n    var buffer = this.toBuffer();\n\n    window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n    window.requestFileSystem(window.TEMPORARY, buffer.byteLength, function(fs) {\n        fs.root.getFile(fileName, {create: true}, function(fileEntry) {\n            fileEntry.createWriter(function(writer) {\n                var dataView = new DataView(buffer);\n                var blob = new Blob([dataView], {type: 'font/opentype'});\n                writer.write(blob);\n\n                writer.addEventListener('writeend', function() {\n                    // Navigating to the file will download it.\n                    location.href = fileEntry.toURL();\n                }, false);\n            });\n        });\n    },\n\n    function(err) {\n        throw err;\n    });\n};\n\nexports.Font = Font;\n\n},{\"./encoding\":3,\"./path\":8,\"./tables/sfnt\":23}],5:[function(require,module,exports){\n// The Glyph object\n\n'use strict';\n\nvar check = require('./check');\nvar draw = require('./draw');\nvar path = require('./path');\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\nfunction Glyph(options) {\n    this.font = options.font || null;\n    this.index = options.index || 0;\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n    this.xMin = options.xMin || 0;\n    this.yMin = options.yMin || 0;\n    this.xMax = options.xMax || 0;\n    this.yMax = options.yMax || 0;\n    this.advanceWidth = options.advanceWidth || 0;\n    this.path = options.path || null;\n}\n\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n// Convert the glyph to a Path we can draw on a drawing context.\n//\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.getPath = function(x, y, fontSize) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n    var p = new path.Path();\n    var commands = this.path.commands;\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                               x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                      x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n                      x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n// Split the glyph into contours.\n// This function is here for backwards compatibility, and to\n// provide raw access to the TrueType glyph outlines.\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < this.points.length; i += 1) {\n        var pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n// Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\nGlyph.prototype.getMetrics = function() {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: 0\n    };\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// Draw the glyph on the given context.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.draw = function(ctx, x, y, fontSize) {\n    this.getPath(x, y, fontSize).draw(ctx);\n};\n\n// Draw the points of the glyph.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n\n    function drawCircles(l, x, y, scale) {\n        var PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (var j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n\n    var blueCircles = [];\n    var redCircles = [];\n    var path = this.path;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n// Draw lines indicating important font measurements.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    var scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (this.xMin * scale), -10000, x + (this.xMin * scale), 10000);\n    draw.line(ctx, x + (this.xMax * scale), -10000, x + (this.xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-this.yMin * scale), 10000, y + (-this.yMin * scale));\n    draw.line(ctx, -10000, y + (-this.yMax * scale), 10000, y + (-this.yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (this.advanceWidth * scale), -10000, x + (this.advanceWidth * scale), 10000);\n};\n\nexports.Glyph = Glyph;\n\n},{\"./check\":1,\"./draw\":2,\"./path\":8}],6:[function(require,module,exports){\n// opentype.js\n// https://github.com/nodebox/opentype.js\n// (c) 2014 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global ArrayBuffer, DataView, Uint8Array, XMLHttpRequest  */\n\n'use strict';\n\nvar encoding = require('./encoding');\nvar _font = require('./font');\nvar glyph = require('./glyph');\nvar parse = require('./parse');\nvar path = require('./path');\n\nvar cmap = require('./tables/cmap');\nvar cff = require('./tables/cff');\nvar glyf = require('./tables/glyf');\nvar gpos = require('./tables/gpos');\nvar head = require('./tables/head');\nvar hhea = require('./tables/hhea');\nvar hmtx = require('./tables/hmtx');\nvar kern = require('./tables/kern');\nvar loca = require('./tables/loca');\nvar maxp = require('./tables/maxp');\nvar _name = require('./tables/name');\nvar os2 = require('./tables/os2');\nvar post = require('./tables/post');\n\n// File loaders /////////////////////////////////////////////////////////\n\n// Convert a Node.js Buffer to an ArrayBuffer\nfunction toArrayBuffer(buffer) {\n    var arrayBuffer = new ArrayBuffer(buffer.length);\n    var data = new Uint8Array(arrayBuffer);\n    for (var i = 0; i < buffer.length; i += 1) {\n        data[i] = buffer[i];\n    }\n\n    return arrayBuffer;\n}\n\nfunction loadFromFile(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, toArrayBuffer(buffer));\n    });\n}\n\nfunction loadFromUrl(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.status !== 200) {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n\n        return callback(null, request.response);\n    };\n\n    request.send();\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n// Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n// If the file could not be parsed (most likely because it contains Postscript outlines)\n// we return an empty Font object with the `supported` flag set to `false`.\nfunction parseBuffer(buffer) {\n    var indexToLocFormat;\n    var hmtxOffset;\n    var glyfOffset;\n    var locaOffset;\n    var cffOffset;\n    var kernOffset;\n    var gposOffset;\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n\n    var font = new _font.Font();\n    var data = new DataView(buffer, 0);\n\n    var version = parse.getFixed(data, 0);\n    if (version === 1.0) {\n        font.outlinesFormat = 'truetype';\n    } else {\n        version = parse.getTag(data, 0);\n        if (version === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType version ' + version);\n        }\n    }\n\n    var numTables = parse.getUShort(data, 4);\n\n    // Offset into the table records.\n    var p = 12;\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var offset = parse.getULong(data, p + 8);\n        switch (tag) {\n        case 'cmap':\n            font.tables.cmap = cmap.parse(data, offset);\n            font.encoding = new encoding.CmapEncoding(font.tables.cmap);\n            if (!font.encoding) {\n                font.supported = false;\n            }\n\n            break;\n        case 'head':\n            font.tables.head = head.parse(data, offset);\n            font.unitsPerEm = font.tables.head.unitsPerEm;\n            indexToLocFormat = font.tables.head.indexToLocFormat;\n            break;\n        case 'hhea':\n            font.tables.hhea = hhea.parse(data, offset);\n            font.ascender = font.tables.hhea.ascender;\n            font.descender = font.tables.hhea.descender;\n            font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n            break;\n        case 'hmtx':\n            hmtxOffset = offset;\n            break;\n        case 'maxp':\n            font.tables.maxp = maxp.parse(data, offset);\n            font.numGlyphs = font.tables.maxp.numGlyphs;\n            break;\n        case 'name':\n            font.tables.name = _name.parse(data, offset);\n            font.familyName = font.tables.name.fontFamily;\n            font.styleName = font.tables.name.fontSubfamily;\n            break;\n        case 'OS/2':\n            font.tables.os2 = os2.parse(data, offset);\n            break;\n        case 'post':\n            font.tables.post = post.parse(data, offset);\n            font.glyphNames = new encoding.GlyphNames(font.tables.post);\n            break;\n        case 'glyf':\n            glyfOffset = offset;\n            break;\n        case 'loca':\n            locaOffset = offset;\n            break;\n        case 'CFF ':\n            cffOffset = offset;\n            break;\n        case 'kern':\n            kernOffset = offset;\n            break;\n        case 'GPOS':\n            gposOffset = offset;\n            break;\n        }\n        p += 16;\n    }\n\n    if (glyfOffset && locaOffset) {\n        var shortVersion = indexToLocFormat === 0;\n        var locaTable = loca.parse(data, locaOffset, font.numGlyphs, shortVersion);\n        font.glyphs = glyf.parse(data, glyfOffset, locaTable, font);\n        hmtx.parse(data, hmtxOffset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n        encoding.addGlyphNames(font);\n    } else if (cffOffset) {\n        cff.parse(data, cffOffset, font);\n        encoding.addGlyphNames(font);\n    } else {\n        font.supported = false;\n    }\n\n    if (font.supported) {\n        if (kernOffset) {\n            font.kerningPairs = kern.parse(data, kernOffset);\n        } else {\n            font.kerningPairs = {};\n        }\n\n        if (gposOffset) {\n            gpos.parse(data, gposOffset, font);\n        }\n    }\n\n    return font;\n}\n\n// Asynchronously load the font from a URL or a filesystem. When done, call the callback\n// with two arguments `(err, font)`. The `err` will be null on success,\n// the `font` is a Font object.\n//\n// We use the node.js callback convention so that\n// opentype.js can integrate with frameworks like async.js.\nfunction load(url, callback) {\n    var isNode = typeof window === 'undefined';\n    var loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function(err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n\n        var font = parseBuffer(arrayBuffer);\n        if (!font.supported) {\n            return callback('Font is not supported (is this a Postscript font?)');\n        }\n\n        return callback(null, font);\n    });\n}\n\nexports._parse = parse;\nexports.Font = _font.Font;\nexports.Glyph = glyph.Glyph;\nexports.Path = path.Path;\nexports.parse = parseBuffer;\nexports.load = load;\n\n},{\"./encoding\":3,\"./font\":4,\"./glyph\":5,\"./parse\":7,\"./path\":8,\"./tables/cff\":10,\"./tables/cmap\":11,\"./tables/glyf\":12,\"./tables/gpos\":13,\"./tables/head\":14,\"./tables/hhea\":15,\"./tables/hmtx\":16,\"./tables/kern\":17,\"./tables/loca\":18,\"./tables/maxp\":19,\"./tables/name\":20,\"./tables/os2\":21,\"./tables/post\":22,\"fs\":undefined}],7:[function(require,module,exports){\n// Parsing utility functions\n\n'use strict';\n\n// Retrieve an unsigned byte from the DataView.\nexports.getByte = function getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n};\n\nexports.getCard8 = exports.getByte;\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getUShort = function(dataView, offset) {\n    return dataView.getUint16(offset, false);\n};\n\nexports.getCard16 = exports.getUShort;\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getShort = function(dataView, offset) {\n    return dataView.getInt16(offset, false);\n};\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nexports.getULong = function(dataView, offset) {\n    return dataView.getUint32(offset, false);\n};\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nexports.getFixed = function(dataView, offset) {\n    var decimal = dataView.getInt16(offset, false);\n    var fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n};\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nexports.getTag = function(dataView, offset) {\n    var tag = '';\n    for (var i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n};\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nexports.getOffset = function(dataView, offset, offSize) {\n    var v = 0;\n    for (var i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n};\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nexports.getBytes = function(dataView, startOffset, endOffset) {\n    var bytes = [];\n    for (var i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n};\n\n// Convert the list of bytes to a string.\nexports.bytesToString = function(bytes) {\n    var s = '';\n    for (var i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n};\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    var offsets = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = exports.getUShort(dataView, offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\nParser.prototype.parseString = function(length) {\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    var string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\nParser.prototype.parseLongDateTime = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v / 65536;\n};\n\nParser.prototype.parseVersion = function() {\n    var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // This returns the correct number if minor = 0xN000 where N is 0-9\n    var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    return major + minor / 0x1000 / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\nexports.Parser = Parser;\n\n},{}],8:[function(require,module,exports){\n// Geometric objects\n\n'use strict';\n\n// A bézier path containing a set of path commands similar to a SVG path.\n// Paths can be drawn on a context using `draw`.\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n// Add the given path or list of commands to the commands of this path.\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n// Draw the path to a 2D context.\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n// Convert the Path to a string of path data instructions\n// See http://www.w3.org/TR/SVG/paths.html#PathData\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n// Convert the path to a SVG <path> element, as a string.\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toSVG = function(decimalPlaces) {\n    var svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill & this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\nexports.Path = Path;\n\n},{}],9:[function(require,module,exports){\n// Table metadata\n\n'use strict';\n\nvar check = require('./check');\nvar encode = require('./types').encode;\nvar sizeOf = require('./types').sizeOf;\n\nfunction Table(tableName, fields, options) {\n    var i;\n    for (i = 0; i < fields.length; i += 1) {\n        var field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        var optionKeys = Object.keys(options);\n        for (i = 0; i < optionKeys.length; i += 1) {\n            var k = optionKeys[i];\n            var v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\nTable.prototype.sizeOf = function() {\n    var v = 0;\n    for (var i = 0; i < this.fields.length; i += 1) {\n        var field = this.fields[i];\n        var value = this[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        if (typeof value.sizeOf === 'function') {\n            v += value.sizeOf();\n        } else {\n            var sizeOfFunction = sizeOf[field.type];\n            check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n            v += sizeOfFunction(value);\n        }\n    }\n\n    return v;\n};\n\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\nexports.Table = Table;\n\n},{\"./check\":1,\"./types\":24}],10:[function(require,module,exports){\n// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\nvar table = require('../table');\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (var i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    //var i, objectOffset, endOffset;\n    var offsets = [];\n    var objects = [];\n    var count = parse.getCard16(data, start);\n    var i;\n    var objectOffset;\n    var endOffset;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        var pos = start + 3;\n        for (i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (i = 0; i < offsets.length - 1; i += 1) {\n        var value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s = '';\n    var eof = 15;\n    var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        var b = parser.parseByte();\n        var n1 = b >> 4;\n        var n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1;\n    var b2;\n    var b3;\n    var b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o = {};\n    for (var i = 0; i < entries.length; i += 1) {\n        var key = entries[i][0];\n        var values = entries[i][1];\n        var value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key)) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    var parser = new parse.Parser(data, start);\n    var entries = [];\n    var operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        var op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = encoding.cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var newDict = {};\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (var i = 0; i < meta.length; i += 1) {\n        var m = meta[i];\n        var value = dict[m.op];\n        if (value === undefined) {\n            value = m.value !== undefined ? m.value : null;\n        }\n\n        if (m.type === 'SID') {\n            value = getCFFString(strings, value);\n        }\n\n        newDict[m.name] = value;\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n];\n\nvar PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var i;\n    var sid;\n    var count;\n    var parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    var charset = ['.notdef'];\n\n    var format = parser.parseCard8();\n    if (format === 0) {\n        for (i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var i;\n    var code;\n    var enc = {};\n    var parser = new parse.Parser(data, start);\n    var format = parser.parseCard8();\n    if (format === 0) {\n        var nCodes = parser.parseCard8();\n        for (i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        var nRanges = parser.parseCard8();\n        code = 1;\n        for (i = 0; i < nRanges; i += 1) {\n            var first = parser.parseCard8();\n            var nLeft = parser.parseCard8();\n            for (var j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new encoding.CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(code, font, index) {\n    var c1x;\n    var c1y;\n    var c2x;\n    var c2y;\n    var p = new path.Path();\n    var stack = [];\n    var nStems = 0;\n    var haveWidth = false;\n    var width = font.defaultWidthX;\n    var open = false;\n    var x = 0;\n    var y = 0;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + font.nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var b1;\n        var b2;\n        var b3;\n        var b4;\n        var codeIndex;\n        var subrCode;\n        var jpx;\n        var jpy;\n        var c3x;\n        var c3y;\n        var c4x;\n        var c4y;\n\n        var i = 0;\n        while (i < code.length) {\n            var v = code[i];\n            i += 1;\n            switch (v) {\n            case 1: // hstem\n                parseStems();\n                break;\n            case 3: // vstem\n                parseStems();\n                break;\n            case 4: // vmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                newContour(x, y);\n                break;\n            case 5: // rlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 6: // hlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 7: // vlineto\n                while (stack.length > 0) {\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 8: // rrcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 10: // callsubr\n                codeIndex = stack.pop() + font.subrsBias;\n                subrCode = font.subrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 11: // return\n                return;\n            case 12: // flex operators\n                v = code[i];\n                i += 1;\n                switch (v) {\n                case 35: // flex\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    y = c4y + stack.shift();      // dy6\n                    stack.shift();                // flex depth\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 34: // hflex\n                    // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y;                      // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = y;                      // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 36: // hflex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 37: // flex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                        x = c4x + stack.shift();\n                    } else {\n                        y = c4y + stack.shift();\n                    }\n\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                default:\n                    console.log('Glyph ' + index + ': unknown operator ' + 1200 + v);\n                    stack.length = 0;\n                }\n                break;\n            case 14: // endchar\n                if (stack.length > 0 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                if (open) {\n                    p.closePath();\n                    open = false;\n                }\n\n                break;\n            case 18: // hstemhm\n                parseStems();\n                break;\n            case 19: // hintmask\n            case 20: // cntrmask\n                parseStems();\n                i += (nStems + 7) >> 3;\n                break;\n            case 21: // rmoveto\n                if (stack.length > 2 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 22: // hmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 23: // vstemhm\n                parseStems();\n                break;\n            case 24: // rcurveline\n                while (stack.length > 2) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                x += stack.shift();\n                y += stack.shift();\n                p.lineTo(x, y);\n                break;\n            case 25: // rlinecurve\n                while (stack.length > 6) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                break;\n            case 26: // vvcurveto\n                if (stack.length % 2) {\n                    x += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x;\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 27: // hhcurveto\n                if (stack.length % 2) {\n                    y += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y;\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 28: // shortint\n                b1 = code[i];\n                b2 = code[i + 1];\n                stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                i += 2;\n                break;\n            case 29: // callgsubr\n                codeIndex = stack.pop() + font.gsubrsBias;\n                subrCode = font.gsubrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 30: // vhcurveto\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 31: // hvcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            default:\n                if (v < 32) {\n                    console.log('Glyph ' + index + ': unknown operator ' + v);\n                } else if (v < 247) {\n                    stack.push(v - 139);\n                } else if (v < 251) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push((v - 247) * 256 + b1 + 108);\n                } else if (v < 255) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push(-(v - 251) * 256 - b1 - 108);\n                } else {\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    b3 = code[i + 2];\n                    b4 = code[i + 3];\n                    i += 4;\n                    stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                }\n            }\n        }\n    }\n\n    parse(code);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.path = p;\n    glyph.advanceWidth = width;\n    return glyph;\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    font.tables.cff = {};\n    var header = parseCFFHeader(data, start);\n    var nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    var stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n    var topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n    font.tables.cff.topDict = topDict;\n\n    var privateDictOffset = start + topDict['private'][1];\n    var privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        var subrOffset = privateDictOffset + privateDict.subrs;\n        var subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    var charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    var charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) { // Standard encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) { // Expert encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = [];\n    for (var i = 0; i < font.nGlyphs; i += 1) {\n        var charString = charStringsIndex.objects[i];\n        font.glyphs.push(parseCFFCharstring(charString, font, i));\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    var sid;\n\n    // Is the string in the CFF standard strings?\n    var i = encoding.cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + encoding.cffStandardStrings.length;\n    } else {\n        sid = encoding.cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Table('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    var t = new table.Table('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (var i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    var m = {};\n    for (var i = 0; i < meta.length; i += 1) {\n        var entry = meta[i];\n        var value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    var t = new table.Table('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    var t = new table.Table('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    var t = new table.Table('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (var i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Table('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    var t = new table.Table('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (var i = 0; i < glyphNames.length; i += 1) {\n        var glyphName = glyphNames[i];\n        var glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    var ops = [];\n    var path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    var x = 0;\n    var y = 0;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var dx;\n        var dy;\n        var cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            var _13 = 1 / 3;\n            var _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            var dx1 = Math.round(cmd.x1 - x);\n            var dy1 = Math.round(cmd.y1 - y);\n            var dx2 = Math.round(cmd.x2 - cmd.x1);\n            var dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    var t = new table.Table('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    var t = new table.Table('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makePrivateDictIndex(privateDict) {\n    var t = new table.Table('Private DICT INDEX', [\n        {name: 'privateDicts', type: 'INDEX', value: []}\n    ]);\n    t.privateDicts = [{name: 'privateDict_0', type: 'TABLE', value: privateDict}];\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    var t = new table.Table('CFF ', [\n        {name: 'header', type: 'TABLE'},\n        {name: 'nameIndex', type: 'TABLE'},\n        {name: 'topDictIndex', type: 'TABLE'},\n        {name: 'stringIndex', type: 'TABLE'},\n        {name: 'globalSubrIndex', type: 'TABLE'},\n        {name: 'charsets', type: 'TABLE'},\n        {name: 'charStringsIndex', type: 'TABLE'},\n        {name: 'privateDictIndex', type: 'TABLE'}\n    ]);\n\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    var attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    var privateAttrs = {};\n\n    var glyphNames = [];\n\n    // Skip first glyph (.notdef)\n    for (var i = 1; i < glyphs.length; i += 1) {\n        glyphNames.push(glyphs[i].name);\n    }\n\n    var strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    var topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    var privateDict = makePrivateDict(privateAttrs, strings);\n    t.privateDictIndex = makePrivateDictIndex(privateDict);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    var startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexports.parse = parseCFFTable;\nexports.make = makeCFFTable;\n\n},{\"../encoding\":3,\"../glyph\":5,\"../parse\":7,\"../path\":8,\"../table\":9}],11:[function(require,module,exports){\n// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var i;\n    var cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 3\" table. This is a Windows format.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    var offset = -1;\n    for (i = 0; i < cmap.numTables; i += 1) {\n        var platformId = parse.getUShort(data, start + 4 + (i * 8));\n        var encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support, so return null.\n        // This font will be marked as unsupported.\n        return null;\n    }\n\n    var p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n    check.argument(cmap.format === 4, 'Only format 4 cmap tables are supported.');\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    var segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n\n    var endCountParser = new parse.Parser(data, start + offset + 14);\n    var startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    var idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    var idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    var glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (i = 0; i < segCount - 1; i += 1) {\n        var glyphIndex;\n        var endCount = endCountParser.parseUShort();\n        var startCount = startCountParser.parseUShort();\n        var idDelta = idDeltaParser.parseShort();\n        var idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (var c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\nfunction makeCmapTable(glyphs) {\n    var i;\n    var t = new table.Table('cmap', [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: 1},\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: 12},\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        for (var j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function(a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    var segCount;\n    segCount = t.segments.length;\n    t.segCountX2 = segCount * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    // Set up parallel segment arrays.\n    var endCounts = [];\n    var startCounts = [];\n    var idDeltas = [];\n    var idRangeOffsets = [];\n    var glyphIds = [];\n\n    for (i = 0; i < segCount; i += 1) {\n        var segment = t.segments[i];\n        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n        if (segment.glyphId !== undefined) {\n            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n        }\n    }\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    return t;\n}\n\nexports.parse = parseCmapTable;\nexports.make = makeCmapTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],12:[function(require,module,exports){\n// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\n'use strict';\n\nvar check = require('../check');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(data, start, index, font) {\n    //var p, glyph, flag, i, j, flags,\n    //    endPointIndices, numberOfCoordinates, repeatCount, points, point, px, py,\n    //    component, moreComponents;\n    var p = new parse.Parser(data, start);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.numberOfContours = p.parseShort();\n    glyph.xMin = p.parseShort();\n    glyph.yMin = p.parseShort();\n    glyph.xMax = p.parseShort();\n    glyph.yMax = p.parseShort();\n    var flags;\n    var flag;\n    if (glyph.numberOfContours > 0) {\n        var i;\n        // This glyph is not a composite.\n        var endPointIndices = glyph.endPointIndices = [];\n        for (i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                var repeatCount = p.parseByte();\n                for (var j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            var points = [];\n            var point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                var px = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                var py = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        var moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            var component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                component.dx = p.parseShort();\n                component.dy = p.parseShort();\n            } else {\n                // The arguments are bytes\n                component.dx = p.parseChar();\n                component.dy = p.parseChar();\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n    }\n\n    return glyph;\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        var newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p = new path.Path();\n    if (!points) {\n        return p;\n    }\n\n    var contours = getContours(points);\n    for (var i = 0; i < contours.length; i += 1) {\n        var contour = contours[i];\n        var firstPt = contour[0];\n        var lastPt = contour[contour.length - 1];\n        var curvePt;\n        var realFirstPoint;\n        if (firstPt.onCurve) {\n            curvePt = null;\n            // The first point will be consumed by the moveTo command,\n            // so skip it in the loop.\n            realFirstPoint = true;\n        } else {\n            if (lastPt.onCurve) {\n                // If the first point is off-curve and the last point is on-curve,\n                // start at the last point.\n                firstPt = lastPt;\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n            }\n\n            curvePt = firstPt;\n            // The first point is synthesized, so don't skip the real first point.\n            realFirstPoint = false;\n        }\n\n        p.moveTo(firstPt.x, firstPt.y);\n\n        for (var j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n            var pt = contour[j];\n            var prevPt = j === 0 ? firstPt : contour[j - 1];\n            if (prevPt.onCurve && pt.onCurve) {\n                // This is a straight line.\n                p.lineTo(pt.x, pt.y);\n            } else if (prevPt.onCurve && !pt.onCurve) {\n                curvePt = pt;\n            } else if (!prevPt.onCurve && !pt.onCurve) {\n                var midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n                p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n                curvePt = pt;\n            } else if (!prevPt.onCurve && pt.onCurve) {\n                // Previous point off-curve, this point on-curve.\n                p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                curvePt = null;\n            } else {\n                throw new Error('Invalid state.');\n            }\n        }\n\n        if (firstPt !== lastPt) {\n            // Connect the last and first points\n            if (curvePt) {\n                p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            } else {\n                p.lineTo(firstPt.x, firstPt.y);\n            }\n        }\n    }\n\n    p.closePath();\n    return p;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    var glyphs = [];\n    var i;\n    // The last element of the loca table is invalid.\n    for (i = 0; i < loca.length - 1; i += 1) {\n        var offset = loca[i];\n        var nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(parseGlyph(data, start + offset, i, font));\n        } else {\n            glyphs.push(new _glyph.Glyph({font: font, index: i}));\n        }\n    }\n    // Go over the glyphs again, resolving the composite glyphs.\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        if (glyph.isComposite) {\n            for (var j = 0; j < glyph.components.length; j += 1) {\n                var component = glyph.components[j];\n                var componentGlyph = glyphs[component.glyphIndex];\n                if (componentGlyph.points) {\n                    var transformedPoints = transformPoints(componentGlyph.points, component);\n                    glyph.points = glyph.points.concat(transformedPoints);\n                }\n            }\n        }\n\n        glyph.path = getPath(glyph.points);\n    }\n\n    return glyphs;\n}\n\nexports.parse = parseGlyfTable;\n\n},{\"../check\":1,\"../glyph\":5,\"../parse\":7,\"../path\":8}],13:[function(require,module,exports){\n// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n// These lists are unused by now, this function is just the basis for a real parsing.\nfunction parseTaggedListTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var n = p.parseUShort();\n    var list = [];\n    for (var i = 0; i < n; i++) {\n        list[p.parseTag()] = { offset: p.parseUShort() };\n    }\n\n    return list;\n}\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// Format 1 is a simple list of glyph ids,\n// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\nfunction parseCoverageTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    var count =  p.parseUShort();\n    if (format === 1) {\n        return p.parseUShortList(count);\n    }\n    else if (format === 2) {\n        var coverage = [];\n        for (; count--;) {\n            var begin = p.parseUShort();\n            var end = p.parseUShort();\n            var index = p.parseUShort();\n            for (var i = begin; i <= end; i++) {\n                coverage[index++] = i;\n            }\n        }\n\n        return coverage;\n    }\n}\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// Returns a function that gets a class value from a glyph ID.\nfunction parseClassDefTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    if (format === 1) {\n        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n        var startGlyph = p.parseUShort();\n        var glyphCount = p.parseUShort();\n        var classes = p.parseUShortList(glyphCount);\n        return function(glyphID) {\n            return classes[glyphID - startGlyph] || 0;\n        };\n    }\n    else if (format === 2) {\n        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n        var rangeCount = p.parseUShort();\n        var startGlyphs = [];\n        var endGlyphs = [];\n        var classValues = [];\n        for (var i = 0; i < rangeCount; i++) {\n            startGlyphs[i] = p.parseUShort();\n            endGlyphs[i] = p.parseUShort();\n            classValues[i] = p.parseUShort();\n        }\n\n        return function(glyphID) {\n            var l = 0;\n            var r = startGlyphs.length - 1;\n            while (l < r) {\n                var c = (l + r + 1) >> 1;\n                if (glyphID < startGlyphs[c]) {\n                    r = c - 1;\n                } else {\n                    l = c;\n                }\n            }\n\n            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                return classValues[l] || 0;\n            }\n\n            return 0;\n        };\n    }\n}\n\n// Parse a pair adjustment positioning subtable, format 1 or format 2\n// The subtable is returned in the form of a lookup function.\nfunction parsePairPosSubTable(data, start) {\n    var p = new parse.Parser(data, start);\n    // This part is common to format 1 and format 2 subtables\n    var format = p.parseUShort();\n    var coverageOffset = p.parseUShort();\n    var coverage = parseCoverageTable(data, start + coverageOffset);\n    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n    // Only valueFormat1=4 and valueFormat2=0 is supported.\n    var valueFormat1 = p.parseUShort();\n    var valueFormat2 = p.parseUShort();\n    var value1;\n    var value2;\n    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n    var sharedPairSets = {};\n    if (format === 1) {\n        // Pair Positioning Adjustment: Format 1\n        var pairSetCount = p.parseUShort();\n        var pairSet = [];\n        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n        var pairSetOffsets = p.parseOffset16List(pairSetCount);\n        for (var firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n            var pairSetOffset = pairSetOffsets[firstGlyph];\n            var sharedPairSet = sharedPairSets[pairSetOffset];\n            if (!sharedPairSet) {\n                // Parse a pairset table in a pair adjustment subtable format 1\n                sharedPairSet = {};\n                p.relativeOffset = pairSetOffset;\n                var pairValueCount = p.parseUShort();\n                for (; pairValueCount--;) {\n                    var secondGlyph = p.parseUShort();\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) value2 = p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    sharedPairSet[secondGlyph] = value1;\n                }\n            }\n\n            pairSet[coverage[firstGlyph]] = sharedPairSet;\n        }\n\n        return function(leftGlyph, rightGlyph) {\n            var pairs = pairSet[leftGlyph];\n            if (pairs) return pairs[rightGlyph];\n        };\n    }\n    else if (format === 2) {\n        // Pair Positioning Adjustment: Format 2\n        var classDef1Offset = p.parseUShort();\n        var classDef2Offset = p.parseUShort();\n        var class1Count = p.parseUShort();\n        var class2Count = p.parseUShort();\n        var getClass1 = parseClassDefTable(data, start + classDef1Offset);\n        var getClass2 = parseClassDefTable(data, start + classDef2Offset);\n\n        // Parse kerning values by class pair.\n        var kerningMatrix = [];\n        for (var i = 0; i < class1Count; i++) {\n            var kerningRow = kerningMatrix[i] = [];\n            for (var j = 0; j < class2Count; j++) {\n                if (valueFormat1) value1 = p.parseShort();\n                if (valueFormat2) value2 = p.parseShort();\n                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                // so value1 is the XAdvance and value2 is empty.\n                kerningRow[j] = value1;\n            }\n        }\n\n        // Convert coverage list to a hash\n        var covered = {};\n        for (i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\n        // Get the kerning value for a specific glyph pair.\n        return function(leftGlyph, rightGlyph) {\n            if (!covered[leftGlyph]) return;\n            var class1 = getClass1(leftGlyph);\n            var class2 = getClass2(rightGlyph);\n            var kerningRow = kerningMatrix[class1];\n\n            if (kerningRow) {\n                return kerningRow[class2];\n            }\n        };\n    }\n}\n\n// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\nfunction parseLookupTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var lookupType = p.parseUShort();\n    var lookupFlag = p.parseUShort();\n    var useMarkFilteringSet = lookupFlag & 0x10;\n    var subTableCount = p.parseUShort();\n    var subTableOffsets = p.parseOffset16List(subTableCount);\n    var table = {\n        lookupType: lookupType,\n        lookupFlag: lookupFlag,\n        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n    };\n    // LookupType 2, Pair adjustment\n    if (lookupType === 2) {\n        var subtables = [];\n        for (var i = 0; i < subTableCount; i++) {\n            subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n        }\n        // Return a function which finds the kerning values in the subtables.\n        table.getKerningValue = function(leftGlyph, rightGlyph) {\n            for (var i = subtables.length; i--;) {\n                var value = subtables[i](leftGlyph, rightGlyph);\n                if (value !== undefined) return value;\n            }\n\n            return 0;\n        };\n    }\n\n    return table;\n}\n\n// Parse the `GPOS` table which contains, among other things, kerning pairs.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\nfunction parseGposTable(data, start, font) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseFixed();\n    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n    // ScriptList and FeatureList - ignored for now\n    parseTaggedListTable(data, start + p.parseUShort());\n    // 'kern' is the feature we are looking for.\n    parseTaggedListTable(data, start + p.parseUShort());\n\n    // LookupList\n    var lookupListOffset = p.parseUShort();\n    p.relativeOffset = lookupListOffset;\n    var lookupCount = p.parseUShort();\n    var lookupTableOffsets = p.parseOffset16List(lookupCount);\n    var lookupListAbsoluteOffset = start + lookupListOffset;\n    for (var i = 0; i < lookupCount; i++) {\n        var table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n    }\n}\n\nexports.parse = parseGposTable;\n\n},{\"../check\":1,\"../parse\":7}],14:[function(require,module,exports){\n// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {};\n    var p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();     // 50\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: 0},\n        {name: 'modified', type: 'LONGDATETIME', value: 0},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHeadTable;\nexports.make = makeHeadTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],15:[function(require,module,exports){\n// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {};\n    var p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHheaTable;\nexports.make = makeHheaTable;\n\n},{\"../parse\":7,\"../table\":9}],16:[function(require,module,exports){\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    var advanceWidth;\n    var leftSideBearing;\n    var p = new parse.Parser(data, start);\n    for (var i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        var glyph = glyphs[i];\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    var t = new table.Table('hmtx', []);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var advanceWidth = glyph.advanceWidth || 0;\n        var leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexports.parse = parseHmtxTable;\nexports.make = makeHmtxTable;\n\n},{\"../parse\":7,\"../table\":9}],17:[function(require,module,exports){\n// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var pairs = {};\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseUShort();\n    check.argument(tableVersion === 0, 'Unsupported kern table version.');\n    // Skip nTables.\n    p.skip('uShort', 1);\n    var subTableVersion = p.parseUShort();\n    check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subTableLength, subTableCoverage\n    p.skip('uShort', 2);\n    var nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (var i = 0; i < nPairs; i += 1) {\n        var leftIndex = p.parseUShort();\n        var rightIndex = p.parseUShort();\n        var value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n\n    return pairs;\n}\n\nexports.parse = parseKernTable;\n\n},{\"../check\":1,\"../parse\":7}],18:[function(require,module,exports){\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\n'use strict';\n\nvar parse = require('../parse');\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p = new parse.Parser(data, start);\n    var parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    var glyphOffsets = [];\n    for (var i = 0; i < numGlyphs + 1; i += 1) {\n        var glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexports.parse = parseLocaTable;\n\n},{\"../parse\":7}],19:[function(require,module,exports){\n// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {};\n    var p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexports.parse = parseMaxpTable;\nexports.make = makeMaxpTable;\n\n},{\"../parse\":7,\"../table\":9}],20:[function(require,module,exports){\n// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\n'use strict';\n\nvar encode = require('../types').encode;\nvar parse = require('../parse');\nvar table = require('../table');\n\n// NameIDs for the name table.\nvar nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'licence',                // 13\n    'licenceURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\n// Parse the naming `name` table\n// Only Windows Unicode English names are supported.\n// Format 1 additional fields are not supported\nfunction parseNameTable(data, start) {\n    var name = {};\n    var p = new parse.Parser(data, start);\n    name.format = p.parseUShort();\n    var count = p.parseUShort();\n    var stringOffset = p.offset + p.parseUShort();\n    var unknownCount = 0;\n    for (var i = 0; i < count; i++) {\n        var platformID = p.parseUShort();\n        var encodingID = p.parseUShort();\n        var languageID = p.parseUShort();\n        var nameID = p.parseUShort();\n        var property = nameTableNames[nameID];\n        var byteLength = p.parseUShort();\n        var offset = p.parseUShort();\n        // platformID - encodingID - languageID standard combinations :\n        // 1 - 0 - 0 : Macintosh, Roman, English\n        // 3 - 1 - 0x409 : Windows, Unicode BMP (UCS-2), en-US\n        if (platformID === 3 && encodingID === 1 && languageID === 0x409) {\n            var codePoints = [];\n            var length = byteLength / 2;\n            for (var j = 0; j < length; j++, offset += 2) {\n                codePoints[j] = parse.getShort(data, stringOffset + offset);\n            }\n\n            var str = String.fromCharCode.apply(null, codePoints);\n            if (property) {\n                name[property] = str;\n            }\n            else {\n                unknownCount++;\n                name['unknown' + unknownCount] = str;\n            }\n        }\n\n    }\n\n    if (name.format === 1) {\n        name.langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Table('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\nfunction addMacintoshNameRecord(t, recordID, s, offset) {\n    // Macintosh, Roman, English\n    var stringBytes = encode.STRING(s);\n    t.records.push(makeNameRecord(1, 0, 0, recordID, stringBytes.length, offset));\n    t.strings.push(stringBytes);\n    offset += stringBytes.length;\n    return offset;\n}\n\nfunction addWindowsNameRecord(t, recordID, s, offset) {\n    // Windows, Unicode BMP (UCS-2), US English\n    var utf16Bytes = encode.UTF16(s);\n    t.records.push(makeNameRecord(3, 1, 0x0409, recordID, utf16Bytes.length, offset));\n    t.strings.push(utf16Bytes);\n    offset += utf16Bytes.length;\n    return offset;\n}\n\nfunction makeNameTable(options) {\n    var t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: 0},\n        {name: 'stringOffset', type: 'USHORT', value: 0}\n    ]);\n    t.records = [];\n    t.strings = [];\n    var offset = 0;\n    var i;\n    var s;\n    // Add Macintosh records first\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addMacintoshNameRecord(t, i, s, offset);\n        }\n    }\n    // Then add Windows records\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addWindowsNameRecord(t, i, s, offset);\n        }\n    }\n\n    t.count = t.records.length;\n    t.stringOffset = 6 + t.count * 12;\n    for (i = 0; i < t.records.length; i += 1) {\n        t.fields.push({name: 'record_' + i, type: 'TABLE', value: t.records[i]});\n    }\n\n    for (i = 0; i < t.strings.length; i += 1) {\n        t.fields.push({name: 'string_' + i, type: 'LITERAL', value: t.strings[i]});\n    }\n\n    return t;\n}\n\nexports.parse = parseNameTable;\nexports.make = makeNameTable;\n\n},{\"../parse\":7,\"../table\":9,\"../types\":24}],21:[function(require,module,exports){\n// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\nvar unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (var i = 0; i < unicodeRanges.length; i += 1) {\n        var range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {};\n    var p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.unicodeRanges = unicodeRanges;\nexports.getUnicodeRange = getUnicodeRange;\nexports.parse = parseOS2Table;\nexports.make = makeOS2Table;\n\n},{\"../parse\":7,\"../table\":9}],22:[function(require,module,exports){\n// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {};\n    var p = new parse.Parser(data, start);\n    var i;\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n    case 1:\n        post.names = encoding.standardNames.slice();\n        break;\n    case 2:\n        post.numberOfGlyphs = p.parseUShort();\n        post.glyphNameIndex = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.glyphNameIndex[i] = p.parseUShort();\n        }\n\n        post.names = [];\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n                var nameLength = p.parseChar();\n                post.names.push(p.parseString(nameLength));\n            }\n        }\n\n        break;\n    case 2.5:\n        post.numberOfGlyphs = p.parseUShort();\n        post.offset = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.offset[i] = p.parseChar();\n        }\n\n        break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexports.parse = parsePostTable;\nexports.make = makePostTable;\n\n},{\"../encoding\":3,\"../parse\":7,\"../table\":9}],23:[function(require,module,exports){\n// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\n'use strict';\n\nvar check = require('../check');\nvar table = require('../table');\n\nvar cmap = require('./cmap');\nvar cff = require('./cff');\nvar head = require('./head');\nvar hhea = require('./hhea');\nvar hmtx = require('./hmtx');\nvar maxp = require('./maxp');\nvar _name = require('./name');\nvar os2 = require('./os2');\nvar post = require('./post');\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    var sum = 0;\n    for (var i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Table('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    var sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    var recordFields = [];\n    var tableFields = [];\n\n    var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (var i = 0; i < tables.length; i += 1) {\n        var t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        var tableLength = t.sizeOf();\n        var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (var i = 0; i < chars.length; i += 1) {\n        var glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            var glyph = font.glyphs[glyphIndex];\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    var sum = 0;\n    for (var i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    var xMins = [];\n    var yMins = [];\n    var xMaxs = [];\n    var yMaxs = [];\n    var advanceWidths = [];\n    var leftSideBearings = [];\n    var rightSideBearings = [];\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    for (var i = 0; i < font.glyphs.length; i += 1) {\n        var glyph = font.glyphs[i];\n        var unicode = glyph.unicode | 0;\n        if (firstCharIndex > unicode || firstCharIndex === null) {\n            firstCharIndex = unicode;\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        var position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        var metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    var globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n    globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\n    var headTable = head.make({\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax\n    });\n\n    var hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    var maxpTable = maxp.make(font.glyphs.length);\n\n    var os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: 500, // Medium FIXME Make this configurable\n        usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.ascender,\n        usWinDescent: -globals.descender,\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: 0}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n    var hmtxTable = hmtx.make(font.glyphs);\n    var cmapTable = cmap.make(font.glyphs);\n\n    var fullName = font.familyName + ' ' + font.styleName;\n    var postScriptName = font.familyName.replace(/\\s/g, '') + '-' + font.styleName;\n    var nameTable = _name.make({\n        copyright: font.copyright,\n        fontFamily: font.familyName,\n        fontSubfamily: font.styleName,\n        uniqueID: font.manufacturer + ':' + fullName,\n        fullName: fullName,\n        version: font.version,\n        postScriptName: postScriptName,\n        trademark: font.trademark,\n        manufacturer: font.manufacturer,\n        designer: font.designer,\n        description: font.description,\n        manufacturerURL: font.manufacturerURL,\n        designerURL: font.designerURL,\n        license: font.license,\n        licenseURL: font.licenseURL,\n        preferredFamily: font.familyName,\n        preferredSubfamily: font.styleName\n    });\n    var postTable = post.make();\n    var cffTable = cff.make(font.glyphs, {\n        version: font.version,\n        fullName: fullName,\n        familyName: font.familyName,\n        weightName: font.styleName,\n        postScriptName: postScriptName\n    });\n    // Order the tables according to the the OpenType specification 1.4.\n    var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n\n    var sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    var bytes = sfntTable.encode();\n    var checkSum = computeCheckSum(bytes);\n    var tableFields = sfntTable.fields;\n    var checkSumAdjusted = false;\n    for (i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexports.computeCheckSum = computeCheckSum;\nexports.make = makeSfntTable;\nexports.fontToTable = fontToSfntTable;\n\n},{\"../check\":1,\"../table\":9,\"./cff\":10,\"./cmap\":11,\"./head\":14,\"./hhea\":15,\"./hmtx\":16,\"./maxp\":19,\"./name\":20,\"./os2\":21,\"./post\":22}],24:[function(require,module,exports){\n// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = require('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\nvar decode = {};\nvar encode = {};\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n// Convert an 8-bit unsigned integer to a list of 1 byte.\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert a 8-bit signed integer to a list of 1 byte.\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert an ASCII string to a list of bytes.\nencode.CHARARRAY = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n// Convert a 16-bit unsigned integer to a list of 2 bytes.\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.USHORT = constant(2);\n\n// Convert a 16-bit signed integer to a list of 2 bytes.\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.SHORT = constant(2);\n\n// Convert a 24-bit unsigned integer to a list of 3 bytes.\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.UINT24 = constant(3);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.ULONG = constant(4);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n// FIXME Implement LONGDATETIME\nencode.LONGDATETIME = function() {\n    return [0, 0, 0, 0, 0, 0, 0, 0];\n};\n\nsizeOf.LONGDATETIME = constant(8);\n\n// Convert a 4-char tag to a list of 4 bytes.\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n// Convert a signed number between -32768 and +32767 to a three-byte value.\n// This ensures we always use three bytes, but is not the most compact format.\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER16 = constant(2);\n\n// Convert a signed number between -(2^31) and +(2^31-1) to a four-byte value.\n// This is useful if you want to be sure you always use four bytes,\n// at the expense of wasting a few bytes for smaller numbers.\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER32 = constant(4);\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n// Convert a ASCII string to a list of UTF16 bytes.\nencode.UTF16 = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(0);\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\nencode.INDEX = function(l) {\n    var i;\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    dataSize, i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    var offset = 1; // First offset is always 1.\n    var offsets = [offset];\n    var data = [];\n    var dataSize = 0;\n    for (i = 0; i < l.length; i += 1) {\n        var v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        dataSize += v.length;\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    var encodedOffsets = [];\n    var offSize = (1 + Math.floor(Math.log(dataSize) / Math.log(2)) / 8) | 0;\n    var offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        var encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n// Convert an object to a CFF DICT structure.\n// The keys should be numeric.\n// The values should be objects containing name / type / value.\nencode.DICT = function(m) {\n    var d = [];\n    var keys = Object.keys(m);\n    var length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\nencode.OPERAND = function(v, type) {\n    var d = [];\n    if (Array.isArray(type)) {\n        for (var i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else {\n            // FIXME Add support for booleans\n            d = d.concat(encode.NUMBER(v));\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n// Convert a list of CharString operations to bytes.\nencode.CHARSTRING = function(ops) {\n    if (wmm && wmm.has(ops)) {\n        return wmm.get(ops);\n    }\n\n    var d = [];\n    var length = ops.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n// Convert an object containing name / type / value to bytes.\nencode.OBJECT = function(v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n// Convert a table object to bytes.\n// A table contains a list of fields containing the metadata (name, type and default value).\n// The table itself has the field values set as attributes.\nencode.TABLE = function(table) {\n    var d = [];\n    var length = table.fields.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        var bytes = encodingFunction(value);\n        d = d.concat(bytes);\n    }\n\n    return d;\n};\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n\n},{\"./check\":1}]},{},[6])(6)\n});\n},{}],2:[function(require,module,exports){\n/*!\n * Paper.js v0.9.22 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Mon Mar 23 22:20:31 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\n\t\t  var noCanvas =\n\t\t\t  ( typeof process === 'object' && process.browser !== true ) ||\n\t\t\t  ( typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope );\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && (!exclude || !exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tctor.prototype = create(this.prototype);\n\t\t\tctor.base = base;\n\t\t\tdefine(ctor.prototype, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\treturn arguments.length ? this.inject.apply(ctor, arguments) : ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function() {\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\t\tif (arguments[i] !== undefined)\n\t\t\t\t\t\treturn arguments[i];\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar orig = props._filtering || props;\n\t\t\tfor (var key in orig) {\n\t\t\t\tif (orig.hasOwnProperty(key) && !(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tfunction checkKeys(o1, o2) {\n\t\t\t\tfor (var i in o1)\n\t\t\t\t\tif (o1.hasOwnProperty(i) && !o2.hasOwnProperty(i))\n\t\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\tif (obj1.length !== obj2.length)\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i = 0, l = obj1.length; i < l; i++) {\n\t\t\t\t\tif (!Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 && typeof obj1 === 'object'\n\t\t\t\t\t&& obj2 && typeof obj2 === 'object') {\n\t\t\t\tif (!checkKeys(obj1, obj2) || !checkKeys(obj2, obj1))\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i in obj1) {\n\t\t\t\t\tif (obj1.hasOwnProperty(i)\n\t\t\t\t\t\t\t&& !Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var i in obj)\n\t\t\t\t\tif (obj.hasOwnProperty(i))\n\t\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\t\tdictionary);\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (!isDictionary) {\n\t\t\t\t\tif (_data.dictionary && json.length == 1 && /^#/.test(type))\n\t\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\t\ttype = Base.exports[type];\n\t\t\t\t}\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data));\n\t\t\t\tif (isDictionary) {\n\t\t\t\t\t_data.dictionary = res[0];\n\t\t\t\t} else if (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar entry = this._eventTypes[type];\n\t\t\tif (entry) {\n\t\t\t\tvar handlers = this._callbacks = this._callbacks || {};\n\t\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\t\thandlers.push(func);\n\t\t\t\t\tif (entry.install && handlers.length == 1)\n\t\t\t\t\t\tentry.install.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar entry = this._eventTypes[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (entry && handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false\n\t\t\t\t\t&& event && event.stop) {\n\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar entry = this._eventTypes[type],\n\t\t\t\t\tfunc = entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif ( noCanvas ) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar browser = proto.browser = {};\n\t\t\tnavigator.userAgent.toLowerCase().replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: '0.9.22',\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tTOLERANCE = 1e-6,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\treturn {\n\t\tTOLERANCE: TOLERANCE,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn abs(val) <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= 2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar pow = Math.pow,\n\t\t\t\t\tgmC = pow(abs(a*b*c), 1/3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\t/*\n\t\t\t\t\t * we multiply with a factor to normalize the\n\t\t\t\t\t * coefficients. The factor is just the nearest exponent\n\t\t\t\t\t * of 10, big enough to raise all the coefficients to\n\t\t\t\t\t * nearly [-1, +1] range.\n\t\t\t\t\t */\n\t\t\t\t\tvar mult = pow(10, abs(\n\t\t\t\t\t\tMath.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < MACHINE_EPSILON) {\n\t\t\t\tif (abs(B) < MACHINE_EPSILON)\n\t\t\t\t\treturn abs(c) < MACHINE_EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else {\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tD = D < 0 ? 0 : D;\n\t\t\t\t\tvar R = sqrt(D);\n\t\t\t\t\tif (b >= MACHINE_EPSILON && b <= MACHINE_EPSILON) {\n\t\t\t\t\t\tx1 = abs(a) >= abs(c) ? R / a : -c / R;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar q = -(b + (b < 0 ? -1 : 1) * R);\n\t\t\t\t\t\tx1 = q / a;\n\t\t\t\t\t\tx2 = c / q;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 >= min && x1 <= max))\n\t\t\t\troots[count++] = x1;\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 >= min && x2 <= max))\n\t\t\t\troots[count++] = x2;\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar x, b1, c2, count = 0;\n\t\t\tif (a === 0) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (d === 0) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x >= min && x <= max))\n\t\t\t\troots[count++] = x;\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\ts = Math.sin(angle),\n\t\t\tc = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * c - point.y * s,\n\t\t\tpoint.x * s + point.y * c\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function(point, tolerance) {\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisColinear: function(point) {\n\t\treturn Math.abs(this.cross(point)) < 1e-12;\n\t},\n\n\tisOrthogonal: function(point) {\n\t\treturn Math.abs(this.dot(point)) < 1e-12;\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments);\n\t\tif (point.isZero()) {\n\t\t\treturn new Point(0, 0);\n\t\t} else {\n\t\t\tvar scale = this.dot(point) / point.dot(point);\n\t\t\treturn new Point(\n\t\t\t\tpoint.x * scale,\n\t\t\t\tpoint.y * scale\n\t\t\t);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n}, new function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = coords.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tstatics: {\n\t\tintersect: function(apx, apy, avx, avy, bpx, bpy, bvx, bvy, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tavx -= apx;\n\t\t\t\tavy -= apy;\n\t\t\t\tbvx -= bpx;\n\t\t\t\tbvy -= bpy;\n\t\t\t}\n\t\t\tvar cross = avx * bvy - avy * bvx;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = apx - bpx,\n\t\t\t\t\tdy = apy - bpy,\n\t\t\t\t\tta = (bvx * dy - bvy * dx) / cross,\n\t\t\t\t\ttb = (avx * dy - avy * dx) / cross;\n\t\t\t\tif (isInfinite || 0 <= ta && ta <= 1 && 0 <= tb && tb <= 1)\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\t\tapx + ta * avx,\n\t\t\t\t\t\t\t\tapy + ta * avy);\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0) {\n\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\tif (ccw > 0) {\n\t\t\t\t\tv2x -= vx;\n\t\t\t\t\tv2y -= vy;\n\t\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\t\tif (ccw < 0)\n\t\t\t\t\t\tccw = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn Numerical.isZero(vx)\n\t\t\t\t\t? vy >= 0 ? px - x : x - px\n\t\t\t\t\t: Numerical.isZero(vy)\n\t\t\t\t\t\t? vx >= 0 ? y - py : py - y\n\t\t\t\t\t\t: (vx * (y - py) - vy * (x - px)) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = Symbol._id = (Symbol._id || 0) + 1;\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = Item._id = (Item._id || 0) + 1;\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, parent: true }, true);\n\t\treturn hasProps;\n\t},\n\n\t_events: new function() {\n\n\t\tvar mouseFlags = {\n\t\t\tmousedown: {\n\t\t\t\tmousedown: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmouseup: {\n\t\t\t\tmouseup: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmousemove: {\n\t\t\t\tmousedrag: 1,\n\t\t\t\tmousemove: 1,\n\t\t\t\tmouseenter: 1,\n\t\t\t\tmouseleave: 1\n\t\t\t}\n\t\t};\n\n\t\tvar mouseEvent = {\n\t\t\tinstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tuninstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = mouseEvent;\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis._animateItem(true);\n\t\t\t\t\t},\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis._animateItem(false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {}\n\t\t\t}\n\t\t);\n\t},\n\n\t_animateItem: function(animate) {\n\t\tthis.getView()._animateItem(this, animate);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments);\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n\n\tgetRegistration: '#getPivot',\n\tsetRegistration: '#setPivot'\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tvar cacheParent = this._parent || this._parentSymbol;\n\t\tif (cacheParent) {\n\t\t\tvar id = cacheItem._id,\n\t\t\t\tref = cacheParent._boundsCache = cacheParent._boundsCache || {\n\t\t\t\t\tids: {},\n\t\t\t\t\tlist: []\n\t\t\t\t};\n\t\t\tif (!ref.ids[id]) {\n\t\t\t\tref.list.push(cacheItem);\n\t\t\t\tref.ids[id] = cacheItem;\n\t\t\t}\n\t\t}\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++) {\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function(matrix) {\n\t\tthis._matrix.initialize(matrix);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert) {\n\t\tcopy.setStyle(this._style);\n\t\tif (this._children) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tcopy.addChild(this._children[i].clone(false), true);\n\t\t}\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide', '_applyMatrix'];\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tcopy.setSelected(this._selected);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(),\n\t\t\t\t_matrix || item._matrix).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 0.000001)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tif (typeof name === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param) {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect =\tbounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: rect,\n\t\t\t\t\toverlapping: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param.items,\n\t\t\t\tinside = param.inside,\n\t\t\t\toverlapping = param.overlapping;\n\t\t\tmatrix = inside && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (inside) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!inside.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(inside && inside.contains(bounds)) && !(overlapping\n\t\t\t\t\t\t\t&& overlapping.intersects(child, childMatrix)))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2;\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t});\n\t\tpath.setStyle(this._style);\n\t\tpath.transform(this._matrix);\n\t\tif (insert || insert === undefined)\n\t\t\tpath.insertAbove(this);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rect' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\t\timage = document.getElementById(src) || new Image();\n\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, {\n\t\t\t\tload: loaded\n\t\t\t});\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL() : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif (arg0.point) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.isLinear() ? this._point\n\t\t\t\t: [this._point, this._handleIn, this._handleOut],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._handleIn.isZero() && this._handleOut.isZero();\n\t},\n\n\tsetLinear: function(linear) {\n\t\tif (linear) {\n\t\t\tthis._handleIn.set(0, 0);\n\t\t\tthis._handleOut.set(0, 0);\n\t\t} else {\n\t\t}\n\t},\n\n\tisColinear: function(segment) {\n\t\tvar next1 = this.getNext(),\n\t\t\tnext2 = segment.getNext();\n\t\treturn this._handleOut.isZero() && next1._handleIn.isZero()\n\t\t\t\t&& segment._handleOut.isZero() && next2._handleIn.isZero()\n\t\t\t\t&& next1._point.subtract(this._point).isColinear(\n\t\t\t\t\tnext2._point.subtract(segment._point));\n\t},\n\n\tisOrthogonal: function() {\n\t\tvar prev = this.getPrevious(),\n\t\t\tnext = this.getNext();\n\t\treturn prev._handleOut.isZero() && this._handleIn.isZero()\n\t\t\t&& this._handleOut.isZero() && next._handleIn.isZero()\n\t\t\t&& this._point.subtract(prev._point).isOrthogonal(\n\t\t\t\t\tnext._point.subtract(this._point));\n\t},\n\n\tisArc: function() {\n\t\tvar next = this.getNext(),\n\t\t\thandle1 = this._handleOut,\n\t\t\thandle2 = next._handleIn,\n\t\t\tkappa = 0.5522847498307936;\n\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\tvar from = this._point,\n\t\t\t\tto = next._point,\n\t\t\t\tcorner = new Line(from, handle1, true).intersect(\n\t\t\t\t\t\tnew Line(to, handle2, true), true);\n\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\tcorner.subtract(from).getLength() - kappa)\n\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\tcorner.subtract(to).getLength() - kappa);\n\t\t}\n\t\treturn false;\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\treverse: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(segment0, segment1, coef) {\n\t\tvar dxPoint = segment1._point._x - segment0._point._x,\n\t\t\tdyPoint = segment1._point._y - segment0._point._y,\n\t\t\tdxHandleIn = segment1._handleIn._x - segment0._handleIn._x,\n\t\t\tdyHandleIn = segment1._handleIn._y - segment0._handleIn._y,\n\t\t\tdxHandleOut = segment1._handleOut._x - segment0._handleOut._x,\n\t\t\tdyHandleOut = segment1._handleOut._y - segment0._handleOut._y;\n\n\t\tthis._point._x = segment0._point._x + dxPoint * coef;\n\t\tthis._point._y = segment0._point._y + dyPoint * coef;\n\t\tthis._handleIn._x = segment0._handleIn._x + dxHandleIn * coef;\n\t\tthis._handleIn._y = segment0._handleIn._y + dyHandleIn * coef;\n\t\tthis._handleOut._x = segment0._handleOut._x + dxHandleOut * coef;\n\t\tthis._handleOut._y = segment0._handleOut._y + dyHandleOut * coef;\n\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tthis._segment1 = arg1;\n\t\t\tthis._segment2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tthis._segment1 = new Segment();\n\t\t\tthis._segment2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tthis._segment1 = new Segment(arg0.segment1);\n\t\t\tthis._segment2 = new Segment(arg0.segment2);\n\t\t} else if (count === 2) {\n\t\t\tthis._segment1 = new Segment(arg0);\n\t\t\tthis._segment2 = new Segment(arg1);\n\t\t} else {\n\t\t\tvar point1, handle1, handle2, point2;\n\t\t\tif (count === 4) {\n\t\t\t\tpoint1 = arg0;\n\t\t\t\thandle1 = arg1;\n\t\t\t\thandle2 = arg2;\n\t\t\t\tpoint2 = arg3;\n\t\t\t} else if (count === 8) {\n\t\t\t\tpoint1 = [arg0, arg1];\n\t\t\t\tpoint2 = [arg6, arg7];\n\t\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t\t}\n\t\t\tthis._segment1 = new Segment(point1, null, handle1);\n\t\t\tthis._segment2 = new Segment(point2, handle2, null);\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tthis._length = this.isLinear()\n\t\t\t\t? this._segment2._point.getDistance(this._segment1._point)\n\t\t\t\t: Curve.getLength(this.getValues(), 0, 1);\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._segment1._handleOut.isZero()\n\t\t\t\t&& this._segment2._handleIn.isZero();\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve.filterIntersections(Curve.getIntersections(\n\t\t\t\tthis.getValues(), curve.getValues(), this, curve, []));\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, ignoreLinear) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttolerance = 0.000001,\n\t\t\tres = null;\n\t\tif (parameter > tolerance && parameter < 1 - tolerance) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tisLinear = ignoreLinear ? false : this.isLinear(),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1];\n\n\t\t\tif (!isLinear) {\n\t\t\t\tthis._segment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tthis._segment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\t!isLinear && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\t!isLinear && new Point(right[2] - x, right[3] - y));\n\n\t\t\tif (this._path) {\n\t\t\t\tif (this._segment1._index > 0 && this._segment2._index === 0) {\n\t\t\t\t\tthis._path.add(segment);\n\t\t\t\t} else {\n\t\t\t\t\tthis._path.insert(this._segment2._index, segment);\n\t\t\t\t}\n\t\t\t\tres = this;\n\t\t\t} else {\n\t\t\t\tvar end = this._segment2;\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, end);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treverse: function() {\n\t\treturn new Curve(this._segment2.reverse(), this._segment1.reverse());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tevaluate: function(v, t, type) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tolerance || t > 1 - tolerance)) {\n\t\t\tvar isZero = t < tolerance;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tolerance && c1x === p1x && c1y === p1y\n\t\t\t\t\t\t|| t > 1 - tolerance && c2x === p2x && c2y === p2y) {\n\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t} else if (t < tolerance) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > 1 - tolerance) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by;\n\t\t\t\t\treturn (x * y2 - y * x2) / Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b,\n\t\t\tisZero = Numerical.isZero;\n\t\tif (isZero(a) && isZero(b))\n\t\t\ta = b = 0;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, x, y) {\n\t\tvar tolerance = 0.000001;\n\t\tif (Math.abs(v[0] - x) < tolerance && Math.abs(v[1] - y) < tolerance)\n\t\t\treturn 0;\n\t\tif (Math.abs(v[6] - x) < tolerance && Math.abs(v[7] - y) < tolerance)\n\t\t\treturn 1;\n\t\tvar txs = [],\n\t\t\ttys = [],\n\t\t\tsx = Curve.solveCubic(v, 0, x, txs, 0, 1),\n\t\t\tsy = Curve.solveCubic(v, 1, y, tys, 0, 1),\n\t\t\ttx, ty;\n\t\tfor (var cx = 0;  sx == -1 || cx < sx;) {\n\t\t\tif (sx == -1 || (tx = txs[cx++]) >= 0 && tx <= 1) {\n\t\t\t\tfor (var cy = 0; sy == -1 || cy < sy;) {\n\t\t\t\t\tif (sy == -1 || (ty = tys[cy++]) >= 0 && ty <= 1) {\n\t\t\t\t\t\tif (sx == -1) tx = ty;\n\t\t\t\t\t\telse if (sy == -1) ty = tx;\n\t\t\t\t\t\tif (Math.abs(tx - ty) < tolerance)\n\t\t\t\t\t\t\treturn (tx + ty) * 0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sx == -1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn v;\n\t},\n\n\tisLinear: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]);\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn (  3.0 * c1y * p1x - 1.5 * c1y * c2x\n\t\t\t\t- 1.5 * c1y * p2x - 3.0 * p1y * c1x\n\t\t\t\t- 1.5 * p1y * c2x - 0.5 * p1y * p2x\n\t\t\t\t+ 1.5 * c2y * p1x + 1.5 * c2y * c1x\n\t\t\t\t- 3.0 * c2y * p2x + 0.5 * p2y * p1x\n\t\t\t\t+ 1.5 * p2y * c1x + 3.0 * p2y * c2x) / 10;\n\t},\n\n\tgetEdgeSum: function(v) {\n\t\treturn\t  (v[0] - v[2]) * (v[3] + v[1])\n\t\t\t\t+ (v[2] - v[4]) * (v[5] + v[3])\n\t\t\t\t+ (v[4] - v[6]) * (v[7] + v[5]);\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name]([this._segment1,\n\t\t\t\t\t\tthis._segment2], false, this._path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve.evaluate(values, isParameter\n\t\t\t\t\t? offset : Curve.getParameterAt(values, offset, 0), index);\n\t\t};\n\t\tthis[name] = function(parameter) {\n\t\t\treturn Curve.evaluate(this.getValues(), parameter, index);\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Curve.getParameterOf(this.getValues(), point.x, point.y);\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tif (!isParameter)\n\t\t\toffset = this.getParameterAt(offset);\n\t\treturn offset >= 0 && offset <= 1 && new CurveLocation(this, offset);\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tcount = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(\n\t\t\t\t\t\tCurve.evaluate(values, t, 0), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 0.000001) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\tvar pt = Curve.evaluate(values, minT, 0);\n\t\treturn new CurveLocation(this, minT, pt, null, null, null,\n\t\t\t\tpoint.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n}),\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\treturn {\n\t\tstatics: true,\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tvar isZero = Numerical.isZero;\n\t\t\tif (a === 0 && b === 1\n\t\t\t\t\t&& isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t\t&& isZero(v[6] - v[4]) && isZero(v[7] - v[5])) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar forward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (Math.abs(offset) >= rangeLength)\n\t\t\t\treturn forward ? b : a;\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 16,\n\t\t\t\t\t0.000001);\n\t\t}\n\t};\n}, new function() {\n\tfunction addLocation(locations, include, curve1, t1, point1, curve2, t2,\n\t\t\tpoint2) {\n\t\tvar loc = new CurveLocation(curve1, t1, point1, curve2, t2, point2);\n\t\tif (!include || include(loc))\n\t\t\tlocations.push(loc);\n\t}\n\n\tfunction addCurveIntersections(v1, v2, curve1, curve2, locations, include,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (recursion > 32)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]) || 0,\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]) || 0,\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\ttMinNew, tMaxNew, tDiff;\n\t\tif (q0x === q3x && uMax - uMin <= tolerance && recursion > 3) {\n\t\t\ttMaxNew = tMinNew = (tMax + tMin) / 2;\n\t\t\ttDiff = 0;\n\t\t} else {\n\t\t\tvar hull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\t\ttop = hull[0],\n\t\t\t\tbottom = hull[1],\n\t\t\t\ttMinClip, tMaxClip;\n\t\t\ttMinClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\ttop.reverse();\n\t\t\tbottom.reverse();\n\t\t\ttMaxClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\tif (tMinClip == null || tMaxClip == null)\n\t\t\t\treturn;\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\ttDiff = tMaxClip - tMinClip;\n\t\t\ttMinNew = tMax * tMinClip + tMin * (1 - tMinClip);\n\t\t\ttMaxNew = tMax * tMaxClip + tMin * (1 - tMaxClip);\n\t\t}\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, curve2, curve1, locations, include,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew) < tolerance) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tif (reverse) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0),\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0));\n\t\t\t} else {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t} else if (tDiff > 0) {\n\t\t\taddCurveIntersections(v2, v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\tdist1 = getSignedDistance(0, dq0, 1, dq3, 1 / 3, dq1),\n\t\t\tdist2 = getSignedDistance(0, dq0, 1, dq3, 2 / 3, dq2),\n\t\t\tflip = false,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t\tflip = dist1 < 0;\n\t\t} else {\n\t\t\tvar pmax, cross = 0,\n\t\t\t\tdistZero = dist1 === 0 || dist2 === 0;\n\t\t\tif (Math.abs(dist1) > Math.abs(dist2)) {\n\t\t\t\tpmax = p1;\n\t\t\t\tcross = (dq3 - dq2 - (dq3 - dq0) / 3)\n\t\t\t\t\t\t* (2 * (dq3 - dq2) - dq3 + dq1) / 3;\n\t\t\t} else {\n\t\t\t\tpmax = p2;\n\t\t\t\tcross = (dq1 - dq0 + (dq0 - dq3) / 3)\n\t\t\t\t\t\t* (-2 * (dq0 - dq1) + dq0 - dq2) / 3;\n\t\t\t}\n\t\t\thull = cross < 0 || distZero\n\t\t\t\t\t? [[p0, pmax, p3], [p0, p3]]\n\t\t\t\t\t: [[p0, p1, p2, p3], [p0, p3]];\n\t\t\tflip = dist1 ? dist1 < 0 : dist2 < 0;\n\t\t}\n\t\treturn flip ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold)\n\t\t\t\treturn px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, curve1, curve2, locations,\n\t\t\tinclude) {\n\t\tvar flip = Curve.isLinear(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trlx2 = ldx * cos - ldy * sin,\n\t\t\trvl = [0, 0, 0, 0, rlx2, 0, rlx2, 0],\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\ty * cos + x * sin);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tx = Curve.evaluate(rvc, tc, 0).x;\n\t\t\tif (x >= 0 && x <= rlx2) {\n\t\t\t\tvar tl = Curve.getParameterOf(rvl, x, 0),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, curve1, curve2, locations, include) {\n\t\tvar point = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (point) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tcurve1, Curve.getParameterOf(v1, x, y), point,\n\t\t\t\t\tcurve2, Curve.getParameterOf(v2, x, y), point);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\tgetIntersections: function(v1, v2, c1, c2, locations, include) {\n\t\t\tvar linear1 = Curve.isLinear(v1),\n\t\t\t\tlinear2 = Curve.isLinear(v2),\n\t\t\t\tc1p1 = c1.getPoint1(),\n\t\t\t\tc1p2 = c1.getPoint2(),\n\t\t\t\tc2p1 = c2.getPoint1(),\n\t\t\t\tc2p2 = c2.getPoint2(),\n\t\t\t\ttolerance = 0.000001;\n\t\t\tif (c1p1.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 0, c1p1);\n\t\t\tif (c1p1.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 1, c1p1);\n\t\t\t(linear1 && linear2\n\t\t\t\t? addLineIntersection\n\t\t\t\t: linear1 || linear2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, include,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (c1p2.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 0, c1p2);\n\t\t\tif (c1p2.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 1, c1p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\tfilterIntersections: function(locations, _expand) {\n\t\t\tvar last = locations.length - 1,\n\t\t\t\ttMax = 1 - 0.000001;\n\t\t\tfor (var i = last; i >= 0; i--) {\n\t\t\t\tvar loc = locations[i],\n\t\t\t\t\tnext = loc._curve.getNext(),\n\t\t\t\t\tnext2 = loc._curve2.getNext();\n\t\t\t\tif (next && loc._parameter >= tMax) {\n\t\t\t\t\tloc._parameter = 0;\n\t\t\t\t\tloc._curve = next;\n\t\t\t\t}\n\t\t\t\tif (next2 && loc._parameter2 >= tMax) {\n\t\t\t\t\tloc._parameter2 = 0;\n\t\t\t\t\tloc._curve2 = next2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction compare(loc1, loc2) {\n\t\t\t\tvar path1 = loc1.getPath(),\n\t\t\t\t\tpath2 = loc2.getPath();\n\t\t\t\treturn path1 === path2\n\t\t\t\t\t\t? (loc1.getIndex() + loc1.getParameter())\n\t\t\t\t\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t\t\t: path1._id - path2._id;\n\t\t\t}\n\n\t\t\tif (last > 0) {\n\t\t\t\tlocations.sort(compare);\n\t\t\t\tfor (var i = last; i > 0; i--) {\n\t\t\t\t\tif (locations[i].equals(locations[i - 1])) {\n\t\t\t\t\t\tlocations.splice(i, 1);\n\t\t\t\t\t\tlast--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_expand) {\n\t\t\t\tfor (var i = last; i >= 0; i--)\n\t\t\t\t\tlocations.push(locations[i].getIntersection());\n\t\t\t\tlocations.sort(compare);\n\t\t\t}\n\t\t\treturn locations;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point, _curve2,\n\t\t\t_parameter2, _point2, _distance) {\n\t\tthis._id = CurveLocation._id = (CurveLocation._id || 0) + 1;\n\t\tthis._curve = curve;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t\tthis._parameter = parameter;\n\t\tthis._point = point;\n\t\tthis._curve2 = _curve2;\n\t\tthis._parameter2 = _parameter2;\n\t\tthis._point2 = _point2;\n\t\tthis._distance = _distance;\n\t},\n\n\tgetSegment: function(_preferFirst) {\n\t\tif (!this._segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this.getParameter();\n\t\t\tif (parameter === 1) {\n\t\t\t\tthis._segment = curve._segment2;\n\t\t\t} else if (parameter === 0 || _preferFirst) {\n\t\t\t\tthis._segment = curve._segment1;\n\t\t\t} else if (parameter == null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis._segment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t}\n\t\treturn this._segment;\n\t},\n\n\tgetCurve: function(_uncached) {\n\t\tif (!this._curve || _uncached) {\n\t\t\tthis._curve = this._segment1.getCurve();\n\t\t\tif (this._curve.getParameterOf(this._point) == null)\n\t\t\t\tthis._curve = this._segment2.getPrevious().getCurve();\n\t\t}\n\t\treturn this._curve;\n\t},\n\n\tgetIntersection: function() {\n\t\tvar intersection = this._intersection;\n\t\tif (!intersection && this._curve2) {\n\t\t\tvar param = this._parameter2;\n\t\t\tthis._intersection = intersection = new CurveLocation(\n\t\t\t\t\tthis._curve2, param, this._point2 || this._point, this);\n\t\t\tintersection._intersection = this;\n\t\t}\n\t\treturn intersection;\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetOffset: function() {\n\t\tvar path = this.getPath();\n\t\treturn path ? path._getOffset(this) : this.getCurveOffset();\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetParameter: function(_uncached) {\n\t\tif ((this._parameter == null || _uncached) && this._point) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._parameter = curve && curve.getParameterOf(this._point);\n\t\t}\n\t\treturn this._parameter;\n\t},\n\n\tgetPoint: function(_uncached) {\n\t\tif ((!this._point || _uncached) && this._parameter != null) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._point = curve && curve.getPointAt(this._parameter, true);\n\t\t}\n\t\treturn this._point;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.divide(this.getParameter(true), true);\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.split(this.getParameter(true), true);\n\t},\n\n\tequals: function(loc) {\n\t\tvar abs = Math.abs,\n\t\t\ttolerance = 0.000001;\n\t\treturn this === loc\n\t\t\t\t|| loc\n\t\t\t\t\t&& this._curve === loc._curve\n\t\t\t\t\t&& this._curve2 === loc._curve2\n\t\t\t\t\t&& abs(this._parameter - loc._parameter) <= tolerance\n\t\t\t\t\t&& abs(this._parameter2 - loc._parameter2) <= tolerance\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t}\n}, Base.each(['getTangent', 'getNormal', 'getCurvature'], function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {}));\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, _matrix, _expand) {\n\t\tif (this === path)\n\t\t\tpath = null;\n\t\tvar locations = [],\n\t\t\tcurves1 = this.getCurves(),\n\t\t\tcurves2 = path ? path.getCurves() : curves1,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = path ? (_matrix || path._matrix).orNullIfIdentity()\n\t\t\t\t: matrix1,\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = path ? curves2.length : length1,\n\t\t\tvalues2 = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tif (path && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = path ? curve1.getValues(matrix1) : values2[i];\n\t\t\tif (!path) {\n\t\t\t\tvar seg1 = curve1.getSegment1(),\n\t\t\t\t\tseg2 = curve1.getSegment2(),\n\t\t\t\t\th1 = seg1._handleOut,\n\t\t\t\t\th2 = seg2._handleIn;\n\t\t\t\tif (new Line(seg1._point.subtract(h1), h1.multiply(2), true)\n\t\t\t\t\t\t.intersect(new Line(seg2._point.subtract(h2),\n\t\t\t\t\t\th2.multiply(2), true), false)) {\n\t\t\t\t\tvar parts = Curve.subdivide(values1);\n\t\t\t\t\tCurve.getIntersections(\n\t\t\t\t\t\tparts[0], parts[1], curve1, curve1, locations,\n\t\t\t\t\t\tfunction(loc) {\n\t\t\t\t\t\t\tif (loc._parameter <= tMax) {\n\t\t\t\t\t\t\t\tloc._parameter /= 2;\n\t\t\t\t\t\t\t\tloc._parameter2 = 0.5 + loc._parameter2 / 2;\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var j = path ? 0 : i + 1; j < length2; j++) {\n\t\t\t\tCurve.getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curves2[j], locations,\n\t\t\t\t\t!path && (j === i + 1 || j === length2 - 1 && i === 0)\n\t\t\t\t\t\t&& function(loc) {\n\t\t\t\t\t\t\tvar t = loc._parameter;\n\t\t\t\t\t\t\treturn t >= tMin && t <= tMax;\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Curve.filterIntersections(locations, _expand);\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tif (move && previous && previous !== 'z')\n\t\t\t\t\tthis.closePath(true);\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._clockwise = undefined;\n\t\t\tif (this._curves && !(flags & 16)) {\n\t\t\t\tfor (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t\tthis._monoCurves = undefined;\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\tisPolygon: function() {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif (!this._segments[i].isLinear())\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves || segs._curves) {\n\t\t\tif (!curves)\n\t\t\t\tcurves = this._curves = [];\n\t\t\tvar from = index > 0 ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, this._countCurves());\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves();\n\t\t\tthis._length = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tthis._length += curves[i].getLength();\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar curves = this.getCurves();\n\t\tvar area = 0;\n\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\tarea += curves[i].getArea();\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.evaluate(pos, 0)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (curve.isLinear() && curve.getLength() === 0)\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tolerance = 0.000001;\n\t\tif (parameter >= 1 - tolerance) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter > tolerance) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = this._clone(new Path().insertAbove(this, true));\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn Path.isClockwise(this._segments);\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path.closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\tinterpolate: function(path0, path1, coef) {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif ( !path0._segments[i] || !path1._segments[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._segments[i].interpolate(\n\t\t\t\tpath0._segments[i],\n\t\t\t\tpath1._segments[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\n\t\tthis._changed(9);\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isColinear(i, j) {\n\t\t\treturn segments[i].isColinear(segments[j]);\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\treturn segments[i].isOrthogonal();\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\treturn segments[i].isArc();\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (this.isPolygon() && segments.length === 4\n\t\t\t\t&& isColinear(0, 2) && isColinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isColinear(1, 5) && isColinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t});\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\tshape.setStyle(this._style);\n\t\t\tif (insert || insert === undefined)\n\t\t\t\tshape.insertAbove(this);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\t_getOffset: function(location) {\n\t\tvar index = location && location.getIndex();\n\t\tif (index != null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\toffset = 0;\n\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\toffset += curves[i].getLength();\n\t\t\tvar curve = curves[index],\n\t\t\t\tparameter = location.getParameter();\n\t\t\tif (parameter > 0)\n\t\t\t\toffset += curve.getPartLength(0, parameter);\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset;\n\t\t\treturn curves[index].getLocationAt(offset - index, true);\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}), new function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n}, new function() {\n\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n}, new function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < epsilon)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tisClockwise: function(segments) {\n\t\tvar sum = 0;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsum += Curve.getEdgeSum(Curve.getValues(\n\t\t\t\t\tsegments[i], segments[i + 1 < l ? i + 1 : 0]));\n\t\treturn sum > 0;\n\t},\n\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isColinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().normalize(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tif (this._children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t} else {\n\t\t\treturn reduce.base.call(this);\n\t\t}\n\t},\n\n\tinterpolate: function(compoundpath0, compoundpath1, coef) {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\tif ( !compoundpath0._children[i] || !compoundpath1._children[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._children[i].interpolate(\n\t\t\t\tcompoundpath0._children[i],\n\t\t\t\tcompoundpath1._children[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : mx, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n}, new function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current : new Path();\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tvar operator = operators[operation];\n\t\tfunction preparePath(path) {\n\t\t\treturn path.clone(false).reduce().reorient().transform(null, true,\n\t\t\t\t\ttrue);\n\t\t}\n\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tsplitPath(_path1.getIntersections(_path2, null, true));\n\n\t\tvar chain = [],\n\t\t\tsegments = [],\n\t\t\tmonoCurves = [],\n\t\t\ttolerance = 0.000001;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tsegments.sort(function(a, b) {\n\t\t\tvar _a = a._intersection,\n\t\t\t\t_b = b._intersection;\n\t\t\treturn !_a && !_b || _a && _b ? 0 : _a ? -1 : 1;\n\t\t});\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding != null)\n\t\t\t\tcontinue;\n\t\t\tchain.length = 0;\n\t\t\tvar startSeg = segment,\n\t\t\t\ttotalLength = 0,\n\t\t\t\twindingSum = 0;\n\t\t\tdo {\n\t\t\t\tvar length = segment.getCurve().getLength();\n\t\t\t\tchain.push({ segment: segment, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t\tsegment = segment.getNext();\n\t\t\t} while (segment && !segment._intersection && segment !== startSeg);\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar length = totalLength * (j + 1) / 4;\n\t\t\t\tfor (k = 0, m = chain.length; k < m; k++) {\n\t\t\t\t\tvar node = chain[k],\n\t\t\t\t\t\tcurveLength = node.length;\n\t\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\t\tif (length <= tolerance\n\t\t\t\t\t\t\t\t|| curveLength - length <= tolerance)\n\t\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\t\tvar curve = node.segment.getCurve(),\n\t\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\t\thor = curve.isLinear() && Math.abs(curve\n\t\t\t\t\t\t\t\t\t.getTangentAt(0.5, true).y) <= tolerance,\n\t\t\t\t\t\t\tpath = curve._path;\n\t\t\t\t\t\tif (path._parent instanceof CompoundPath)\n\t\t\t\t\t\t\tpath = path._parent;\n\t\t\t\t\t\twindingSum += operation === 'subtract' && _path2\n\t\t\t\t\t\t\t&& (path === _path1 && _path2._getWinding(pt, hor)\n\t\t\t\t\t\t\t|| path === _path2 && !_path1._getWinding(pt, hor))\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlength -= curveLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar winding = Math.round(windingSum / 3);\n\t\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.insertAbove(path1);\n\t\tresult.addChildren(tracePaths(segments, operator), true);\n\t\tresult = result.reduce();\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction splitPath(intersections) {\n\t\tvar tMin = 0.000001,\n\t\t\ttMax = 1 - tMin,\n\t\t\tlinearHandles;\n\n\t\tfunction resetLinear() {\n\t\t\tfor (var i = 0, l = linearHandles.length; i < l; i++)\n\t\t\t\tlinearHandles[i].set(0, 0);\n\t\t}\n\n\t\tfor (var i = intersections.length - 1, curve, prev; i >= 0; i--) {\n\t\t\tvar loc = intersections[i],\n\t\t\t\tt = loc._parameter;\n\t\t\tif (prev && prev._curve === loc._curve && prev._parameter > 0) {\n\t\t\t\tt /= prev._parameter;\n\t\t\t} else {\n\t\t\t\tcurve = loc._curve;\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tresetLinear();\n\t\t\t\tlinearHandles = curve.isLinear() ? [\n\t\t\t\t\t\tcurve._segment1._handleOut,\n\t\t\t\t\t\tcurve._segment2._handleIn\n\t\t\t\t\t] : null;\n\t\t\t}\n\t\t\tvar newCurve,\n\t\t\t\tsegment;\n\t\t\tif (newCurve = curve.divide(t, true, true)) {\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tcurve = newCurve.getPrevious();\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tlinearHandles.push(segment._handleOut, segment._handleIn);\n\t\t\t} else {\n\t\t\t\tsegment = t < tMin\n\t\t\t\t\t? curve._segment1\n\t\t\t\t\t: t > tMax\n\t\t\t\t\t\t? curve._segment2\n\t\t\t\t\t\t: curve.getPartLength(0, t) < curve.getPartLength(t, 1)\n\t\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tsegment._intersection = loc.getIntersection();\n\t\t\tloc._segment = segment;\n\t\t\tprev = loc;\n\t\t}\n\t\tif (linearHandles)\n\t\t\tresetLinear();\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar tolerance = 0.000001,\n\t\t\ttMin = tolerance,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - tolerance,\n\t\t\t\tyAfter = py + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.evaluate(values, roots[j], 0).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves);\n\t\t} else {\n\t\t\tvar xBefore = px - tolerance,\n\t\t\t\txAfter = px + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding,\n\t\t\t\t\tprevT,\n\t\t\t\t\tprevX;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tx = Curve.evaluate(values, t, 0).x,\n\t\t\t\t\t\tslope = Curve.evaluate(values, t, 1).y;\n\t\t\t\t\tif (!(t > tMax\n\t\t\t\t\t\t\t&& (i === l - 1 || curve.next !== curves[i + 1])\n\t\t\t\t\t\t\t&& abs(Curve.evaluate(curve.next.values, 0, 0).x -x)\n\t\t\t\t\t\t\t\t<= tolerance\n\t\t\t\t\t\t|| i > 0 && curve.previous === curves[i - 1]\n\t\t\t\t\t\t\t&& abs(prevX - x) < tolerance\n\t\t\t\t\t\t\t&& prevT > tMax && t < tMin)) {\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isLinear(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0, 1).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprevT = t;\n\t\t\t\t\tprevX = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction tracePaths(segments, operator, selfOp) {\n\t\tvar paths = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0, seg, startSeg, l = segments.length; i < l; i++) {\n\t\t\tseg = startSeg = segments[i];\n\t\t\tif (seg._visited || !operator(seg._winding))\n\t\t\t\tcontinue;\n\t\t\tvar path = new Path(Item.NO_INSERT),\n\t\t\t\tinter = seg._intersection,\n\t\t\t\tstartInterSeg = inter && inter._segment,\n\t\t\t\tadded = false,\n\t\t\t\tdir = 1;\n\t\t\tdo {\n\t\t\t\tvar handleIn = dir > 0 ? seg._handleIn : seg._handleOut,\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn,\n\t\t\t\t\tinterSeg;\n\t\t\t\tif (added && (!operator(seg._winding) || selfOp)\n\t\t\t\t\t\t&& (inter = seg._intersection)\n\t\t\t\t\t\t&& (interSeg = inter._segment)\n\t\t\t\t\t\t&& interSeg !== startSeg) {\n\t\t\t\t\tif (selfOp) {\n\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar c1 = seg.getCurve();\n\t\t\t\t\t\tif (dir > 0)\n\t\t\t\t\t\t\tc1 = c1.getPrevious();\n\t\t\t\t\t\tvar t1 = c1.getTangentAt(dir < 1 ? tMin : tMax, true),\n\t\t\t\t\t\t\tc4 = interSeg.getCurve(),\n\t\t\t\t\t\t\tc3 = c4.getPrevious(),\n\t\t\t\t\t\t\tt3 = c3.getTangentAt(tMax, true),\n\t\t\t\t\t\t\tt4 = c4.getTangentAt(tMin, true),\n\t\t\t\t\t\t\tw3 = t1.cross(t3),\n\t\t\t\t\t\t\tw4 = t1.cross(t4);\n\t\t\t\t\t\tif (w3 * w4 !== 0) {\n\t\t\t\t\t\t\tvar curve = w3 < w4 ? c3 : c4,\n\t\t\t\t\t\t\t\tnextCurve = operator(curve._segment1._winding)\n\t\t\t\t\t\t\t\t\t? curve\n\t\t\t\t\t\t\t\t\t: w3 < w4 ? c4 : c3,\n\t\t\t\t\t\t\t\tnextSeg = nextCurve._segment1;\n\t\t\t\t\t\t\tdir = nextCurve === c3 ? -1 : 1;\n\t\t\t\t\t\t\tif (nextSeg._visited && seg._path !== nextSeg._path\n\t\t\t\t\t\t\t\t\t\t|| !operator(nextSeg._winding)) {\n\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\t\t\tif (nextSeg._visited)\n\t\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, added && handleIn, handleOut));\n\t\t\t\tadded = true;\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = dir > 0 ? seg.getNext() : seg. getPrevious();\n\t\t\t} while (seg && !seg._visited\n\t\t\t\t\t&& seg !== startSeg && seg !== startInterSeg\n\t\t\t\t\t&& (seg._intersection || operator(seg._winding)));\n\t\t\tif (seg && (seg === startSeg || seg === startInterSeg)) {\n\t\t\t\tpath.firstSegment.setHandleIn((seg === startInterSeg\n\t\t\t\t\t\t? startInterSeg : seg)._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else {\n\t\t\t\tpath.lastSegment._handleOut.set(0, 0);\n\t\t\t}\n\t\t\tif (path._segments.length >\n\t\t\t\t\t(path._closed ? path.isPolygon() ? 2 : 0 : 1))\n\t\t\t\tpaths.push(path);\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn new Group([this.subtract(path), this.intersect(path)]);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isLinear(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttolerance = 0.000001,\n\t\t\t\t\troots = [];\n\t\t\t\tvar count = Numerical.solveQuadratic(a, b, c, roots, tolerance,\n\t\t\t\t\t\t1 - tolerance);\n\t\t\t\tif (count === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.evaluate(values, roots[j], 0).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 0.000001) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tevaluate: function(offset, type) {\n\t\tvar param = this.getParameterAt(offset);\n\t\treturn Curve.evaluate(this.curves[param.index], param.value, type);\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\treturn this.evaluate(offset, index);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tthis.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1);\n\t\tepsilon *= segLength;\n\t\tif (alpha1 < epsilon || alpha2 < epsilon) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t}\n\n\t\treturn [pt1, pt1.add(tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 0.000001)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tvalue = parser.call(this, value);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tthis._components[index] = value;\n\t\t\t\t\tthis._changed();\n\t\t\t\t}\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type];\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tif (type === 'gradient')\n\t\t\t\tthis._id = Color._id = (Color._id || 0) + 1;\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n}, new function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nBase.each(Color._types, function(properties, type) {\n\tvar ctor = this[Base.capitalize(type) + 'Color'] = function(arg) {\n\t\t\tvar argType = arg != null && typeof arg,\n\t\t\t\tcomponents = argType === 'object' && arg.length != null\n\t\t\t\t\t? arg\n\t\t\t\t\t: argType === 'string'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: arguments;\n\t\t\treturn components\n\t\t\t\t\t? new Color(type, components)\n\t\t\t\t\t: new Color(arg);\n\t\t};\n\tif (type.length == 3) {\n\t\tvar acronym = type.toUpperCase();\n\t\tColor[acronym] = this[acronym + 'Color'] = ctor;\n\t}\n}, Base.exports);\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = Gradient._id = (Gradient._id || 0) + 1;\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = typeof window === 'object' &&\n\t\t\tDomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tif ( typeof window === 'object' ) {\n\t\tDomEvent.add(window, {\n\t\t\tfocus: function() {\n\t\t\t\tfocused = true;\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tfocused = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif ( !noCanvas ) {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchAction: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\tuserDrag: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\n\t\t\tfunction getSize(name) {\n\t\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t\t}\n\n\t\t\tfunction getCanvasSize() {\n\t\t\t\tvar size = DomElement.getSize(element);\n\t\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t\t: size;\n\t\t\t}\n\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._setViewSize(size = getCanvasSize());\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = 1;\n\t\t\tthis._id = 'view-' + View._id++;\n\t\t\tsize = new Size(element.width, element.height);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: {\n\t\tonFrame: {\n\t\t\tinstall: function() {\n\t\t\t\tthis.play();\n\t\t\t},\n\n\t\t\tuninstall: function() {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t},\n\n\t\tonResize: {}\n\t},\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n}, new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif ( !noCanvas ) {\n\t\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tif (size.isZero())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t\t}\n\t\t\tthis._context = canvas.getContext('2d');\n\t\t}\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!noCanvas && !/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font;\n\t\tctx.font = size + ' serif';\n\t\tsize = parseFloat(ctx.font);\n\t\tctx.font = prevFont;\n\t\treturn size;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function() {\n\t\tvar project = this._project;\n\t\tif (!project || !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n}, new function() {\n\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers)\n\t\t\tmodifiers[name] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = this._minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = distance;\n\t\tthis._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tvar maxDist = maxDistance != null ? maxDistance : 0;\n\t\t\t\tif (maxDist != 0) {\n\t\t\t\t\tif (distance > maxDist) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDist));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback) {\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, true);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif ( noCanvas ) {\n\t\t\treturn { getContext: function() {} };\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tif (options.matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (item.isPolygon()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (applyMatrix && item)\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n\n},{}],3:[function(require,module,exports){\nfunction Collection( args ) {\n\t// already a Collection? Job's done\n\tif ( arguments.length === 1 && args instanceof Collection ) {\n\t\treturn args;\n\n\t} else if ( arguments.length > 1 || !Array.isArray( args ) ) {\n\t\targs = [].slice.call( arguments, 0 );\n\t}\n\n\tthis.length = 0;\n\n\targs.forEach(function( arg ) {\n\t\t// unwrap any collection\n\t\tif ( arg instanceof Collection ) {\n\t\t\tfor ( var i = -1; ++i < arg.length; ) {\n\t\t\t\tthis[this.length++] = arg[i];\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis[this.length++] = arg;\n\t\t}\n\n\t}, this);\n\n\treturn this;\n}\n\nCollection.prototype.forEach = function(cb, scope) {\n\tfor ( var i = -1; ++i < this.length; ) {\n\t\tcb.call(scope || this[i], this[i], i, this);\n\t}\n\n\treturn this;\n};\n\nCollection.prototype.prop = function(name, val) {\n\tvar i;\n\n\t// object setter\n\tif ( typeof name === 'object' ) {\n\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\tthis[i].set( name );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// getter\n\tif ( val === undefined ) {\n\t\treturn this[0][name];\n\t}\n\n\t// simple setter\n\tfor ( i = -1; ++i < this.length; ) {\n\t\tthis[i][name] = val;\n\t}\n\n\treturn this;\n};\n\nfunction wrapConstructor( constructor, prototype, useConstructed ) {\n\treturn function wrapper() {\n\t\tvar c,\n\t\t\ttmp,\n\t\t\tarr = [];\n\n\t\t// constructor used with new\n\t\tif ( this instanceof wrapper ) {\n\t\t\t// proxy to paper native constructor\n\t\t\tc = Object.create(prototype);\n\t\t\ttmp = constructor.apply(c, arguments);\n\t\t\treturn useConstructed ?\n\t\t\t\ttmp : c;\n\n\t\t// without new, build a collection\n\t\t} else {\n\t\t\tif ( Array.isArray( arguments[0] ) ) {\n\t\t\t\targuments[0].forEach(function(params, i) {\n\t\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\t\tc = constructor.call( arr[i], params );\n\t\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\t\tarr[i] = c;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\tc = constructor.apply( arr[0], arguments );\n\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\tarr[0] = c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Collection( arr );\n\t\t}\n\t};\n}\n\nvar rconstructor = /(^|\\.)[A-Z][A-z]+$/;\nfunction constructorFilter( name ) {\n\treturn typeof this[name] === 'function' && rconstructor.test(name);\n}\n\n// unwrap a collection or array of collection\nfunction unwrapArg( arr, id, isPlural ) {\n\t// unwrap a single collection\n\tif ( arr && arr[id] instanceof Collection ) {\n\t\tarr[id] = isPlural ?\n\t\t\t[].slice.call( arr[id], 0 ) :\n\t\t\tarr[id][0];\n\n\t// unwrap an array of collection\n\t} else if ( arr && arr[id].length && arr[id][0] instanceof Collection ) {\n\t\tfor ( var i = -1; ++i < arr[id].length; ) {\n\t\t\tarr[id][i] = arr[id][i][0];\n\t\t}\n\t}\n}\n\nfunction unwrapArgs() {\n\tvar isPlural = this.isPlural,\n\t\targs = [].slice.call( arguments, 0 ),\n\t\tid,\n\t\ti;\n\n\t// first arg is an object and might have a collection or array of collection\n\t// Todo: objects should be unwrapped recursively\n\tif ( args[0] && args[0].constructor === Object ) {\n\t\tif ( 'children' in args[0] ) {\n\t\t\tid = 'children';\n\n\t\t} else if ( 'segments' in args[0] ) {\n\t\t\tid = 'segments';\n\n\t\t} else if ( 'nodes' in args[0] ) {\n\t\t\tid = 'nodes';\n\t\t}\n\n\t\tunwrapArg( args[0], id, true );\n\n\t// otherwise unwrap each arg\n\t} else {\n\t\tfor ( i = -1; ++i < args.length; ) {\n\t\t\t// if the method is plural (addChildren) and we're unwrapping\n\t\t\t// the last argument, we want to keep it in an array\n\t\t\tunwrapArg( args, i, i === args.length - 1 && isPlural );\n\t\t}\n\t}\n\n\treturn args;\n}\n\nCollection.proxy = function( paper ) {\n\tvar plumin = this;\n\n\tplumin.paper = paper;\n\n\tvar methodNames = {};\n\tObject.getOwnPropertyNames( paper.PaperScope.prototype )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype )\n\t\t.forEach(function(name) {\n\t\t\tplumin[name] = wrapConstructor( this[name], this[name].prototype );\n\n\t\t\t// we don't want to proxy methods of Collection\n\t\t\tif ( name === 'Collection' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tObject.getOwnPropertyNames( this[name].prototype )\n\t\t\t\t.forEach(function(_name) {\n\t\t\t\t\t// collect unique method names (first test avoids getters)\n\t\t\t\t\tif ( !Object.getOwnPropertyDescriptor(this, _name).get &&\n\t\t\t\t\t\t\ttypeof this[_name] === 'function' ) {\n\n\t\t\t\t\t\tmethodNames[_name] = true;\n\t\t\t\t\t}\n\n\t\t\t\t}, this[name].prototype);\n\n\t\t}, paper.PaperScope.prototype);\n\n\tObject.keys( paper.PaperScope.prototype.Path )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Path )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Path[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Path );\n\n\tObject.keys( paper.PaperScope.prototype.Shape )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Shape )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Shape[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Shape );\n\n\t// proxy the most commonly used method of paper\n\t// do it only after proxying constructors otherwise it's overwritten\n\tplumin.setup = paper.setup.bind(paper);\n\n\t// proxy all methods from every constructor\n\t// by default methods aren't chainable\n\tObject.keys( methodNames ).sort().forEach(function(name) {\n\t\t// please oh please, don't overwrite my constructor, I need it.\n\t\tif ( name === 'constructor' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(null, arguments),\n\t\t\t\ti,\n\t\t\t\tresult;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tresult = this[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// by default methods aren't chainable\n\t\t\t// return the last result\n\t\t\treturn result;\n\t\t};\n\t});\n\n\t\t// addChild( item ) and other methods with similar signatures\n\t\t// that we want to make chainable\n\tvar chain = [\n\t\t\t'set',\n\t\t\t'setX',\n\t\t\t'setY',\n\t\t\t'insertAbove',\n\t\t\t'insertBelow',\n\t\t\t'sendToBack',\n\t\t\t'bringToFront',\n\t\t\t'remove',\n\t\t\t'removeChildren',\n\t\t\t'reverseChildren',\n\n\t\t\t'translate',\n\t\t\t'rotate',\n\t\t\t'scale',\n\t\t\t'shear',\n\t\t\t'skew',\n\t\t\t'transform',\n\t\t\t'fitBounds',\n\t\t\t'emit',\n\n\t\t\t'activate',\n\n\t\t\t'setPixel',\n\n\t\t\t'smooth',\n\t\t\t'moveTo',\n\t\t\t'lineTo',\n\t\t\t'cubicCurveTo',\n\t\t\t'quadraticCurveTo',\n\t\t\t'curveTo',\n\t\t\t'arcTo',\n\t\t\t'closePath',\n\t\t\t'moveBy',\n\t\t\t'lineBy',\n\t\t\t'cubicCurveBy',\n\t\t\t'quadraticCurveBy',\n\t\t\t'curveBy',\n\t\t\t'arcBy',\n\n\t\t\t'removeSegments',\n\t\t\t'simplify',\n\t\t\t'reverse',\n\n\t\t\t// Rectangle\n\t\t\t'include',\n\t\t\t'expand',\n\t\t\t'scale',\n\t\t// ],\n\t\t// createAndChain = [\n\t\t\t'addChild',\n\t\t\t'insertChild',\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'replaceWith',\n\n\t\t\t'appendTop',\n\t\t\t'appendBottom',\n\n\t\t\t'add',\n\t\t\t'insert',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNode',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\n\t\t\t'addGlyph',\n\t\t\t'addGlyphs',\n\n\t\t\t'addContour',\n\t\t\t'insertContour',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addAnchor',\n\t\t\t'addAnchors',\n\t\t\t'addComponent',\n\t\t\t'addComponents',\n\n\t\t\t'addUnicode',\n\t\t\t'prepareOt',\n\t\t\t'addToFonts',\n\t\t\t'download'\n\t\t],\n\t\tplural = [\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\t\t\t'addGlyphs',\n\t\t\t'addAnchors',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addComponents'\n\t\t]/*,\n\t\tmathPoinFn = [\n\t\t\t'round',\n\t\t\t'ceil',\n\t\t\t'floor',\n\t\t\t'abs'\n\t\t],\n\t\tbooleanPathOp = [\n\t\t\t'unite',\n\t\t\t'intersect',\n\t\t\t'subtract',\n\t\t\t'exclude',\n\t\t\t'divide'\n\t\t]*/;\n\n\tchain.forEach(function(name) {\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(\n\t\t\t\t\t{ isPlural: plural.indexOf(name) !== -1 },\n\t\t\t\t\targuments\n\t\t\t\t),\n\t\t\t\ti;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tthis[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// make method chainable\n\t\t\treturn this;\n\t\t};\n\t});\n\n\t// singular chainable method\n};\n\nmodule.exports = Collection;\n\n},{}],4:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tGlyph = require('./Glyph.js');\n\nfunction Font( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\tif ( !args ) {\n\t\targs = {};\n\t}\n\n\tif ( !args.styleName ) {\n\t\targs.styleName = 'Regular';\n\t}\n\n\tif ( !args.unitsPerEm ) {\n\t\targs.unitsPerEm = 1024;\n\t}\n\n\tthis.fontinfo = this.ot = new opentype.Font( args );\n\n\tthis.glyphMap = {};\n\tthis.charMap = {};\n\tthis.altMap = {};\n\tthis._subset = false;\n\n\tthis.addGlyph(new Glyph({\n\t\tname: '.notdef',\n\t\tunicode: 0\n\t}));\n\n\tif ( args && args.glyphs ) {\n\t\tthis.addGlyphs( args.glyphs );\n\t}\n\n\tif ( typeof window === 'object' && window.document ) {\n\t\t// work around https://bugzilla.mozilla.org/show_bug.cgi?id=1100005\n\t\t// by using fonts.delete in batch, every 1 second\n\t\tif ( document.fonts ) {\n\t\t\tthis.addedFonts = [];\n\n\t\t\tsetInterval(function() {\n\t\t\t\twhile ( this.addedFonts.length > 1 ) {\n\t\t\t\t\tdocument.fonts.delete( this.addedFonts.shift() );\n\t\t\t\t}\n\t\t\t}.bind(this), 1000);\n\n\t\t} else {\n\t\t\tdocument.head.appendChild(\n\t\t\t\tthis.styleElement = document.createElement('style')\n\t\t\t);\n\t\t\t// let's find the corresponding CSSStyleSheet\n\t\t\t// (would be much easier with Array#find)\n\t\t\tthis.styleSheet = document.styleSheets[\n\t\t\t\t[].map.call(document.styleSheets, function(ss) {\n\t\t\t\t\treturn ss.ownerNode;\n\t\t\t\t}).indexOf(this.styleElement)\n\t\t\t];\n\t\t}\n\t}\n}\n\nFont.prototype = Object.create(paper.Group.prototype);\nFont.prototype.constructor = Font;\n\n// proxy .glyphs to .children\n// TODO: handle unicode updates\nObject.defineProperty(\n\tFont.prototype,\n\t'glyphs',\n\tObject.getOwnPropertyDescriptor( paper.Item.prototype, 'children' )\n);\n\n// TODO: proper proxying of ...Glyph[s] methods to ...Child[ren] methods\n// see Glyph.js\nFont.prototype.addGlyph = function( glyph ) {\n\tthis.addChild( glyph );\n\tthis.glyphMap[glyph.name] = glyph;\n\n\tif ( glyph.ot.unicode === undefined ) {\n\t\treturn glyph;\n\t}\n\n\t// build the default cmap\n\t// if multiple glyphs share the same unicode, use the glyph where unicode\n\t// and name are equal\n\tif ( !this.charMap[glyph.ot.unicode] ||\n\t\t\t( glyph.name.length === 1 &&\n\t\t\t\tglyph.name.charCodeAt(0) === glyph.ot.unicode ) ) {\n\n\t\tthis.charMap[glyph.ot.unicode] = glyph;\n\t}\n\n\t// build the alternates map\n\tif ( !this.altMap[glyph.ot.unicode] ) {\n\t\tthis.altMap[glyph.ot.unicode] = [];\n\t}\n\tthis.altMap[glyph.ot.unicode].push( glyph );\n\n\t// invalidate glyph subset cache\n\t// TODO: switch to immutable.js to avoid this maddness\n\tthis._lastSubset = undefined;\n\n\treturn glyph;\n};\n\nFont.prototype.addGlyphs = function( glyphs ) {\n\treturn glyphs.forEach(function( glyph ) {\n\t\tthis.addGlyph(glyph);\n\n\t}, this);\n};\n\nObject.defineProperty( Font.prototype, 'subset', {\n\tget: function() {\n\t\tif ( !this._subset ) {\n\t\t\tthis._subset = this.normalizeSubset( false );\n\t\t}\n\t\treturn this._subset;\n\t},\n\tset: function( set ) {\n\t\tthis._subset = this.normalizeSubset( set );\n\t}\n});\n\nFont.prototype.normalizeSubset = function( _set ) {\n\tvar set;\n\n\t// two cases where _set isn't an array\n\t// false set = all glyphs in the charMap\n\tif ( _set === false ) {\n\t\tset = Object.keys( this.charMap ).map(function( unicode ) {\n\t\t\treturn this.charMap[unicode];\n\t\t}.bind(this));\n\n\t// convert string to array of chars\n\t} else if ( typeof _set === 'string' ) {\n\t\tset = _set.split('').map(function(e) {\n\t\t\treturn e.charCodeAt(0);\n\t\t});\n\n\t} else {\n\t\tset = _set;\n\t}\n\n\t// convert array of number to array of glyphs\n\tif ( Array.isArray( set ) && typeof set[0] === 'number' ) {\n\t\tset = set.map(function( unicode ) {\n\t\t\treturn this.charMap[ unicode ];\n\t\t}.bind(this));\n\t}\n\n\t// always include .undef\n\tif ( set.indexOf( this.glyphMap['.notdef'] ) === -1 ) {\n\t\tset.unshift( this.glyphMap['.notdef'] );\n\t}\n\n\t// remove undefined glyphs and dedupe the set\n\treturn set.filter(function(e, i, arr) {\n\t\treturn e && arr.lastIndexOf(e) === i;\n\t});\n};\n\nFont.prototype.getGlyphSubset = function( _set ) {\n\treturn _set !== undefined ? this.normalizeSubset( _set ) : this.subset;\n};\n\nFont.prototype.interpolate = function( font0, font1, coef, set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\tglyph.interpolate(\n\t\t\tfont0.glyphMap[glyph.name],\n\t\t\tfont1.glyphMap[glyph.name],\n\t\t\tcoef\n\t\t);\n\t});\n\n\t// TODO: evaluate if taking subsetting into account makes kerning\n\t// interpolation faster or slower.\n\tif ( this.ot.kerningPairs ) {\n\t\tfor ( var i in this.ot.kerningPairs ) {\n\t\t\tthis.ot.kerningPairs[i] =\n\t\t\t\tfont0.ot.kerningPairs[i] +\n\t\t\t\t( font1.ot.kerningPairs[i] - font0.ot.kerningPairs[i] ) * coef;\n\t\t}\n\t}\n\n\tthis.ot.ascender =\n\t\tfont0.ot.ascender + ( font1.ot.ascender - font0.ot.ascender ) * coef;\n\tthis.ot.descender =\n\t\tfont0.ot.descender + ( font1.ot.descender - font0.ot.descender ) * coef;\n\n\treturn this;\n};\n\nFont.prototype.updateSVGData = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateSVGData();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.updateOTCommands = function( set ) {\n\tthis.ot.glyphs = this.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateOTCommands();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.importOT = function( otFont ) {\n\tthis.ot = otFont;\n\n\totFont.glyphs.forEach(function( otGlyph ) {\n\t\tvar glyph = new Glyph({\n\t\t\t\tname: otGlyph.name,\n\t\t\t\tunicode: otGlyph.unicode\n\t\t\t});\n\n\t\tthis.addGlyph( glyph );\n\t\tglyph.importOT( otGlyph );\n\n\t}, this);\n\n\treturn this;\n};\n\nif ( typeof window === 'object' && window.document ) {\n\n\tvar _URL = window.URL || window.webkitURL;\n\tFont.prototype.addToFonts = document.fonts ?\n\t\t// CSS font loading, lightning fast\n\t\tfunction( buffer ) {\n\t\t\tvar fontface = new window.FontFace(\n\t\t\t\tthis.ot.familyName,\n\t\t\t\tbuffer || this.ot.toBuffer()\n\t\t\t);\n\n\t\t\tdocument.fonts.add( fontface );\n\t\t\tthis.addedFonts.push( fontface );\n\n\t\t\treturn this;\n\t\t} :\n\t\tfunction( buffer ) {\n\t\t\tvar url = _URL.createObjectURL(\n\t\t\t\t\tnew Blob(\n\t\t\t\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t\t\t\t{ type: 'font/opentype' }\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tif ( this.fontObjectURL ) {\n\t\t\t\t_URL.revokeObjectURL( this.fontObjectURL );\n\t\t\t\tthis.styleSheet.deleteRule(0);\n\t\t\t}\n\n\t\t\tthis.styleSheet.insertRule(\n\t\t\t\t'@font-face { font-family: \"' + this.ot.familyName + '\";' +\n\t\t\t\t'src: url(' + url + '); }',\n\t\t\t\t0\n\t\t\t);\n\t\t\tthis.fontObjectURL = url;\n\n\t\t\treturn this;\n\t\t};\n\n\tvar a = document.createElement('a');\n\tFont.prototype.download = function( buffer ) {\n\t\tvar reader = new FileReader(),\n\t\t\tfamilyName = this.ot.familyName;\n\n\t\treader.onloadend = function() {\n\t\t\ta.download = familyName + '.otf';\n\t\t\ta.href = reader.result;\n\t\t\ta.dispatchEvent(new MouseEvent('click'));\n\n\t\t\tsetTimeout(function() {\n\t\t\t\ta.href = '#';\n\t\t\t\t_URL.revokeObjectURL( reader.result );\n\t\t\t}, 100);\n\t\t};\n\n\t\treader.readAsDataURL(new Blob(\n\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t{ type: 'font/opentype' }\n\t\t));\n\n\t\treturn this;\n\t};\n\n}\n\nmodule.exports = Font;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Glyph.js\":5}],5:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tOutline = require('./Outline.js');\n\nfunction Glyph( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\tif ( args && typeof args.unicode === 'string' ) {\n\t\targs.unicode = args.unicode.charCodeAt(0);\n\t}\n\n\tthis.ot = new opentype.Glyph( args );\n\tthis.ot.path = new opentype.Path();\n\n\tthis.name = args.name;\n\t// workaround opentype 'unicode === 0' bug\n\tthis.ot.unicode = args.unicode;\n\n\tthis.addChild( new Outline() );\n\t// the second child will hold all components\n\tthis.addChild( new paper.Group() );\n\t// Should all anchors and parentAnchors also leave in child groups?\n\tthis.anchors = ( args && args.anchors ) || [];\n\tthis.parentAnchors = ( args && args.parentAnchors ) || [];\n\n\t// each individual glyph must be explicitely made visible\n\tthis.visible = false;\n\t// default colors required to display the glyph in a canvas\n\tthis.fillColor = new paper.Color(0, 0, 0);\n\t// stroke won't be displayed unless strokeWidth is set to 1\n\tthis.strokeColor = new paper.Color(0, 0, 0);\n\tthis.strokeScaling = false;\n}\n\nGlyph.prototype = Object.create(paper.Group.prototype);\nGlyph.prototype.constructor = Glyph;\n\n// Todo: handle unicode updates\nObject.defineProperty(Glyph.prototype, 'unicode', {\n\tset: function( code ) {\n\t\tthis.ot.unicode = typeof code === 'string' ?\n\t\t\tcode.charCodeAt(0) :\n\t\t\tcode;\n\t},\n\tget: function() {\n\t\treturn this.ot.unicode;\n\t}\n});\n\n// proxy .contours to .children[0]\nObject.defineProperty( Glyph.prototype, 'contours', {\n\tget: function() {\n\t\treturn this.children[0].children;\n\t}\n});\n\n// proxy .components to .children[1]\nObject.defineProperty( Glyph.prototype, 'components', {\n\tget: function() {\n\t\treturn this.children[1].children;\n\t}\n});\n\n// proxy .visible to\n\n// proxy ...Contour[s] methods to children[0]...Child[ren] methods\n// and proxy ...Component[s] methods to children[1]...Child[ren] methods\nObject.getOwnPropertyNames( paper.Item.prototype ).forEach(function(name) {\n\tvar proto = this;\n\n\t// exclude getters and non-methods\n\tif ( Object.getOwnPropertyDescriptor(proto, name).get ||\n\t\t\ttypeof proto[name] !== 'function' ) {\n\t\treturn;\n\t}\n\n\tif ( name.indexOf('Children') !== -1 ) {\n\t\tproto[name.replace('Children', 'Contours')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Children', 'Components')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\n\t} else if ( name.indexOf('Child') !== -1 ) {\n\t\tproto[name.replace('Child', 'Contour')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Child', 'Component')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\t}\n\n}, paper.Item.prototype);\n\nGlyph.prototype.addAnchor = function( item ) {\n\tthis.anchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addAnchors = function( anchors ) {\n\treturn anchors.forEach(function(anchor) {\n\t\tthis.addAnchor(anchor);\n\t}, this);\n};\n\nGlyph.prototype.addParentAnchor = function( item ) {\n\tthis.parentAnchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addUnicode = function( code ) {\n\tthis.ot.addUnicode( code );\n\n\treturn this;\n};\n\nGlyph.prototype.interpolate = function( glyph0, glyph1, coef ) {\n\t// If we added an interpolate method to Group, we'd be able to just\n\t// interpolate all this.children directly.\n\t// instead we interpolate the outline first\n\tthis.children[0].interpolate( glyph0.children[0], glyph1.children[0] );\n\t// and then the components\n\tthis.children[1].children.forEach(function(component, j) {\n\t\tcomponent.interpolate(\n\t\t\tglyph0.children[1].children[j], glyph1.children[1].children[j], coef\n\t\t);\n\t});\n\n\tthis.ot.advanceWidth =\n\t\tglyph0.ot.advanceWidth +\n\t\t( glyph1.ot.advanceWidth - glyph0.ot.advanceWidth ) * coef;\n\tthis.ot.leftSideBearing =\n\t\tglyph0.ot.leftSideBearing +\n\t\t( glyph1.ot.leftSideBearing - glyph0.ot.leftSideBearing ) * coef;\n\tthis.ot.xMax =\n\t\tglyph0.ot.xMax + ( glyph1.ot.xMax - glyph0.ot.xMax ) * coef;\n\tthis.ot.xMin =\n\t\tglyph0.ot.xMin + ( glyph1.ot.xMin - glyph0.ot.xMin ) * coef;\n\tthis.ot.yMax =\n\t\tglyph0.ot.yMax + ( glyph1.ot.yMax - glyph0.ot.yMax ) * coef;\n\tthis.ot.yMin =\n\t\tglyph0.ot.yMin + ( glyph1.ot.yMin - glyph0.ot.yMin ) * coef;\n\n\treturn this;\n};\n\nGlyph.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children[0].updateSVGData( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateSVGData( path );\n\t});\n\n\treturn this.svgData;\n};\n\nGlyph.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.children[0].updateOTCommands( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateOTCommands( path );\n\t});\n\n\treturn this.ot;\n};\n\nGlyph.prototype.importOT = function( otGlyph ) {\n\tvar current;\n\tthis.ot = otGlyph;\n\n\tif ( !otGlyph.path || !otGlyph.path.commands ) {\n\t\treturn this;\n\t}\n\n\tthis.ot.path.commands.forEach(function(command) {\n\t\tswitch ( command.type ) {\n\t\t\tcase 'M':\n\t\t\t\tcurrent = new paper.Path();\n\t\t\t\tthis.addContour( current );\n\n\t\t\t\tcurrent.moveTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tcurrent.lineTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tcurrent.cubicCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\t[ command.x2, command.y2 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tcurrent.quadraticCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\t// When the glyph has no contour,\n\t\t\t\t// they contain a single Z command in\n\t\t\t\t// opentype.js.\n\t\t\t\t// TODO: see how we should handle that\n\t\t\t\tif ( current ) {\n\t\t\t\t\tcurrent.closePath();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}, this);\n\n\treturn this;\n};\n\nmodule.exports = Glyph;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Outline.js\":7}],6:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nObject.defineProperty( paper.Segment.prototype, 'x', {\n\tget: function() {\n\t\treturn this.point.x;\n\t},\n\tset: function( value ) {\n\t\tthis.point.x = value;\n\t}\n});\n\nObject.defineProperty( paper.Segment.prototype, 'y', {\n\tget: function() {\n\t\treturn this.point.y;\n\t},\n\tset: function( value ) {\n\t\tthis.point.y = value;\n\t}\n});\n\nmodule.exports = paper.Segment;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],7:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nfunction Outline() {\n\tpaper.CompoundPath.prototype.constructor.apply( this );\n}\n\n// inehrit CompoundPath\nOutline.prototype = Object.create(paper.CompoundPath.prototype);\nOutline.prototype.constructor = Outline;\n\n// Fix two problems with CompoundPath#insertChildren:\n// - it arbitrarily changes the direction of paths\n// - it seems that it doesn't handle CompoundPath arguments\nOutline.prototype.insertChildren = function(index, items, _preserve) {\n\tif ( Array.isArray( items ) ) {\n\t\t// flatten items to handle CompoundPath children\n\t\titems = [].concat.apply([], items.map(function(item) {\n\t\t\treturn item instanceof paper.Path ? item : item.children;\n\t\t}));\n\t}\n\n\treturn paper.Item.prototype.insertChildren.call(\n\t\tthis, index, items, _preserve, paper.Path\n\t);\n};\n\nOutline.prototype.interpolate = function( outline0, outline1, coef ) {\n\tfor (var i = 0, l = this.contours.length; i < l; i++) {\n\t\t// The number of children should be the same everywhere,\n\t\t// but we're going to try our best anyway\n\t\tif ( !outline0.children[i] || !outline1.children[i] ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.children[i].interpolate(\n\t\t\toutline0.children[i],\n\t\t\toutline1.children[i],\n\t\t\tcoef\n\t\t);\n\t}\n\n\treturn this;\n};\n\nOutline.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateSVGData( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.svgData;\n};\n\nOutline.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateOTCommands( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.ot;\n};\n\nmodule.exports = Outline;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],8:[function(require,module,exports){\n/* Extend the Path prototype to add OpenType conversion\n * and alias *segments methods and properties to *nodes\n */\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nvar proto = paper.PaperScope.prototype.Path.prototype;\n\n// alias *Segments methods to *Nodes equivalents\n[ 'add', 'insert', 'remove' ].forEach(function(name) {\n\tproto[name + 'Nodes'] =\n\t\tproto[name + 'Segments'];\n});\n\n// alias .segments to .nodes\nObject.defineProperties(proto, {\n\tnodes: Object.getOwnPropertyDescriptor( proto, 'segments' ),\n\tfirstNode: Object.getOwnPropertyDescriptor( proto, 'firstSegment' ),\n\tlastNode: Object.getOwnPropertyDescriptor( proto, 'lastSegment' )\n});\n\nproto._updateData = function( data, matrix, pushSimple, pushBezier ) {\n\tif ( this.visible === false ) {\n\t\treturn data;\n\t}\n\n\t// prototypo needs to be able to change the direction of the updated data.\n\tvar reverse = this.exportReversed,\n\t\tcurves = this.curves,\n\t\tstart = curves[ reverse ? curves.length - 1 : 0 ]\n\t\t\t[ 'point' + ( reverse ? 2 : 1 ) ]\n\t\t\t.transform( matrix );\n\n\tpushSimple(\n\t\t'M',\n\t\tMath.round( start.x ) || 0,\n\t\tMath.round( start.y ) || 0\n\t);\n\n\tfor ( var i = -1, l = curves.length; ++i < l; ) {\n\t\tvar curve = curves[ reverse ? l - 1 - i : i ],\n\t\t\tend = curve['point' + ( reverse ? 1 : 2 ) ].transform( matrix );\n\n\t\tif ( curve.isLinear() ) {\n\t\t\tpushSimple(\n\t\t\t\t'L',\n\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\tMath.round( end.y ) || 0\n\t\t\t);\n\n\t\t} else {\n\t\t\tvar ctrl1 = new paper.Point(\n\t\t\t\t\tcurve.point1.x + curve.handle1.x,\n\t\t\t\t\tcurve.point1.y + curve.handle1.y\n\t\t\t\t).transform( matrix ),\n\t\t\t\tctrl2 = new paper.Point(\n\t\t\t\t\tcurve.point2.x + curve.handle2.x,\n\t\t\t\t\tcurve.point2.y + curve.handle2.y\n\t\t\t\t).transform( matrix );\n\n\t\t\tif ( reverse ) {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( this.closed ) {\n\t\tpushSimple('Z');\n\t}\n\n\treturn data;\n};\n\nproto.updateOTCommands = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx: arguments[1],\n\t\t\t\ty: arguments[2]\n\t\t\t});\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx1: arguments[1],\n\t\t\t\ty1: arguments[2],\n\t\t\t\tx2: arguments[3],\n\t\t\t\ty2: arguments[4],\n\t\t\t\tx: arguments[5],\n\t\t\t\ty: arguments[6]\n\t\t\t});\n\t\t}\n\t);\n};\n\nproto.updateSVGData = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t}\n\t);\n};\n\nmodule.exports = paper.Path;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],9:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tFont = require('./Font.js'),\n\tGlyph = require('./Glyph.js'),\n\tOutline = require('./Outline'),\n\tPath = require('./Path.js'),\n\tNode = require('./Node.js'),\n\tCollection = require('./Collection.js');\n\npaper.PaperScope.prototype.Font = Font;\npaper.PaperScope.prototype.Glyph = Glyph;\npaper.PaperScope.prototype.Outline = Outline;\npaper.PaperScope.prototype.Path = Path;\npaper.PaperScope.prototype.Node = Node;\npaper.PaperScope.prototype.Collection = Collection;\n\nfunction plumin( arg ) {\n\tif ( arguments.length === 1 && arg instanceof Collection ) {\n\t\treturn arg;\n\t}\n\n\tvar c = Object.create( Collection.prototype );\n\tCollection.apply( c, arguments );\n\treturn c;\n}\n\nplumin.opentype = opentype;\n\nplumin.proxy = Collection.proxy.bind(plumin);\nplumin.proxy(paper);\n\nmodule.exports = plumin;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Collection.js\":3,\"./Font.js\":4,\"./Glyph.js\":5,\"./Node.js\":6,\"./Outline\":7,\"./Path.js\":8}]},{},[9,2])(9)\n});\n\n\n//# sourceMappingURL=plumin.js.map","var plumin = require('plumin.js'),\n\tDepTree = require('deptree'),\n\tclone = require('lodash/lang/clone'),\n\tassign = require('es6-object-assign').assign,\n\tupdateUtils = require('./updateUtils.js');\n\nvar paper = plumin.paper,\n\tUtils = updateUtils,\n\t_ = {\n\t\tassign: assign,\n\t\tclone: clone\n\t};\n\n// convert the glyph source from the ufo object model to the paper object model\n// this is the inverse operation done by jsufonify\nUtils.ufoToPaper = function( src ) {\n\tif ( src.parameter ) {\n\t\tsrc.parameters = src.parameter;\n\t\tdelete src.parameter;\n\t}\n\n\tif ( src.anchor ) {\n\t\tsrc.anchors = src.anchor;\n\t\tdelete src.anchor;\n\t}\n\n\tif ( src.outline && src.outline.contour ) {\n\t\tsrc.contours = src.outline.contour;\n\t\tdelete src.outline.contour;\n\t}\n\n\tif ( src.contours ) {\n\t\tsrc.contours.forEach(function(contour) {\n\t\t\tif ( contour.point ) {\n\t\t\t\tcontour.nodes = contour.point;\n\t\t\t\tdelete contour.point;\n\t\t\t}\n\t\t});\n\t}\n\n\tif ( src.outline && src.outline.component ) {\n\t\tsrc.components = src.outline.component;\n\n\t\tsrc.components.forEach(function(component) {\n\t\t\tif ( component.anchor ) {\n\t\t\t\tcomponent.parentAnchors = component.anchor;\n\t\t\t\tdelete component.anchor;\n\t\t\t}\n\n\t\t\tif ( component.parameter ) {\n\t\t\t\tcomponent.parentParameters = component.parameter;\n\t\t\t\tdelete component.parameter;\n\t\t\t}\n\t\t});\n\n\t\tdelete src.outline.component;\n\t}\n\n\tdelete src.outline;\n\n\tif ( src.lib && src.lib.transforms ) {\n\t\tsrc.transforms = src.lib.transforms;\n\t\tdelete src.lib.transforms;\n\t}\n\n\tif ( src.lib && src.lib.transformOrigin ) {\n\t\tsrc.transformOrigin = src.lib.transformOrigin;\n\t\tdelete src.lib.transformOrigin;\n\t}\n\n\tif ( src.lib && src.lib.parameters ) {\n\t\tsrc.parameters = src.lib.parameters;\n\t\tdelete src.lib.parameters;\n\t}\n\n\tif ( src.lib && src.lib.solvingOrder ) {\n\t\tsrc.solvingOrder = src.lib.solvingOrder;\n\t\tdelete src.lib.solvingOrder;\n\t}\n\n\treturn src;\n};\n\nUtils.fontFromSrc = function( src ) {\n\t// TODO: this, block is only here for backward compat\n\t// and should be removed at some point in the future\n\tif ( !src.fontinfo ) {\n\t\tsrc.fontinfo = src.info;\n\t}\n\n\tvar font = new paper.Font( src.fontinfo );\n\n\tfont.src = Utils.ufoToPaper( src );\n\n\tvar filteredSrc = _.assign( {}, src );\n\tdelete filteredSrc.controls;\n\tdelete filteredSrc.presets;\n\tdelete filteredSrc.glyphs;\n\n\tUtils.createUpdaters( filteredSrc, 'font_' + src.fontinfo.familyName );\n\n\tfont.parameters = {};\n\tUtils.mergeStatic( font.parameters, font.src.parameters );\n\n\t// solvingOrder might be already available (if this is a subcomponent,\n\t// or precomputed in a worker)\n\tfont.solvingOrder = font.src.solvingOrder;\n\n\tif ( !font.solvingOrder ) {\n\t\tfont.solvingOrder = filteredSrc.solvingOrder =\n\t\t\tUtils.solveDependencyTree( font, filteredSrc );\n\t}\n\n\treturn font;\n};\n\n// create Glyph instance and all its child items: anchors, contours\n// and components\nUtils.glyphFromSrc = function( src, fontSrc, naive, embed ) {\n\tvar glyph = new paper.Glyph({\n\t\tname: src.name,\n\t\tunicode: src.unicode\n\t});\n\n\t// Clone glyph src to allow altering it without impacting components srcs.\n\tglyph.src = _.clone( src, true );\n\tUtils.mergeStatic( glyph, glyph.src );\n\n\t// this will be used to hold local parameters that will be merged with\n\t// the font parameters\n\tglyph.parameters = {};\n\tUtils.mergeStatic( glyph.parameters, glyph.src.parameters );\n\n\t// solvingOrder might be already available (if this is a subcomponent,\n\t// or precomputed in a worker)\n\tglyph.solvingOrder = glyph.src.solvingOrder;\n\n\t(glyph.src.anchors || []).forEach(function(anchorSrc) {\n\t\tvar anchor = new paper.Node();\n\t\tanchor.src = anchorSrc;\n\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\tglyph.addAnchor( anchor );\n\t});\n\n\t(glyph.src.contours || []).forEach(function(contourSrc) {\n\t\tvar contour = new paper.Path();\n\t\tcontour.src = contourSrc;\n\t\tUtils.mergeStatic( contour, contourSrc );\n\n\t\tglyph.addContour( contour );\n\n\t\t// TODO: handle oncurve/offcurve points\n\t\tcontourSrc.nodes.forEach(function(nodeSrc) {\n\t\t\tvar node = new paper.Node();\n\t\t\tnode.src = nodeSrc;\n\t\t\tUtils.mergeStatic( node, nodeSrc );\n\n\t\t\tcontour.add( node );\n\t\t});\n\t});\n\n\tif ( !glyph.src.components ) {\n\t\treturn glyph;\n\t}\n\n\t// components can only be embedded once all glyphs have been generated\n\t// from source\n\tglyph.embedComponents = function() {\n\t\tglyph.src.components.forEach(function(componentSrc) {\n\t\t\t// components are glyphs, quite simply\n\t\t\tvar component = Utils.glyphFromSrc(\n\t\t\t\t\tfontSrc.glyphs[componentSrc.base],\n\t\t\t\t\tfontSrc,\n\t\t\t\t\tnaive,\n\t\t\t\t\t// components' subcomponents can be embedded immediatly\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\tcomponent.parentParameters = {};\n\t\t\tUtils.mergeStatic(\n\t\t\t\tcomponent.parentParameters,\n\t\t\t\tcomponentSrc.parentParameters\n\t\t\t);\n\n\t\t\tnaive.annotator( component );\n\t\t\tglyph.addComponent( component );\n\n\t\t\t(componentSrc.parentAnchors || []).forEach(function(anchorSrc) {\n\t\t\t\tvar anchor = new paper.Node();\n\t\t\t\tanchor.src = anchorSrc;\n\t\t\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\t\t\tcomponent.addParentAnchor( anchor );\n\t\t\t});\n\t\t});\n\n\t\tdelete glyph.embedComponents;\n\t};\n\n\tif ( embed ) {\n\t\tglyph.embedComponents();\n\t}\n\n\treturn glyph;\n};\n\n// build a full cursor from arguments\n// adds 'contours' and 'nodes' automagically when arguments start with a number\nUtils.cursor = function() {\n\tvar cursor = [];\n\n\tfor ( var i = -1; ++i < arguments.length; ) {\n\t\tif ( i === 0 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'contours' );\n\t\t}\n\t\tif ( i === 1 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'nodes' );\n\t\t}\n\t\tcursor.push( arguments[i] );\n\t}\n\n\treturn cursor.join('.');\n};\n\nUtils.propFromCursor = function( cursor, context, length ) {\n\tif ( length === undefined ) {\n\t\tlength = cursor.length;\n\t}\n\n\tfor ( var i = -1; ++i < length; ) {\n\t\tcontext = context[ cursor[i] ];\n\t}\n\n\treturn context;\n};\n\nUtils.mergeStatic = function( obj, src ) {\n\tfor ( var i in src ) {\n\t\tif ( typeof src[i] !== 'object' ) {\n\t\t\tobj[i] = src[i];\n\n\t\t// props that have empty dependencies and params are static\n\t\t} else if ( src[i]._dependencies && src[i]._dependencies.length === 0 &&\n\t\t\t\tsrc[i]._parameters.length === 0 ) {\n\n\t\t\tobj[i] = src[i]._updaters[0].apply(\n\t\t\t\tobj,\n\t\t\t\t[ null, null, null, null, Utils ]\n\t\t\t);\n\n\t\t\tdelete src[i];\n\t\t}\n\t}\n};\n\nUtils.createUpdaters = function( leaf, path ) {\n\tif ( leaf.constructor === Object &&\n\t\t\t( typeof leaf._operation === 'string' ||\n\t\t\ttypeof leaf._operation === 'function' ) ) {\n\n\t\tvar args = [\n\t\t\t\t\t'propName', 'contours', 'anchors', 'parentAnchors', 'Utils'\n\t\t\t\t]\n\t\t\t\t.concat( leaf._parameters || [] )\n\t\t\t\t.concat(\n\t\t\t\t\t( typeof leaf._operation === 'string' &&\n\t\t\t\t\t\t\tleaf._operation.indexOf('return ') === -1 ?\n\t\t\t\t\t\t'return ' : ''\n\t\t\t\t\t) +\n\t\t\t\t\t// The operation might be wrapped in a function (e.g. multi-\n\t\t\t\t\t// line code for debugging purpose). In this case, return\n\t\t\t\t\t// must be explicit\n\t\t\t\t\tleaf._operation.toString()\n\t\t\t\t\t\t// [\\s\\S] need to be used instead of . because\n\t\t\t\t\t\t// javascript doesn't have a dotall flag (s)\n\t\t\t\t\t\t.replace(/function\\s*\\(\\)\\s*\\{([\\s\\S]*?)\\}$/, '$1')\n\t\t\t\t\t\t.trim() +\n\t\t\t\t\t// add sourceURL pragma to help debugging\n\t\t\t\t\t'\\n\\n//# sourceURL=' + path\n\t\t\t\t);\n\n\t\tleaf._updaters = [ Function.apply( null, args ) ];\n\t\treturn leaf._updaters;\n\t}\n\n\tif ( leaf.constructor === Object ) {\n\t\tfor ( var i in leaf ) {\n\t\t\tUtils.createUpdaters( leaf[i], path + '.' + i );\n\t\t}\n\t}\n\n\tif ( leaf.constructor === Array ) {\n\t\tleaf.forEach(function(child, j) {\n\t\t\tUtils.createUpdaters( child, path + '.' + j );\n\t\t});\n\t}\n};\n\nUtils.solveDependencyTree = function( leaf, src ) {\n\tvar depTree = Utils.dependencyTree( src || leaf.src, null ),\n\t\torder = depTree.resolve().map(function( cursor ) {\n\t\t\treturn { cursor: cursor.split('.') };\n\t\t}),\n\t\tsimplified = Utils.simplifyResolutionOrder( leaf, order );\n\n\treturn simplified;\n};\n\nUtils.dependencyTree = function( parentSrc, cursor, depTree ) {\n\tif ( !depTree ) {\n\t\tdepTree = new DepTree();\n\t}\n\n\tObject.keys( parentSrc ).forEach(function( i ) {\n\t\t// don't inspect local parameters, private properties and non-object\n\t\tif ( i === 'parameters' || i.indexOf('_') === 0 ||\n\t\t\t\ttypeof parentSrc[i] !== 'object' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar leafSrc = parentSrc[i],\n\t\t\tcurrCursor = cursor ? cursor + '.' + i : i;\n\n\t\tif ( ( leafSrc._updaters && leafSrc._updaters.length ) ||\n\t\t\t\t( leafSrc._dependencies && leafSrc._dependencies.length ) ) {\n\n\t\t\tdepTree.add( currCursor,\n\t\t\t\tleafSrc._dependencies.filter(function(dep) {\n\t\t\t\t\t// parentAnchors are always here when you need them\n\t\t\t\t\treturn !/^parentAnchors/.test(dep);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif ( !leafSrc._operation ) {\n\t\t\tUtils.dependencyTree( leafSrc, currCursor, depTree );\n\t\t}\n\t});\n\n\treturn depTree;\n};\n\n// Simplify resolution order by removing cursors that don't point to objects\n// with updater functions\nUtils.simplifyResolutionOrder = function( leaf, depTree ) {\n\treturn depTree.filter(function( cursor ) {\n\t\tvar src = Utils.propFromCursor( cursor.cursor, leaf.src );\n\t\treturn src && src._updaters;\n\t});\n};\n\nvar rdeg = /deg$/;\nUtils.transformsToMatrix = function( transforms, origin ) {\n\tvar prev = new Float32Array(6),\n\t\tcurr = new Float32Array(6),\n\t\trslt = new Float32Array([ 1, 0, 0, 1, 0, 0 ]);\n\n\tif ( origin && Array.isArray( origin ) ) {\n\t\ttransforms.unshift([ 'translate', origin[0], origin[1] ]);\n\t\ttransforms.push([ 'translate', -origin[0], -origin[1] ]);\n\n\t} else if ( origin ) {\n\t\ttransforms.unshift([ 'translate', origin.x, origin.y ]);\n\t\ttransforms.push([ 'translate', -origin.x, -origin.y ]);\n\t}\n\n\ttransforms.forEach(function( transform ) {\n\t\tcurr[0] = curr[3] = 1;\n\t\tcurr[1] = curr[2] = curr[4] = curr[5] = 0;\n\n\t\t// convert degrees to radian\n\t\tfor ( var i = 1; i < transform.length; i++ ) {\n\t\t\tif ( transform[i] && typeof transform[i] === 'string' &&\n\t\t\t\t\trdeg.test(transform[i]) ) {\n\t\t\t\ttransform[i] = parseFloat(transform[i]) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\t\t}\n\n\t\tswitch ( transform[0] ) {\n\t\tcase 'translateX':\n\t\t\tcurr[4] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translateY':\n\t\t\tcurr[5] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translate':\n\t\t\tcurr[4] = transform[1];\n\t\t\tcurr[5] = transform[2] || 0;\n\t\t\tbreak;\n\n\t\tcase 'rotate':\n\t\t\tcurr[0] = Math.cos( transform[1] );\n\t\t\tcurr[1] = Math.sin( transform[1] );\n\t\t\tcurr[2] = -curr[1];\n\t\t\tcurr[3] = curr[0];\n\t\t\tbreak;\n\n\t\tcase 'scaleX':\n\t\t\tcurr[0] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scaleY':\n\t\t\tcurr[3] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scale':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[3] = transform.length > 2 ? transform[2] : transform[1];\n\t\t\tbreak;\n\n\t\tcase 'skewX':\n\t\t\t// stop parsing transform when encountering skewX(90)\n\t\t\t// see http://stackoverflow.com/questions/21094958/how-to-deal-with-infinity-in-a-2d-matrix\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[2] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'skewY':\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[1] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'matrix':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[1] = transform[2];\n\t\t\tcurr[2] = transform[3];\n\t\t\tcurr[3] = transform[4];\n\t\t\tcurr[4] = transform[5];\n\t\t\tcurr[5] = transform[6];\n\t\t\tbreak;\n\t\t}\n\n\t\tprev[0] = rslt[0];\n\t\tprev[1] = rslt[1];\n\t\tprev[2] = rslt[2];\n\t\tprev[3] = rslt[3];\n\t\tprev[4] = rslt[4];\n\t\tprev[5] = rslt[5];\n\n\t\trslt[0] = prev[0] * curr[0] + prev[2] * curr[1];\n\t\trslt[1] = prev[1] * curr[0] + prev[3] * curr[1];\n\t\trslt[2] = ( prev[0] * curr[2] || 0 ) + prev[2] * curr[3];\n\t\trslt[3] = ( prev[1] * curr[2] || 0 ) + prev[3] * curr[3];\n\t\trslt[4] = prev[0] * curr[4] + prev[2] * curr[5] + prev[4];\n\t\trslt[5] = prev[1] * curr[4] + prev[3] * curr[5] + prev[5];\n\t});\n\n\treturn new paper.Matrix(\n\t\trslt[0],\n\t\trslt[1],\n\t\trslt[2],\n\t\trslt[3],\n\t\trslt[4],\n\t\trslt[5]\n\t);\n};\n\nUtils.updateParameters = function( leaf, params ) {\n\tObject.keys( ( leaf.src && leaf.src.parameters ) || [] )\n\t\t.forEach(function( name ) {\n\t\t\tvar src = leaf.src.parameters[name];\n\n\t\t\tif ( src._updaters ) {\n\t\t\t\tparams[name] = src._updaters[0].apply( null, [\n\t\t\t\t\tname, [], [], leaf.parentAnchors, Utils\n\t\t\t\t].concat(\n\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\treturn params[_name];\n\t\t\t\t\t})\n\t\t\t\t));\n\t\t\t}\n\t\t});\n};\n\nUtils.updateProperties = function( leaf, params ) {\n\tif ( !leaf.solvingOrder ) {\n\t\treturn;\n\t}\n\n\tleaf.solvingOrder.forEach(function(_cursor) {\n\t\tvar cursor = _cursor.cursor,\n\t\t\tpropName = cursor[ cursor.length - 1 ],\n\t\t\tsrc = _cursor.src || ( _cursor.src =\n\t\t\t\tUtils.propFromCursor( cursor, leaf.src ) ),\n\t\t\tobj = _cursor.obj || ( _cursor.obj =\n\t\t\t\tUtils.propFromCursor( cursor, leaf, cursor.length - 1 ) ),\n\t\t\t// TODO: one day we could allow multiple _updaters\n\t\t\tresult = src && src._updaters && src._updaters[0].apply( obj, [\n\t\t\t\t\tpropName, leaf.contours, leaf.anchors,\n\t\t\t\t\tleaf.parentAnchors, Utils\n\t\t\t\t].concat(\n\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\treturn params[_name];\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\n\t\t// Assume that updaters returning undefined have their own\n\t\t// assignment logic\n\t\tif ( result !== undefined ) {\n\t\t\tobj[propName] = result;\n\t\t}\n\t}, this);\n};\n\nmodule.exports = Utils;\n","var plumin = require('plumin.js'),\n\tassign = require('es6-object-assign').assign,\n\tUtils = require('./Utils.js');\n\nvar paper = plumin.paper,\n\tnaive = {},\n\t_ = { assign: assign };\n\nfunction nodeSrc( node, i, j, inSkeleton ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\tUtils.cursor( i, j, 'y' )\n\t\t] },\n\t\tall: { _dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\treturn Utils.cursor( i, j, key );\n\t\t}) },\n\t\t_dependencies: inSkeleton ?\n\t\t\t// nodes in skeleton are never fully calculated (we don't calculate\n\t\t\t// the position of handles because we never draw their contour).\n\t\t\t// So we don't care about their dependencies.\n\t\t\t[] :\n\t\t\t[ Utils.cursor( 'contours', i, 'all' ) ]\n\t};\n}\n\nfunction autoExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tx: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\ty: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\tpoint: {\n\t\t\t_dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'y' ),\n\t\t\t\tUtils.cursor( i, j, 'expand' )\n\t\t\t],\n\t\t\t_parameters: [ 'width' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar width = arguments[\n\t\t\t\t\t\targuments.length - 1\n\t\t\t\t\t];\n\n\t\t\t\tnaive.expandedNodeUpdater(\n\t\t\t\t\tnode.expandedTo[side], side === 0, width\n\t\t\t\t);\n\t\t\t} ]\n\t\t},\n\t\tall: {\n\t\t\t_dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\t\treturn Utils.cursor( i, j, key );\n\t\t\t}).concat([\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t\t]),\n\t\t\t_updaters: [ function() {\n\t\t\t\tnaive.skeletonCopier( node );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'all' )\n\t\t]\n\t};\n}\n\nfunction explicitExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'y' )\n\t\t] },\n\t\tall: { _dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\treturn Utils.cursor( i, j, 'expandedTo', side, key );\n\t\t}) },\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'points' )\n\t\t]\n\t};\n}\n\n//function expandedContourSrc( contour, i, side, nodesSrc ) {\nfunction expandedContourSrc( contour, i, side ) {\n\tvar half = contour.nodes.length / 2;\n\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function(node, j) {\n\t\t\t\treturn side !== undefined ?\n\t\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'all' ) :\n\t\t\t\t\tUtils.cursor(\n\t\t\t\t\t\ti, j % half, 'expandedTo', ( j < half ? 0 : 1 ), 'all'\n\t\t\t\t\t);\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t// nodes: nodesSrc,\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo', side || 0, 'all' )\n\t\t]\n\t};\n}\n\nfunction contourSrc( contour, i ) {\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\t\treturn Utils.cursor( i, j, 'all' );\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\treturn Utils.cursor( i, j );\n\t\t})\n\t};\n}\n\n// default method to expand skeletons:\n// derives two additional node from every node with an .expand object\nnaive.annotator = function( glyph ) {\n\tvar additionalContours = [];\n\n\tglyph.contours.forEach(function( contour, i ) {\n\t\tif ( contour.skeleton !== true ) {\n\t\t\t// annotate nodes+points that aren't in a skeleton\n\t\t\tcontour.nodes.forEach(function( node, j ) {\n\t\t\t\t_.assign( node.src, nodeSrc( node, i, j ) );\n\t\t\t});\n\n\t\t\t_.assign( contour.src, contourSrc( contour, i ) );\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar leftContour,\n\t\t\trightContour,\n\t\t\tleftNodes = [],\n\t\t\trightNodes = [],\n\t\t\tleftNodesSrc = [],\n\t\t\trightNodesSrc = [],\n\t\t\tfirstNode,\n\t\t\tlastNode;\n\n\t\t// skeletons should be hidden\n\t\tcontour.visible = false;\n\n\t\tcontour.nodes.forEach(function( node, j ) {\n\n\t\t\tvar left = new paper.Node(),\n\t\t\t\tright = new paper.Node(),\n\t\t\t\tleftSrc,\n\t\t\t\trightSrc;\n\n\t\t\tleftNodes.push(left);\n\t\t\trightNodes.unshift(right);\n\t\t\tnode.expandedTo = [ left, right ];\n\t\t\tleft.expandedFrom = right.expandedFrom = node;\n\n\t\t\tif ( !node.src.expandedTo ) {\n\t\t\t\t// annotate nodes+points that are automatically expanded\n\t\t\t\tleftSrc = autoExpandedNodeSrc( node, i, j, 0, contour.closed );\n\t\t\t\trightSrc = autoExpandedNodeSrc( node, i, j, 1, contour.closed );\n\t\t\t\tnode.src.expandedTo = [ leftSrc, rightSrc ];\n\t\t\t\t_.assign( node.src, nodeSrc( node, i, j, !!'inSkeleton' ) );\n\n\t\t\t// the expanded node might have been defined explicitely\n\t\t\t} else if ( node.src.expandedTo[0] &&\n\t\t\t\t\t!node.src.expandedTo[0]._updaters ) {\n\t\t\t\tnode.src.expandedTo.forEach(function( src, k ) {\n\t\t\t\t\tUtils.mergeStatic( node.expandedTo[k], src );\n\t\t\t\t});\n\n\t\t\t\t// annotate nodes+points that are explicitely expanded\n\t\t\t\tleftSrc = _.assign( node.src.expandedTo[0],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 0, contour.closed )\n\t\t\t\t);\n\t\t\t\trightSrc = _.assign( node.src.expandedTo[1],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 1, contour.closed )\n\t\t\t\t);\n\n\t\t\t\t// A leaf shouldn't appear twice during the recursive\n\t\t\t\t// dependency-tree building. Make the expanded nodes accessible\n\t\t\t\t// from expanded contours, and provide accessors on the\n\t\t\t\t// .expandedFrom node.\n\t\t\t\t// leftNodesSrc.push( leftSrc );\n\t\t\t\t// rightNodesSrc.push( rightSrc );\n\t\t\t}\n\n\t\t\t// if ( leftSrc && rightSrc ) {\n\t\t\t// \tObject.defineProperties( node.src.expandedTo = {}, {\n\t\t\t// \t\t0: { get: function() {\n\t\t\t// \t\t\treturn leftSrc;\n\t\t\t// \t\t}},\n\t\t\t// \t\t1: { get: function() {\n\t\t\t// \t\t\t\treturn rightSrc;\n\t\t\t// \t\t}}\n\t\t\t// \t});\n\t\t\t// }\n\t\t});\n\n\t\tif ( !contour.expandedTo && !contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes.concat(rightNodes)\n\t\t\t});\n\t\t\tcontour.expandedTo = [ leftContour ];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i\n\t\t\t\t\t//, 0, leftNodesSrc.concat( rightNodesSrc )\n\t\t\t\t)\n\t\t\t];\n\t\t\tleftContour.expandedFrom = contour;\n\t\t\tadditionalContours.push( leftContour );\n\n\t\t\tfirstNode = contour.firstNode;\n\t\t\tlastNode = contour.lastNode;\n\n\t\t\tfirstNode.type = 'corner';\n\t\t\tlastNode.type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].type = 'corner';\n\t\t\tfirstNode.expandedTo[1].type = 'corner';\n\t\t\tlastNode.expandedTo[0].type = 'corner';\n\t\t\tlastNode.expandedTo[1].type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].typeIn = 'line';\n\t\t\tfirstNode.expandedTo[1].typeOut = 'line';\n\t\t\tlastNode.expandedTo[0].typeOut = 'line';\n\t\t\tlastNode.expandedTo[1].typeIn = 'line';\n\n\t\t} else if ( !contour.expandedTo && contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes\n\t\t\t});\n\t\t\tadditionalContours.push( leftContour );\n\t\t\trightContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: rightNodes\n\t\t\t});\n\t\t\tadditionalContours.push( rightContour );\n\n\t\t\tcontour.expandedTo = [\n\t\t\t\tleftContour,\n\t\t\t\trightContour\n\t\t\t];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i, 0, leftNodesSrc ),\n\t\t\t\texpandedContourSrc( rightContour, i, 1, rightNodesSrc )\n\t\t\t];\n\t\t\tleftContour.expandedFrom = rightContour.expandedFrom = contour;\n\t\t}\n\t});\n\n\tglyph.addContours( additionalContours );\n};\n\n// Calculate expanded node position\nnaive.expandedNodeUpdater = function( node, isLeft, _width ) {\n\tvar origin = node.expandedFrom,\n\t\texpand = origin.expand,\n\t\twidth = expand && expand.width !== undefined ?\n\t\t\texpand.width : _width,\n\t\tcoef = expand && expand.distr !== undefined ?\n\t\t\t( isLeft ? expand.distr : 1 - expand.distr ) :\n\t\t\t0.5,\n\t\tangle = ( isLeft ? Math.PI : 0 ) +\n\t\t\t( expand && expand.angle !== undefined ?\n\t\t\t\texpand.angle :\n\t\t\t\t// We resort to using directions.\n\t\t\t\t// This is wrong, directions are not included in the\n\t\t\t\t// dependencies of the updater and might not be ready yet.\n\t\t\t\t// TODO: Fix this (always require angle to be specified?)\n\t\t\t\t( origin._dirOut !== undefined ?\n\t\t\t\t\torigin._dirOut - Math.PI / 2 :\n\t\t\t\t\torigin._dirIn + Math.PI / 2\n\t\t\t\t)\n\t\t\t);\n\n\t// position\n\tnode.point.x = origin.point.x + ( width * coef * Math.cos( angle ) );\n\tnode.point.y = origin.point.y + ( width * coef * Math.sin( angle ) );\n};\n\n// copy skeleton properties such as types, directions and tensions to expanded\n// nodes\nnaive.skeletonCopier = function( node ) {\n\tvar angle = node.expand && node.expand.angle || 0,\n\t\tleft = node.expandedTo[0],\n\t\tright = node.expandedTo[1];\n\n\t// node type\n\tif ( node.type !== undefined ) {\n\t\tleft.type = right.type = node.type;\n\t}\n\n\t// direction type\n\tif ( node.typeIn !== undefined ) {\n\t\tleft.typeIn = right.typeOut = node.typeIn;\n\t}\n\tif ( node.typeOut !== undefined ) {\n\t\tleft.typeOut = right.typeIn = node.typeOut;\n\t}\n\n\t// direction\n\tif ( node._dirIn !== undefined ) {\n\t\tleft._dirIn = right._dirOut = node._dirIn;\n\n\t\tif ( node.type === 'smooth' && node._dirOut === undefined ) {\n\t\t\tleft._dirOut = right._dirIn = node._dirIn + Math.PI;\n\t\t}\n\t}\n\tif ( node._dirOut !== undefined ) {\n\t\tleft._dirOut = right._dirIn = node._dirOut;\n\n\t\tif ( node.type === 'smooth' && node._dirIn === undefined ) {\n\t\t\tleft._dirIn = right._dirOut = node._dirOut + Math.PI;\n\t\t}\n\t}\n\t// use angle if direction isn't already defined\n\tif ( left._dirIn === undefined ) { // implies right._dirOut === undefined\n\t\tleft._dirIn = angle - Math.PI / 2;\n\t\tright._dirOut = angle + Math.PI / 2;\n\t}\n\tif ( left._dirOut === undefined ) { // implies right._dirIn === undefined\n\t\tleft._dirOut = angle + Math.PI / 2;\n\t\tright._dirIn = angle - Math.PI / 2;\n\t}\n\n\t// tension\n\tleft.tensionIn = right.tensionOut = node.tensionIn !== undefined ?\n\t\tnode.tensionIn :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n\tleft.tensionOut = right.tensionIn = node.tensionOut !== undefined ?\n\t\tnode.tensionOut :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n};\n\n// Make sure 'line' types are set on both side of segments\n// and if a smooth node is used in a straight segment, update the directions\n// appropriately this can only be done once the types, directions and position\n// of all nodes have been updated can be renamed #prepareLines if no other\n// operation is added\n// TODO: try doing it at the same time as updateContour (once we have more\n// complex glyphs)\nnaive.prepareContour = function( path ) {\n\tpath.nodes.forEach(function(node) {\n\t\tif ( node.typeIn === 'line' && node.previous ) {\n\t\t\tnode.previous.typeOut = 'line';\n\n\t\t\tif ( node.type === 'smooth' ) {\n\t\t\t\tnode._dirIn = Utils.lineAngle(\n\t\t\t\t\tnode.point, node.previous.point\n\t\t\t\t);\n\t\t\t\tnode._dirOut = node._dirIn + Math.PI;\n\t\t\t}\n\t\t}\n\n\t\tif ( node.typeOut === 'line' && node.next ) {\n\t\t\tnode.next.typeIn = 'line';\n\n\t\t\tif ( node.type === 'smooth' ) {\n\t\t\t\tnode._dirOut = Utils.lineAngle(\n\t\t\t\t\tnode.point, node.next.point\n\t\t\t\t);\n\t\t\t\tnode._dirIn = node._dirOut + Math.PI;\n\t\t\t}\n\t\t}\n\t});\n};\n\n// sets the position of control points\n// can be renamed #updateControls if no other operation is added\nnaive.updateContour = function( path, curviness ) {\n\tif ( curviness === undefined ) {\n\t\tcurviness = 2 / 3;\n\t}\n\n\tpath.nodes.forEach(function(node) {\n\t\tvar start = node,\n\t\t\tend,\n\t\t\tstartCtrl,\n\t\t\tendCtrl,\n\t\t\tstartType,\n\t\t\tendType,\n\t\t\tstartTension,\n\t\t\tendTension,\n\t\t\tstartDir,\n\t\t\tendDir,\n\t\t\trri;\n\n\t\tif ( !node.next ) {\n\t\t\treturn;\n\t\t}\n\n\t\tend = node.next;\n\t\tstartCtrl = start.handleOut;\n\t\tendCtrl = end.handleIn;\n\n\t\tstartType = start.typeOut;\n\t\tendType = end.typeIn;\n\n\t\tif ( startType === 'line' || endType === 'line' ) {\n\t\t\tstartCtrl.x = 0;\n\t\t\tstartCtrl.y = 0;\n\t\t\tendCtrl.x = 0;\n\t\t\tendCtrl.y = 0;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartTension = start.tensionOut !== undefined ?\n\t\t\tstart.tensionOut :\n\t\t\t( start.tension !== undefined ? start.tension : 1 );\n\t\tendTension = end.tensionIn !== undefined ?\n\t\t\tend.tensionIn :\n\t\t\t( end.tension !== undefined ? end.tension : 1 );\n\n\t\tstartDir = start._dirOut !== undefined ?\n\t\t\tstart._dirOut :\n\t\t\t( start.type === 'smooth' ? start._dirIn + Math.PI : 0 );\n\t\tendDir = end._dirIn !== undefined ?\n\t\t\tend._dirIn :\n\t\t\t( end.type === 'smooth' ? end._dirOut - Math.PI : 0 );\n\n\t\trri = Utils.rayRayIntersection(\n\t\t\tstart._point,\n\t\t\tstartDir,\n\t\t\tend._point,\n\t\t\tendDir\n\t\t);\n\n\t\t// direction of handles is parallel\n\t\tif ( rri === null ) {\n\t\t\tvar angle = Utils.lineAngle( start._point, end._point ),\n\t\t\t\tmiddle = {\n\t\t\t\t\tx: ( end._point.x - start._point.x ) / 2 + start._point.x,\n\t\t\t\t\ty: ( end._point.y - start._point.y ) / 2 + start._point.y\n\t\t\t\t},\n\t\t\t\tp0 = Utils.rayRayIntersection(\n\t\t\t\t\tstart._point, startDir, middle, angle - Math.PI / 2\n\t\t\t\t),\n\t\t\t\tp1 = Utils.rayRayIntersection(\n\t\t\t\t\tmiddle, angle + Math.PI / 2, end._point, endDir\n\t\t\t\t);\n\n\t\t\tif ( p0 === null ) {\n\t\t\t\tstartCtrl.x = 0;\n\t\t\t\tstartCtrl.y = 0;\n\t\t\t\tendCtrl.x = 0;\n\t\t\t\tendCtrl.y = 0;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstartCtrl.x = ( Math.round(p0[0]) - start._point.x ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tstartCtrl.y = ( Math.round(p0[1]) - start._point.y ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tendCtrl.x = ( Math.round(p1[0]) - end._point.x ) *\n\t\t\t\tcurviness * endTension;\n\t\t\tendCtrl.y = ( Math.round(p1[1]) - end._point.y ) *\n\t\t\t\tcurviness * endTension;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartCtrl.x = ( Math.round(rri[0]) - start.point.x ) *\n\t\t\tcurviness * startTension;\n\t\tstartCtrl.y = ( Math.round(rri[1]) - start.point.y ) *\n\t\t\tcurviness * startTension;\n\t\tendCtrl.x = ( Math.round(rri[0]) - end.point.x ) *\n\t\t\tcurviness * endTension;\n\t\tendCtrl.y = ( Math.round(rri[1]) - end.point.y ) *\n\t\t\tcurviness * endTension;\n\t});\n};\n\nvar rdeg = /deg$/;\nObject.defineProperties(paper.PaperScope.prototype.Segment.prototype, {\n\texpand: {\n\t\tget: function() {\n\t\t\treturn this._expand;\n\t\t},\n\t\tset: function( expand ) {\n\t\t\tif ( typeof expand.angle === 'string' && rdeg.test(expand.angle) ) {\n\t\t\t\texpand.angle = parseFloat(expand.angle) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\n\t\t\tthis._expand = expand;\n\t\t}\n\t},\n\tdirIn: {\n\t\tget: function() {\n\t\t\treturn this._dirIn;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirIn = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirIn = dir;\n\t\t\t}\n\t\t}\n\t},\n\tdirOut: {\n\t\tget: function() {\n\t\t\treturn this._dirOut;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirOut = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirOut = dir;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = naive;\n","/*jshint -W098 */\nvar plumin = require('plumin.js'),\n\tassign = require('es6-object-assign').assign,\n\tUtils = require('./Utils.js'),\n\tnaive = require('./naive.js');\n\nvar paper = plumin.paper,\n\t_ = { assign: assign };\n\nfunction parametricFont( src ) {\n\tvar font = Utils.fontFromSrc( src );\n\n\tObject.keys( src.glyphs ).forEach(function( name ) {\n\t\tvar glyphSrc = src.glyphs[name];\n\n\t\tUtils.ufoToPaper( glyphSrc );\n\n\t\t// turn ._operation strings to ._updaters functions\n\t\tUtils.createUpdaters( glyphSrc, 'glyphs/glyph_' + name );\n\n\t\tvar glyph = Utils.glyphFromSrc( glyphSrc, src, naive );\n\n\t\tfont.addGlyph( glyph );\n\n\t\t// Create additional paths for skeletons and set ._dependencies\n\t\t// appropriately\n\t\tnaive.annotator( glyph );\n\n\t\t// solvingOrder might be already available (if this is a subcomponent,\n\t\t// or precomputed in a worker)\n\t\tif ( !glyph.solvingOrder ) {\n\t\t\tglyph.solvingOrder = glyphSrc.solvingOrder =\n\t\t\t\tUtils.solveDependencyTree( glyph );\n\t\t}\n\t});\n\n\t// all glyphs are ready, embed components now\n\tfont.glyphs.forEach(function( _glyph ) {\n\t\tif ( _glyph.embedComponents ) {\n\t\t\t_glyph.embedComponents();\n\t\t}\n\t});\n\n\treturn font;\n}\n\nplumin.parametricFont = parametricFont;\nplumin.Utils = Utils;\nplumin.Utils.naive = naive;\n\npaper.PaperScope.prototype.Font.prototype.update = function( params, set ) {\n\tvar font = this,\n\t\tmatrix;\n\n\tUtils.updateParameters( font, params );\n\n\tUtils.updateProperties( font, params );\n\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.update( params );\n\t}, this);\n\n\tif ( font.transforms ) {\n\t\tmatrix = Utils.transformsToMatrix(\n\t\t\tfont.transforms.slice(0), font.transformOrigin\n\t\t);\n\n\t\tfont.applyMatrix = false;\n\t\tfont.matrix = matrix;\n\t}\n\n\treturn this;\n};\n\n/* Update the shape of the glyph, according to formula and parameters\n * 0. before running, nodes have already been created by ParametricFont\n *   (including expanded ones thanks to naive.expandSkeletons). And static\n *   properties have been copied over to those nodes\n * 1. We use the solving order to calculate all node properties\n * 2. transform contours\n * 3. Update components and transform them\n */\npaper.PaperScope.prototype.Glyph.prototype.update = function( _params ) {\n\tvar glyph = this,\n\t\tfont = glyph.parent,\n\t\tmatrix,\n\t\tparams;\n\n\t// 0. calculate local parameters\n\tparams = _.assign( {}, _params, glyph.parameters, glyph.parentParameters );\n\n\tUtils.updateParameters( glyph, params );\n\n\t// parentParameters always overwrite glyph parameters. Use aliases\n\t// (e.g. _width) to let glyph hav the final word\n\t_.assign( params, glyph.parentParameters );\n\n\t// 1. calculate node properties\n\tUtils.updateProperties( glyph, params );\n\n\t// 2. transform contours\n\tthis.contours.forEach(function(contour) {\n\t\t// a. transform the nodes\n\t\tcontour.nodes.forEach(function(node) {\n\t\t\tif ( node.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tnode.transforms.slice(0), node.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\t\t// We don't want to apply the transforms immediatly,\n\t\t\t\t\t// otherwise the transformation will add-up on each\n\t\t\t\t\t// update.\n\t\t\t\t\tnode.applyMatrix = false;\n\t\t\t\t\tnode.matrix = matrix;\n\n\t\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t\t// expanded items\n\t\t\t\t} else {\n\t\t\t\t\tnode.expandedTo.forEach(function( _node ) {\n\t\t\t\t\t\t_node.applyMatrix = false;\n\t\t\t\t\t\t_node.matrix = matrix;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// b. transform the contour\n\t\t// prepare and update outlines and expanded contours, but not\n\t\t// skeletons\n\t\tif ( contour.transforms ) {\n\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\tcontour.transforms.slice(0), contour.transformOrigin\n\t\t\t);\n\n\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\tcontour.applyMatrix = false;\n\t\t\t\tcontour.matrix = matrix;\n\n\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t// expanded items\n\t\t\t} else {\n\t\t\t\tcontour.expandedTo.forEach(function( _contour ) {\n\t\t\t\t\t_contour.applyMatrix = false;\n\t\t\t\t\t_contour.matrix = matrix;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, this);\n\n\t// 3. update components and transform components\n\tif ( this.components.length && font ) {\n\t\t// subcomponents have the parent component as their parent\n\t\t// so search for the font\n\t\twhile ( !('glyphs' in font) ) {\n\t\t\tfont = font.parent;\n\t\t}\n\n\t\tthis.components.forEach(function(component) {\n\t\t\tcomponent.update( params );\n\n\t\t\tif ( component.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tcomponent.transforms.slice(0), component.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tcomponent.applyMatrix = false;\n\t\t\t\tcomponent.matrix = matrix;\n\t\t\t}\n\t\t}, this);\n\t}\n\n\t// 4. transform whole glyph\n\tif ( glyph.transforms ) {\n\t\tmatrix = Utils.transformsToMatrix(\n\t\t\tglyph.transforms.slice(0), glyph.transformOrigin\n\t\t);\n\n\t\tglyph.applyMatrix = false;\n\t\tglyph.matrix = matrix;\n\t}\n\n\treturn this;\n};\n\n// Before updating SVG or OpenType data, we must determine paths exports\n// directions. Basically, everything needs to be clockwise.\n// this method needs to be called only after the first update, otherwise the\n// directions won't be known\npaper.PaperScope.prototype.Outline.prototype.prepareDataUpdate = function() {\n\tif ( this.isPrepared ) {\n\t\treturn;\n\t}\n\n\tthis.children.forEach(function(contour) {\n\t\t// expanded contours are handled from their skeleton\n\t\tif ( contour.expandedFrom ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( contour.skeleton !== true ) {\n\t\t\tcontour.exportReversed = !contour.isClockwise();\n\n\t\t} else if ( !contour.expandedTo[1] ) {\n\t\t\tcontour.expandedTo[0].exportReversed =\n\t\t\t\t!contour.expandedTo[0].isClockwise();\n\n\t\t} else {\n\t\t\tvar isClockwise = contour.isClockwise();\n\n\t\t\tcontour.expandedTo[0].exportReversed = !isClockwise;\n\t\t\tcontour.expandedTo[1].exportReversed = !isClockwise;\n\t\t}\n\t});\n\n\tthis.isPrepared = true;\n};\n\nvar updateSVGData =\n\t\tpaper.PaperScope.prototype.Outline.prototype.updateSVGData,\n\tupdateOTCommands =\n\t\tpaper.PaperScope.prototype.Outline.prototype.updateOTCommands;\n\npaper.PaperScope.prototype.Outline.prototype.updateSVGData = function() {\n\tif ( !this.isPrepared ) {\n\t\tthis.prepareDataUpdate();\n\t}\n\n\tupdateSVGData.apply( this, arguments );\n};\n\npaper.PaperScope.prototype.Outline.prototype.updateOTCommands = function() {\n\tif ( !this.isPrepared ) {\n\t\tthis.prepareDataUpdate();\n\t\tthis.isPrepared = true;\n\t}\n\n\tupdateOTCommands.apply( this, arguments );\n};\n\nmodule.exports = plumin;\n","var Utils = {};\n\n// The following function should be useless, thanks to paper\nUtils.lineLineIntersection = function( p1, p2, p3, p4 ) {\n\tvar x1 = p1.x,\n\t\ty1 = p1.y,\n\t\tx2 = p2.x,\n\t\ty2 = p2.y,\n\t\tx3 = p3.x,\n\t\ty3 = p3.y,\n\t\tx4 = p4.x,\n\t\ty4 = p4.y,\n\t\td = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n\tif ( d === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn new Float32Array([\n\t\t( (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4) ) /\n\t\td,\n\t\t( (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4) ) /\n\t\td\n\t]);\n};\n\n// Find the intersection of two rays.\n// A ray is defined by a point and an angle.\nUtils.rayRayIntersection = function( p1, a1, p2, a2 ) {\n\t// line equations\n\tvar a = Math.tan(a1),\n\t\tb = Math.tan(a2),\n\t\tc = p1.y - a * p1.x,\n\t\td = p2.y - b * p2.x,\n\t\tx,\n\t\ty;\n\n\t// When searching for lines intersection,\n\t// angles can be normalized to 0 < a < PI\n\t// This will be helpful in detecting special cases below.\n\ta1 = a1 % Math.PI;\n\tif ( a1 < 0 ) {\n\t\ta1 += Math.PI;\n\t}\n\ta2 = a2 % Math.PI;\n\tif ( a2 < 0 ) {\n\t\ta2 += Math.PI;\n\t}\n\n\t// no intersection\n\tif ( a1 === a2 ) {\n\t\treturn null;\n\t}\n\n\t// Optimize frequent and easy special cases.\n\t// Without optimization, results would be incorrect when cos(a) === 0\n\tif ( a1 === 0 ) {\n\t\ty = p1.y;\n\t} else if ( a1 === Math.PI / 2 ) {\n\t\tx = p1.x;\n\t}\n\tif ( a2 === 0 ) {\n\t\ty = p2.y;\n\t} else if ( a2 === Math.PI / 2 ) {\n\t\tx = p2.x;\n\t}\n\n\t// easiest case\n\tif ( x !== undefined && y !== undefined ) {\n\t\treturn new Float32Array([ x, y ]);\n\t}\n\n\t// other cases that can be optimized\n\tif ( a1 === 0 ) {\n\t\treturn new Float32Array([ ( y - d ) / b, y ]);\n\t}\n\tif ( a1 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, b * x + d ]);\n\t}\n\tif ( a2 === 0 ) {\n\t\treturn new Float32Array([ ( y - c ) / a, y ]);\n\t}\n\tif ( a2 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, a * x + c ]);\n\t}\n\n\t// intersection from two line equations\n\t// algo: http://en.wikipedia.org/wiki/Line–line_intersection#Given_the_equations_of_the_lines\n\treturn new Float32Array([\n\t\tx = (d - c) / (a - b),\n\t\t// this should work equally well with ax+c or bx+d\n\t\ta * x + c\n\t]);\n};\n\n// return the angle between two points\nUtils.lineAngle = function( p0, p1 ) {\n\treturn Math.atan2( p1.y - p0.y, p1.x - p0.x );\n};\n\nUtils.onLine = function( params ) {\n\tvar origin = params.on[0],\n\t\tvector = [\n\t\t\tparams.on[1].x - params.on[0].x,\n\t\t\tparams.on[1].y - params.on[0].y\n\t\t];\n\n\treturn 'x' in params ?\n\t\t( params.x - origin.x ) / vector[0] * vector[1] + origin.y :\n\t\t( params.y - origin.y ) / vector[1] * vector[0] + origin.x;\n};\n\nUtils.pointOnCurve = function(pointHandleOut,\n\tpointHandleIn,\n\tdistanceFromOut,\n\tinverseOrientation,\n\tlinePrecision) {\n\tlinePrecision = linePrecision || 3;\n\tvar length = 0;\n\tvar previousPoint;\n\n\tvar points;\n\tif (!inverseOrientation) {\n\t\tpoints = [\n\t\t\tpointHandleOut.point,\n\t\t\tpointHandleOut.point.add(pointHandleOut.handleOut),\n\t\t\tpointHandleIn.point.add(pointHandleIn.handleIn),\n\t\t\tpointHandleIn.point\n\t\t];\n\t} else {\n\t\tpoints = [\n\t\t\tpointHandleIn.point,\n\t\t\tpointHandleIn.point.add(pointHandleIn.handleIn),\n\t\t\tpointHandleOut.point.add(pointHandleOut.handleOut),\n\t\t\tpointHandleOut.point\n\t\t];\n\t}\n\n\tfor (var i = 0; i < linePrecision; i++) {\n\t\tvar point = Utils.deCasteljau(points,\n\t\t\t( i / ( linePrecision - 1 ) ) );\n\n\t\tif (previousPoint) {\n\t\t\tlength += Utils.distance(previousPoint.x,\n\t\t\t\tpreviousPoint.y,\n\t\t\t\tpoint.x,\n\t\t\t\tpoint.y);\n\n\t\t}\n\n\t\tpreviousPoint = point;\n\t}\n\n\tvar t = length === 0 ? 0 : distanceFromOut / length;\n\n\tt = Math.max(0.001, Math.min(1, t));\n\n    return Utils.deCasteljau(points, t);\n};\n\nUtils.deCasteljau = function(points, t) {\n\tvar newPoints = [];\n\tfor (var i = 1; i < points.length; i++) {\n\t\tnewPoints.push(\n\t\t\tpoints[i - 1]\n\t\t\t\t.multiply(1 - t)\n\t\t\t\t.add(\n\t\t\t\t\tpoints[i]\n\t\t\t\t\t\t.multiply(t)\n\t\t\t\t)\n\t\t\t);\n\t}\n\n\tif (newPoints.length === 1) {\n\t\tvar p0 = { x: 0, y: 0 },\n\t\t\tp1 = {\n\t\t\tx: points[1].x - points[0].x,\n\t\t\ty: points[1].y - points[0].y\n\t\t};\n\n\t\treturn {\n\t\t\tx: newPoints[0].x,\n\t\t\ty: newPoints[0].y,\n\t\t\tnormal: Utils.lineAngle(p0, p1)\n\t\t};\n\t} else {\n\t\treturn Utils.deCasteljau(newPoints, t);\n\t}\n};\n\nUtils.distance = function(x1, y1, x2, y2) {\n\treturn Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y1 - y2, 2));\n};\n\nUtils.log = function() {\n\tconsole.log.apply( console, arguments );\n\treturn arguments[0];\n};\n\nmodule.exports = Utils;\n"]}