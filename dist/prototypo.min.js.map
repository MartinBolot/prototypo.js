{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/deptree/index.js","node_modules/es6-object-assign/src/index.js","node_modules/lodash.clone/index.js","node_modules/lodash.clone/node_modules/lodash._baseclone/index.js","node_modules/lodash.clone/node_modules/lodash._baseclone/node_modules/lodash._arraycopy/index.js","node_modules/lodash.clone/node_modules/lodash._baseclone/node_modules/lodash._arrayeach/index.js","node_modules/lodash.clone/node_modules/lodash._baseclone/node_modules/lodash._baseassign/index.js","node_modules/lodash.clone/node_modules/lodash._baseclone/node_modules/lodash._baseassign/node_modules/lodash._basecopy/index.js","node_modules/lodash.clone/node_modules/lodash._baseclone/node_modules/lodash._basefor/index.js","node_modules/lodash.clone/node_modules/lodash._baseclone/node_modules/lodash._getnative/index.js","node_modules/lodash.clone/node_modules/lodash._baseclone/node_modules/lodash.isarray/index.js","node_modules/lodash.clone/node_modules/lodash._baseclone/node_modules/lodash.keys/index.js","node_modules/lodash.clone/node_modules/lodash._baseclone/node_modules/lodash.keys/node_modules/lodash.isarguments/index.js","node_modules/lodash.clone/node_modules/lodash._bindcallback/index.js","node_modules/lodash.clone/node_modules/lodash._isiterateecall/index.js","node_modules/plumin.js/dist/plumin.js","src/Utils.js","src/naive.js","src/prototypo.js","src/updateUtils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","prototypo","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"DepTree","nodes","prototype","add","node","dependants","Array","resolveNode","resolved","processing","deps","forEach","dep","indexOf","push","resolve","assign","target","firstSource","undefined","TypeError","to","Object","arguments","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","polyfill","defineProperty","configurable","writable","value","baseClone","bindCallback","isIterateeCall","clone","isDeep","customizer","thisArg","arrayCopy","arrayEach","baseAssign","baseFor","getNative","isArray","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reFlags","cloneableTags","objectProto","hasOwnProperty","objToString","toString","ArrayBuffer","bufferSlice","floor","Math","Uint8Array","Float64Array","func","result","FLOAT64_BYTES_PER_ELEMENT","BYTES_PER_ELEMENT","key","object","stackA","stackB","isObject","isArr","initCloneArray","tag","isFunc","initCloneObject","initCloneByTag","baseForOwn","subValue","iteratee","bufferClone","buffer","constant","byteLength","floatLength","offset","view","set","array","constructor","index","input","Ctor","byteOffset","source","exec","lastIndex","type","baseCopy","props","createBaseFor","fromRight","keysFunc","iterable","toObject","reRegExpChars","reHasRegExpChars","RegExp","reIsHostCtor","baseToString","isObjectLike","fnToString","Function","reIsNative","escapeRegExp","replace","isNative","test","string","nativeIsArray","MAX_SAFE_INTEGER","isLength","isArguments","reIsUint","nativeKeys","baseProperty","getLength","isArrayLike","isIndex","shimKeys","keysIn","propsLength","allowIndexes","isProto","skipIndexes","argCount","identity","collection","accumulator","other","apply","plumin","opentype","argument","predicate","message","assert",2,"line","ctx","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke",3,"cffStandardStrings","cffStandardEncoding","cffExpertEncoding","standardNames","DefaultEncoding","font","charToGlyphIndex","c","charCodeAt","glyphs","glyph","j","unicodes","CmapEncoding","cmap","glyphIndexMap","CffEncoding","encoding","charset","charName","GlyphNames","post","version","names","slice","numberOfGlyphs","glyphNameIndex","nameToGlyphIndex","name","glyphIndexToName","gid","addGlyphNames","tables","charCodes","glyphIndex","addUnicode","parseInt","cffEncoding","glyphNames",4,"path","sfnt","Font","options","familyName","styleName","designer","designerURL","manufacturer","manufacturerURL","license","licenseURL","description","copyright","trademark","unitsPerEm","ascender","descender","supported","hasChar","charToGlyph","stringToGlyphs","nameToGlyph","nametoGlyphIndex","getKerningValue","leftGlyph","rightGlyph","gposKerning","getGposKerningValue","kerningPairs","forEachGlyph","text","x","y","fontSize","callback","kerning","fontScale","advanceWidth","kerningValue","getPath","fullPath","Path","gX","gY","gFontSize","glyphPath","extend","draw","drawPoints","drawMetrics","validate","warnings","_this","assertStringAttribute","attrName","trim","toTables","fontToTable","toBuffer","sfntTable","bytes","encode","intArray","download","fileName","requestFileSystem","webkitRequestFileSystem","TEMPORARY","fs","root","getFile","create","fileEntry","createWriter","writer","dataView","DataView","blob","Blob","write","addEventListener","location","href","toURL","err","./encoding","./path","./tables/sfnt",5,"check","Glyph","unicode","xMin","yMin","xMax","yMax","scale","p","commands","cmd","quadraticCurveTo","curveTo","closePath","getContours","points","contours","currentContour","pt","lastPointOfContour","getMetrics","xCoords","yCoords","metrics","min","max","leftSideBearing","rightSideBearing","drawCircles","PI_SQ","PI","arc","fill","blueCircles","redCircles","fillStyle","lineWidth","strokeStyle","./check","./draw",6,"_font","parse","cff","glyf","gpos","head","hhea","hmtx","kern","loca","maxp","_name","os2","toArrayBuffer","arrayBuffer","data","loadFromFile","readFile","loadFromUrl","url","request","XMLHttpRequest","open","responseType","onload","status","statusText","response","send","parseBuffer","indexToLocFormat","hmtxOffset","glyfOffset","locaOffset","cffOffset","kernOffset","gposOffset","getFixed","outlinesFormat","getTag","numTables","getUShort","getULong","numberOfHMetrics","numGlyphs","fontFamily","fontSubfamily","shortVersion","locaTable","load","isNode","loadFn","_parse","./font","./glyph","./parse","./tables/cff","./tables/cmap","./tables/glyf","./tables/gpos","./tables/head","./tables/hhea","./tables/hmtx","./tables/kern","./tables/loca","./tables/maxp","./tables/name","./tables/os2","./tables/post",7,"getByte","getUint8","getCard8","getUint16","getCard16","getShort","getInt16","getUint32","decimal","fraction","String","fromCharCode","getInt8","getOffset","offSize","v","getBytes","startOffset","endOffset","bytesToString","typeOffsets","byte","uShort","short","uLong","fixed","longDateTime","Parser","relativeOffset","parseByte","parseChar","parseCard8","parseUShort","parseCard16","parseSID","parseOffset16","parseShort","parseF2Dot14","parseULong","parseFixed","parseOffset16List","parseUShortList","count","offsets","parseString","parseTag","parseLongDateTime","parseVersion","major","minor","skip","amount",8,"strokeWidth","bezierCurveTo","quadTo","close","pathOrCommands","toPathData","decimalPlaces","floatToString","round","toFixed","packValues","d","toSVG","svg",9,"sizeOf","Table","tableName","fields","field","optionKeys","k","sizeOfFunction","TABLE","./types",10,"_glyph","table","equals","b","parseCFFIndex","start","conversionFn","objects","objectOffset","offsetSize","pos","parseFloatOperand","parser","eof","lookup","n1","n2","parseFloat","parseOperand","b0","b1","b2","b3","b4","entriesToObject","entries","values","parseCFFDict","size","operands","op","getCFFString","strings","interpretDict","dict","meta","newDict","m","parseCFFHeader","header","formatMajor","formatMinor","TOP_DICT_META","PRIVATE_DICT_META","parseCFFTopDict","parseCFFPrivateDict","parseCFFCharset","nGlyphs","sid","format","parseCFFEncoding","enc","nCodes","nRanges","first","nLeft","parseCFFCharstring","c1x","c1y","c2x","c2y","stack","nStems","haveWidth","width","defaultWidthX","newContour","parseStems","hasWidthArg","shift","nominalWidthX","codeIndex","subrCode","jpx","jpy","c3x","c3y","c4x","c4y","pop","subrsBias","subrs","abs","console","log","gsubrsBias","gsubrs","calcCFFSubroutineBias","bias","parseCFFTable","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDictData","topDict","privateDictOffset","privateDict","subrOffset","subrIndex","charStringsIndex","charStrings","charString","encodeString","makeHeader","makeNameIndex","fontNames","makeDict","attrs","entry","makeTopDict","makeTopDictIndex","topDicts","makeStringIndex","makeGlobalSubrIndex","makeCharsets","glyphName","glyphSID","glyphToOps","ops","dx","dy","_13","_23","dx1","dy1","dx2","dy2","makeCharStringsIndex","makePrivateDict","makePrivateDictIndex","privateDicts","makeCFFTable","fullName","weight","weightName","private","privateAttrs","postScriptName","charsets","privateDictIndex","make","../encoding","../glyph","../parse","../path","../table",11,"parseCmapTable","platformId","encodingId","language","segCount","endCountParser","startCountParser","idDeltaParser","idRangeOffsetParser","glyphIndexOffset","endCount","startCount","idDelta","idRangeOffset","addSegment","segments","end","delta","addTerminatorSegment","makeCmapTable","sort","segCountX2","searchRange","pow","entrySelector","rangeShift","endCounts","startCounts","idDeltas","idRangeOffsets","glyphIds","segment","concat","glyphId","../check",12,"parseGlyphCoordinate","flag","previousValue","shortVectorBitMask","sameBitMask","parseGlyph","numberOfContours","flags","endPointIndices","instructionLength","instructions","numberOfCoordinates","repeatCount","point","onCurve","px","py","isComposite","components","moreComponents","component","xScale","scale01","scale10","yScale","transformPoints","transform","newPoints","newPt","contour","firstPt","lastPt","curvePt","realFirstPoint","prevPt","midPt","parseGlyfTable","nextOffset","componentGlyph","transformedPoints",13,"parseTaggedListTable","list","parseCoverageTable","coverage","begin","parseClassDefTable","startGlyph","glyphCount","classes","glyphID","rangeCount","startGlyphs","endGlyphs","classValues","parsePairPosSubTable","coverageOffset","valueFormat1","valueFormat2","value1","value2","sharedPairSets","pairSetCount","pairSet","pairSetOffsets","firstGlyph","pairSetOffset","sharedPairSet","pairValueCount","secondGlyph","pairs","classDef1Offset","classDef2Offset","class1Count","class2Count","getClass1","getClass2","kerningMatrix","kerningRow","covered","class1","class2","parseLookupTable","lookupType","lookupFlag","useMarkFilteringSet","subTableCount","subTableOffsets","markFilteringSet","subtables","parseGposTable","tableVersion","lookupListOffset","lookupCount","lookupTableOffsets","lookupListAbsoluteOffset",14,"parseHeadTable","fontRevision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","glyphDataFormat","makeHeadTable",15,"parseHheaTable","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","makeHheaTable",16,"parseHmtxTable","numMetrics","makeHmtxTable",17,"parseKernTable","subTableVersion","nPairs","leftIndex","rightIndex",18,"parseLocaTable","parseFn","glyphOffsets","glyphOffset",19,"parseMaxpTable","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","makeMaxpTable",20,"nameTableNames","parseNameTable","stringOffset","unknownCount","platformID","encodingID","languageID","nameID","property","codePoints","str","langTagCount","makeNameRecord","addMacintoshNameRecord","recordID","stringBytes","STRING","records","addWindowsNameRecord","utf16Bytes","UTF16","makeNameTable","../types",21,"unicodeRanges","getUnicodeRange","range","parseOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContent","makeOS2Table",22,"parsePostTable","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","nameLength","makePostTable",23,"log2","computeCheckSum","sum","makeTableRecord","checkSum","makeSfntTable","highestPowerOf2","recordFields","tableFields","tableLength","tableRecord","isNaN","r1","r2","metricsForChar","chars","notFoundMetrics","average","vs","fontToSfntTable","xMins","yMins","xMaxs","yMaxs","advanceWidths","leftSideBearings","rightSideBearings","firstCharIndex","lastCharIndex","position","globals","advanceWidthAvg","maxLeftSideBearing","headTable","hheaTable","maxpTable","os2Table","hmtxTable","cmapTable","nameTable","uniqueID","preferredFamily","preferredSubfamily","postTable","cffTable","checkSumAdjusted","./cff","./cmap","./head","./hhea","./hmtx","./maxp","./name","./os2","./post",24,"LIMIT16","LIMIT32","decode","BYTE","CHAR","CHARARRAY","USHORT","SHORT","UINT24","ULONG","LONG","FIXED","FWORD","UFWORD","LONGDATETIME","TAG","Card8","Card16","OffSize","SID","NUMBER","NUMBER16","NUMBER32","NAME","INDEX","dataSize","OBJECT","encodedOffsets","offsetEncoder","encodedOffset","DICT","OPERAND","OPERATOR","OP","wmm","WeakMap","CHARSTRING","has","get","encodingFunction","LITERAL","paper","noCanvas","process","browser","WorkerGlobalScope","Base","hidden","iter","bind","forIn","proto","__proto__","describe","obj","__lookupGetter__","__lookupSetter__","_define","__defineGetter__","__defineSetter__","inject","dest","src","beans","preserve","beansNames","val","substring","res","prev","bean","base","match","toLowerCase","isPlainObject","part","each","exclude","statics","ctor","initialize","pick","_id","_class","Formatter","instance","number","join","getClassName","exportJSON","toJSON","serialize","_set","dontCheck","orig","_filtering","obj1","obj2","checkKeys","o1","o2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","formatter","precision","definitions","references","item","id","ref","unshift","_serialize","_compact","deserialize","json","_data","isRoot","isDictionary","args","JSON","stringify","importJSON","isTarget","Item","Layer","insert","splice","items","remove","append","_index","removed","capitalize","toUpperCase","camelize","all","chr","hyphenate","Emitter","on","_eventTypes","handlers","_callbacks","install","off","uninstall","once","emit","event","stop","responds","attach","detach","fire","_installEvents","events","_events","types","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","project","projects","tools","palettes","_scopes","support","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","navigator","userAgent","v1","v2","rv","chrome","versionNumber","webkit","atom","getView","getPaper","execute","PaperScript","View","updateFocus","scope","that","setup","element","Project","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","val1","val2","separator","height","rectangle","Numerical","abscissas","weights","sqrt","TOLERANCE","EPSILON","MACHINE_EPSILON","KAPPA","isZero","integrate","w","A","B","Ax","findRoot","df","tolerance","fx","nx","solveQuadratic","roots","Infinity","D","gmC","mult","LOG10E","isFinite","R","q","solveCubic","c2","ec","x0","qd","tmp","Point","arg0","arg1","hasY","angle","setAngle","setLength","_angle","cos","sin","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","atan2","div","NaN","dot","acos","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","current","rotate","center","subtract","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","contains","isClose","isColinear","isOrthogonal","point1","point2","random","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","next","rect","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","left","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","concatenate","a1","c1","d1","a2","d2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","bounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","apx","apy","avx","avy","bpx","bpy","bvx","bvy","ta","tb","vx","vy","v2x","v2y","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","_drawSelection","Symbol","dontCenter","setDefinition","_definition","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","PlacedSymbol","symbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","visible","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","parent","setParent","mouseFlags","mousedown","mousedrag","click","doubleclick","mouseup","mousemove","mouseenter","mouseleave","mouseEvent","counters","_eventCounters","onFrame","_animateItem","onLoad","animate","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","children","_children","namedChildren","_namedChildren","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getRegistration","setRegistration","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","child","setBounds","cache","_boundsCache","ids","cached","_internal","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","copy","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","ceil","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","getIntersections","guides","parentTotalMatrix","_totalMatrix","totalMatrix","tolerancePadding","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","class","checkBounds","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","matches","compare","matchObject","firstOnly","overlapping","inside","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","reduce","namedArray","notifyParent","replaceWith","reverseChildren","reverse","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","toCanvasStyle","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","getViewMatrix","normalBlend","nativeBlend","direct","dontStart","clip","_canComposite","mainCtx","itemOffset","prevOffset","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","getWindingRule","getCornerCenter","halfSize","dir","corner","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","getElement","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","modify","setContext","context","toDataURL","loaded","update","document","getElementById","Image","setTimeout","DomEvent","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","isLinear","_point","_handleIn","_handleOut","_path","curves","_curves","curve","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","setLinear","linear","next1","getNext","next2","getPrevious","isArc","handle1","handle2","_selectionState","state","oldState","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","removeSegment","interpolate","segment0","segment1","coef","dxPoint","dyPoint","dxHandleIn","dyHandleIn","dxHandleOut","dyHandleOut","change","Curve","arg6","arg7","_segment2","segment2","_length","getPoint1","setPoint1","getPoint2","setPoint2","getHandle1","setHandle1","getHandle2","setHandle2","getSegment1","getSegment2","getPoints","getPart","getPartLength","filterIntersections","_getParameter","isParameter","parameter","getParameterAt","ignoreLinear","subdivide","split","p1","h1","h2","p2","evaluate","p1x","p1y","p2x","p2y","bx","ax","by","ay","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","txs","tys","sx","sy","isFlatEnough","ux","uy","getEdgeSum","_addBounds","v0","v3","padding","tMin","tMax","getLocationAt","getLocationOf","getOffsetOf","loc","getNearestLocation","minDist","minT","refine","dist","step","getNearestPoint","getLengthIntegrand","getIterations","ds","forward","rangeLength","guess","addLocation","locations","curve1","t1","curve2","t2","addCurveIntersections","uMin","uMax","oldTDiff","recursion","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","tMinNew","tMaxNew","tDiff","hull","getConvexHull","tMinClip","tMaxClip","clipConvexHull","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","flip","pmax","distZero","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rlx2","rvl","rvc","tc","tl","addLineIntersection","linear1","linear2","c1p1","c1p2","c2p1","c2p2","_expand","last","_curve","_curve2","_parameter","_parameter2","loc1","loc2","path1","path2","getParameter","getIntersection","_point2","_distance","getSegment","_preferFirst","_segment","_uncached","intersection","_intersection","_getOffset","getCurveOffset","getPointAt","curves1","curves2","matrix1","matrix2","length1","length2","values2","values1","seg1","seg2","setPathData","relative","previous","control","getCoord","command","lower","move","cubicCurveTo","arcTo","winding","_getWinding","closed","setSegments","_clockwise","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","curX","curY","prevX","prevY","inX","inY","outX","outY","skipLine","isPolygon","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","simplify","fitter","PathFitter","fit","isClockwise","setClockwise","clockwise","last1","last2","first2","first1","path0","toShape","topCenter","shape","numSegments","strokePadding","cap","hitStroke","hitFill","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","_addBevelJoin","_addSquareCap","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","overlap","knots","f1","f2","ie","je","getCurrentSegment","moveBy","through","extent","vector","middle","large","epsilon","rxSq","rySq","xSq","ySq","l1","l2","throughSide","centerSide","ext","inc","z","out","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","prevCoords","processSegment","joinBounds","addRound","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getNormal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","compoundpath0","compoundpath1","paths","getCurrentPath","operators","computeBoolean","operation","operator","preparePath","reorient","_path1","_path2","splitPath","monoCurves","collect","_getMonoCurves","_winding","startSeg","totalLength","windingSum","curveLength","getTangentAt","getWinding","tracePaths","intersections","linearHandles","resetLinear","newCurve","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","prevT","slope","selfOp","_visited","inter","startInterSeg","added","interSeg","c4","c3","t3","t4","w3","w4","nextCurve","nextSeg","firstSegment","lastSegment","prevCurve","insertCurve","y0","handleCurve","y3","getInteriorPoint","xIntercepts","maxRecursion","minDifference","addCurve","computeParts","maxT","halfT","prevVal","prevLen","error","fitCubic","tan1","tan2","pt1","pt2","uPrime","chordLengthParameterize","maxError","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","C","X","detC0C1","alpha1","alpha2","detC0X","detXC1","c0","segLength","diff","degree","maxDist","P","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","gray","rgb","hsb","hsl","gradient","componentParsers","colorCache","colorCtx","fromCSS","hsbIndices","converters","rgb-hsb","h","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","hasOverlap","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","_stops","origin","destination","canvasGradient","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","acronym","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","nativeRequest","requested","callbacks","focused","timer","focus","blur","handleCallbacks","setInterval","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","getCanvasSize","_windowEvents","resize","setViewSize","_setViewSize","Stats","_stats","stats","domElement","appendChild","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","onResize","_time","_count","_requestFrame","_requested","_handleFrame","now","Date","_before","_handlingFrame","time","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tool","prevFocus","tempFocus","dragging","handleMouseMove","_handleEvent","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","HTMLCanvasElement","deviceRatio","backingStoreRatio","prevFont","measureText","downPoint","lastPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","callEvent","MouseEvent","isStopped","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","specialKeys",27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","space","charCodeMap","keyMap","downCode","handleKey","keyCode","charCode","specialKey","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","method","xhr","ActiveXObject","overrideMimeType","onreadystatechange","readyState","responseText","canvases","createElement","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","attribute","fromSVG","exportFilter","SVGNamespaces","xlink","setAttributes","namespace","setAttributeNS","createElementNS","getTransform","coordinates","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","exporters","applyStyle","visibility","svgs","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","map","importGroup","childNodes","isClip","currentStyle","applyAttributes","importSVG","importPoly","importPath","pathData","importGradient","isRadial","importers","#document","nextSibling","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","applyTransform","transforms","applyOpacity","attributes","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","styles","group","parentNode","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","onImport","expandShapes","Collection","cb","wrapConstructor","useConstructed","wrapper","arr","params","rconstructor","constructorFilter","unwrapArg","isPlural","unwrapArgs","proxy","methodNames","getOwnPropertyNames","filter","plural","ot","glyphMap","charMap","altMap","_subset","addGlyph","addGlyphs","fonts","addedFonts","delete","styleElement","styleSheet","styleSheets","ss","ownerNode","_lastSubset","getGlyphSubset","normalizeSubset","font0","font1","updateSVGData","updateOTCommands","importOT","otFont","otGlyph","_URL","URL","webkitURL","addToFonts","fontface","FontFace","createObjectURL","fontObjectURL","revokeObjectURL","deleteRule","insertRule","onloadend","readAsDataURL","lastIndexOf","../node_modules/opentype.js/dist/opentype.js","../node_modules/paper/dist/paper-core.js","./Glyph.js","Outline","anchors","parentAnchors","addAnchor","addAnchors","addParentAnchor","glyph0","glyph1","svgData","addContour","./Outline.js","outline0","outline1","defineProperties","firstNode","lastNode","_updateData","pushSimple","pushBezier","export","ctrl1","ctrl2","Node","./Collection.js","./Font.js","./Node.js","./Outline","./Path.js","updateUtils","Utils","_","ufoToPaper","parameters","outline","parentParameters","lib","transformOrigin","solvingOrder","fontFromSrc","fontinfo","info","filteredSrc","controls","presets","createUpdaters","mergeStatic","solveDependencyTree","glyphFromSrc","fontSrc","naive","embed","anchorSrc","contourSrc","nodeSrc","embedComponents","componentSrc","annotator","addComponent","cursor","propFromCursor","_dependencies","_parameters","_updaters","leaf","_operation","depTree","dependencyTree","order","simplified","simplifyResolutionOrder","parentSrc","leafSrc","currCursor","rdeg","transformsToMatrix","Float32Array","curr","rslt","updateParameters","updateProperties","propName","inSkeleton","autoExpandedNodeSrc","side","expandedNodeUpdater","expandedTo","skeletonCopier","explicitExpandedNodeSrc","expandedContourSrc","curviness","prepareContour","updateContour","additionalContours","skeleton","leftContour","rightContour","leftNodes","rightNodes","leftNodesSrc","rightNodesSrc","leftSrc","rightSrc","expandedFrom","typeIn","typeOut","addContours","isLeft","distr","_dirOut","_dirIn","tensionIn","tensionOut","tension","lineAngle","startCtrl","endCtrl","startType","endType","startTension","endTension","startDir","endDir","rri","rayRayIntersection","dirIn","dirOut","parametricFont","glyphSrc","_params","_node","_contour","prepareDataUpdate","isPrepared","lineLineIntersection","p4","x3","x4","y4","onLine","pointOnCurve","pointHandleOut","pointHandleIn","distanceFromOut","linePrecision","previousPoint","deCasteljau"],"mappings":"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,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA;Af3qHA,Ge4qHAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtnjpvvkfgsourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var DepTree = function() {\n  this.nodes = {}; \n};\n\nDepTree.prototype.add = function(node, dependants) {\n  var self = this;\n\n  if (!dependants) {\n    dependants = [];\n  } else if (!(dependants instanceof Array)) {\n    dependants = [dependants];\n  }\n\n  this.nodes[node] = dependants;\n};\n\n\nDepTree.prototype.resolveNode = function(node, resolved, processing) {\n\n  var self = this;\n\n  resolved = resolved || [];\n  processing = processing || {};\n  var deps = this.nodes[node] || [];\n\n  processing[node] = true;\n\n  deps.forEach(function(dep) {\n    if (resolved.indexOf(dep) != -1) {\n      return;\n    }\n    if (processing[dep]) {\n      throw new Error('Circular dependency: '+dep);\n    }\n    self.resolveNode(dep, resolved, processing);\n  });\n\n  if (resolved.indexOf(node) == -1) {\n    processing[node] = false;\n    resolved.push(node);\n  }\n  return resolved;\n};\n\nDepTree.prototype.resolve = function() {\n\n  var resolved = [];\n  for (var node in this.nodes) {\n    this.resolveNode(node, resolved);\n  }\n\n  return resolved;\n\n};\n\n\nmodule.exports = DepTree;\n","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseClone = require('lodash._baseclone'),\n    bindCallback = require('lodash._bindcallback'),\n    isIterateeCall = require('lodash._isiterateecall');\n\n/**\n * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n * otherwise they are assigned by reference. If `customizer` is provided it is\n * invoked to produce the cloned values. If `customizer` returns `undefined`\n * cloning is handled by the method instead. The `customizer` is bound to\n * `thisArg` and invoked with two argument; (value [, index|key, object]).\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n * The enumerable properties of `arguments` objects and objects created by\n * constructors other than `Object` are cloned to plain `Object` objects. An\n * empty object is returned for uncloneable values such as functions, DOM nodes,\n * Maps, Sets, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {*} Returns the cloned value.\n * @example\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * var shallow = _.clone(users);\n * shallow[0] === users[0];\n * // => true\n *\n * var deep = _.clone(users, true);\n * deep[0] === users[0];\n * // => false\n *\n * // using a customizer callback\n * var el = _.clone(document.body, function(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(false);\n *   }\n * });\n *\n * el === document.body\n * // => false\n * el.nodeName\n * // => BODY\n * el.childNodes.length;\n * // => 0\n */\nfunction clone(value, isDeep, customizer, thisArg) {\n  if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n    isDeep = false;\n  }\n  else if (typeof isDeep == 'function') {\n    thisArg = customizer;\n    customizer = isDeep;\n    isDeep = false;\n  }\n  return typeof customizer == 'function'\n    ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n    : baseClone(value, isDeep);\n}\n\nmodule.exports = clone;\n","/**\n * lodash 3.2.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar arrayCopy = require('lodash._arraycopy'),\n    arrayEach = require('lodash._arrayeach'),\n    baseAssign = require('lodash._baseassign'),\n    baseFor = require('lodash._basefor'),\n    getNative = require('lodash._getnative'),\n    isArray = require('lodash.isarray'),\n    keys = require('lodash.keys');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\ncloneableTags[dateTag] = cloneableTags[float32Tag] =\ncloneableTags[float64Tag] = cloneableTags[int8Tag] =\ncloneableTags[int16Tag] = cloneableTags[int32Tag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[stringTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[mapTag] = cloneableTags[setTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Native method references. */\nvar ArrayBuffer = getNative(global, 'ArrayBuffer'),\n    bufferSlice = getNative(ArrayBuffer && new ArrayBuffer(0), 'slice'),\n    floor = Math.floor,\n    Uint8Array = getNative(global, 'Uint8Array');\n\n/** Used to clone array buffers. */\nvar Float64Array = (function() {\n  // Safari 5 errors when using an array buffer to initialize a typed array\n  // where the array buffer's `byteLength` is not a multiple of the typed\n  // array's `BYTES_PER_ELEMENT`.\n  try {\n    var func = getNative(global, 'Float64Array'),\n        result = new func(new ArrayBuffer(10), 0, 1) && func;\n  } catch(e) {}\n  return result || null;\n}());\n\n/** Used as the size, in bytes, of each `Float64Array` element. */\nvar FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n/**\n * The base implementation of `_.clone` without support for argument juggling\n * and `this` binding `customizer` functions.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The object `value` belongs to.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates clones with source counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return arrayCopy(value, result);\n    }\n  } else {\n    var tag = objToString.call(value),\n        isFunc = tag == funcTag;\n\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return baseAssign(result, value);\n      }\n    } else {\n      return cloneableTags[tag]\n        ? initCloneByTag(value, tag, isDeep)\n        : (object ? value : {});\n    }\n  }\n  // Check for circular references and return corresponding clone.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == value) {\n      return stackB[length];\n    }\n  }\n  // Add the source value to the stack of traversed objects and associate it with its clone.\n  stackA.push(value);\n  stackB.push(result);\n\n  // Recursively populate clone (susceptible to call stack limits).\n  (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n    result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\n/**\n * Creates a clone of the given array buffer.\n *\n * @private\n * @param {ArrayBuffer} buffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction bufferClone(buffer) {\n  return bufferSlice.call(buffer, 0);\n}\nif (!bufferSlice) {\n  // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n  bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n    var byteLength = buffer.byteLength,\n        floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n        offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n        result = new ArrayBuffer(byteLength);\n\n    if (floatLength) {\n      var view = new Float64Array(result, 0, floatLength);\n      view.set(new Float64Array(buffer, 0, floatLength));\n    }\n    if (byteLength != offset) {\n      view = new Uint8Array(result, offset);\n      view.set(new Uint8Array(buffer, offset));\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add array properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  var Ctor = object.constructor;\n  if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n    Ctor = Object;\n  }\n  return new Ctor;\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return bufferClone(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      var buffer = object.buffer;\n      return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      var result = new Ctor(object.source, reFlags.exec(object));\n      result.lastIndex = object.lastIndex;\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var getter = _.constant(object);\n *\n * getter() === object;\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = baseClone;\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction arrayCopy(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayCopy;\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `_.forEach` for arrays without support for callback\n * shorthands or `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/**\n * lodash 3.2.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseCopy = require('lodash._basecopy'),\n    keys = require('lodash.keys');\n\n/**\n * The base implementation of `_.assign` without support for argument juggling,\n * multiple sources, and `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return source == null\n    ? object\n    : baseCopy(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @returns {Object} Returns `object`.\n */\nfunction baseCopy(source, props, object) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    object[key] = source[key];\n  }\n  return object;\n}\n\nmodule.exports = baseCopy;\n","/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = baseFor;\n","/**\n * lodash 3.9.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/**\n * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n * In addition to special characters the forward slash is escaped to allow for\n * easier `eval` use and `Function` compilation.\n */\nvar reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n    reHasRegExpChars = RegExp(reRegExpChars.source);\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  if (typeof value == 'string') {\n    return value;\n  }\n  return value == null ? '' : (value + '');\n}\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  escapeRegExp(fnToString.call(hasOwnProperty))\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (objToString.call(value) == funcTag) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\n/**\n * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n */\nfunction escapeRegExp(string) {\n  string = baseToString(string);\n  return (string && reHasRegExpChars.test(string))\n    ? string.replace(reRegExpChars, '\\\\$&')\n    : string;\n}\n\nmodule.exports = getNative;\n","/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]',\n    funcTag = '[object Function]';\n\n/**\n * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n * In addition to special characters the forward slash is escaped to allow for\n * easier `eval` use and `Function` compilation.\n */\nvar reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n    reHasRegExpChars = RegExp(reRegExpChars.source);\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  if (typeof value == 'string') {\n    return value;\n  }\n  return value == null ? '' : (value + '');\n}\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  escapeRegExp(fnToString.call(hasOwnProperty))\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (objToString.call(value) == funcTag) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\n/**\n * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n */\nfunction escapeRegExp(string) {\n  string = baseToString(string);\n  return (string && reHasRegExpChars.test(string))\n    ? string.replace(reRegExpChars, '\\\\$&')\n    : string;\n}\n\nmodule.exports = isArray;\n","/**\n * lodash 3.1.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar getNative = require('lodash._getnative'),\n    isArguments = require('lodash.isarguments'),\n    isArray = require('lodash.isarray');\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = getNative(Object, 'keys');\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = !!length && isLength(length) &&\n    (isArray(object) || isArguments(object));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  var Ctor = object == null ? null : object.constructor;\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && isArrayLike(object))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n","/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && isArrayLike(value) && objToString.call(value) == argsTag;\n}\n\nmodule.exports = isArguments;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = bindCallback;\n","/**\n * lodash 3.0.9 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isIterateeCall;\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.plumin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.opentype = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// Run-time checking of preconditions.\n\n'use strict';\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nexports.argument = function(predicate, message) {\n    if (!predicate) {\n        throw new Error(message);\n    }\n};\n\n// Precondition function that checks if the given assertion is true.\n// If not, it will throw an error.\nexports.assert = exports.argument;\n\n},{}],2:[function(require,module,exports){\n// Drawing utility functions.\n\n'use strict';\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexports.line = line;\n\n},{}],3:[function(require,module,exports){\n// Glyph encoding\n\n'use strict';\n\nvar cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nvar cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n// This is the encoding used for fonts created from scratch.\n// It loops through all glyphs and finds the appropriate unicode value.\n// Since it's linear time, other encodings will be faster.\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    var code = c.charCodeAt(0);\n    var glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs[i];\n            for (var j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    } else {\n        return null;\n    }\n};\n\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n};\n\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    var code = s.charCodeAt(0);\n    var charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction GlyphNames(post) {\n    var i;\n    switch (post.version) {\n    case 1:\n        this.names = exports.standardNames.slice();\n        break;\n    case 2:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] < exports.standardNames.length) {\n                this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n            } else {\n                this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n            }\n        }\n\n        break;\n    case 2.5:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n        }\n\n        break;\n    case 3:\n        this.names = [];\n        break;\n    }\n}\n\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNames(font) {\n    var glyph;\n    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    var charCodes = Object.keys(glyphIndexMap);\n    for (var i = 0; i < charCodes.length; i += 1) {\n        var c = charCodes[i];\n        var glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs[glyphIndex];\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs[i];\n        if (font.cffEncoding) {\n            glyph.name = font.cffEncoding.charset[i];\n        } else {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexports.cffStandardStrings = cffStandardStrings;\nexports.cffStandardEncoding = cffStandardEncoding;\nexports.cffExpertEncoding = cffExpertEncoding;\nexports.standardNames = standardNames;\nexports.DefaultEncoding = DefaultEncoding;\nexports.CmapEncoding = CmapEncoding;\nexports.CffEncoding = CffEncoding;\nexports.GlyphNames = GlyphNames;\nexports.addGlyphNames = addGlyphNames;\n\n},{}],4:[function(require,module,exports){\n// The Font object\n\n'use strict';\n\nvar path = require('./path');\nvar sfnt = require('./tables/sfnt');\nvar encoding = require('./encoding');\n\n// A Font represents a loaded OpenType font file.\n// It contains a set of glyphs and methods to draw text on a drawing context,\n// or to get a path representing the text.\nfunction Font(options) {\n    options = options || {};\n\n    // OS X will complain if the names are empty, so we put a single space everywhere by default.\n    this.familyName = options.familyName || ' ';\n    this.styleName = options.styleName || ' ';\n    this.designer = options.designer || ' ';\n    this.designerURL = options.designerURL || ' ';\n    this.manufacturer = options.manufacturer || ' ';\n    this.manufacturerURL = options.manufacturerURL || ' ';\n    this.license = options.license || ' ';\n    this.licenseURL = options.licenseURL || ' ';\n    this.version = options.version || 'Version 0.1';\n    this.description = options.description || ' ';\n    this.copyright = options.copyright || ' ';\n    this.trademark = options.trademark || ' ';\n    this.unitsPerEm = options.unitsPerEm || 1000;\n    this.ascender = options.ascender;\n    this.descender = options.descender;\n    this.supported = true;\n    this.glyphs = options.glyphs || [];\n    this.encoding = new encoding.DefaultEncoding(this);\n    this.tables = {};\n}\n\n// Check if the font has a glyph for the given character.\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n// Convert the given character to a single glyph index.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n// Convert the given character to a single Glyph object.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyph = function(c) {\n    var glyphIndex = this.charToGlyphIndex(c);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\n// Convert the given text to a list of Glyph objects.\n// Note that there is no strict one-to-one mapping between characters and\n// glyphs, so the list of returned glyphs can be larger or smaller than the\n// length of the given string.\nFont.prototype.stringToGlyphs = function(s) {\n    var glyphs = [];\n    for (var i = 0; i < s.length; i += 1) {\n        var c = s[i];\n        glyphs.push(this.charToGlyph(c));\n    }\n\n    return glyphs;\n};\n\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\nFont.prototype.nameToGlyph = function(name) {\n    var glyphIndex = this.nametoGlyphIndex(name);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n// Retrieve the value of the kerning pair between the left glyph (or its index)\n// and the right glyph (or its index). If no kerning pair is found, return 0.\n// The kerning value gets added to the advance width when calculating the spacing\n// between glyphs.\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.getGposKerningValue;\n    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n};\n\n// Helper function that invokes the given callback for each glyph in the given text.\n// The callback gets `(glyph, x, y, fontSize, options)`.\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    if (!this.supported) {\n        return;\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || {};\n    var kerning = options.kerning === undefined ? true : options.kerning;\n    var fontScale = 1 / this.unitsPerEm * fontSize;\n    var glyphs = this.stringToGlyphs(text);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        callback(glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (kerning && i < glyphs.length - 1) {\n            var kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n    }\n};\n\n// Create a Path object that represents the given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns a Path object.\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    var fullPath = new path.Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        fullPath.extend(glyphPath);\n    });\n\n    return fullPath;\n};\n\n// Draw the text on the given drawing context.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n// Draw the points of all glyphs in the text.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Draw lines indicating important font measurements for all glyphs in the text.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Validate\nFont.prototype.validate = function() {\n    var warnings = [];\n    var _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertStringAttribute(attrName) {\n        assert(_this[attrName] && _this[attrName].trim().length > 0, 'No ' + attrName + ' specified.');\n    }\n\n    // Identification information\n    assertStringAttribute('familyName');\n    assertStringAttribute('weightName');\n    assertStringAttribute('manufacturer');\n    assertStringAttribute('copyright');\n    assertStringAttribute('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n\nFont.prototype.toBuffer = function() {\n    var sfntTable = this.toTables();\n    var bytes = sfntTable.encode();\n    var buffer = new ArrayBuffer(bytes.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n// Initiate a download of the OpenType font.\nFont.prototype.download = function() {\n    var fileName = this.familyName.replace(/\\s/g, '') + '-' + this.styleName + '.otf';\n    var buffer = this.toBuffer();\n\n    window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n    window.requestFileSystem(window.TEMPORARY, buffer.byteLength, function(fs) {\n        fs.root.getFile(fileName, {create: true}, function(fileEntry) {\n            fileEntry.createWriter(function(writer) {\n                var dataView = new DataView(buffer);\n                var blob = new Blob([dataView], {type: 'font/opentype'});\n                writer.write(blob);\n\n                writer.addEventListener('writeend', function() {\n                    // Navigating to the file will download it.\n                    location.href = fileEntry.toURL();\n                }, false);\n            });\n        });\n    },\n\n    function(err) {\n        throw err;\n    });\n};\n\nexports.Font = Font;\n\n},{\"./encoding\":3,\"./path\":8,\"./tables/sfnt\":23}],5:[function(require,module,exports){\n// The Glyph object\n\n'use strict';\n\nvar check = require('./check');\nvar draw = require('./draw');\nvar path = require('./path');\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\nfunction Glyph(options) {\n    this.font = options.font || null;\n    this.index = options.index || 0;\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n    this.xMin = options.xMin || 0;\n    this.yMin = options.yMin || 0;\n    this.xMax = options.xMax || 0;\n    this.yMax = options.yMax || 0;\n    this.advanceWidth = options.advanceWidth || 0;\n    this.path = options.path || null;\n}\n\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n// Convert the glyph to a Path we can draw on a drawing context.\n//\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.getPath = function(x, y, fontSize) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n    var p = new path.Path();\n    var commands = this.path.commands;\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                               x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                      x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n                      x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n// Split the glyph into contours.\n// This function is here for backwards compatibility, and to\n// provide raw access to the TrueType glyph outlines.\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < this.points.length; i += 1) {\n        var pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n// Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\nGlyph.prototype.getMetrics = function() {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: 0\n    };\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// Draw the glyph on the given context.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.draw = function(ctx, x, y, fontSize) {\n    this.getPath(x, y, fontSize).draw(ctx);\n};\n\n// Draw the points of the glyph.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n\n    function drawCircles(l, x, y, scale) {\n        var PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (var j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n\n    var blueCircles = [];\n    var redCircles = [];\n    var path = this.path;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n// Draw lines indicating important font measurements.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    var scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (this.xMin * scale), -10000, x + (this.xMin * scale), 10000);\n    draw.line(ctx, x + (this.xMax * scale), -10000, x + (this.xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-this.yMin * scale), 10000, y + (-this.yMin * scale));\n    draw.line(ctx, -10000, y + (-this.yMax * scale), 10000, y + (-this.yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (this.advanceWidth * scale), -10000, x + (this.advanceWidth * scale), 10000);\n};\n\nexports.Glyph = Glyph;\n\n},{\"./check\":1,\"./draw\":2,\"./path\":8}],6:[function(require,module,exports){\n// opentype.js\n// https://github.com/nodebox/opentype.js\n// (c) 2014 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global ArrayBuffer, DataView, Uint8Array, XMLHttpRequest  */\n\n'use strict';\n\nvar encoding = require('./encoding');\nvar _font = require('./font');\nvar glyph = require('./glyph');\nvar parse = require('./parse');\nvar path = require('./path');\n\nvar cmap = require('./tables/cmap');\nvar cff = require('./tables/cff');\nvar glyf = require('./tables/glyf');\nvar gpos = require('./tables/gpos');\nvar head = require('./tables/head');\nvar hhea = require('./tables/hhea');\nvar hmtx = require('./tables/hmtx');\nvar kern = require('./tables/kern');\nvar loca = require('./tables/loca');\nvar maxp = require('./tables/maxp');\nvar _name = require('./tables/name');\nvar os2 = require('./tables/os2');\nvar post = require('./tables/post');\n\n// File loaders /////////////////////////////////////////////////////////\n\n// Convert a Node.js Buffer to an ArrayBuffer\nfunction toArrayBuffer(buffer) {\n    var arrayBuffer = new ArrayBuffer(buffer.length);\n    var data = new Uint8Array(arrayBuffer);\n    for (var i = 0; i < buffer.length; i += 1) {\n        data[i] = buffer[i];\n    }\n\n    return arrayBuffer;\n}\n\nfunction loadFromFile(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, toArrayBuffer(buffer));\n    });\n}\n\nfunction loadFromUrl(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.status !== 200) {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n\n        return callback(null, request.response);\n    };\n\n    request.send();\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n// Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n// If the file could not be parsed (most likely because it contains Postscript outlines)\n// we return an empty Font object with the `supported` flag set to `false`.\nfunction parseBuffer(buffer) {\n    var indexToLocFormat;\n    var hmtxOffset;\n    var glyfOffset;\n    var locaOffset;\n    var cffOffset;\n    var kernOffset;\n    var gposOffset;\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n\n    var font = new _font.Font();\n    var data = new DataView(buffer, 0);\n\n    var version = parse.getFixed(data, 0);\n    if (version === 1.0) {\n        font.outlinesFormat = 'truetype';\n    } else {\n        version = parse.getTag(data, 0);\n        if (version === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType version ' + version);\n        }\n    }\n\n    var numTables = parse.getUShort(data, 4);\n\n    // Offset into the table records.\n    var p = 12;\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var offset = parse.getULong(data, p + 8);\n        switch (tag) {\n        case 'cmap':\n            font.tables.cmap = cmap.parse(data, offset);\n            font.encoding = new encoding.CmapEncoding(font.tables.cmap);\n            if (!font.encoding) {\n                font.supported = false;\n            }\n\n            break;\n        case 'head':\n            font.tables.head = head.parse(data, offset);\n            font.unitsPerEm = font.tables.head.unitsPerEm;\n            indexToLocFormat = font.tables.head.indexToLocFormat;\n            break;\n        case 'hhea':\n            font.tables.hhea = hhea.parse(data, offset);\n            font.ascender = font.tables.hhea.ascender;\n            font.descender = font.tables.hhea.descender;\n            font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n            break;\n        case 'hmtx':\n            hmtxOffset = offset;\n            break;\n        case 'maxp':\n            font.tables.maxp = maxp.parse(data, offset);\n            font.numGlyphs = font.tables.maxp.numGlyphs;\n            break;\n        case 'name':\n            font.tables.name = _name.parse(data, offset);\n            font.familyName = font.tables.name.fontFamily;\n            font.styleName = font.tables.name.fontSubfamily;\n            break;\n        case 'OS/2':\n            font.tables.os2 = os2.parse(data, offset);\n            break;\n        case 'post':\n            font.tables.post = post.parse(data, offset);\n            font.glyphNames = new encoding.GlyphNames(font.tables.post);\n            break;\n        case 'glyf':\n            glyfOffset = offset;\n            break;\n        case 'loca':\n            locaOffset = offset;\n            break;\n        case 'CFF ':\n            cffOffset = offset;\n            break;\n        case 'kern':\n            kernOffset = offset;\n            break;\n        case 'GPOS':\n            gposOffset = offset;\n            break;\n        }\n        p += 16;\n    }\n\n    if (glyfOffset && locaOffset) {\n        var shortVersion = indexToLocFormat === 0;\n        var locaTable = loca.parse(data, locaOffset, font.numGlyphs, shortVersion);\n        font.glyphs = glyf.parse(data, glyfOffset, locaTable, font);\n        hmtx.parse(data, hmtxOffset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n        encoding.addGlyphNames(font);\n    } else if (cffOffset) {\n        cff.parse(data, cffOffset, font);\n        encoding.addGlyphNames(font);\n    } else {\n        font.supported = false;\n    }\n\n    if (font.supported) {\n        if (kernOffset) {\n            font.kerningPairs = kern.parse(data, kernOffset);\n        } else {\n            font.kerningPairs = {};\n        }\n\n        if (gposOffset) {\n            gpos.parse(data, gposOffset, font);\n        }\n    }\n\n    return font;\n}\n\n// Asynchronously load the font from a URL or a filesystem. When done, call the callback\n// with two arguments `(err, font)`. The `err` will be null on success,\n// the `font` is a Font object.\n//\n// We use the node.js callback convention so that\n// opentype.js can integrate with frameworks like async.js.\nfunction load(url, callback) {\n    var isNode = typeof window === 'undefined';\n    var loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function(err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n\n        var font = parseBuffer(arrayBuffer);\n        if (!font.supported) {\n            return callback('Font is not supported (is this a Postscript font?)');\n        }\n\n        return callback(null, font);\n    });\n}\n\nexports._parse = parse;\nexports.Font = _font.Font;\nexports.Glyph = glyph.Glyph;\nexports.Path = path.Path;\nexports.parse = parseBuffer;\nexports.load = load;\n\n},{\"./encoding\":3,\"./font\":4,\"./glyph\":5,\"./parse\":7,\"./path\":8,\"./tables/cff\":10,\"./tables/cmap\":11,\"./tables/glyf\":12,\"./tables/gpos\":13,\"./tables/head\":14,\"./tables/hhea\":15,\"./tables/hmtx\":16,\"./tables/kern\":17,\"./tables/loca\":18,\"./tables/maxp\":19,\"./tables/name\":20,\"./tables/os2\":21,\"./tables/post\":22,\"fs\":undefined}],7:[function(require,module,exports){\n// Parsing utility functions\n\n'use strict';\n\n// Retrieve an unsigned byte from the DataView.\nexports.getByte = function getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n};\n\nexports.getCard8 = exports.getByte;\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getUShort = function(dataView, offset) {\n    return dataView.getUint16(offset, false);\n};\n\nexports.getCard16 = exports.getUShort;\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getShort = function(dataView, offset) {\n    return dataView.getInt16(offset, false);\n};\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nexports.getULong = function(dataView, offset) {\n    return dataView.getUint32(offset, false);\n};\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nexports.getFixed = function(dataView, offset) {\n    var decimal = dataView.getInt16(offset, false);\n    var fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n};\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nexports.getTag = function(dataView, offset) {\n    var tag = '';\n    for (var i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n};\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nexports.getOffset = function(dataView, offset, offSize) {\n    var v = 0;\n    for (var i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n};\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nexports.getBytes = function(dataView, startOffset, endOffset) {\n    var bytes = [];\n    for (var i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n};\n\n// Convert the list of bytes to a string.\nexports.bytesToString = function(bytes) {\n    var s = '';\n    for (var i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n};\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    var offsets = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = exports.getUShort(dataView, offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\nParser.prototype.parseString = function(length) {\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    var string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\nParser.prototype.parseLongDateTime = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v / 65536;\n};\n\nParser.prototype.parseVersion = function() {\n    var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // This returns the correct number if minor = 0xN000 where N is 0-9\n    var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    return major + minor / 0x1000 / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\nexports.Parser = Parser;\n\n},{}],8:[function(require,module,exports){\n// Geometric objects\n\n'use strict';\n\n// A bézier path containing a set of path commands similar to a SVG path.\n// Paths can be drawn on a context using `draw`.\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n// Add the given path or list of commands to the commands of this path.\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n// Draw the path to a 2D context.\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n// Convert the Path to a string of path data instructions\n// See http://www.w3.org/TR/SVG/paths.html#PathData\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n// Convert the path to a SVG <path> element, as a string.\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toSVG = function(decimalPlaces) {\n    var svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill & this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\nexports.Path = Path;\n\n},{}],9:[function(require,module,exports){\n// Table metadata\n\n'use strict';\n\nvar check = require('./check');\nvar encode = require('./types').encode;\nvar sizeOf = require('./types').sizeOf;\n\nfunction Table(tableName, fields, options) {\n    var i;\n    for (i = 0; i < fields.length; i += 1) {\n        var field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        var optionKeys = Object.keys(options);\n        for (i = 0; i < optionKeys.length; i += 1) {\n            var k = optionKeys[i];\n            var v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\nTable.prototype.sizeOf = function() {\n    var v = 0;\n    for (var i = 0; i < this.fields.length; i += 1) {\n        var field = this.fields[i];\n        var value = this[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        if (typeof value.sizeOf === 'function') {\n            v += value.sizeOf();\n        } else {\n            var sizeOfFunction = sizeOf[field.type];\n            check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n            v += sizeOfFunction(value);\n        }\n    }\n\n    return v;\n};\n\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\nexports.Table = Table;\n\n},{\"./check\":1,\"./types\":24}],10:[function(require,module,exports){\n// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\nvar table = require('../table');\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (var i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    //var i, objectOffset, endOffset;\n    var offsets = [];\n    var objects = [];\n    var count = parse.getCard16(data, start);\n    var i;\n    var objectOffset;\n    var endOffset;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        var pos = start + 3;\n        for (i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (i = 0; i < offsets.length - 1; i += 1) {\n        var value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s = '';\n    var eof = 15;\n    var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        var b = parser.parseByte();\n        var n1 = b >> 4;\n        var n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1;\n    var b2;\n    var b3;\n    var b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o = {};\n    for (var i = 0; i < entries.length; i += 1) {\n        var key = entries[i][0];\n        var values = entries[i][1];\n        var value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key)) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    var parser = new parse.Parser(data, start);\n    var entries = [];\n    var operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        var op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = encoding.cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var newDict = {};\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (var i = 0; i < meta.length; i += 1) {\n        var m = meta[i];\n        var value = dict[m.op];\n        if (value === undefined) {\n            value = m.value !== undefined ? m.value : null;\n        }\n\n        if (m.type === 'SID') {\n            value = getCFFString(strings, value);\n        }\n\n        newDict[m.name] = value;\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n];\n\nvar PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var i;\n    var sid;\n    var count;\n    var parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    var charset = ['.notdef'];\n\n    var format = parser.parseCard8();\n    if (format === 0) {\n        for (i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var i;\n    var code;\n    var enc = {};\n    var parser = new parse.Parser(data, start);\n    var format = parser.parseCard8();\n    if (format === 0) {\n        var nCodes = parser.parseCard8();\n        for (i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        var nRanges = parser.parseCard8();\n        code = 1;\n        for (i = 0; i < nRanges; i += 1) {\n            var first = parser.parseCard8();\n            var nLeft = parser.parseCard8();\n            for (var j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new encoding.CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(code, font, index) {\n    var c1x;\n    var c1y;\n    var c2x;\n    var c2y;\n    var p = new path.Path();\n    var stack = [];\n    var nStems = 0;\n    var haveWidth = false;\n    var width = font.defaultWidthX;\n    var open = false;\n    var x = 0;\n    var y = 0;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + font.nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var b1;\n        var b2;\n        var b3;\n        var b4;\n        var codeIndex;\n        var subrCode;\n        var jpx;\n        var jpy;\n        var c3x;\n        var c3y;\n        var c4x;\n        var c4y;\n\n        var i = 0;\n        while (i < code.length) {\n            var v = code[i];\n            i += 1;\n            switch (v) {\n            case 1: // hstem\n                parseStems();\n                break;\n            case 3: // vstem\n                parseStems();\n                break;\n            case 4: // vmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                newContour(x, y);\n                break;\n            case 5: // rlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 6: // hlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 7: // vlineto\n                while (stack.length > 0) {\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 8: // rrcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 10: // callsubr\n                codeIndex = stack.pop() + font.subrsBias;\n                subrCode = font.subrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 11: // return\n                return;\n            case 12: // flex operators\n                v = code[i];\n                i += 1;\n                switch (v) {\n                case 35: // flex\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    y = c4y + stack.shift();      // dy6\n                    stack.shift();                // flex depth\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 34: // hflex\n                    // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y;                      // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = y;                      // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 36: // hflex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 37: // flex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                        x = c4x + stack.shift();\n                    } else {\n                        y = c4y + stack.shift();\n                    }\n\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                default:\n                    console.log('Glyph ' + index + ': unknown operator ' + 1200 + v);\n                    stack.length = 0;\n                }\n                break;\n            case 14: // endchar\n                if (stack.length > 0 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                if (open) {\n                    p.closePath();\n                    open = false;\n                }\n\n                break;\n            case 18: // hstemhm\n                parseStems();\n                break;\n            case 19: // hintmask\n            case 20: // cntrmask\n                parseStems();\n                i += (nStems + 7) >> 3;\n                break;\n            case 21: // rmoveto\n                if (stack.length > 2 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 22: // hmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 23: // vstemhm\n                parseStems();\n                break;\n            case 24: // rcurveline\n                while (stack.length > 2) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                x += stack.shift();\n                y += stack.shift();\n                p.lineTo(x, y);\n                break;\n            case 25: // rlinecurve\n                while (stack.length > 6) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                break;\n            case 26: // vvcurveto\n                if (stack.length % 2) {\n                    x += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x;\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 27: // hhcurveto\n                if (stack.length % 2) {\n                    y += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y;\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 28: // shortint\n                b1 = code[i];\n                b2 = code[i + 1];\n                stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                i += 2;\n                break;\n            case 29: // callgsubr\n                codeIndex = stack.pop() + font.gsubrsBias;\n                subrCode = font.gsubrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 30: // vhcurveto\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 31: // hvcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            default:\n                if (v < 32) {\n                    console.log('Glyph ' + index + ': unknown operator ' + v);\n                } else if (v < 247) {\n                    stack.push(v - 139);\n                } else if (v < 251) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push((v - 247) * 256 + b1 + 108);\n                } else if (v < 255) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push(-(v - 251) * 256 - b1 - 108);\n                } else {\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    b3 = code[i + 2];\n                    b4 = code[i + 3];\n                    i += 4;\n                    stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                }\n            }\n        }\n    }\n\n    parse(code);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.path = p;\n    glyph.advanceWidth = width;\n    return glyph;\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    font.tables.cff = {};\n    var header = parseCFFHeader(data, start);\n    var nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    var stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n    var topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n    font.tables.cff.topDict = topDict;\n\n    var privateDictOffset = start + topDict['private'][1];\n    var privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        var subrOffset = privateDictOffset + privateDict.subrs;\n        var subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    var charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    var charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) { // Standard encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) { // Expert encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = [];\n    for (var i = 0; i < font.nGlyphs; i += 1) {\n        var charString = charStringsIndex.objects[i];\n        font.glyphs.push(parseCFFCharstring(charString, font, i));\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    var sid;\n\n    // Is the string in the CFF standard strings?\n    var i = encoding.cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + encoding.cffStandardStrings.length;\n    } else {\n        sid = encoding.cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Table('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    var t = new table.Table('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (var i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    var m = {};\n    for (var i = 0; i < meta.length; i += 1) {\n        var entry = meta[i];\n        var value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    var t = new table.Table('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    var t = new table.Table('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    var t = new table.Table('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (var i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Table('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    var t = new table.Table('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (var i = 0; i < glyphNames.length; i += 1) {\n        var glyphName = glyphNames[i];\n        var glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    var ops = [];\n    var path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    var x = 0;\n    var y = 0;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var dx;\n        var dy;\n        var cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            var _13 = 1 / 3;\n            var _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            var dx1 = Math.round(cmd.x1 - x);\n            var dy1 = Math.round(cmd.y1 - y);\n            var dx2 = Math.round(cmd.x2 - cmd.x1);\n            var dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    var t = new table.Table('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    var t = new table.Table('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makePrivateDictIndex(privateDict) {\n    var t = new table.Table('Private DICT INDEX', [\n        {name: 'privateDicts', type: 'INDEX', value: []}\n    ]);\n    t.privateDicts = [{name: 'privateDict_0', type: 'TABLE', value: privateDict}];\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    var t = new table.Table('CFF ', [\n        {name: 'header', type: 'TABLE'},\n        {name: 'nameIndex', type: 'TABLE'},\n        {name: 'topDictIndex', type: 'TABLE'},\n        {name: 'stringIndex', type: 'TABLE'},\n        {name: 'globalSubrIndex', type: 'TABLE'},\n        {name: 'charsets', type: 'TABLE'},\n        {name: 'charStringsIndex', type: 'TABLE'},\n        {name: 'privateDictIndex', type: 'TABLE'}\n    ]);\n\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    var attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    var privateAttrs = {};\n\n    var glyphNames = [];\n\n    // Skip first glyph (.notdef)\n    for (var i = 1; i < glyphs.length; i += 1) {\n        glyphNames.push(glyphs[i].name);\n    }\n\n    var strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    var topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    var privateDict = makePrivateDict(privateAttrs, strings);\n    t.privateDictIndex = makePrivateDictIndex(privateDict);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    var startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexports.parse = parseCFFTable;\nexports.make = makeCFFTable;\n\n},{\"../encoding\":3,\"../glyph\":5,\"../parse\":7,\"../path\":8,\"../table\":9}],11:[function(require,module,exports){\n// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var i;\n    var cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 3\" table. This is a Windows format.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    var offset = -1;\n    for (i = 0; i < cmap.numTables; i += 1) {\n        var platformId = parse.getUShort(data, start + 4 + (i * 8));\n        var encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support, so return null.\n        // This font will be marked as unsupported.\n        return null;\n    }\n\n    var p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n    check.argument(cmap.format === 4, 'Only format 4 cmap tables are supported.');\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    var segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n\n    var endCountParser = new parse.Parser(data, start + offset + 14);\n    var startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    var idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    var idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    var glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (i = 0; i < segCount - 1; i += 1) {\n        var glyphIndex;\n        var endCount = endCountParser.parseUShort();\n        var startCount = startCountParser.parseUShort();\n        var idDelta = idDeltaParser.parseShort();\n        var idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (var c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\nfunction makeCmapTable(glyphs) {\n    var i;\n    var t = new table.Table('cmap', [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: 1},\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: 12},\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        for (var j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function(a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    var segCount;\n    segCount = t.segments.length;\n    t.segCountX2 = segCount * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    // Set up parallel segment arrays.\n    var endCounts = [];\n    var startCounts = [];\n    var idDeltas = [];\n    var idRangeOffsets = [];\n    var glyphIds = [];\n\n    for (i = 0; i < segCount; i += 1) {\n        var segment = t.segments[i];\n        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n        if (segment.glyphId !== undefined) {\n            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n        }\n    }\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    return t;\n}\n\nexports.parse = parseCmapTable;\nexports.make = makeCmapTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],12:[function(require,module,exports){\n// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\n'use strict';\n\nvar check = require('../check');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(data, start, index, font) {\n    //var p, glyph, flag, i, j, flags,\n    //    endPointIndices, numberOfCoordinates, repeatCount, points, point, px, py,\n    //    component, moreComponents;\n    var p = new parse.Parser(data, start);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.numberOfContours = p.parseShort();\n    glyph.xMin = p.parseShort();\n    glyph.yMin = p.parseShort();\n    glyph.xMax = p.parseShort();\n    glyph.yMax = p.parseShort();\n    var flags;\n    var flag;\n    if (glyph.numberOfContours > 0) {\n        var i;\n        // This glyph is not a composite.\n        var endPointIndices = glyph.endPointIndices = [];\n        for (i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                var repeatCount = p.parseByte();\n                for (var j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            var points = [];\n            var point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                var px = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                var py = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        var moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            var component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                component.dx = p.parseShort();\n                component.dy = p.parseShort();\n            } else {\n                // The arguments are bytes\n                component.dx = p.parseChar();\n                component.dy = p.parseChar();\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n    }\n\n    return glyph;\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        var newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p = new path.Path();\n    if (!points) {\n        return p;\n    }\n\n    var contours = getContours(points);\n    for (var i = 0; i < contours.length; i += 1) {\n        var contour = contours[i];\n        var firstPt = contour[0];\n        var lastPt = contour[contour.length - 1];\n        var curvePt;\n        var realFirstPoint;\n        if (firstPt.onCurve) {\n            curvePt = null;\n            // The first point will be consumed by the moveTo command,\n            // so skip it in the loop.\n            realFirstPoint = true;\n        } else {\n            if (lastPt.onCurve) {\n                // If the first point is off-curve and the last point is on-curve,\n                // start at the last point.\n                firstPt = lastPt;\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n            }\n\n            curvePt = firstPt;\n            // The first point is synthesized, so don't skip the real first point.\n            realFirstPoint = false;\n        }\n\n        p.moveTo(firstPt.x, firstPt.y);\n\n        for (var j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n            var pt = contour[j];\n            var prevPt = j === 0 ? firstPt : contour[j - 1];\n            if (prevPt.onCurve && pt.onCurve) {\n                // This is a straight line.\n                p.lineTo(pt.x, pt.y);\n            } else if (prevPt.onCurve && !pt.onCurve) {\n                curvePt = pt;\n            } else if (!prevPt.onCurve && !pt.onCurve) {\n                var midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n                p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n                curvePt = pt;\n            } else if (!prevPt.onCurve && pt.onCurve) {\n                // Previous point off-curve, this point on-curve.\n                p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                curvePt = null;\n            } else {\n                throw new Error('Invalid state.');\n            }\n        }\n\n        if (firstPt !== lastPt) {\n            // Connect the last and first points\n            if (curvePt) {\n                p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            } else {\n                p.lineTo(firstPt.x, firstPt.y);\n            }\n        }\n    }\n\n    p.closePath();\n    return p;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    var glyphs = [];\n    var i;\n    // The last element of the loca table is invalid.\n    for (i = 0; i < loca.length - 1; i += 1) {\n        var offset = loca[i];\n        var nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(parseGlyph(data, start + offset, i, font));\n        } else {\n            glyphs.push(new _glyph.Glyph({font: font, index: i}));\n        }\n    }\n    // Go over the glyphs again, resolving the composite glyphs.\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        if (glyph.isComposite) {\n            for (var j = 0; j < glyph.components.length; j += 1) {\n                var component = glyph.components[j];\n                var componentGlyph = glyphs[component.glyphIndex];\n                if (componentGlyph.points) {\n                    var transformedPoints = transformPoints(componentGlyph.points, component);\n                    glyph.points = glyph.points.concat(transformedPoints);\n                }\n            }\n        }\n\n        glyph.path = getPath(glyph.points);\n    }\n\n    return glyphs;\n}\n\nexports.parse = parseGlyfTable;\n\n},{\"../check\":1,\"../glyph\":5,\"../parse\":7,\"../path\":8}],13:[function(require,module,exports){\n// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n// These lists are unused by now, this function is just the basis for a real parsing.\nfunction parseTaggedListTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var n = p.parseUShort();\n    var list = [];\n    for (var i = 0; i < n; i++) {\n        list[p.parseTag()] = { offset: p.parseUShort() };\n    }\n\n    return list;\n}\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// Format 1 is a simple list of glyph ids,\n// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\nfunction parseCoverageTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    var count =  p.parseUShort();\n    if (format === 1) {\n        return p.parseUShortList(count);\n    }\n    else if (format === 2) {\n        var coverage = [];\n        for (; count--;) {\n            var begin = p.parseUShort();\n            var end = p.parseUShort();\n            var index = p.parseUShort();\n            for (var i = begin; i <= end; i++) {\n                coverage[index++] = i;\n            }\n        }\n\n        return coverage;\n    }\n}\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// Returns a function that gets a class value from a glyph ID.\nfunction parseClassDefTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    if (format === 1) {\n        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n        var startGlyph = p.parseUShort();\n        var glyphCount = p.parseUShort();\n        var classes = p.parseUShortList(glyphCount);\n        return function(glyphID) {\n            return classes[glyphID - startGlyph] || 0;\n        };\n    }\n    else if (format === 2) {\n        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n        var rangeCount = p.parseUShort();\n        var startGlyphs = [];\n        var endGlyphs = [];\n        var classValues = [];\n        for (var i = 0; i < rangeCount; i++) {\n            startGlyphs[i] = p.parseUShort();\n            endGlyphs[i] = p.parseUShort();\n            classValues[i] = p.parseUShort();\n        }\n\n        return function(glyphID) {\n            var l = 0;\n            var r = startGlyphs.length - 1;\n            while (l < r) {\n                var c = (l + r + 1) >> 1;\n                if (glyphID < startGlyphs[c]) {\n                    r = c - 1;\n                } else {\n                    l = c;\n                }\n            }\n\n            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                return classValues[l] || 0;\n            }\n\n            return 0;\n        };\n    }\n}\n\n// Parse a pair adjustment positioning subtable, format 1 or format 2\n// The subtable is returned in the form of a lookup function.\nfunction parsePairPosSubTable(data, start) {\n    var p = new parse.Parser(data, start);\n    // This part is common to format 1 and format 2 subtables\n    var format = p.parseUShort();\n    var coverageOffset = p.parseUShort();\n    var coverage = parseCoverageTable(data, start + coverageOffset);\n    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n    // Only valueFormat1=4 and valueFormat2=0 is supported.\n    var valueFormat1 = p.parseUShort();\n    var valueFormat2 = p.parseUShort();\n    var value1;\n    var value2;\n    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n    var sharedPairSets = {};\n    if (format === 1) {\n        // Pair Positioning Adjustment: Format 1\n        var pairSetCount = p.parseUShort();\n        var pairSet = [];\n        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n        var pairSetOffsets = p.parseOffset16List(pairSetCount);\n        for (var firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n            var pairSetOffset = pairSetOffsets[firstGlyph];\n            var sharedPairSet = sharedPairSets[pairSetOffset];\n            if (!sharedPairSet) {\n                // Parse a pairset table in a pair adjustment subtable format 1\n                sharedPairSet = {};\n                p.relativeOffset = pairSetOffset;\n                var pairValueCount = p.parseUShort();\n                for (; pairValueCount--;) {\n                    var secondGlyph = p.parseUShort();\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) value2 = p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    sharedPairSet[secondGlyph] = value1;\n                }\n            }\n\n            pairSet[coverage[firstGlyph]] = sharedPairSet;\n        }\n\n        return function(leftGlyph, rightGlyph) {\n            var pairs = pairSet[leftGlyph];\n            if (pairs) return pairs[rightGlyph];\n        };\n    }\n    else if (format === 2) {\n        // Pair Positioning Adjustment: Format 2\n        var classDef1Offset = p.parseUShort();\n        var classDef2Offset = p.parseUShort();\n        var class1Count = p.parseUShort();\n        var class2Count = p.parseUShort();\n        var getClass1 = parseClassDefTable(data, start + classDef1Offset);\n        var getClass2 = parseClassDefTable(data, start + classDef2Offset);\n\n        // Parse kerning values by class pair.\n        var kerningMatrix = [];\n        for (var i = 0; i < class1Count; i++) {\n            var kerningRow = kerningMatrix[i] = [];\n            for (var j = 0; j < class2Count; j++) {\n                if (valueFormat1) value1 = p.parseShort();\n                if (valueFormat2) value2 = p.parseShort();\n                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                // so value1 is the XAdvance and value2 is empty.\n                kerningRow[j] = value1;\n            }\n        }\n\n        // Convert coverage list to a hash\n        var covered = {};\n        for (i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\n        // Get the kerning value for a specific glyph pair.\n        return function(leftGlyph, rightGlyph) {\n            if (!covered[leftGlyph]) return;\n            var class1 = getClass1(leftGlyph);\n            var class2 = getClass2(rightGlyph);\n            var kerningRow = kerningMatrix[class1];\n\n            if (kerningRow) {\n                return kerningRow[class2];\n            }\n        };\n    }\n}\n\n// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\nfunction parseLookupTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var lookupType = p.parseUShort();\n    var lookupFlag = p.parseUShort();\n    var useMarkFilteringSet = lookupFlag & 0x10;\n    var subTableCount = p.parseUShort();\n    var subTableOffsets = p.parseOffset16List(subTableCount);\n    var table = {\n        lookupType: lookupType,\n        lookupFlag: lookupFlag,\n        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n    };\n    // LookupType 2, Pair adjustment\n    if (lookupType === 2) {\n        var subtables = [];\n        for (var i = 0; i < subTableCount; i++) {\n            subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n        }\n        // Return a function which finds the kerning values in the subtables.\n        table.getKerningValue = function(leftGlyph, rightGlyph) {\n            for (var i = subtables.length; i--;) {\n                var value = subtables[i](leftGlyph, rightGlyph);\n                if (value !== undefined) return value;\n            }\n\n            return 0;\n        };\n    }\n\n    return table;\n}\n\n// Parse the `GPOS` table which contains, among other things, kerning pairs.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\nfunction parseGposTable(data, start, font) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseFixed();\n    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n    // ScriptList and FeatureList - ignored for now\n    parseTaggedListTable(data, start + p.parseUShort());\n    // 'kern' is the feature we are looking for.\n    parseTaggedListTable(data, start + p.parseUShort());\n\n    // LookupList\n    var lookupListOffset = p.parseUShort();\n    p.relativeOffset = lookupListOffset;\n    var lookupCount = p.parseUShort();\n    var lookupTableOffsets = p.parseOffset16List(lookupCount);\n    var lookupListAbsoluteOffset = start + lookupListOffset;\n    for (var i = 0; i < lookupCount; i++) {\n        var table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n    }\n}\n\nexports.parse = parseGposTable;\n\n},{\"../check\":1,\"../parse\":7}],14:[function(require,module,exports){\n// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {};\n    var p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();     // 50\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: 0},\n        {name: 'modified', type: 'LONGDATETIME', value: 0},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHeadTable;\nexports.make = makeHeadTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],15:[function(require,module,exports){\n// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {};\n    var p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHheaTable;\nexports.make = makeHheaTable;\n\n},{\"../parse\":7,\"../table\":9}],16:[function(require,module,exports){\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    var advanceWidth;\n    var leftSideBearing;\n    var p = new parse.Parser(data, start);\n    for (var i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        var glyph = glyphs[i];\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    var t = new table.Table('hmtx', []);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var advanceWidth = glyph.advanceWidth || 0;\n        var leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexports.parse = parseHmtxTable;\nexports.make = makeHmtxTable;\n\n},{\"../parse\":7,\"../table\":9}],17:[function(require,module,exports){\n// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var pairs = {};\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseUShort();\n    check.argument(tableVersion === 0, 'Unsupported kern table version.');\n    // Skip nTables.\n    p.skip('uShort', 1);\n    var subTableVersion = p.parseUShort();\n    check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subTableLength, subTableCoverage\n    p.skip('uShort', 2);\n    var nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (var i = 0; i < nPairs; i += 1) {\n        var leftIndex = p.parseUShort();\n        var rightIndex = p.parseUShort();\n        var value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n\n    return pairs;\n}\n\nexports.parse = parseKernTable;\n\n},{\"../check\":1,\"../parse\":7}],18:[function(require,module,exports){\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\n'use strict';\n\nvar parse = require('../parse');\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p = new parse.Parser(data, start);\n    var parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    var glyphOffsets = [];\n    for (var i = 0; i < numGlyphs + 1; i += 1) {\n        var glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexports.parse = parseLocaTable;\n\n},{\"../parse\":7}],19:[function(require,module,exports){\n// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {};\n    var p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexports.parse = parseMaxpTable;\nexports.make = makeMaxpTable;\n\n},{\"../parse\":7,\"../table\":9}],20:[function(require,module,exports){\n// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\n'use strict';\n\nvar encode = require('../types').encode;\nvar parse = require('../parse');\nvar table = require('../table');\n\n// NameIDs for the name table.\nvar nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'licence',                // 13\n    'licenceURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\n// Parse the naming `name` table\n// Only Windows Unicode English names are supported.\n// Format 1 additional fields are not supported\nfunction parseNameTable(data, start) {\n    var name = {};\n    var p = new parse.Parser(data, start);\n    name.format = p.parseUShort();\n    var count = p.parseUShort();\n    var stringOffset = p.offset + p.parseUShort();\n    var unknownCount = 0;\n    for (var i = 0; i < count; i++) {\n        var platformID = p.parseUShort();\n        var encodingID = p.parseUShort();\n        var languageID = p.parseUShort();\n        var nameID = p.parseUShort();\n        var property = nameTableNames[nameID];\n        var byteLength = p.parseUShort();\n        var offset = p.parseUShort();\n        // platformID - encodingID - languageID standard combinations :\n        // 1 - 0 - 0 : Macintosh, Roman, English\n        // 3 - 1 - 0x409 : Windows, Unicode BMP (UCS-2), en-US\n        if (platformID === 3 && encodingID === 1 && languageID === 0x409) {\n            var codePoints = [];\n            var length = byteLength / 2;\n            for (var j = 0; j < length; j++, offset += 2) {\n                codePoints[j] = parse.getShort(data, stringOffset + offset);\n            }\n\n            var str = String.fromCharCode.apply(null, codePoints);\n            if (property) {\n                name[property] = str;\n            }\n            else {\n                unknownCount++;\n                name['unknown' + unknownCount] = str;\n            }\n        }\n\n    }\n\n    if (name.format === 1) {\n        name.langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Table('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\nfunction addMacintoshNameRecord(t, recordID, s, offset) {\n    // Macintosh, Roman, English\n    var stringBytes = encode.STRING(s);\n    t.records.push(makeNameRecord(1, 0, 0, recordID, stringBytes.length, offset));\n    t.strings.push(stringBytes);\n    offset += stringBytes.length;\n    return offset;\n}\n\nfunction addWindowsNameRecord(t, recordID, s, offset) {\n    // Windows, Unicode BMP (UCS-2), US English\n    var utf16Bytes = encode.UTF16(s);\n    t.records.push(makeNameRecord(3, 1, 0x0409, recordID, utf16Bytes.length, offset));\n    t.strings.push(utf16Bytes);\n    offset += utf16Bytes.length;\n    return offset;\n}\n\nfunction makeNameTable(options) {\n    var t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: 0},\n        {name: 'stringOffset', type: 'USHORT', value: 0}\n    ]);\n    t.records = [];\n    t.strings = [];\n    var offset = 0;\n    var i;\n    var s;\n    // Add Macintosh records first\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addMacintoshNameRecord(t, i, s, offset);\n        }\n    }\n    // Then add Windows records\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addWindowsNameRecord(t, i, s, offset);\n        }\n    }\n\n    t.count = t.records.length;\n    t.stringOffset = 6 + t.count * 12;\n    for (i = 0; i < t.records.length; i += 1) {\n        t.fields.push({name: 'record_' + i, type: 'TABLE', value: t.records[i]});\n    }\n\n    for (i = 0; i < t.strings.length; i += 1) {\n        t.fields.push({name: 'string_' + i, type: 'LITERAL', value: t.strings[i]});\n    }\n\n    return t;\n}\n\nexports.parse = parseNameTable;\nexports.make = makeNameTable;\n\n},{\"../parse\":7,\"../table\":9,\"../types\":24}],21:[function(require,module,exports){\n// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\nvar unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (var i = 0; i < unicodeRanges.length; i += 1) {\n        var range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {};\n    var p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.unicodeRanges = unicodeRanges;\nexports.getUnicodeRange = getUnicodeRange;\nexports.parse = parseOS2Table;\nexports.make = makeOS2Table;\n\n},{\"../parse\":7,\"../table\":9}],22:[function(require,module,exports){\n// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {};\n    var p = new parse.Parser(data, start);\n    var i;\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n    case 1:\n        post.names = encoding.standardNames.slice();\n        break;\n    case 2:\n        post.numberOfGlyphs = p.parseUShort();\n        post.glyphNameIndex = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.glyphNameIndex[i] = p.parseUShort();\n        }\n\n        post.names = [];\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n                var nameLength = p.parseChar();\n                post.names.push(p.parseString(nameLength));\n            }\n        }\n\n        break;\n    case 2.5:\n        post.numberOfGlyphs = p.parseUShort();\n        post.offset = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.offset[i] = p.parseChar();\n        }\n\n        break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexports.parse = parsePostTable;\nexports.make = makePostTable;\n\n},{\"../encoding\":3,\"../parse\":7,\"../table\":9}],23:[function(require,module,exports){\n// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\n'use strict';\n\nvar check = require('../check');\nvar table = require('../table');\n\nvar cmap = require('./cmap');\nvar cff = require('./cff');\nvar head = require('./head');\nvar hhea = require('./hhea');\nvar hmtx = require('./hmtx');\nvar maxp = require('./maxp');\nvar _name = require('./name');\nvar os2 = require('./os2');\nvar post = require('./post');\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    var sum = 0;\n    for (var i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Table('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    var sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    var recordFields = [];\n    var tableFields = [];\n\n    var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (var i = 0; i < tables.length; i += 1) {\n        var t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        var tableLength = t.sizeOf();\n        var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (var i = 0; i < chars.length; i += 1) {\n        var glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            var glyph = font.glyphs[glyphIndex];\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    var sum = 0;\n    for (var i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    var xMins = [];\n    var yMins = [];\n    var xMaxs = [];\n    var yMaxs = [];\n    var advanceWidths = [];\n    var leftSideBearings = [];\n    var rightSideBearings = [];\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    for (var i = 0; i < font.glyphs.length; i += 1) {\n        var glyph = font.glyphs[i];\n        var unicode = glyph.unicode | 0;\n        if (firstCharIndex > unicode || firstCharIndex === null) {\n            firstCharIndex = unicode;\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        var position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        var metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    var globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n    globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\n    var headTable = head.make({\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax\n    });\n\n    var hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    var maxpTable = maxp.make(font.glyphs.length);\n\n    var os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: 500, // Medium FIXME Make this configurable\n        usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.ascender,\n        usWinDescent: -globals.descender,\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: 0}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n    var hmtxTable = hmtx.make(font.glyphs);\n    var cmapTable = cmap.make(font.glyphs);\n\n    var fullName = font.familyName + ' ' + font.styleName;\n    var postScriptName = font.familyName.replace(/\\s/g, '') + '-' + font.styleName;\n    var nameTable = _name.make({\n        copyright: font.copyright,\n        fontFamily: font.familyName,\n        fontSubfamily: font.styleName,\n        uniqueID: font.manufacturer + ':' + fullName,\n        fullName: fullName,\n        version: font.version,\n        postScriptName: postScriptName,\n        trademark: font.trademark,\n        manufacturer: font.manufacturer,\n        designer: font.designer,\n        description: font.description,\n        manufacturerURL: font.manufacturerURL,\n        designerURL: font.designerURL,\n        license: font.license,\n        licenseURL: font.licenseURL,\n        preferredFamily: font.familyName,\n        preferredSubfamily: font.styleName\n    });\n    var postTable = post.make();\n    var cffTable = cff.make(font.glyphs, {\n        version: font.version,\n        fullName: fullName,\n        familyName: font.familyName,\n        weightName: font.styleName,\n        postScriptName: postScriptName\n    });\n    // Order the tables according to the the OpenType specification 1.4.\n    var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n\n    var sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    var bytes = sfntTable.encode();\n    var checkSum = computeCheckSum(bytes);\n    var tableFields = sfntTable.fields;\n    var checkSumAdjusted = false;\n    for (i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexports.computeCheckSum = computeCheckSum;\nexports.make = makeSfntTable;\nexports.fontToTable = fontToSfntTable;\n\n},{\"../check\":1,\"../table\":9,\"./cff\":10,\"./cmap\":11,\"./head\":14,\"./hhea\":15,\"./hmtx\":16,\"./maxp\":19,\"./name\":20,\"./os2\":21,\"./post\":22}],24:[function(require,module,exports){\n// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = require('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\nvar decode = {};\nvar encode = {};\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n// Convert an 8-bit unsigned integer to a list of 1 byte.\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert a 8-bit signed integer to a list of 1 byte.\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert an ASCII string to a list of bytes.\nencode.CHARARRAY = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n// Convert a 16-bit unsigned integer to a list of 2 bytes.\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.USHORT = constant(2);\n\n// Convert a 16-bit signed integer to a list of 2 bytes.\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.SHORT = constant(2);\n\n// Convert a 24-bit unsigned integer to a list of 3 bytes.\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.UINT24 = constant(3);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.ULONG = constant(4);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n// FIXME Implement LONGDATETIME\nencode.LONGDATETIME = function() {\n    return [0, 0, 0, 0, 0, 0, 0, 0];\n};\n\nsizeOf.LONGDATETIME = constant(8);\n\n// Convert a 4-char tag to a list of 4 bytes.\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n// Convert a signed number between -32768 and +32767 to a three-byte value.\n// This ensures we always use three bytes, but is not the most compact format.\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER16 = constant(2);\n\n// Convert a signed number between -(2^31) and +(2^31-1) to a four-byte value.\n// This is useful if you want to be sure you always use four bytes,\n// at the expense of wasting a few bytes for smaller numbers.\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER32 = constant(4);\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n// Convert a ASCII string to a list of UTF16 bytes.\nencode.UTF16 = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(0);\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\nencode.INDEX = function(l) {\n    var i;\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    dataSize, i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    var offset = 1; // First offset is always 1.\n    var offsets = [offset];\n    var data = [];\n    var dataSize = 0;\n    for (i = 0; i < l.length; i += 1) {\n        var v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        dataSize += v.length;\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    var encodedOffsets = [];\n    var offSize = (1 + Math.floor(Math.log(dataSize) / Math.log(2)) / 8) | 0;\n    var offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        var encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n// Convert an object to a CFF DICT structure.\n// The keys should be numeric.\n// The values should be objects containing name / type / value.\nencode.DICT = function(m) {\n    var d = [];\n    var keys = Object.keys(m);\n    var length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\nencode.OPERAND = function(v, type) {\n    var d = [];\n    if (Array.isArray(type)) {\n        for (var i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else {\n            // FIXME Add support for booleans\n            d = d.concat(encode.NUMBER(v));\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n// Convert a list of CharString operations to bytes.\nencode.CHARSTRING = function(ops) {\n    if (wmm && wmm.has(ops)) {\n        return wmm.get(ops);\n    }\n\n    var d = [];\n    var length = ops.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n// Convert an object containing name / type / value to bytes.\nencode.OBJECT = function(v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n// Convert a table object to bytes.\n// A table contains a list of fields containing the metadata (name, type and default value).\n// The table itself has the field values set as attributes.\nencode.TABLE = function(table) {\n    var d = [];\n    var length = table.fields.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        var bytes = encodingFunction(value);\n        d = d.concat(bytes);\n    }\n\n    return d;\n};\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n\n},{\"./check\":1}]},{},[6])(6)\n});\n},{}],2:[function(require,module,exports){\n/*!\n * Paper.js v0.9.22 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Mon Mar 23 22:20:31 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\n\t\t  var noCanvas =\n\t\t\t  ( typeof process === 'object' && process.browser !== true ) ||\n\t\t\t  ( typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope );\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && (!exclude || !exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tctor.prototype = create(this.prototype);\n\t\t\tctor.base = base;\n\t\t\tdefine(ctor.prototype, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\treturn arguments.length ? this.inject.apply(ctor, arguments) : ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function() {\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\t\tif (arguments[i] !== undefined)\n\t\t\t\t\t\treturn arguments[i];\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar orig = props._filtering || props;\n\t\t\tfor (var key in orig) {\n\t\t\t\tif (orig.hasOwnProperty(key) && !(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tfunction checkKeys(o1, o2) {\n\t\t\t\tfor (var i in o1)\n\t\t\t\t\tif (o1.hasOwnProperty(i) && !o2.hasOwnProperty(i))\n\t\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\tif (obj1.length !== obj2.length)\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i = 0, l = obj1.length; i < l; i++) {\n\t\t\t\t\tif (!Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 && typeof obj1 === 'object'\n\t\t\t\t\t&& obj2 && typeof obj2 === 'object') {\n\t\t\t\tif (!checkKeys(obj1, obj2) || !checkKeys(obj2, obj1))\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i in obj1) {\n\t\t\t\t\tif (obj1.hasOwnProperty(i)\n\t\t\t\t\t\t\t&& !Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var i in obj)\n\t\t\t\t\tif (obj.hasOwnProperty(i))\n\t\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\t\tdictionary);\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (!isDictionary) {\n\t\t\t\t\tif (_data.dictionary && json.length == 1 && /^#/.test(type))\n\t\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\t\ttype = Base.exports[type];\n\t\t\t\t}\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data));\n\t\t\t\tif (isDictionary) {\n\t\t\t\t\t_data.dictionary = res[0];\n\t\t\t\t} else if (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar entry = this._eventTypes[type];\n\t\t\tif (entry) {\n\t\t\t\tvar handlers = this._callbacks = this._callbacks || {};\n\t\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\t\thandlers.push(func);\n\t\t\t\t\tif (entry.install && handlers.length == 1)\n\t\t\t\t\t\tentry.install.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar entry = this._eventTypes[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (entry && handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false\n\t\t\t\t\t&& event && event.stop) {\n\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar entry = this._eventTypes[type],\n\t\t\t\t\tfunc = entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif ( noCanvas ) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar browser = proto.browser = {};\n\t\t\tnavigator.userAgent.toLowerCase().replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: '0.9.22',\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tTOLERANCE = 1e-6,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\treturn {\n\t\tTOLERANCE: TOLERANCE,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn abs(val) <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= 2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar pow = Math.pow,\n\t\t\t\t\tgmC = pow(abs(a*b*c), 1/3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\t/*\n\t\t\t\t\t * we multiply with a factor to normalize the\n\t\t\t\t\t * coefficients. The factor is just the nearest exponent\n\t\t\t\t\t * of 10, big enough to raise all the coefficients to\n\t\t\t\t\t * nearly [-1, +1] range.\n\t\t\t\t\t */\n\t\t\t\t\tvar mult = pow(10, abs(\n\t\t\t\t\t\tMath.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < MACHINE_EPSILON) {\n\t\t\t\tif (abs(B) < MACHINE_EPSILON)\n\t\t\t\t\treturn abs(c) < MACHINE_EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else {\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tD = D < 0 ? 0 : D;\n\t\t\t\t\tvar R = sqrt(D);\n\t\t\t\t\tif (b >= MACHINE_EPSILON && b <= MACHINE_EPSILON) {\n\t\t\t\t\t\tx1 = abs(a) >= abs(c) ? R / a : -c / R;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar q = -(b + (b < 0 ? -1 : 1) * R);\n\t\t\t\t\t\tx1 = q / a;\n\t\t\t\t\t\tx2 = c / q;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 >= min && x1 <= max))\n\t\t\t\troots[count++] = x1;\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 >= min && x2 <= max))\n\t\t\t\troots[count++] = x2;\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar x, b1, c2, count = 0;\n\t\t\tif (a === 0) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (d === 0) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x >= min && x <= max))\n\t\t\t\troots[count++] = x;\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\ts = Math.sin(angle),\n\t\t\tc = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * c - point.y * s,\n\t\t\tpoint.x * s + point.y * c\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function(point, tolerance) {\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisColinear: function(point) {\n\t\treturn Math.abs(this.cross(point)) < 1e-12;\n\t},\n\n\tisOrthogonal: function(point) {\n\t\treturn Math.abs(this.dot(point)) < 1e-12;\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments);\n\t\tif (point.isZero()) {\n\t\t\treturn new Point(0, 0);\n\t\t} else {\n\t\t\tvar scale = this.dot(point) / point.dot(point);\n\t\t\treturn new Point(\n\t\t\t\tpoint.x * scale,\n\t\t\t\tpoint.y * scale\n\t\t\t);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n}, new function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = coords.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tstatics: {\n\t\tintersect: function(apx, apy, avx, avy, bpx, bpy, bvx, bvy, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tavx -= apx;\n\t\t\t\tavy -= apy;\n\t\t\t\tbvx -= bpx;\n\t\t\t\tbvy -= bpy;\n\t\t\t}\n\t\t\tvar cross = avx * bvy - avy * bvx;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = apx - bpx,\n\t\t\t\t\tdy = apy - bpy,\n\t\t\t\t\tta = (bvx * dy - bvy * dx) / cross,\n\t\t\t\t\ttb = (avx * dy - avy * dx) / cross;\n\t\t\t\tif (isInfinite || 0 <= ta && ta <= 1 && 0 <= tb && tb <= 1)\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\t\tapx + ta * avx,\n\t\t\t\t\t\t\t\tapy + ta * avy);\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0) {\n\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\tif (ccw > 0) {\n\t\t\t\t\tv2x -= vx;\n\t\t\t\t\tv2y -= vy;\n\t\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\t\tif (ccw < 0)\n\t\t\t\t\t\tccw = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn Numerical.isZero(vx)\n\t\t\t\t\t? vy >= 0 ? px - x : x - px\n\t\t\t\t\t: Numerical.isZero(vy)\n\t\t\t\t\t\t? vx >= 0 ? y - py : py - y\n\t\t\t\t\t\t: (vx * (y - py) - vy * (x - px)) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = Symbol._id = (Symbol._id || 0) + 1;\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = Item._id = (Item._id || 0) + 1;\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, parent: true }, true);\n\t\treturn hasProps;\n\t},\n\n\t_events: new function() {\n\n\t\tvar mouseFlags = {\n\t\t\tmousedown: {\n\t\t\t\tmousedown: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmouseup: {\n\t\t\t\tmouseup: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmousemove: {\n\t\t\t\tmousedrag: 1,\n\t\t\t\tmousemove: 1,\n\t\t\t\tmouseenter: 1,\n\t\t\t\tmouseleave: 1\n\t\t\t}\n\t\t};\n\n\t\tvar mouseEvent = {\n\t\t\tinstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tuninstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = mouseEvent;\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis._animateItem(true);\n\t\t\t\t\t},\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis._animateItem(false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {}\n\t\t\t}\n\t\t);\n\t},\n\n\t_animateItem: function(animate) {\n\t\tthis.getView()._animateItem(this, animate);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments);\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n\n\tgetRegistration: '#getPivot',\n\tsetRegistration: '#setPivot'\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tvar cacheParent = this._parent || this._parentSymbol;\n\t\tif (cacheParent) {\n\t\t\tvar id = cacheItem._id,\n\t\t\t\tref = cacheParent._boundsCache = cacheParent._boundsCache || {\n\t\t\t\t\tids: {},\n\t\t\t\t\tlist: []\n\t\t\t\t};\n\t\t\tif (!ref.ids[id]) {\n\t\t\t\tref.list.push(cacheItem);\n\t\t\t\tref.ids[id] = cacheItem;\n\t\t\t}\n\t\t}\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++) {\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function(matrix) {\n\t\tthis._matrix.initialize(matrix);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert) {\n\t\tcopy.setStyle(this._style);\n\t\tif (this._children) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tcopy.addChild(this._children[i].clone(false), true);\n\t\t}\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide', '_applyMatrix'];\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tcopy.setSelected(this._selected);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(),\n\t\t\t\t_matrix || item._matrix).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 0.000001)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tif (typeof name === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param) {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect =\tbounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: rect,\n\t\t\t\t\toverlapping: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param.items,\n\t\t\t\tinside = param.inside,\n\t\t\t\toverlapping = param.overlapping;\n\t\t\tmatrix = inside && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (inside) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!inside.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(inside && inside.contains(bounds)) && !(overlapping\n\t\t\t\t\t\t\t&& overlapping.intersects(child, childMatrix)))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2;\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t});\n\t\tpath.setStyle(this._style);\n\t\tpath.transform(this._matrix);\n\t\tif (insert || insert === undefined)\n\t\t\tpath.insertAbove(this);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rect' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\t\timage = document.getElementById(src) || new Image();\n\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, {\n\t\t\t\tload: loaded\n\t\t\t});\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL() : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif (arg0.point) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.isLinear() ? this._point\n\t\t\t\t: [this._point, this._handleIn, this._handleOut],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._handleIn.isZero() && this._handleOut.isZero();\n\t},\n\n\tsetLinear: function(linear) {\n\t\tif (linear) {\n\t\t\tthis._handleIn.set(0, 0);\n\t\t\tthis._handleOut.set(0, 0);\n\t\t} else {\n\t\t}\n\t},\n\n\tisColinear: function(segment) {\n\t\tvar next1 = this.getNext(),\n\t\t\tnext2 = segment.getNext();\n\t\treturn this._handleOut.isZero() && next1._handleIn.isZero()\n\t\t\t\t&& segment._handleOut.isZero() && next2._handleIn.isZero()\n\t\t\t\t&& next1._point.subtract(this._point).isColinear(\n\t\t\t\t\tnext2._point.subtract(segment._point));\n\t},\n\n\tisOrthogonal: function() {\n\t\tvar prev = this.getPrevious(),\n\t\t\tnext = this.getNext();\n\t\treturn prev._handleOut.isZero() && this._handleIn.isZero()\n\t\t\t&& this._handleOut.isZero() && next._handleIn.isZero()\n\t\t\t&& this._point.subtract(prev._point).isOrthogonal(\n\t\t\t\t\tnext._point.subtract(this._point));\n\t},\n\n\tisArc: function() {\n\t\tvar next = this.getNext(),\n\t\t\thandle1 = this._handleOut,\n\t\t\thandle2 = next._handleIn,\n\t\t\tkappa = 0.5522847498307936;\n\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\tvar from = this._point,\n\t\t\t\tto = next._point,\n\t\t\t\tcorner = new Line(from, handle1, true).intersect(\n\t\t\t\t\t\tnew Line(to, handle2, true), true);\n\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\tcorner.subtract(from).getLength() - kappa)\n\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\tcorner.subtract(to).getLength() - kappa);\n\t\t}\n\t\treturn false;\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\treverse: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(segment0, segment1, coef) {\n\t\tvar dxPoint = segment1._point._x - segment0._point._x,\n\t\t\tdyPoint = segment1._point._y - segment0._point._y,\n\t\t\tdxHandleIn = segment1._handleIn._x - segment0._handleIn._x,\n\t\t\tdyHandleIn = segment1._handleIn._y - segment0._handleIn._y,\n\t\t\tdxHandleOut = segment1._handleOut._x - segment0._handleOut._x,\n\t\t\tdyHandleOut = segment1._handleOut._y - segment0._handleOut._y;\n\n\t\tthis._point._x = segment0._point._x + dxPoint * coef;\n\t\tthis._point._y = segment0._point._y + dyPoint * coef;\n\t\tthis._handleIn._x = segment0._handleIn._x + dxHandleIn * coef;\n\t\tthis._handleIn._y = segment0._handleIn._y + dyHandleIn * coef;\n\t\tthis._handleOut._x = segment0._handleOut._x + dxHandleOut * coef;\n\t\tthis._handleOut._y = segment0._handleOut._y + dyHandleOut * coef;\n\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tthis._segment1 = arg1;\n\t\t\tthis._segment2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tthis._segment1 = new Segment();\n\t\t\tthis._segment2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tthis._segment1 = new Segment(arg0.segment1);\n\t\t\tthis._segment2 = new Segment(arg0.segment2);\n\t\t} else if (count === 2) {\n\t\t\tthis._segment1 = new Segment(arg0);\n\t\t\tthis._segment2 = new Segment(arg1);\n\t\t} else {\n\t\t\tvar point1, handle1, handle2, point2;\n\t\t\tif (count === 4) {\n\t\t\t\tpoint1 = arg0;\n\t\t\t\thandle1 = arg1;\n\t\t\t\thandle2 = arg2;\n\t\t\t\tpoint2 = arg3;\n\t\t\t} else if (count === 8) {\n\t\t\t\tpoint1 = [arg0, arg1];\n\t\t\t\tpoint2 = [arg6, arg7];\n\t\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t\t}\n\t\t\tthis._segment1 = new Segment(point1, null, handle1);\n\t\t\tthis._segment2 = new Segment(point2, handle2, null);\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tthis._length = this.isLinear()\n\t\t\t\t? this._segment2._point.getDistance(this._segment1._point)\n\t\t\t\t: Curve.getLength(this.getValues(), 0, 1);\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._segment1._handleOut.isZero()\n\t\t\t\t&& this._segment2._handleIn.isZero();\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve.filterIntersections(Curve.getIntersections(\n\t\t\t\tthis.getValues(), curve.getValues(), this, curve, []));\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, ignoreLinear) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttolerance = 0.000001,\n\t\t\tres = null;\n\t\tif (parameter > tolerance && parameter < 1 - tolerance) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tisLinear = ignoreLinear ? false : this.isLinear(),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1];\n\n\t\t\tif (!isLinear) {\n\t\t\t\tthis._segment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tthis._segment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\t!isLinear && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\t!isLinear && new Point(right[2] - x, right[3] - y));\n\n\t\t\tif (this._path) {\n\t\t\t\tif (this._segment1._index > 0 && this._segment2._index === 0) {\n\t\t\t\t\tthis._path.add(segment);\n\t\t\t\t} else {\n\t\t\t\t\tthis._path.insert(this._segment2._index, segment);\n\t\t\t\t}\n\t\t\t\tres = this;\n\t\t\t} else {\n\t\t\t\tvar end = this._segment2;\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, end);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treverse: function() {\n\t\treturn new Curve(this._segment2.reverse(), this._segment1.reverse());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tevaluate: function(v, t, type) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tolerance || t > 1 - tolerance)) {\n\t\t\tvar isZero = t < tolerance;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tolerance && c1x === p1x && c1y === p1y\n\t\t\t\t\t\t|| t > 1 - tolerance && c2x === p2x && c2y === p2y) {\n\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t} else if (t < tolerance) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > 1 - tolerance) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by;\n\t\t\t\t\treturn (x * y2 - y * x2) / Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b,\n\t\t\tisZero = Numerical.isZero;\n\t\tif (isZero(a) && isZero(b))\n\t\t\ta = b = 0;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, x, y) {\n\t\tvar tolerance = 0.000001;\n\t\tif (Math.abs(v[0] - x) < tolerance && Math.abs(v[1] - y) < tolerance)\n\t\t\treturn 0;\n\t\tif (Math.abs(v[6] - x) < tolerance && Math.abs(v[7] - y) < tolerance)\n\t\t\treturn 1;\n\t\tvar txs = [],\n\t\t\ttys = [],\n\t\t\tsx = Curve.solveCubic(v, 0, x, txs, 0, 1),\n\t\t\tsy = Curve.solveCubic(v, 1, y, tys, 0, 1),\n\t\t\ttx, ty;\n\t\tfor (var cx = 0;  sx == -1 || cx < sx;) {\n\t\t\tif (sx == -1 || (tx = txs[cx++]) >= 0 && tx <= 1) {\n\t\t\t\tfor (var cy = 0; sy == -1 || cy < sy;) {\n\t\t\t\t\tif (sy == -1 || (ty = tys[cy++]) >= 0 && ty <= 1) {\n\t\t\t\t\t\tif (sx == -1) tx = ty;\n\t\t\t\t\t\telse if (sy == -1) ty = tx;\n\t\t\t\t\t\tif (Math.abs(tx - ty) < tolerance)\n\t\t\t\t\t\t\treturn (tx + ty) * 0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sx == -1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn v;\n\t},\n\n\tisLinear: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]);\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn (  3.0 * c1y * p1x - 1.5 * c1y * c2x\n\t\t\t\t- 1.5 * c1y * p2x - 3.0 * p1y * c1x\n\t\t\t\t- 1.5 * p1y * c2x - 0.5 * p1y * p2x\n\t\t\t\t+ 1.5 * c2y * p1x + 1.5 * c2y * c1x\n\t\t\t\t- 3.0 * c2y * p2x + 0.5 * p2y * p1x\n\t\t\t\t+ 1.5 * p2y * c1x + 3.0 * p2y * c2x) / 10;\n\t},\n\n\tgetEdgeSum: function(v) {\n\t\treturn\t  (v[0] - v[2]) * (v[3] + v[1])\n\t\t\t\t+ (v[2] - v[4]) * (v[5] + v[3])\n\t\t\t\t+ (v[4] - v[6]) * (v[7] + v[5]);\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name]([this._segment1,\n\t\t\t\t\t\tthis._segment2], false, this._path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve.evaluate(values, isParameter\n\t\t\t\t\t? offset : Curve.getParameterAt(values, offset, 0), index);\n\t\t};\n\t\tthis[name] = function(parameter) {\n\t\t\treturn Curve.evaluate(this.getValues(), parameter, index);\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Curve.getParameterOf(this.getValues(), point.x, point.y);\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tif (!isParameter)\n\t\t\toffset = this.getParameterAt(offset);\n\t\treturn offset >= 0 && offset <= 1 && new CurveLocation(this, offset);\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tcount = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(\n\t\t\t\t\t\tCurve.evaluate(values, t, 0), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 0.000001) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\tvar pt = Curve.evaluate(values, minT, 0);\n\t\treturn new CurveLocation(this, minT, pt, null, null, null,\n\t\t\t\tpoint.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n}),\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\treturn {\n\t\tstatics: true,\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tvar isZero = Numerical.isZero;\n\t\t\tif (a === 0 && b === 1\n\t\t\t\t\t&& isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t\t&& isZero(v[6] - v[4]) && isZero(v[7] - v[5])) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar forward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (Math.abs(offset) >= rangeLength)\n\t\t\t\treturn forward ? b : a;\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 16,\n\t\t\t\t\t0.000001);\n\t\t}\n\t};\n}, new function() {\n\tfunction addLocation(locations, include, curve1, t1, point1, curve2, t2,\n\t\t\tpoint2) {\n\t\tvar loc = new CurveLocation(curve1, t1, point1, curve2, t2, point2);\n\t\tif (!include || include(loc))\n\t\t\tlocations.push(loc);\n\t}\n\n\tfunction addCurveIntersections(v1, v2, curve1, curve2, locations, include,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (recursion > 32)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]) || 0,\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]) || 0,\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\ttMinNew, tMaxNew, tDiff;\n\t\tif (q0x === q3x && uMax - uMin <= tolerance && recursion > 3) {\n\t\t\ttMaxNew = tMinNew = (tMax + tMin) / 2;\n\t\t\ttDiff = 0;\n\t\t} else {\n\t\t\tvar hull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\t\ttop = hull[0],\n\t\t\t\tbottom = hull[1],\n\t\t\t\ttMinClip, tMaxClip;\n\t\t\ttMinClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\ttop.reverse();\n\t\t\tbottom.reverse();\n\t\t\ttMaxClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\tif (tMinClip == null || tMaxClip == null)\n\t\t\t\treturn;\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\ttDiff = tMaxClip - tMinClip;\n\t\t\ttMinNew = tMax * tMinClip + tMin * (1 - tMinClip);\n\t\t\ttMaxNew = tMax * tMaxClip + tMin * (1 - tMaxClip);\n\t\t}\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, curve2, curve1, locations, include,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew) < tolerance) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tif (reverse) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0),\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0));\n\t\t\t} else {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t} else if (tDiff > 0) {\n\t\t\taddCurveIntersections(v2, v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\tdist1 = getSignedDistance(0, dq0, 1, dq3, 1 / 3, dq1),\n\t\t\tdist2 = getSignedDistance(0, dq0, 1, dq3, 2 / 3, dq2),\n\t\t\tflip = false,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t\tflip = dist1 < 0;\n\t\t} else {\n\t\t\tvar pmax, cross = 0,\n\t\t\t\tdistZero = dist1 === 0 || dist2 === 0;\n\t\t\tif (Math.abs(dist1) > Math.abs(dist2)) {\n\t\t\t\tpmax = p1;\n\t\t\t\tcross = (dq3 - dq2 - (dq3 - dq0) / 3)\n\t\t\t\t\t\t* (2 * (dq3 - dq2) - dq3 + dq1) / 3;\n\t\t\t} else {\n\t\t\t\tpmax = p2;\n\t\t\t\tcross = (dq1 - dq0 + (dq0 - dq3) / 3)\n\t\t\t\t\t\t* (-2 * (dq0 - dq1) + dq0 - dq2) / 3;\n\t\t\t}\n\t\t\thull = cross < 0 || distZero\n\t\t\t\t\t? [[p0, pmax, p3], [p0, p3]]\n\t\t\t\t\t: [[p0, p1, p2, p3], [p0, p3]];\n\t\t\tflip = dist1 ? dist1 < 0 : dist2 < 0;\n\t\t}\n\t\treturn flip ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold)\n\t\t\t\treturn px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, curve1, curve2, locations,\n\t\t\tinclude) {\n\t\tvar flip = Curve.isLinear(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trlx2 = ldx * cos - ldy * sin,\n\t\t\trvl = [0, 0, 0, 0, rlx2, 0, rlx2, 0],\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\ty * cos + x * sin);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tx = Curve.evaluate(rvc, tc, 0).x;\n\t\t\tif (x >= 0 && x <= rlx2) {\n\t\t\t\tvar tl = Curve.getParameterOf(rvl, x, 0),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, curve1, curve2, locations, include) {\n\t\tvar point = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (point) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tcurve1, Curve.getParameterOf(v1, x, y), point,\n\t\t\t\t\tcurve2, Curve.getParameterOf(v2, x, y), point);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\tgetIntersections: function(v1, v2, c1, c2, locations, include) {\n\t\t\tvar linear1 = Curve.isLinear(v1),\n\t\t\t\tlinear2 = Curve.isLinear(v2),\n\t\t\t\tc1p1 = c1.getPoint1(),\n\t\t\t\tc1p2 = c1.getPoint2(),\n\t\t\t\tc2p1 = c2.getPoint1(),\n\t\t\t\tc2p2 = c2.getPoint2(),\n\t\t\t\ttolerance = 0.000001;\n\t\t\tif (c1p1.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 0, c1p1);\n\t\t\tif (c1p1.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 1, c1p1);\n\t\t\t(linear1 && linear2\n\t\t\t\t? addLineIntersection\n\t\t\t\t: linear1 || linear2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, include,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (c1p2.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 0, c1p2);\n\t\t\tif (c1p2.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 1, c1p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\tfilterIntersections: function(locations, _expand) {\n\t\t\tvar last = locations.length - 1,\n\t\t\t\ttMax = 1 - 0.000001;\n\t\t\tfor (var i = last; i >= 0; i--) {\n\t\t\t\tvar loc = locations[i],\n\t\t\t\t\tnext = loc._curve.getNext(),\n\t\t\t\t\tnext2 = loc._curve2.getNext();\n\t\t\t\tif (next && loc._parameter >= tMax) {\n\t\t\t\t\tloc._parameter = 0;\n\t\t\t\t\tloc._curve = next;\n\t\t\t\t}\n\t\t\t\tif (next2 && loc._parameter2 >= tMax) {\n\t\t\t\t\tloc._parameter2 = 0;\n\t\t\t\t\tloc._curve2 = next2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction compare(loc1, loc2) {\n\t\t\t\tvar path1 = loc1.getPath(),\n\t\t\t\t\tpath2 = loc2.getPath();\n\t\t\t\treturn path1 === path2\n\t\t\t\t\t\t? (loc1.getIndex() + loc1.getParameter())\n\t\t\t\t\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t\t\t: path1._id - path2._id;\n\t\t\t}\n\n\t\t\tif (last > 0) {\n\t\t\t\tlocations.sort(compare);\n\t\t\t\tfor (var i = last; i > 0; i--) {\n\t\t\t\t\tif (locations[i].equals(locations[i - 1])) {\n\t\t\t\t\t\tlocations.splice(i, 1);\n\t\t\t\t\t\tlast--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_expand) {\n\t\t\t\tfor (var i = last; i >= 0; i--)\n\t\t\t\t\tlocations.push(locations[i].getIntersection());\n\t\t\t\tlocations.sort(compare);\n\t\t\t}\n\t\t\treturn locations;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point, _curve2,\n\t\t\t_parameter2, _point2, _distance) {\n\t\tthis._id = CurveLocation._id = (CurveLocation._id || 0) + 1;\n\t\tthis._curve = curve;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t\tthis._parameter = parameter;\n\t\tthis._point = point;\n\t\tthis._curve2 = _curve2;\n\t\tthis._parameter2 = _parameter2;\n\t\tthis._point2 = _point2;\n\t\tthis._distance = _distance;\n\t},\n\n\tgetSegment: function(_preferFirst) {\n\t\tif (!this._segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this.getParameter();\n\t\t\tif (parameter === 1) {\n\t\t\t\tthis._segment = curve._segment2;\n\t\t\t} else if (parameter === 0 || _preferFirst) {\n\t\t\t\tthis._segment = curve._segment1;\n\t\t\t} else if (parameter == null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis._segment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t}\n\t\treturn this._segment;\n\t},\n\n\tgetCurve: function(_uncached) {\n\t\tif (!this._curve || _uncached) {\n\t\t\tthis._curve = this._segment1.getCurve();\n\t\t\tif (this._curve.getParameterOf(this._point) == null)\n\t\t\t\tthis._curve = this._segment2.getPrevious().getCurve();\n\t\t}\n\t\treturn this._curve;\n\t},\n\n\tgetIntersection: function() {\n\t\tvar intersection = this._intersection;\n\t\tif (!intersection && this._curve2) {\n\t\t\tvar param = this._parameter2;\n\t\t\tthis._intersection = intersection = new CurveLocation(\n\t\t\t\t\tthis._curve2, param, this._point2 || this._point, this);\n\t\t\tintersection._intersection = this;\n\t\t}\n\t\treturn intersection;\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetOffset: function() {\n\t\tvar path = this.getPath();\n\t\treturn path ? path._getOffset(this) : this.getCurveOffset();\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetParameter: function(_uncached) {\n\t\tif ((this._parameter == null || _uncached) && this._point) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._parameter = curve && curve.getParameterOf(this._point);\n\t\t}\n\t\treturn this._parameter;\n\t},\n\n\tgetPoint: function(_uncached) {\n\t\tif ((!this._point || _uncached) && this._parameter != null) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._point = curve && curve.getPointAt(this._parameter, true);\n\t\t}\n\t\treturn this._point;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.divide(this.getParameter(true), true);\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.split(this.getParameter(true), true);\n\t},\n\n\tequals: function(loc) {\n\t\tvar abs = Math.abs,\n\t\t\ttolerance = 0.000001;\n\t\treturn this === loc\n\t\t\t\t|| loc\n\t\t\t\t\t&& this._curve === loc._curve\n\t\t\t\t\t&& this._curve2 === loc._curve2\n\t\t\t\t\t&& abs(this._parameter - loc._parameter) <= tolerance\n\t\t\t\t\t&& abs(this._parameter2 - loc._parameter2) <= tolerance\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t}\n}, Base.each(['getTangent', 'getNormal', 'getCurvature'], function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {}));\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, _matrix, _expand) {\n\t\tif (this === path)\n\t\t\tpath = null;\n\t\tvar locations = [],\n\t\t\tcurves1 = this.getCurves(),\n\t\t\tcurves2 = path ? path.getCurves() : curves1,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = path ? (_matrix || path._matrix).orNullIfIdentity()\n\t\t\t\t: matrix1,\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = path ? curves2.length : length1,\n\t\t\tvalues2 = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tif (path && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = path ? curve1.getValues(matrix1) : values2[i];\n\t\t\tif (!path) {\n\t\t\t\tvar seg1 = curve1.getSegment1(),\n\t\t\t\t\tseg2 = curve1.getSegment2(),\n\t\t\t\t\th1 = seg1._handleOut,\n\t\t\t\t\th2 = seg2._handleIn;\n\t\t\t\tif (new Line(seg1._point.subtract(h1), h1.multiply(2), true)\n\t\t\t\t\t\t.intersect(new Line(seg2._point.subtract(h2),\n\t\t\t\t\t\th2.multiply(2), true), false)) {\n\t\t\t\t\tvar parts = Curve.subdivide(values1);\n\t\t\t\t\tCurve.getIntersections(\n\t\t\t\t\t\tparts[0], parts[1], curve1, curve1, locations,\n\t\t\t\t\t\tfunction(loc) {\n\t\t\t\t\t\t\tif (loc._parameter <= tMax) {\n\t\t\t\t\t\t\t\tloc._parameter /= 2;\n\t\t\t\t\t\t\t\tloc._parameter2 = 0.5 + loc._parameter2 / 2;\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var j = path ? 0 : i + 1; j < length2; j++) {\n\t\t\t\tCurve.getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curves2[j], locations,\n\t\t\t\t\t!path && (j === i + 1 || j === length2 - 1 && i === 0)\n\t\t\t\t\t\t&& function(loc) {\n\t\t\t\t\t\t\tvar t = loc._parameter;\n\t\t\t\t\t\t\treturn t >= tMin && t <= tMax;\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Curve.filterIntersections(locations, _expand);\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tif (move && previous && previous !== 'z')\n\t\t\t\t\tthis.closePath(true);\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._clockwise = undefined;\n\t\t\tif (this._curves && !(flags & 16)) {\n\t\t\t\tfor (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t\tthis._monoCurves = undefined;\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\tisPolygon: function() {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif (!this._segments[i].isLinear())\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves || segs._curves) {\n\t\t\tif (!curves)\n\t\t\t\tcurves = this._curves = [];\n\t\t\tvar from = index > 0 ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, this._countCurves());\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves();\n\t\t\tthis._length = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tthis._length += curves[i].getLength();\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar curves = this.getCurves();\n\t\tvar area = 0;\n\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\tarea += curves[i].getArea();\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.evaluate(pos, 0)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (curve.isLinear() && curve.getLength() === 0)\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tolerance = 0.000001;\n\t\tif (parameter >= 1 - tolerance) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter > tolerance) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = this._clone(new Path().insertAbove(this, true));\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn Path.isClockwise(this._segments);\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path.closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\tinterpolate: function(path0, path1, coef) {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif ( !path0._segments[i] || !path1._segments[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._segments[i].interpolate(\n\t\t\t\tpath0._segments[i],\n\t\t\t\tpath1._segments[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\n\t\tthis._changed(9);\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isColinear(i, j) {\n\t\t\treturn segments[i].isColinear(segments[j]);\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\treturn segments[i].isOrthogonal();\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\treturn segments[i].isArc();\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (this.isPolygon() && segments.length === 4\n\t\t\t\t&& isColinear(0, 2) && isColinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isColinear(1, 5) && isColinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t});\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\tshape.setStyle(this._style);\n\t\t\tif (insert || insert === undefined)\n\t\t\t\tshape.insertAbove(this);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\t_getOffset: function(location) {\n\t\tvar index = location && location.getIndex();\n\t\tif (index != null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\toffset = 0;\n\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\toffset += curves[i].getLength();\n\t\t\tvar curve = curves[index],\n\t\t\t\tparameter = location.getParameter();\n\t\t\tif (parameter > 0)\n\t\t\t\toffset += curve.getPartLength(0, parameter);\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset;\n\t\t\treturn curves[index].getLocationAt(offset - index, true);\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}), new function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n}, new function() {\n\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n}, new function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < epsilon)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tisClockwise: function(segments) {\n\t\tvar sum = 0;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsum += Curve.getEdgeSum(Curve.getValues(\n\t\t\t\t\tsegments[i], segments[i + 1 < l ? i + 1 : 0]));\n\t\treturn sum > 0;\n\t},\n\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isColinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().normalize(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tif (this._children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t} else {\n\t\t\treturn reduce.base.call(this);\n\t\t}\n\t},\n\n\tinterpolate: function(compoundpath0, compoundpath1, coef) {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\tif ( !compoundpath0._children[i] || !compoundpath1._children[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._children[i].interpolate(\n\t\t\t\tcompoundpath0._children[i],\n\t\t\t\tcompoundpath1._children[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : mx, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n}, new function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current : new Path();\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tvar operator = operators[operation];\n\t\tfunction preparePath(path) {\n\t\t\treturn path.clone(false).reduce().reorient().transform(null, true,\n\t\t\t\t\ttrue);\n\t\t}\n\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tsplitPath(_path1.getIntersections(_path2, null, true));\n\n\t\tvar chain = [],\n\t\t\tsegments = [],\n\t\t\tmonoCurves = [],\n\t\t\ttolerance = 0.000001;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tsegments.sort(function(a, b) {\n\t\t\tvar _a = a._intersection,\n\t\t\t\t_b = b._intersection;\n\t\t\treturn !_a && !_b || _a && _b ? 0 : _a ? -1 : 1;\n\t\t});\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding != null)\n\t\t\t\tcontinue;\n\t\t\tchain.length = 0;\n\t\t\tvar startSeg = segment,\n\t\t\t\ttotalLength = 0,\n\t\t\t\twindingSum = 0;\n\t\t\tdo {\n\t\t\t\tvar length = segment.getCurve().getLength();\n\t\t\t\tchain.push({ segment: segment, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t\tsegment = segment.getNext();\n\t\t\t} while (segment && !segment._intersection && segment !== startSeg);\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar length = totalLength * (j + 1) / 4;\n\t\t\t\tfor (k = 0, m = chain.length; k < m; k++) {\n\t\t\t\t\tvar node = chain[k],\n\t\t\t\t\t\tcurveLength = node.length;\n\t\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\t\tif (length <= tolerance\n\t\t\t\t\t\t\t\t|| curveLength - length <= tolerance)\n\t\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\t\tvar curve = node.segment.getCurve(),\n\t\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\t\thor = curve.isLinear() && Math.abs(curve\n\t\t\t\t\t\t\t\t\t.getTangentAt(0.5, true).y) <= tolerance,\n\t\t\t\t\t\t\tpath = curve._path;\n\t\t\t\t\t\tif (path._parent instanceof CompoundPath)\n\t\t\t\t\t\t\tpath = path._parent;\n\t\t\t\t\t\twindingSum += operation === 'subtract' && _path2\n\t\t\t\t\t\t\t&& (path === _path1 && _path2._getWinding(pt, hor)\n\t\t\t\t\t\t\t|| path === _path2 && !_path1._getWinding(pt, hor))\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlength -= curveLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar winding = Math.round(windingSum / 3);\n\t\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.insertAbove(path1);\n\t\tresult.addChildren(tracePaths(segments, operator), true);\n\t\tresult = result.reduce();\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction splitPath(intersections) {\n\t\tvar tMin = 0.000001,\n\t\t\ttMax = 1 - tMin,\n\t\t\tlinearHandles;\n\n\t\tfunction resetLinear() {\n\t\t\tfor (var i = 0, l = linearHandles.length; i < l; i++)\n\t\t\t\tlinearHandles[i].set(0, 0);\n\t\t}\n\n\t\tfor (var i = intersections.length - 1, curve, prev; i >= 0; i--) {\n\t\t\tvar loc = intersections[i],\n\t\t\t\tt = loc._parameter;\n\t\t\tif (prev && prev._curve === loc._curve && prev._parameter > 0) {\n\t\t\t\tt /= prev._parameter;\n\t\t\t} else {\n\t\t\t\tcurve = loc._curve;\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tresetLinear();\n\t\t\t\tlinearHandles = curve.isLinear() ? [\n\t\t\t\t\t\tcurve._segment1._handleOut,\n\t\t\t\t\t\tcurve._segment2._handleIn\n\t\t\t\t\t] : null;\n\t\t\t}\n\t\t\tvar newCurve,\n\t\t\t\tsegment;\n\t\t\tif (newCurve = curve.divide(t, true, true)) {\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tcurve = newCurve.getPrevious();\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tlinearHandles.push(segment._handleOut, segment._handleIn);\n\t\t\t} else {\n\t\t\t\tsegment = t < tMin\n\t\t\t\t\t? curve._segment1\n\t\t\t\t\t: t > tMax\n\t\t\t\t\t\t? curve._segment2\n\t\t\t\t\t\t: curve.getPartLength(0, t) < curve.getPartLength(t, 1)\n\t\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tsegment._intersection = loc.getIntersection();\n\t\t\tloc._segment = segment;\n\t\t\tprev = loc;\n\t\t}\n\t\tif (linearHandles)\n\t\t\tresetLinear();\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar tolerance = 0.000001,\n\t\t\ttMin = tolerance,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - tolerance,\n\t\t\t\tyAfter = py + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.evaluate(values, roots[j], 0).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves);\n\t\t} else {\n\t\t\tvar xBefore = px - tolerance,\n\t\t\t\txAfter = px + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding,\n\t\t\t\t\tprevT,\n\t\t\t\t\tprevX;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tx = Curve.evaluate(values, t, 0).x,\n\t\t\t\t\t\tslope = Curve.evaluate(values, t, 1).y;\n\t\t\t\t\tif (!(t > tMax\n\t\t\t\t\t\t\t&& (i === l - 1 || curve.next !== curves[i + 1])\n\t\t\t\t\t\t\t&& abs(Curve.evaluate(curve.next.values, 0, 0).x -x)\n\t\t\t\t\t\t\t\t<= tolerance\n\t\t\t\t\t\t|| i > 0 && curve.previous === curves[i - 1]\n\t\t\t\t\t\t\t&& abs(prevX - x) < tolerance\n\t\t\t\t\t\t\t&& prevT > tMax && t < tMin)) {\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isLinear(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0, 1).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprevT = t;\n\t\t\t\t\tprevX = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction tracePaths(segments, operator, selfOp) {\n\t\tvar paths = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0, seg, startSeg, l = segments.length; i < l; i++) {\n\t\t\tseg = startSeg = segments[i];\n\t\t\tif (seg._visited || !operator(seg._winding))\n\t\t\t\tcontinue;\n\t\t\tvar path = new Path(Item.NO_INSERT),\n\t\t\t\tinter = seg._intersection,\n\t\t\t\tstartInterSeg = inter && inter._segment,\n\t\t\t\tadded = false,\n\t\t\t\tdir = 1;\n\t\t\tdo {\n\t\t\t\tvar handleIn = dir > 0 ? seg._handleIn : seg._handleOut,\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn,\n\t\t\t\t\tinterSeg;\n\t\t\t\tif (added && (!operator(seg._winding) || selfOp)\n\t\t\t\t\t\t&& (inter = seg._intersection)\n\t\t\t\t\t\t&& (interSeg = inter._segment)\n\t\t\t\t\t\t&& interSeg !== startSeg) {\n\t\t\t\t\tif (selfOp) {\n\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar c1 = seg.getCurve();\n\t\t\t\t\t\tif (dir > 0)\n\t\t\t\t\t\t\tc1 = c1.getPrevious();\n\t\t\t\t\t\tvar t1 = c1.getTangentAt(dir < 1 ? tMin : tMax, true),\n\t\t\t\t\t\t\tc4 = interSeg.getCurve(),\n\t\t\t\t\t\t\tc3 = c4.getPrevious(),\n\t\t\t\t\t\t\tt3 = c3.getTangentAt(tMax, true),\n\t\t\t\t\t\t\tt4 = c4.getTangentAt(tMin, true),\n\t\t\t\t\t\t\tw3 = t1.cross(t3),\n\t\t\t\t\t\t\tw4 = t1.cross(t4);\n\t\t\t\t\t\tif (w3 * w4 !== 0) {\n\t\t\t\t\t\t\tvar curve = w3 < w4 ? c3 : c4,\n\t\t\t\t\t\t\t\tnextCurve = operator(curve._segment1._winding)\n\t\t\t\t\t\t\t\t\t? curve\n\t\t\t\t\t\t\t\t\t: w3 < w4 ? c4 : c3,\n\t\t\t\t\t\t\t\tnextSeg = nextCurve._segment1;\n\t\t\t\t\t\t\tdir = nextCurve === c3 ? -1 : 1;\n\t\t\t\t\t\t\tif (nextSeg._visited && seg._path !== nextSeg._path\n\t\t\t\t\t\t\t\t\t\t|| !operator(nextSeg._winding)) {\n\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\t\t\tif (nextSeg._visited)\n\t\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, added && handleIn, handleOut));\n\t\t\t\tadded = true;\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = dir > 0 ? seg.getNext() : seg. getPrevious();\n\t\t\t} while (seg && !seg._visited\n\t\t\t\t\t&& seg !== startSeg && seg !== startInterSeg\n\t\t\t\t\t&& (seg._intersection || operator(seg._winding)));\n\t\t\tif (seg && (seg === startSeg || seg === startInterSeg)) {\n\t\t\t\tpath.firstSegment.setHandleIn((seg === startInterSeg\n\t\t\t\t\t\t? startInterSeg : seg)._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else {\n\t\t\t\tpath.lastSegment._handleOut.set(0, 0);\n\t\t\t}\n\t\t\tif (path._segments.length >\n\t\t\t\t\t(path._closed ? path.isPolygon() ? 2 : 0 : 1))\n\t\t\t\tpaths.push(path);\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn new Group([this.subtract(path), this.intersect(path)]);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isLinear(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttolerance = 0.000001,\n\t\t\t\t\troots = [];\n\t\t\t\tvar count = Numerical.solveQuadratic(a, b, c, roots, tolerance,\n\t\t\t\t\t\t1 - tolerance);\n\t\t\t\tif (count === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.evaluate(values, roots[j], 0).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 0.000001) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tevaluate: function(offset, type) {\n\t\tvar param = this.getParameterAt(offset);\n\t\treturn Curve.evaluate(this.curves[param.index], param.value, type);\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\treturn this.evaluate(offset, index);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tthis.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1);\n\t\tepsilon *= segLength;\n\t\tif (alpha1 < epsilon || alpha2 < epsilon) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t}\n\n\t\treturn [pt1, pt1.add(tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 0.000001)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tvalue = parser.call(this, value);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tthis._components[index] = value;\n\t\t\t\t\tthis._changed();\n\t\t\t\t}\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type];\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tif (type === 'gradient')\n\t\t\t\tthis._id = Color._id = (Color._id || 0) + 1;\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n}, new function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nBase.each(Color._types, function(properties, type) {\n\tvar ctor = this[Base.capitalize(type) + 'Color'] = function(arg) {\n\t\t\tvar argType = arg != null && typeof arg,\n\t\t\t\tcomponents = argType === 'object' && arg.length != null\n\t\t\t\t\t? arg\n\t\t\t\t\t: argType === 'string'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: arguments;\n\t\t\treturn components\n\t\t\t\t\t? new Color(type, components)\n\t\t\t\t\t: new Color(arg);\n\t\t};\n\tif (type.length == 3) {\n\t\tvar acronym = type.toUpperCase();\n\t\tColor[acronym] = this[acronym + 'Color'] = ctor;\n\t}\n}, Base.exports);\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = Gradient._id = (Gradient._id || 0) + 1;\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = typeof window === 'object' &&\n\t\t\tDomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tif ( typeof window === 'object' ) {\n\t\tDomEvent.add(window, {\n\t\t\tfocus: function() {\n\t\t\t\tfocused = true;\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tfocused = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif ( !noCanvas ) {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchAction: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\tuserDrag: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\n\t\t\tfunction getSize(name) {\n\t\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t\t}\n\n\t\t\tfunction getCanvasSize() {\n\t\t\t\tvar size = DomElement.getSize(element);\n\t\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t\t: size;\n\t\t\t}\n\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._setViewSize(size = getCanvasSize());\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = 1;\n\t\t\tthis._id = 'view-' + View._id++;\n\t\t\tsize = new Size(element.width, element.height);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: {\n\t\tonFrame: {\n\t\t\tinstall: function() {\n\t\t\t\tthis.play();\n\t\t\t},\n\n\t\t\tuninstall: function() {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t},\n\n\t\tonResize: {}\n\t},\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n}, new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif ( !noCanvas ) {\n\t\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tif (size.isZero())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t\t}\n\t\t\tthis._context = canvas.getContext('2d');\n\t\t}\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!noCanvas && !/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font;\n\t\tctx.font = size + ' serif';\n\t\tsize = parseFloat(ctx.font);\n\t\tctx.font = prevFont;\n\t\treturn size;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function() {\n\t\tvar project = this._project;\n\t\tif (!project || !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n}, new function() {\n\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers)\n\t\t\tmodifiers[name] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = this._minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = distance;\n\t\tthis._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tvar maxDist = maxDistance != null ? maxDistance : 0;\n\t\t\t\tif (maxDist != 0) {\n\t\t\t\t\tif (distance > maxDist) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDist));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback) {\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, true);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif ( noCanvas ) {\n\t\t\treturn { getContext: function() {} };\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tif (options.matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (item.isPolygon()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (applyMatrix && item)\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n\n},{}],3:[function(require,module,exports){\nfunction Collection( args ) {\n\t// already a Collection? Job's done\n\tif ( arguments.length === 1 && args instanceof Collection ) {\n\t\treturn args;\n\n\t} else if ( arguments.length > 1 || !Array.isArray( args ) ) {\n\t\targs = [].slice.call( arguments, 0 );\n\t}\n\n\tthis.length = 0;\n\n\targs.forEach(function( arg ) {\n\t\t// unwrap any collection\n\t\tif ( arg instanceof Collection ) {\n\t\t\tfor ( var i = -1; ++i < arg.length; ) {\n\t\t\t\tthis[this.length++] = arg[i];\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis[this.length++] = arg;\n\t\t}\n\n\t}, this);\n\n\treturn this;\n}\n\nCollection.prototype.forEach = function(cb, scope) {\n\tfor ( var i = -1; ++i < this.length; ) {\n\t\tcb.call(scope || this[i], this[i], i, this);\n\t}\n\n\treturn this;\n};\n\nCollection.prototype.prop = function(name, val) {\n\tvar i;\n\n\t// object setter\n\tif ( typeof name === 'object' ) {\n\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\tthis[i].set( name );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// getter\n\tif ( val === undefined ) {\n\t\treturn this[0][name];\n\t}\n\n\t// simple setter\n\tfor ( i = -1; ++i < this.length; ) {\n\t\tthis[i][name] = val;\n\t}\n\n\treturn this;\n};\n\nfunction wrapConstructor( constructor, prototype, useConstructed ) {\n\treturn function wrapper() {\n\t\tvar c,\n\t\t\ttmp,\n\t\t\tarr = [];\n\n\t\t// constructor used with new\n\t\tif ( this instanceof wrapper ) {\n\t\t\t// proxy to paper native constructor\n\t\t\tc = Object.create(prototype);\n\t\t\ttmp = constructor.apply(c, arguments);\n\t\t\treturn useConstructed ?\n\t\t\t\ttmp : c;\n\n\t\t// without new, build a collection\n\t\t} else {\n\t\t\tif ( Array.isArray( arguments[0] ) ) {\n\t\t\t\targuments[0].forEach(function(params, i) {\n\t\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\t\tc = constructor.call( arr[i], params );\n\t\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\t\tarr[i] = c;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\tc = constructor.apply( arr[0], arguments );\n\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\tarr[0] = c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Collection( arr );\n\t\t}\n\t};\n}\n\nvar rconstructor = /(^|\\.)[A-Z][A-z]+$/;\nfunction constructorFilter( name ) {\n\treturn typeof this[name] === 'function' && rconstructor.test(name);\n}\n\n// unwrap a collection or array of collection\nfunction unwrapArg( arr, id, isPlural ) {\n\t// unwrap a single collection\n\tif ( arr && arr[id] instanceof Collection ) {\n\t\tarr[id] = isPlural ?\n\t\t\t[].slice.call( arr[id], 0 ) :\n\t\t\tarr[id][0];\n\n\t// unwrap an array of collection\n\t} else if ( arr && arr[id].length && arr[id][0] instanceof Collection ) {\n\t\tfor ( var i = -1; ++i < arr[id].length; ) {\n\t\t\tarr[id][i] = arr[id][i][0];\n\t\t}\n\t}\n}\n\nfunction unwrapArgs() {\n\tvar isPlural = this.isPlural,\n\t\targs = [].slice.call( arguments, 0 ),\n\t\tid,\n\t\ti;\n\n\t// first arg is an object and might have a collection or array of collection\n\t// Todo: objects should be unwrapped recursively\n\tif ( args[0] && args[0].constructor === Object ) {\n\t\tif ( 'children' in args[0] ) {\n\t\t\tid = 'children';\n\n\t\t} else if ( 'segments' in args[0] ) {\n\t\t\tid = 'segments';\n\n\t\t} else if ( 'nodes' in args[0] ) {\n\t\t\tid = 'nodes';\n\t\t}\n\n\t\tunwrapArg( args[0], id, true );\n\n\t// otherwise unwrap each arg\n\t} else {\n\t\tfor ( i = -1; ++i < args.length; ) {\n\t\t\t// if the method is plural (addChildren) and we're unwrapping\n\t\t\t// the last argument, we want to keep it in an array\n\t\t\tunwrapArg( args, i, i === args.length - 1 && isPlural );\n\t\t}\n\t}\n\n\treturn args;\n}\n\nCollection.proxy = function( paper ) {\n\tvar plumin = this;\n\n\tplumin.paper = paper;\n\n\tvar methodNames = {};\n\tObject.getOwnPropertyNames( paper.PaperScope.prototype )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype )\n\t\t.forEach(function(name) {\n\t\t\tplumin[name] = wrapConstructor( this[name], this[name].prototype );\n\n\t\t\t// we don't want to proxy methods of Collection\n\t\t\tif ( name === 'Collection' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tObject.getOwnPropertyNames( this[name].prototype )\n\t\t\t\t.forEach(function(_name) {\n\t\t\t\t\t// collect unique method names (first test avoids getters)\n\t\t\t\t\tif ( !Object.getOwnPropertyDescriptor(this, _name).get &&\n\t\t\t\t\t\t\ttypeof this[_name] === 'function' ) {\n\n\t\t\t\t\t\tmethodNames[_name] = true;\n\t\t\t\t\t}\n\n\t\t\t\t}, this[name].prototype);\n\n\t\t}, paper.PaperScope.prototype);\n\n\tObject.keys( paper.PaperScope.prototype.Path )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Path )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Path[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Path );\n\n\tObject.keys( paper.PaperScope.prototype.Shape )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Shape )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Shape[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Shape );\n\n\t// proxy the most commonly used method of paper\n\t// do it only after proxying constructors otherwise it's overwritten\n\tplumin.setup = paper.setup.bind(paper);\n\n\t// proxy all methods from every constructor\n\t// by default methods aren't chainable\n\tObject.keys( methodNames ).sort().forEach(function(name) {\n\t\t// please oh please, don't overwrite my constructor, I need it.\n\t\tif ( name === 'constructor' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(null, arguments),\n\t\t\t\ti,\n\t\t\t\tresult;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tresult = this[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// by default methods aren't chainable\n\t\t\t// return the last result\n\t\t\treturn result;\n\t\t};\n\t});\n\n\t\t// addChild( item ) and other methods with similar signatures\n\t\t// that we want to make chainable\n\tvar chain = [\n\t\t\t'set',\n\t\t\t'setX',\n\t\t\t'setY',\n\t\t\t'insertAbove',\n\t\t\t'insertBelow',\n\t\t\t'sendToBack',\n\t\t\t'bringToFront',\n\t\t\t'remove',\n\t\t\t'removeChildren',\n\t\t\t'reverseChildren',\n\n\t\t\t'translate',\n\t\t\t'rotate',\n\t\t\t'scale',\n\t\t\t'shear',\n\t\t\t'skew',\n\t\t\t'transform',\n\t\t\t'fitBounds',\n\t\t\t'emit',\n\n\t\t\t'activate',\n\n\t\t\t'setPixel',\n\n\t\t\t'smooth',\n\t\t\t'moveTo',\n\t\t\t'lineTo',\n\t\t\t'cubicCurveTo',\n\t\t\t'quadraticCurveTo',\n\t\t\t'curveTo',\n\t\t\t'arcTo',\n\t\t\t'closePath',\n\t\t\t'moveBy',\n\t\t\t'lineBy',\n\t\t\t'cubicCurveBy',\n\t\t\t'quadraticCurveBy',\n\t\t\t'curveBy',\n\t\t\t'arcBy',\n\n\t\t\t'removeSegments',\n\t\t\t'simplify',\n\t\t\t'reverse',\n\n\t\t\t// Rectangle\n\t\t\t'include',\n\t\t\t'expand',\n\t\t\t'scale',\n\t\t// ],\n\t\t// createAndChain = [\n\t\t\t'addChild',\n\t\t\t'insertChild',\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'replaceWith',\n\n\t\t\t'appendTop',\n\t\t\t'appendBottom',\n\n\t\t\t'add',\n\t\t\t'insert',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNode',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\n\t\t\t'addGlyph',\n\t\t\t'addGlyphs',\n\n\t\t\t'addContour',\n\t\t\t'insertContour',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addAnchor',\n\t\t\t'addAnchors',\n\t\t\t'addComponent',\n\t\t\t'addComponents',\n\n\t\t\t'addUnicode',\n\t\t\t'prepareOt',\n\t\t\t'addToFonts',\n\t\t\t'download'\n\t\t],\n\t\tplural = [\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\t\t\t'addGlyphs',\n\t\t\t'addAnchors',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addComponents'\n\t\t]/*,\n\t\tmathPoinFn = [\n\t\t\t'round',\n\t\t\t'ceil',\n\t\t\t'floor',\n\t\t\t'abs'\n\t\t],\n\t\tbooleanPathOp = [\n\t\t\t'unite',\n\t\t\t'intersect',\n\t\t\t'subtract',\n\t\t\t'exclude',\n\t\t\t'divide'\n\t\t]*/;\n\n\tchain.forEach(function(name) {\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(\n\t\t\t\t\t{ isPlural: plural.indexOf(name) !== -1 },\n\t\t\t\t\targuments\n\t\t\t\t),\n\t\t\t\ti;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tthis[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// make method chainable\n\t\t\treturn this;\n\t\t};\n\t});\n\n\t// singular chainable method\n};\n\nmodule.exports = Collection;\n\n},{}],4:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tGlyph = require('./Glyph.js');\n\nfunction Font( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\tif ( !args ) {\n\t\targs = {};\n\t}\n\n\tif ( !args.styleName ) {\n\t\targs.styleName = 'Regular';\n\t}\n\n\tif ( !args.unitsPerEm ) {\n\t\targs.unitsPerEm = 1024;\n\t}\n\n\tthis.ot = new opentype.Font( args );\n\n\tthis.glyphMap = {};\n\tthis.charMap = {};\n\tthis.altMap = {};\n\tthis._subset = false;\n\n\tthis.addGlyph(new Glyph({\n\t\tname: '.notdef',\n\t\tunicode: 0\n\t}));\n\n\tif ( args && args.glyphs ) {\n\t\tthis.addGlyphs( args.glyphs );\n\t}\n\n\tif ( typeof window === 'object' && window.document ) {\n\t\t// work around https://bugzilla.mozilla.org/show_bug.cgi?id=1100005\n\t\t// by using fonts.delete in batch, every 1 second\n\t\tif ( document.fonts ) {\n\t\t\tthis.addedFonts = [];\n\n\t\t\tsetInterval(function() {\n\t\t\t\twhile ( this.addedFonts.length > 1 ) {\n\t\t\t\t\tdocument.fonts.delete( this.addedFonts.shift() );\n\t\t\t\t}\n\t\t\t}.bind(this), 1000);\n\n\t\t} else {\n\t\t\tdocument.head.appendChild(\n\t\t\t\tthis.styleElement = document.createElement('style')\n\t\t\t);\n\t\t\t// let's find the corresponding CSSStyleSheet\n\t\t\t// (would be much easier with Array#find)\n\t\t\tthis.styleSheet = document.styleSheets[\n\t\t\t\t[].map.call(document.styleSheets, function(ss) {\n\t\t\t\t\treturn ss.ownerNode;\n\t\t\t\t}).indexOf(this.styleElement)\n\t\t\t];\n\t\t}\n\t}\n}\n\nFont.prototype = Object.create(paper.Group.prototype);\nFont.prototype.constructor = Font;\n\n// proxy .glyphs to .children\n// Todo: handle unicode updates\nObject.defineProperty(\n\tFont.prototype,\n\t'glyphs',\n\tObject.getOwnPropertyDescriptor( paper.Item.prototype, 'children' )\n);\n\n// TODO: proper proxying of ...Glyph[s] methods to ...Child[ren] methods\n// see Glyph.js\nFont.prototype.addGlyph = function( glyph ) {\n\tthis.addChild( glyph );\n\tthis.glyphMap[glyph.name] = glyph;\n\n\tif ( glyph.ot.unicode === undefined ) {\n\t\treturn glyph;\n\t}\n\n\t// build the default cmap\n\t// if multiple glyphs share the same unicode, use the glyph where unicode\n\t// and name are equal\n\tif ( !this.charMap[glyph.ot.unicode] ||\n\t\t\t( glyph.name.length === 1 &&\n\t\t\t\tglyph.name.charCodeAt(0) === glyph.ot.unicode ) ) {\n\n\t\tthis.charMap[glyph.ot.unicode] = glyph;\n\t}\n\n\t// build the alternates map\n\tif ( !this.altMap[glyph.ot.unicode] ) {\n\t\tthis.altMap[glyph.ot.unicode] = [];\n\t}\n\tthis.altMap[glyph.ot.unicode].push( glyph );\n\n\t// invalidate glyph subset cache\n\t// TODO: switch to immutable.js to avoid this maddness\n\tthis._lastSubset = undefined;\n\n\treturn glyph;\n};\n\nFont.prototype.addGlyphs = function( glyphs ) {\n\treturn glyphs.forEach(function( glyph ) {\n\t\tthis.addGlyph(glyph);\n\n\t}, this);\n};\n\nObject.defineProperty( Font.prototype, 'subset', {\n\tget: function() {\n\t\treturn this.getGlyphSubset();\n\t},\n\tset: function( set ) {\n\t\tthis._subset =\n\t\t\ttypeof set === 'boolean' ? set :\n\t\t\tFont.normalizeSubset( set );\n\t}\n});\n\nFont.prototype.getGlyphSubset = function( _set ) {\n\tvar set =\n\t\t\t_set === undefined ? this._subset :\n\t\t\ttypeof _set === 'boolean' ? _set :\n\t\t\tFont.normalizeSubset( _set );\n\n\t// true returns all glyphs\n\tif ( set === true ) {\n\t\treturn this.children;\n\t}\n\n\t// Assume the set provided was an array of glyphs\n\tif ( set.length && typeof set[0] !== 'number' ) {\n\t\t// always include .undef\n\t\tif ( set.indexOf( this.glyphMap['.notdef'] ) === -1 ) {\n\t\t\tset.unshift( this.glyphMap['.notdef'] );\n\t\t}\n\t\treturn set;\n\t}\n\n\t// reuse last subset if possible\n\t// TODO: implement caching using immutable.js\n\tif ( this._lastSubset &&\n\t\t\tthis._lastSubset[0] ===\n\t\t\t( typeof set === 'object' ? set.join() : set ) ) {\n\n\t\treturn this._lastSubset[1];\n\t}\n\n\t// memoize last subset\n\tthis._lastSubset = [\n\t\t// store the set serialized to make subsequent comparisons easier\n\t\ttypeof set === 'object' ? set.join() : set,\n\t\tthis.children.filter(function( glyph ) {\n\t\t\t// false will return all glyphs that have one or more unicodes\n\t\t\tif ( set === false &&\n\t\t\t\t\t( glyph.ot.unicode !== undefined ||\n\t\t\t\t\t( glyph.ot.unicodes && glyph.ot.unicodes.length ) ) ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( set &&\n\t\t\t\t\t( set.indexOf( glyph.ot.unicode ) !== -1 ) ||\n\t\t\t\t\t( glyph.ot.unicode === 0 ) ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// TODO: handle multiple unicodes\n\t\t\treturn false;\n\n\t\t}, this)\n\t];\n\n\treturn this._lastSubset[1];\n};\n\nFont.prototype.interpolate = function( font0, font1, coef, set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\tglyph.interpolate(\n\t\t\tfont0.glyphMap[glyph.name],\n\t\t\tfont1.glyphMap[glyph.name],\n\t\t\tcoef\n\t\t);\n\t});\n\n\t// TODO: evaluate if taking subsetting into account makes kerning\n\t// interpolation faster or slower.\n\tif ( this.ot.kerningPairs ) {\n\t\tfor ( var i in this.ot.kerningPairs ) {\n\t\t\tthis.ot.kerningPairs[i] =\n\t\t\t\tfont0.ot.kerningPairs[i] +\n\t\t\t\t( font1.ot.kerningPairs[i] - font0.ot.kerningPairs[i] ) * coef;\n\t\t}\n\t}\n\n\tthis.ot.ascender =\n\t\tfont0.ot.ascender + ( font1.ot.ascender - font0.ot.ascender ) * coef;\n\tthis.ot.descender =\n\t\tfont0.ot.descender + ( font1.ot.descender - font0.ot.descender ) * coef;\n\n\treturn this;\n};\n\nFont.prototype.updateSVGData = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateSVGData();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.updateOTCommands = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateOTCommands();\n\t});\n\n\tthis.ot.glyphs = this.getGlyphSubset().map(function( glyph ) {\n\t\treturn glyph.ot;\n\t});\n\n\treturn this;\n};\n\nFont.prototype.importOT = function( otFont ) {\n\tthis.ot = otFont;\n\n\totFont.glyphs.forEach(function( otGlyph ) {\n\t\tvar glyph = new Glyph({\n\t\t\t\tname: otGlyph.name,\n\t\t\t\tunicode: otGlyph.unicode\n\t\t\t});\n\n\t\tthis.addGlyph( glyph );\n\t\tglyph.importOT( otGlyph );\n\n\t}, this);\n\n\treturn this;\n};\n\nif ( typeof window === 'object' && window.document ) {\n\n\tvar _URL = window.URL || window.webkitURL;\n\tFont.prototype.addToFonts = document.fonts ?\n\t\t// CSS font loading, lightning fast\n\t\tfunction( buffer ) {\n\t\t\tvar fontface = new window.FontFace(\n\t\t\t\tthis.ot.familyName,\n\t\t\t\tbuffer || this.ot.toBuffer()\n\t\t\t);\n\n\t\t\tdocument.fonts.add( fontface );\n\t\t\tthis.addedFonts.push( fontface );\n\n\t\t\treturn this;\n\t\t} :\n\t\tfunction( buffer ) {\n\t\t\tvar url = _URL.createObjectURL(\n\t\t\t\t\tnew Blob(\n\t\t\t\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t\t\t\t{ type: 'font/opentype' }\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tif ( this.fontObjectURL ) {\n\t\t\t\t_URL.revokeObjectURL( this.fontObjectURL );\n\t\t\t\tthis.styleSheet.deleteRule(0);\n\t\t\t}\n\n\t\t\tthis.styleSheet.insertRule(\n\t\t\t\t'@font-face { font-family: \"' + this.ot.familyName + '\";' +\n\t\t\t\t'src: url(' + url + '); }',\n\t\t\t\t0\n\t\t\t);\n\t\t\tthis.fontObjectURL = url;\n\n\t\t\treturn this;\n\t\t};\n\n\tFont.prototype.download = function( buffer ) {\n\t\tvar reader = new FileReader();\n\n\t\treader.onloadend = function() {\n\t\t\twindow.location = reader.result;\n\t\t};\n\n\t\treader.readAsDataURL(new Blob(\n\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t{ type: 'font/opentype' }\n\t\t));\n\n\t\treturn this;\n\t};\n\n}\n\nFont.normalizeSubset = function( set ) {\n\treturn ( typeof set === 'string' ?\n\t\t\tset.split('').map(function(e) {\n\t\t\t\treturn e.charCodeAt(0);\n\t\t\t}) :\n\t\t\tset || []\n\t\t)\n\t\t.filter(function(e, i, arr) {\n\t\t\treturn arr.lastIndexOf(e) === i;\n\t\t})\n\t\t.sort();\n};\n\nmodule.exports = Font;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Glyph.js\":5}],5:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tOutline = require('./Outline.js');\n\nfunction Glyph( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\tif ( args && typeof args.unicode === 'string' ) {\n\t\targs.unicode = args.unicode.charCodeAt(0);\n\t}\n\n\tthis.ot = new opentype.Glyph( args );\n\tthis.ot.path = new opentype.Path();\n\n\tthis.name = args.name;\n\t// workaround opentype 'unicode === 0' bug\n\tthis.ot.unicode = args.unicode;\n\n\tthis.addChild( new Outline() );\n\t// the second child will hold all components\n\tthis.addChild( new paper.Group() );\n\t// Should all anchors and parentAnchors also leave in child groups?\n\tthis.anchors = ( args && args.anchors ) || [];\n\tthis.parentAnchors = ( args && args.parentAnchors ) || [];\n\n\t// each individual glyph must be explicitely made visible\n\tthis.visible = false;\n\t// default colors required to display the glyph in a canvas\n\tthis.fillColor = new paper.Color(0, 0, 0);\n\t// stroke won't be displayed unless strokeWidth is set to 1\n\tthis.strokeColor = new paper.Color(0, 0, 0);\n\tthis.strokeScaling = false;\n}\n\nGlyph.prototype = Object.create(paper.Group.prototype);\nGlyph.prototype.constructor = Glyph;\n\n// Todo: handle unicode updates\nObject.defineProperty(Glyph.prototype, 'unicode', {\n\tset: function( code ) {\n\t\tthis.ot.unicode = typeof code === 'string' ?\n\t\t\tcode.charCodeAt(0) :\n\t\t\tcode;\n\t},\n\tget: function() {\n\t\treturn this.ot.unicode;\n\t}\n});\n\n// proxy .contours to .children[0]\nObject.defineProperty( Glyph.prototype, 'contours', {\n\tget: function() {\n\t\treturn this.children[0].children;\n\t}\n});\n\n// proxy .components to .children[1]\nObject.defineProperty( Glyph.prototype, 'components', {\n\tget: function() {\n\t\treturn this.children[1].children;\n\t}\n});\n\n// proxy .visible to\n\n// proxy ...Contour[s] methods to children[0]...Child[ren] methods\n// and proxy ...Component[s] methods to children[1]...Child[ren] methods\nObject.getOwnPropertyNames( paper.Item.prototype ).forEach(function(name) {\n\tvar proto = this;\n\n\t// exclude getters and non-methods\n\tif ( Object.getOwnPropertyDescriptor(proto, name).get ||\n\t\t\ttypeof proto[name] !== 'function' ) {\n\t\treturn;\n\t}\n\n\tif ( name.indexOf('Children') !== -1 ) {\n\t\tproto[name.replace('Children', 'Contours')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Children', 'Components')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\n\t} else if ( name.indexOf('Child') !== -1 ) {\n\t\tproto[name.replace('Child', 'Contour')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Child', 'Component')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\t}\n\n}, paper.Item.prototype);\n\nGlyph.prototype.addAnchor = function( item ) {\n\tthis.anchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addAnchors = function( anchors ) {\n\treturn anchors.forEach(function(anchor) {\n\t\tthis.addAnchor(anchor);\n\t}, this);\n};\n\nGlyph.prototype.addParentAnchor = function( item ) {\n\tthis.parentAnchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addUnicode = function( code ) {\n\tthis.ot.addUnicode( code );\n\n\treturn this;\n};\n\nGlyph.prototype.interpolate = function( glyph0, glyph1, coef ) {\n\t// If we added an interpolate method to Group, we'd be able to just\n\t// interpolate all this.children directly.\n\t// instead we interpolate the outline first\n\tthis.children[0].interpolate( glyph0.children[0], glyph1.children[0] );\n\t// and then the components\n\tthis.children[1].children.forEach(function(component, j) {\n\t\tcomponent.interpolate(\n\t\t\tglyph0.children[1].children[j], glyph1.children[1].children[j], coef\n\t\t);\n\t});\n\n\tthis.ot.advanceWidth =\n\t\tglyph0.ot.advanceWidth +\n\t\t( glyph1.ot.advanceWidth - glyph0.ot.advanceWidth ) * coef;\n\tthis.ot.leftSideBearing =\n\t\tglyph0.ot.leftSideBearing +\n\t\t( glyph1.ot.leftSideBearing - glyph0.ot.leftSideBearing ) * coef;\n\tthis.ot.xMax =\n\t\tglyph0.ot.xMax + ( glyph1.ot.xMax - glyph0.ot.xMax ) * coef;\n\tthis.ot.xMin =\n\t\tglyph0.ot.xMin + ( glyph1.ot.xMin - glyph0.ot.xMin ) * coef;\n\tthis.ot.yMax =\n\t\tglyph0.ot.yMax + ( glyph1.ot.yMax - glyph0.ot.yMax ) * coef;\n\tthis.ot.yMin =\n\t\tglyph0.ot.yMin + ( glyph1.ot.yMin - glyph0.ot.yMin ) * coef;\n\n\treturn this;\n};\n\nGlyph.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children[0].updateSVGData( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateSVGData( path );\n\t});\n\n\treturn this.svgData;\n};\n\nGlyph.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.children[0].updateOTCommands( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateOTCommands( path );\n\t});\n\n\treturn this.ot;\n};\n\nGlyph.prototype.importOT = function( otGlyph ) {\n\tvar current;\n\tthis.ot = otGlyph;\n\n\tif ( !otGlyph.path || !otGlyph.path.commands ) {\n\t\treturn this;\n\t}\n\n\tthis.ot.path.commands.forEach(function(command) {\n\t\tswitch ( command.type ) {\n\t\t\tcase 'M':\n\t\t\t\tcurrent = new paper.Path();\n\t\t\t\tthis.addContour( current );\n\n\t\t\t\tcurrent.moveTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tcurrent.lineTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tcurrent.cubicCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\t[ command.x2, command.y2 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tcurrent.quadraticCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\t// When the glyph has no contour,\n\t\t\t\t// they contain a single Z command in\n\t\t\t\t// opentype.js.\n\t\t\t\t// TODO: see how we should handle that\n\t\t\t\tif ( current ) {\n\t\t\t\t\tcurrent.closePath();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}, this);\n\n\treturn this;\n};\n\nmodule.exports = Glyph;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Outline.js\":7}],6:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nObject.defineProperty( paper.Segment.prototype, 'x', {\n\tget: function() {\n\t\treturn this.point.x;\n\t},\n\tset: function( value ) {\n\t\tthis.point.x = value;\n\t}\n});\n\nObject.defineProperty( paper.Segment.prototype, 'y', {\n\tget: function() {\n\t\treturn this.point.y;\n\t},\n\tset: function( value ) {\n\t\tthis.point.y = value;\n\t}\n});\n\nmodule.exports = paper.Segment;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],7:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nfunction Outline() {\n\tpaper.CompoundPath.prototype.constructor.apply( this );\n}\n\n// inehrit CompoundPath\nOutline.prototype = Object.create(paper.CompoundPath.prototype);\nOutline.prototype.constructor = Outline;\n\n// Fix two problems with CompoundPath#insertChildren:\n// - it arbitrarily changes the direction of paths\n// - it seems that it doesn't handle CompoundPath arguments\nOutline.prototype.insertChildren = function(index, items, _preserve) {\n\tif ( Array.isArray( items ) ) {\n\t\t// flatten items to handle CompoundPath children\n\t\titems = [].concat.apply([], items.map(function(item) {\n\t\t\treturn item instanceof paper.Path ? item : item.children;\n\t\t}));\n\t}\n\n\treturn paper.Item.prototype.insertChildren.call(\n\t\tthis, index, items, _preserve, paper.Path\n\t);\n};\n\nOutline.prototype.interpolate = function( outline0, outline1, coef ) {\n\tfor (var i = 0, l = this.contours.length; i < l; i++) {\n\t\t// The number of children should be the same everywhere,\n\t\t// but we're going to try our best anyway\n\t\tif ( !outline0.children[i] || !outline1.children[i] ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.children[i].interpolate(\n\t\t\toutline0.children[i],\n\t\t\toutline1.children[i],\n\t\t\tcoef\n\t\t);\n\t}\n\n\treturn this;\n};\n\nOutline.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateSVGData( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.svgData;\n};\n\nOutline.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateOTCommands( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.ot;\n};\n\nmodule.exports = Outline;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],8:[function(require,module,exports){\n/* Extend the Path prototype to add OpenType conversion\n * and alias *segments methods and properties to *nodes\n */\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nvar proto = paper.PaperScope.prototype.Path.prototype;\n\n// alias *Segments methods to *Nodes equivalents\n[ 'add', 'insert', 'remove' ].forEach(function(name) {\n\tproto[name + 'Nodes'] =\n\t\tproto[name + 'Segments'];\n});\n\n// alias .segments to .nodes\nObject.defineProperties(proto, {\n\tnodes: Object.getOwnPropertyDescriptor( proto, 'segments' ),\n\tfirstNode: Object.getOwnPropertyDescriptor( proto, 'firstSegment' ),\n\tlastNode: Object.getOwnPropertyDescriptor( proto, 'lastSegment' )\n});\n\nproto._updateData = function( data, matrix, pushSimple, pushBezier ) {\n\tif ( this.visible === false ) {\n\t\treturn data;\n\t}\n\n\t// prototypo needs to be able to change the direction of the updated data.\n\tvar reverse = ( this.export === 'clockwise' && !this.clockwise ) ||\n\t\t\t( this.export === 'anticlockwise' && this.clockwise ),\n\t\tcurves = this.curves,\n\t\tstart = curves[ reverse ? curves.length - 1 : 0 ]\n\t\t\t[ 'point' + ( reverse ? 2 : 1 ) ]\n\t\t\t.transform( matrix );\n\n\tpushSimple(\n\t\t'M',\n\t\tMath.round( start.x ) || 0,\n\t\tMath.round( start.y ) || 0\n\t);\n\n\tfor ( var i = -1, l = curves.length; ++i < l; ) {\n\t\tvar curve = curves[ reverse ? l - 1 - i : i ],\n\t\t\tend = curve['point' + ( reverse ? 1 : 2 ) ].transform( matrix );\n\n\t\tif ( curve.isLinear() ) {\n\t\t\tpushSimple(\n\t\t\t\t'L',\n\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\tMath.round( end.y ) || 0\n\t\t\t);\n\n\t\t} else {\n\t\t\tvar ctrl1 = new paper.Point(\n\t\t\t\t\tcurve.point1.x + curve.handle1.x,\n\t\t\t\t\tcurve.point1.y + curve.handle1.y\n\t\t\t\t).transform( matrix ),\n\t\t\t\tctrl2 = new paper.Point(\n\t\t\t\t\tcurve.point2.x + curve.handle2.x,\n\t\t\t\t\tcurve.point2.y + curve.handle2.y\n\t\t\t\t).transform( matrix );\n\n\t\t\tif ( reverse ) {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( this.closed ) {\n\t\tpushSimple('Z');\n\t}\n\n\treturn data;\n};\n\nproto.updateOTCommands = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx: arguments[1],\n\t\t\t\ty: arguments[2]\n\t\t\t});\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx1: arguments[1],\n\t\t\t\ty1: arguments[2],\n\t\t\t\tx2: arguments[3],\n\t\t\t\ty2: arguments[4],\n\t\t\t\tx: arguments[5],\n\t\t\t\ty: arguments[6]\n\t\t\t});\n\t\t}\n\t);\n};\n\nproto.updateSVGData = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t}\n\t);\n};\n\nmodule.exports = paper.Path;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],9:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tFont = require('./Font.js'),\n\tGlyph = require('./Glyph.js'),\n\tOutline = require('./Outline'),\n\tPath = require('./Path.js'),\n\tNode = require('./Node.js'),\n\tCollection = require('./Collection.js');\n\npaper.PaperScope.prototype.Font = Font;\npaper.PaperScope.prototype.Glyph = Glyph;\npaper.PaperScope.prototype.Outline = Outline;\npaper.PaperScope.prototype.Path = Path;\npaper.PaperScope.prototype.Node = Node;\npaper.PaperScope.prototype.Collection = Collection;\n\nfunction plumin( arg ) {\n\tif ( arguments.length === 1 && arg instanceof Collection ) {\n\t\treturn arg;\n\t}\n\n\tvar c = Object.create( Collection.prototype );\n\tCollection.apply( c, arguments );\n\treturn c;\n}\n\nplumin.opentype = opentype;\n\nplumin.proxy = Collection.proxy.bind(plumin);\nplumin.proxy(paper);\n\nmodule.exports = plumin;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Collection.js\":3,\"./Font.js\":4,\"./Glyph.js\":5,\"./Node.js\":6,\"./Outline\":7,\"./Path.js\":8}]},{},[9,2])(9)\n});\n\n\n//# sourceMappingURL=plumin.js.map","var plumin = require('plumin.js'),\n\tDepTree = require('deptree'),\n\tclone = require('lodash.clone'),\n\tassign = require('es6-object-assign').assign,\n\tupdateUtils = require('./updateUtils.js');\n\nvar paper = plumin.paper,\n\tUtils = updateUtils,\n\t_ = {\n\t\tassign: assign,\n\t\tclone: clone\n\t};\n\n// convert the glyph source from the ufo object model to the paper object model\n// this is the inverse operation done by jsufonify\nUtils.ufoToPaper = function( src ) {\n\tif ( src.parameter ) {\n\t\tsrc.parameters = src.parameter;\n\t\tdelete src.parameter;\n\t}\n\n\tif ( src.anchor ) {\n\t\tsrc.anchors = src.anchor;\n\t\tdelete src.anchor;\n\t}\n\n\tif ( src.outline && src.outline.contour ) {\n\t\tsrc.contours = src.outline.contour;\n\t\tdelete src.outline.contour;\n\t}\n\n\tif ( src.contours ) {\n\t\tsrc.contours.forEach(function(contour) {\n\t\t\tif ( contour.point ) {\n\t\t\t\tcontour.nodes = contour.point;\n\t\t\t\tdelete contour.point;\n\t\t\t}\n\t\t});\n\t}\n\n\tif ( src.outline && src.outline.component ) {\n\t\tsrc.components = src.outline.component;\n\n\t\tsrc.components.forEach(function(component) {\n\t\t\tif ( component.anchor ) {\n\t\t\t\tcomponent.parentAnchors = component.anchor;\n\t\t\t\tdelete component.anchor;\n\t\t\t}\n\n\t\t\tif ( component.parameter ) {\n\t\t\t\tcomponent.parentParameters = component.parameter;\n\t\t\t\tdelete component.parameter;\n\t\t\t}\n\t\t});\n\n\t\tdelete src.outline.component;\n\t}\n\n\tdelete src.outline;\n\n\tif ( src.lib && src.lib.transforms ) {\n\t\tsrc.transforms = src.lib.transforms;\n\t\tdelete src.lib.transforms;\n\t}\n\n\tif ( src.lib && src.lib.transformOrigin ) {\n\t\tsrc.transformOrigin = src.lib.transformOrigin;\n\t\tdelete src.lib.transformOrigin;\n\t}\n\n\tif ( src.lib && src.lib.parameters ) {\n\t\tsrc.parameters = src.lib.parameters;\n\t\tdelete src.lib.parameters;\n\t}\n\n\tif ( src.lib && src.lib.solvingOrder ) {\n\t\tsrc.solvingOrder = src.lib.solvingOrder;\n\t\tdelete src.lib.solvingOrder;\n\t}\n\n\treturn src;\n};\n\nUtils.fontFromSrc = function( src ) {\n\t// TODO: this, block is only here for backward compat\n\t// and should be removed at some point in the future\n\tif ( !src.fontinfo ) {\n\t\tsrc.fontinfo = src.info;\n\t}\n\n\tvar font = new paper.Font( src.fontinfo );\n\n\tfont.src = Utils.ufoToPaper( src );\n\n\tvar filteredSrc = _.assign( {}, src );\n\tdelete filteredSrc.controls;\n\tdelete filteredSrc.presets;\n\tdelete filteredSrc.glyphs;\n\n\tUtils.createUpdaters( filteredSrc, 'font_' + src.fontinfo.familyName );\n\n\tfont.parameters = {};\n\tUtils.mergeStatic( font.parameters, font.src.parameters );\n\n\t// solvingOrder might be already available (if this is a subcomponent,\n\t// or precomputed in a worker)\n\tfont.solvingOrder = font.src.solvingOrder;\n\n\tif ( !font.solvingOrder ) {\n\t\tfont.solvingOrder = filteredSrc.solvingOrder =\n\t\t\tUtils.solveDependencyTree( font, filteredSrc );\n\t}\n\n\treturn font;\n};\n\n// create Glyph instance and all its child items: anchors, contours\n// and components\nUtils.glyphFromSrc = function( src, fontSrc, naive, embed ) {\n\tvar glyph = new paper.Glyph({\n\t\tname: src.name,\n\t\tunicode: src.unicode\n\t});\n\n\t// Clone glyph src to allow altering it without impacting components srcs.\n\tglyph.src = _.clone( src, true );\n\tUtils.mergeStatic( glyph, glyph.src );\n\n\t// this will be used to hold local parameters that will be merged with\n\t// the font parameters\n\tglyph.parameters = {};\n\tUtils.mergeStatic( glyph.parameters, glyph.src.parameters );\n\n\t// solvingOrder might be already available (if this is a subcomponent,\n\t// or precomputed in a worker)\n\tglyph.solvingOrder = glyph.src.solvingOrder;\n\n\t(glyph.src.anchors || []).forEach(function(anchorSrc) {\n\t\tvar anchor = new paper.Node();\n\t\tanchor.src = anchorSrc;\n\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\tglyph.addAnchor( anchor );\n\t});\n\n\t(glyph.src.contours || []).forEach(function(contourSrc) {\n\t\tvar contour = new paper.Path();\n\t\tcontour.src = contourSrc;\n\t\tUtils.mergeStatic( contour, contourSrc );\n\n\t\tglyph.addContour( contour );\n\n\t\t// TODO: handle oncurve/offcurve points\n\t\tcontourSrc.nodes.forEach(function(nodeSrc) {\n\t\t\tvar node = new paper.Node();\n\t\t\tnode.src = nodeSrc;\n\t\t\tUtils.mergeStatic( node, nodeSrc );\n\n\t\t\tcontour.add( node );\n\t\t});\n\t});\n\n\tif ( !glyph.src.components ) {\n\t\treturn glyph;\n\t}\n\n\t// components can only be embedded once all glyphs have been generated\n\t// from source\n\tglyph.embedComponents = function() {\n\t\tglyph.src.components.forEach(function(componentSrc) {\n\t\t\t// components are glyphs, quite simply\n\t\t\tvar component = Utils.glyphFromSrc(\n\t\t\t\t\tfontSrc.glyphs[componentSrc.base],\n\t\t\t\t\tfontSrc,\n\t\t\t\t\tnaive,\n\t\t\t\t\t// components' subcomponents can be embedded immediatly\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\tcomponent.parentParameters = {};\n\t\t\tUtils.mergeStatic(\n\t\t\t\tcomponent.parentParameters,\n\t\t\t\tcomponentSrc.parentParameters\n\t\t\t);\n\n\t\t\tnaive.annotator( component );\n\t\t\tglyph.addComponent( component );\n\n\t\t\t(componentSrc.parentAnchors || []).forEach(function(anchorSrc) {\n\t\t\t\tvar anchor = new paper.Node();\n\t\t\t\tanchor.src = anchorSrc;\n\t\t\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\t\t\tcomponent.addParentAnchor( anchor );\n\t\t\t});\n\t\t});\n\n\t\tdelete glyph.embedComponents;\n\t};\n\n\tif ( embed ) {\n\t\tglyph.embedComponents();\n\t}\n\n\treturn glyph;\n};\n\n// build a full cursor from arguments\n// adds 'contours' and 'nodes' automagically when arguments start with a number\nUtils.cursor = function() {\n\tvar cursor = [];\n\n\tfor ( var i = -1; ++i < arguments.length; ) {\n\t\tif ( i === 0 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'contours' );\n\t\t}\n\t\tif ( i === 1 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'nodes' );\n\t\t}\n\t\tcursor.push( arguments[i] );\n\t}\n\n\treturn cursor.join('.');\n};\n\nUtils.propFromCursor = function( cursor, context, length ) {\n\tif ( length === undefined ) {\n\t\tlength = cursor.length;\n\t}\n\n\tfor ( var i = -1; ++i < length; ) {\n\t\tcontext = context[ cursor[i] ];\n\t}\n\n\treturn context;\n};\n\nUtils.mergeStatic = function( obj, src ) {\n\tfor ( var i in src ) {\n\t\tif ( typeof src[i] !== 'object' ) {\n\t\t\tobj[i] = src[i];\n\n\t\t// props that have empty dependencies and params are static\n\t\t} else if ( src[i]._dependencies && src[i]._dependencies.length === 0 &&\n\t\t\t\tsrc[i]._parameters.length === 0 ) {\n\n\t\t\tobj[i] = src[i]._updaters[0].apply(\n\t\t\t\tobj,\n\t\t\t\t[ null, null, null, null, Utils ]\n\t\t\t);\n\n\t\t\tdelete src[i];\n\t\t}\n\t}\n};\n\nUtils.createUpdaters = function( leaf, path ) {\n\tif ( leaf.constructor === Object &&\n\t\t\t( typeof leaf._operation === 'string' ||\n\t\t\ttypeof leaf._operation === 'function' ) ) {\n\n\t\tvar args = [\n\t\t\t\t\t'propName', 'contours', 'anchors', 'parentAnchors', 'Utils'\n\t\t\t\t]\n\t\t\t\t.concat( leaf._parameters || [] )\n\t\t\t\t.concat(\n\t\t\t\t\t( typeof leaf._operation === 'string' &&\n\t\t\t\t\t\t\tleaf._operation.indexOf('return ') === -1 ?\n\t\t\t\t\t\t'return ' : ''\n\t\t\t\t\t) +\n\t\t\t\t\t// The operation might be wrapped in a function (e.g. multi-\n\t\t\t\t\t// line code for debugging purpose). In this case, return\n\t\t\t\t\t// must be explicit\n\t\t\t\t\tleaf._operation.toString()\n\t\t\t\t\t\t// [\\s\\S] need to be used instead of . because\n\t\t\t\t\t\t// javascript doesn't have a dotall flag (s)\n\t\t\t\t\t\t.replace(/function\\s*\\(\\)\\s*\\{([\\s\\S]*?)\\}$/, '$1')\n\t\t\t\t\t\t.trim() +\n\t\t\t\t\t// add sourceURL pragma to help debugging\n\t\t\t\t\t'\\n\\n//# sourceURL=' + path\n\t\t\t\t);\n\n\t\tleaf._updaters = [ Function.apply( null, args ) ];\n\t\treturn leaf._updaters;\n\t}\n\n\tif ( leaf.constructor === Object ) {\n\t\tfor ( var i in leaf ) {\n\t\t\tUtils.createUpdaters( leaf[i], path + '.' + i );\n\t\t}\n\t}\n\n\tif ( leaf.constructor === Array ) {\n\t\tleaf.forEach(function(child, j) {\n\t\t\tUtils.createUpdaters( child, path + '.' + j );\n\t\t});\n\t}\n};\n\nUtils.solveDependencyTree = function( leaf, src ) {\n\tvar depTree = Utils.dependencyTree( src || leaf.src, null ),\n\t\torder = depTree.resolve().map(function( cursor ) {\n\t\t\treturn cursor.split('.');\n\t\t}),\n\t\tsimplified = Utils.simplifyResolutionOrder( leaf, order );\n\n\treturn simplified;\n};\n\nUtils.dependencyTree = function( parentSrc, cursor, depTree ) {\n\tif ( !depTree ) {\n\t\tdepTree = new DepTree();\n\t}\n\n\tObject.keys( parentSrc ).forEach(function( i ) {\n\t\t// don't inspect local parameters, private properties and non-object\n\t\tif ( i === 'parameters' || i.indexOf('_') === 0 ||\n\t\t\t\ttypeof parentSrc[i] !== 'object' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar leafSrc = parentSrc[i],\n\t\t\tcurrCursor = cursor ? cursor + '.' + i : i;\n\n\t\tif ( ( leafSrc._updaters && leafSrc._updaters.length ) ||\n\t\t\t\t( leafSrc._dependencies && leafSrc._dependencies.length ) ) {\n\n\t\t\tdepTree.add( currCursor,\n\t\t\t\tleafSrc._dependencies.filter(function(dep) {\n\t\t\t\t\t// parentAnchors are always here when you need them\n\t\t\t\t\treturn !/^parentAnchors/.test(dep);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif ( !leafSrc._operation ) {\n\t\t\tUtils.dependencyTree( leafSrc, currCursor, depTree );\n\t\t}\n\t});\n\n\treturn depTree;\n};\n\n// Simplify resolution order by removing cursors that don't point to objects\n// with updater functions\nUtils.simplifyResolutionOrder = function( leaf, depTree ) {\n\treturn depTree.filter(function( cursor ) {\n\t\tvar src = Utils.propFromCursor( cursor, leaf.src );\n\t\treturn src && src._updaters;\n\t});\n};\n\nvar rdeg = /deg$/;\nUtils.transformsToMatrix = function( transforms, origin ) {\n\tvar prev = new Float32Array(6),\n\t\tcurr = new Float32Array(6),\n\t\trslt = new Float32Array([ 1, 0, 0, 1, 0, 0 ]);\n\n\tif ( origin && Array.isArray( origin ) ) {\n\t\ttransforms.unshift([ 'translate', origin[0], origin[1] ]);\n\t\ttransforms.push([ 'translate', -origin[0], -origin[1] ]);\n\n\t} else if ( origin ) {\n\t\ttransforms.unshift([ 'translate', origin.x, origin.y ]);\n\t\ttransforms.push([ 'translate', -origin.x, -origin.y ]);\n\t}\n\n\ttransforms.forEach(function( transform ) {\n\t\tcurr[0] = curr[3] = 1;\n\t\tcurr[1] = curr[2] = curr[4] = curr[5] = 0;\n\n\t\t// convert degrees to radian\n\t\tfor ( var i = 1; i < transform.length; i++ ) {\n\t\t\tif ( transform[i] && typeof transform[i] === 'string' &&\n\t\t\t\t\trdeg.test(transform[i]) ) {\n\t\t\t\ttransform[i] = parseFloat(transform[i]) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\t\t}\n\n\t\tswitch ( transform[0] ) {\n\t\tcase 'translateX':\n\t\t\tcurr[4] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translateY':\n\t\t\tcurr[5] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translate':\n\t\t\tcurr[4] = transform[1];\n\t\t\tcurr[5] = transform[2] || 0;\n\t\t\tbreak;\n\n\t\tcase 'rotate':\n\t\t\tcurr[0] = Math.cos( transform[1] );\n\t\t\tcurr[1] = Math.sin( transform[1] );\n\t\t\tcurr[2] = -curr[1];\n\t\t\tcurr[3] = curr[0];\n\t\t\tbreak;\n\n\t\tcase 'scaleX':\n\t\t\tcurr[0] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scaleY':\n\t\t\tcurr[3] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scale':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[3] = transform.length > 2 ? transform[2] : transform[1];\n\t\t\tbreak;\n\n\t\tcase 'skewX':\n\t\t\t// stop parsing transform when encountering skewX(90)\n\t\t\t// see http://stackoverflow.com/questions/21094958/how-to-deal-with-infinity-in-a-2d-matrix\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[2] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'skewY':\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[1] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'matrix':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[1] = transform[2];\n\t\t\tcurr[2] = transform[3];\n\t\t\tcurr[3] = transform[4];\n\t\t\tcurr[4] = transform[5];\n\t\t\tcurr[5] = transform[6];\n\t\t\tbreak;\n\t\t}\n\n\t\tprev[0] = rslt[0];\n\t\tprev[1] = rslt[1];\n\t\tprev[2] = rslt[2];\n\t\tprev[3] = rslt[3];\n\t\tprev[4] = rslt[4];\n\t\tprev[5] = rslt[5];\n\n\t\trslt[0] = prev[0] * curr[0] + prev[2] * curr[1];\n\t\trslt[1] = prev[1] * curr[0] + prev[3] * curr[1];\n\t\trslt[2] = ( prev[0] * curr[2] || 0 ) + prev[2] * curr[3];\n\t\trslt[3] = ( prev[1] * curr[2] || 0 ) + prev[3] * curr[3];\n\t\trslt[4] = prev[0] * curr[4] + prev[2] * curr[5] + prev[4];\n\t\trslt[5] = prev[1] * curr[4] + prev[3] * curr[5] + prev[5];\n\t});\n\n\treturn new paper.Matrix(\n\t\trslt[0],\n\t\trslt[1],\n\t\trslt[2],\n\t\trslt[3],\n\t\trslt[4],\n\t\trslt[5]\n\t);\n};\n\nUtils.updateParameters = function( leaf, params ) {\n\tObject.keys( ( leaf.src && leaf.src.parameters ) || [] )\n\t\t.forEach(function( name ) {\n\t\t\tvar src = leaf.src.parameters[name];\n\n\t\t\tif ( src._updaters ) {\n\t\t\t\tparams[name] = src._updaters[0].apply( null, [\n\t\t\t\t\tname, [], [], leaf.parentAnchors, Utils\n\t\t\t\t].concat(\n\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\treturn params[_name];\n\t\t\t\t\t})\n\t\t\t\t));\n\t\t\t}\n\t\t});\n};\n\nUtils.updateProperties = function( leaf, params ) {\n\t( leaf.solvingOrder || [] ).forEach(function(cursor) {\n\t\tvar propName = cursor[ cursor.length - 1 ],\n\t\t\tsrc = Utils.propFromCursor( cursor, leaf.src ),\n\t\t\tobj = Utils.propFromCursor( cursor, leaf, cursor.length - 1 ),\n\t\t\t// TODO: one day we could allow multiple _updaters\n\t\t\tresult = src && src._updaters && src._updaters[0].apply( obj, [\n\t\t\t\t\tpropName, leaf.contours, leaf.anchors,\n\t\t\t\t\tleaf.parentAnchors, Utils\n\t\t\t\t].concat(\n\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\treturn params[_name];\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\n\t\t// Assume that updaters returning undefined have their own\n\t\t// assignment logic\n\t\tif ( result !== undefined ) {\n\t\t\tobj[propName] = result;\n\t\t}\n\t}, this);\n};\n\nmodule.exports = Utils;\n","var plumin = require('plumin.js'),\n\tassign = require('es6-object-assign').assign,\n\tUtils = require('./Utils.js');\n\nvar paper = plumin.paper,\n\tnaive = {},\n\t_ = { assign: assign };\n\nfunction nodeSrc( node, i, j, inSkeleton ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\tUtils.cursor( i, j, 'y' )\n\t\t] },\n\t\tall: { _dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\treturn Utils.cursor( i, j, key );\n\t\t}) },\n\t\t_dependencies: inSkeleton ?\n\t\t\t// nodes in skeleton are never fully calculated (we don't calculate\n\t\t\t// the position of handles because we never draw their contour).\n\t\t\t// So we don't care about their dependencies.\n\t\t\t[] :\n\t\t\t[ Utils.cursor( 'contours', i, 'all' ) ]\n\t};\n}\n\nfunction autoExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tx: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\ty: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\tpoint: {\n\t\t\t_dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'y' ),\n\t\t\t\tUtils.cursor( i, j, 'expand' )\n\t\t\t],\n\t\t\t_parameters: [ 'width' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar width = arguments[\n\t\t\t\t\t\targuments.length - 1\n\t\t\t\t\t];\n\n\t\t\t\tnaive.expandedNodeUpdater(\n\t\t\t\t\tnode.expandedTo[side], side === 0, width\n\t\t\t\t);\n\t\t\t} ]\n\t\t},\n\t\tall: {\n\t\t\t_dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\t\treturn Utils.cursor( i, j, key );\n\t\t\t}).concat([\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t\t]),\n\t\t\t_updaters: [ function() {\n\t\t\t\tnaive.skeletonCopier( node );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'all' )\n\t\t]\n\t};\n}\n\nfunction explicitExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'y' )\n\t\t] },\n\t\tall: { _dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\treturn Utils.cursor( i, j, 'expandedTo', side, key );\n\t\t}) },\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'points' )\n\t\t]\n\t};\n}\n\n//function expandedContourSrc( contour, i, side, nodesSrc ) {\nfunction expandedContourSrc( contour, i, side ) {\n\tvar half = contour.nodes.length / 2;\n\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function(node, j) {\n\t\t\t\treturn side !== undefined ?\n\t\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'all' ) :\n\t\t\t\t\tUtils.cursor(\n\t\t\t\t\t\ti, j % half, 'expandedTo', ( j < half ? 0 : 1 ), 'all'\n\t\t\t\t\t);\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t// nodes: nodesSrc,\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo', side || 0, 'all' )\n\t\t]\n\t};\n}\n\nfunction contourSrc( contour, i ) {\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\t\treturn Utils.cursor( i, j, 'all' );\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\treturn Utils.cursor( i, j );\n\t\t})\n\t};\n}\n\n// default method to expand skeletons:\n// derives two additional node from every node with an .expand object\nnaive.annotator = function( glyph ) {\n\tvar additionalContours = [];\n\n\tglyph.contours.forEach(function( contour, i ) {\n\t\tif ( contour.skeleton !== true ) {\n\t\t\t// annotate nodes+points that aren't in a skeleton\n\t\t\tcontour.nodes.forEach(function( node, j ) {\n\t\t\t\t_.assign( node.src, nodeSrc( node, i, j ) );\n\t\t\t});\n\n\t\t\t_.assign( contour.src, contourSrc( contour, i ) );\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar leftContour,\n\t\t\trightContour,\n\t\t\tleftNodes = [],\n\t\t\trightNodes = [],\n\t\t\tleftNodesSrc = [],\n\t\t\trightNodesSrc = [],\n\t\t\tfirstNode,\n\t\t\tlastNode;\n\n\t\t// skeletons should be hidden\n\t\tcontour.visible = false;\n\n\t\tcontour.nodes.forEach(function( node, j ) {\n\n\t\t\tvar left = new paper.Node(),\n\t\t\t\tright = new paper.Node(),\n\t\t\t\tleftSrc,\n\t\t\t\trightSrc;\n\n\t\t\tleftNodes.push(left);\n\t\t\trightNodes.unshift(right);\n\t\t\tnode.expandedTo = [ left, right ];\n\t\t\tleft.expandedFrom = right.expandedFrom = node;\n\n\t\t\tif ( !node.src.expandedTo ) {\n\t\t\t\t// annotate nodes+points that are automatically expanded\n\t\t\t\tleftSrc = autoExpandedNodeSrc( node, i, j, 0, contour.closed );\n\t\t\t\trightSrc = autoExpandedNodeSrc( node, i, j, 1, contour.closed );\n\t\t\t\tnode.src.expandedTo = [ leftSrc, rightSrc ];\n\t\t\t\t_.assign( node.src, nodeSrc( node, i, j, !!'inSkeleton' ) );\n\n\t\t\t// the expanded node might have been defined explicitely\n\t\t\t} else if ( node.src.expandedTo[0] &&\n\t\t\t\t\t!node.src.expandedTo[0]._updaters ) {\n\t\t\t\tnode.src.expandedTo.forEach(function( src, k ) {\n\t\t\t\t\tUtils.mergeStatic( node.expandedTo[k], src );\n\t\t\t\t});\n\n\t\t\t\t// annotate nodes+points that are explicitely expanded\n\t\t\t\tleftSrc = _.assign( node.src.expandedTo[0],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 0, contour.closed )\n\t\t\t\t);\n\t\t\t\trightSrc = _.assign( node.src.expandedTo[1],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 1, contour.closed )\n\t\t\t\t);\n\n\t\t\t\t// A leaf shouldn't appear twice during the recursive\n\t\t\t\t// dependency-tree building. Make the expanded nodes accessible\n\t\t\t\t// from expanded contours, and provide accessors on the\n\t\t\t\t// .expandedFrom node.\n\t\t\t\t// leftNodesSrc.push( leftSrc );\n\t\t\t\t// rightNodesSrc.push( rightSrc );\n\t\t\t}\n\n\t\t\t// if ( leftSrc && rightSrc ) {\n\t\t\t// \tObject.defineProperties( node.src.expandedTo = {}, {\n\t\t\t// \t\t0: { get: function() {\n\t\t\t// \t\t\treturn leftSrc;\n\t\t\t// \t\t}},\n\t\t\t// \t\t1: { get: function() {\n\t\t\t// \t\t\t\treturn rightSrc;\n\t\t\t// \t\t}}\n\t\t\t// \t});\n\t\t\t// }\n\t\t});\n\n\t\tif ( !contour.expandedTo && !contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes.concat(rightNodes)\n\t\t\t});\n\t\t\tcontour.expandedTo = [ leftContour ];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i\n\t\t\t\t\t//, 0, leftNodesSrc.concat( rightNodesSrc )\n\t\t\t\t)\n\t\t\t];\n\t\t\tleftContour.expandedFrom = contour;\n\t\t\tadditionalContours.push( leftContour );\n\n\t\t\tfirstNode = contour.firstNode;\n\t\t\tlastNode = contour.lastNode;\n\n\t\t\tfirstNode.type = 'corner';\n\t\t\tlastNode.type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].type = 'corner';\n\t\t\tfirstNode.expandedTo[1].type = 'corner';\n\t\t\tlastNode.expandedTo[0].type = 'corner';\n\t\t\tlastNode.expandedTo[1].type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].typeIn = 'line';\n\t\t\tfirstNode.expandedTo[1].typeOut = 'line';\n\t\t\tlastNode.expandedTo[0].typeOut = 'line';\n\t\t\tlastNode.expandedTo[1].typeIn = 'line';\n\n\t\t} else if ( !contour.expandedTo && contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes\n\t\t\t});\n\t\t\tadditionalContours.push( leftContour );\n\t\t\trightContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: rightNodes\n\t\t\t});\n\t\t\tadditionalContours.push( rightContour );\n\n\t\t\tcontour.expandedTo = [\n\t\t\t\tleftContour,\n\t\t\t\trightContour\n\t\t\t];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i, 0, leftNodesSrc ),\n\t\t\t\texpandedContourSrc( rightContour, i, 1, rightNodesSrc )\n\t\t\t];\n\t\t\tleftContour.expandedFrom = rightContour.expandedFrom = contour;\n\t\t}\n\t});\n\n\tglyph.addContours( additionalContours );\n};\n\n// Calculate expanded node position\nnaive.expandedNodeUpdater = function( node, isLeft, _width ) {\n\tvar origin = node.expandedFrom,\n\t\texpand = origin.expand,\n\t\twidth = expand && expand.width !== undefined ?\n\t\t\texpand.width : _width,\n\t\tcoef = expand && expand.distr !== undefined ?\n\t\t\t( isLeft ? expand.distr : 1 - expand.distr ) :\n\t\t\t0.5,\n\t\tangle = ( isLeft ? Math.PI : 0 ) +\n\t\t\t( expand && expand.angle !== undefined ?\n\t\t\t\texpand.angle :\n\t\t\t\t// We resort to using directions.\n\t\t\t\t// This is wrong, directions are not included in the\n\t\t\t\t// dependencies of the updater and might not be ready yet.\n\t\t\t\t// TODO: Fix this (always require angle to be specified?)\n\t\t\t\t( origin._dirOut !== undefined ?\n\t\t\t\t\torigin._dirOut - Math.PI / 2 :\n\t\t\t\t\torigin._dirIn + Math.PI / 2\n\t\t\t\t)\n\t\t\t);\n\n\t// position\n\tnode.point.x = origin.point.x + ( width * coef * Math.cos( angle ) );\n\tnode.point.y = origin.point.y + ( width * coef * Math.sin( angle ) );\n};\n\n// copy skeleton properties such as types, directions and tensions to expanded\n// nodes\nnaive.skeletonCopier = function( node ) {\n\tvar angle = node.expand && node.expand.angle || 0,\n\t\tleft = node.expandedTo[0],\n\t\tright = node.expandedTo[1];\n\n\t// node type\n\tif ( node.type !== undefined ) {\n\t\tleft.type = right.type = node.type;\n\t}\n\n\t// direction type\n\tif ( node.typeIn !== undefined ) {\n\t\tleft.typeIn = right.typeOut = node.typeIn;\n\t}\n\tif ( node.typeOut !== undefined ) {\n\t\tleft.typeOut = right.typeIn = node.typeOut;\n\t}\n\n\t// direction\n\tif ( node._dirIn !== undefined ) {\n\t\tleft._dirIn = right._dirOut = node._dirIn;\n\n\t\tif ( node.type === 'smooth' && node._dirOut === undefined ) {\n\t\t\tleft._dirOut = right._dirIn = node._dirIn + Math.PI;\n\t\t}\n\t}\n\tif ( node._dirOut !== undefined ) {\n\t\tleft._dirOut = right._dirIn = node._dirOut;\n\n\t\tif ( node.type === 'smooth' && node._dirIn === undefined ) {\n\t\t\tleft._dirIn = right._dirOut = node._dirOut + Math.PI;\n\t\t}\n\t}\n\t// use angle if direction isn't already defined\n\tif ( left._dirIn === undefined ) { // implies right._dirOut === undefined\n\t\tleft._dirIn = angle - Math.PI / 2;\n\t\tright._dirOut = angle + Math.PI / 2;\n\t}\n\tif ( left._dirOut === undefined ) { // implies right._dirIn === undefined\n\t\tleft._dirOut = angle + Math.PI / 2;\n\t\tright._dirIn = angle - Math.PI / 2;\n\t}\n\n\t// tension\n\tleft.tensionIn = right.tensionOut = node.tensionIn !== undefined ?\n\t\tnode.tensionIn :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n\tleft.tensionOut = right.tensionIn = node.tensionOut !== undefined ?\n\t\tnode.tensionOut :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n};\n\n// Make sure 'line' types are set on both side of segments\n// and if a smooth node is used in a straight segment, update the directions\n// appropriately this can only be done once the types, directions and position\n// of all nodes have been updated can be renamed #prepareLines if no other\n// operation is added\n// TODO: try doing it at the same time as updateContour (once we have more\n// complex glyphs)\nnaive.prepareContour = function( path ) {\n\tpath.nodes.forEach(function(node) {\n\t\tif ( node.typeIn === 'line' && node.previous ) {\n\t\t\tnode.previous.typeOut = 'line';\n\n\t\t\tif ( node.type === 'smooth' ) {\n\t\t\t\tnode._dirIn = Utils.lineAngle(\n\t\t\t\t\tnode.point, node.previous.point\n\t\t\t\t);\n\t\t\t\tnode._dirOut = node._dirIn + Math.PI;\n\t\t\t}\n\t\t}\n\n\t\tif ( node.typeOut === 'line' && node.next ) {\n\t\t\tnode.next.typeIn = 'line';\n\n\t\t\tif ( node.type === 'smooth' ) {\n\t\t\t\tnode._dirOut = Utils.lineAngle(\n\t\t\t\t\tnode.point, node.next.point\n\t\t\t\t);\n\t\t\t\tnode._dirIn = node._dirOut + Math.PI;\n\t\t\t}\n\t\t}\n\t});\n};\n\n// sets the position of control points\n// can be renamed #updateControls if no other operation is added\nnaive.updateContour = function( path, curviness ) {\n\tif ( curviness === undefined ) {\n\t\tcurviness = 2 / 3;\n\t}\n\n\tpath.nodes.forEach(function(node) {\n\t\tvar start = node,\n\t\t\tend,\n\t\t\tstartCtrl,\n\t\t\tendCtrl,\n\t\t\tstartType,\n\t\t\tendType,\n\t\t\tstartTension,\n\t\t\tendTension,\n\t\t\tstartDir,\n\t\t\tendDir,\n\t\t\trri;\n\n\t\tif ( !node.next ) {\n\t\t\treturn;\n\t\t}\n\n\t\tend = node.next;\n\t\tstartCtrl = start.handleOut;\n\t\tendCtrl = end.handleIn;\n\n\t\tstartType = start.typeOut;\n\t\tendType = end.typeIn;\n\n\t\tif ( startType === 'line' || endType === 'line' ) {\n\t\t\tstartCtrl.x = 0;\n\t\t\tstartCtrl.y = 0;\n\t\t\tendCtrl.x = 0;\n\t\t\tendCtrl.y = 0;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartTension = start.tensionOut !== undefined ?\n\t\t\tstart.tensionOut :\n\t\t\t( start.tension !== undefined ? start.tension : 1 );\n\t\tendTension = end.tensionIn !== undefined ?\n\t\t\tend.tensionIn :\n\t\t\t( end.tension !== undefined ? end.tension : 1 );\n\n\t\tstartDir = start._dirOut !== undefined ?\n\t\t\tstart._dirOut :\n\t\t\t( start.type === 'smooth' ? start._dirIn + Math.PI : 0 );\n\t\tendDir = end._dirIn !== undefined ?\n\t\t\tend._dirIn :\n\t\t\t( end.type === 'smooth' ? end._dirOut - Math.PI : 0 );\n\n\t\trri = Utils.rayRayIntersection(\n\t\t\tstart._point,\n\t\t\tstartDir,\n\t\t\tend._point,\n\t\t\tendDir\n\t\t);\n\n\t\t// direction of handles is parallel\n\t\tif ( rri === null ) {\n\t\t\tvar angle = Utils.lineAngle( start._point, end._point ),\n\t\t\t\tmiddle = {\n\t\t\t\t\tx: ( end._point.x - start._point.x ) / 2 + start._point.x,\n\t\t\t\t\ty: ( end._point.y - start._point.y ) / 2 + start._point.y\n\t\t\t\t},\n\t\t\t\tp0 = Utils.rayRayIntersection(\n\t\t\t\t\tstart._point, startDir, middle, angle - Math.PI / 2\n\t\t\t\t),\n\t\t\t\tp1 = Utils.rayRayIntersection(\n\t\t\t\t\tmiddle, angle + Math.PI / 2, end._point, endDir\n\t\t\t\t);\n\n\t\t\tstartCtrl.x = ( Math.round(p0[0]) - start._point.x ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tstartCtrl.y = ( Math.round(p0[1]) - start._point.y ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tendCtrl.x = ( Math.round(p1[0]) - end._point.x ) *\n\t\t\t\tcurviness * endTension;\n\t\t\tendCtrl.y = ( Math.round(p1[1]) - end._point.y ) *\n\t\t\t\tcurviness * endTension;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartCtrl.x = ( Math.round(rri[0]) - start.point.x ) *\n\t\t\tcurviness * startTension;\n\t\tstartCtrl.y = ( Math.round(rri[1]) - start.point.y ) *\n\t\t\tcurviness * startTension;\n\t\tendCtrl.x = ( Math.round(rri[0]) - end.point.x ) *\n\t\t\tcurviness * endTension;\n\t\tendCtrl.y = ( Math.round(rri[1]) - end.point.y ) *\n\t\t\tcurviness * endTension;\n\t});\n};\n\nvar rdeg = /deg$/;\nObject.defineProperties(paper.PaperScope.prototype.Segment.prototype, {\n\texpand: {\n\t\tget: function() {\n\t\t\treturn this._expand;\n\t\t},\n\t\tset: function( expand ) {\n\t\t\tif ( typeof expand.angle === 'string' && rdeg.test(expand.angle) ) {\n\t\t\t\texpand.angle = parseFloat(expand.angle) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\n\t\t\tthis._expand = expand;\n\t\t}\n\t},\n\tdirIn: {\n\t\tget: function() {\n\t\t\treturn this._dirIn;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirIn = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirIn = dir;\n\t\t\t}\n\t\t}\n\t},\n\tdirOut: {\n\t\tget: function() {\n\t\t\treturn this._dirOut;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirOut = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirOut = dir;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = naive;\n","/*jshint -W098 */\nvar plumin = require('plumin.js'),\n\tassign = require('es6-object-assign').assign,\n\tUtils = require('./Utils.js'),\n\tnaive = require('./naive.js');\n\nvar paper = plumin.paper,\n\t_ = { assign: assign };\n\nfunction parametricFont( src ) {\n\tvar font = Utils.fontFromSrc( src );\n\n\tObject.keys( src.glyphs ).forEach(function( name ) {\n\t\tvar glyphSrc = src.glyphs[name];\n\n\t\tUtils.ufoToPaper( glyphSrc );\n\n\t\t// turn ._operation strings to ._updaters functions\n\t\tUtils.createUpdaters( glyphSrc, 'glyphs/glyph_' + name );\n\n\t\tvar glyph = Utils.glyphFromSrc( glyphSrc, src, naive );\n\n\t\tfont.addGlyph( glyph );\n\n\t\t// Create additional paths for skeletons and set ._dependencies\n\t\t// appropriately\n\t\tnaive.annotator( glyph );\n\n\t\t// solvingOrder might be already available (if this is a subcomponent,\n\t\t// or precomputed in a worker)\n\t\tif ( !glyph.solvingOrder ) {\n\t\t\tglyph.solvingOrder = glyphSrc.solvingOrder =\n\t\t\t\tUtils.solveDependencyTree( glyph );\n\t\t}\n\t});\n\n\t// all glyphs are ready, embed components now\n\tfont.glyphs.forEach(function( _glyph ) {\n\t\tif ( _glyph.embedComponents ) {\n\t\t\t_glyph.embedComponents();\n\t\t}\n\t});\n\n\treturn font;\n}\n\nplumin.parametricFont = parametricFont;\nplumin.Utils = Utils;\nplumin.Utils.naive = naive;\n\npaper.PaperScope.prototype.Font.prototype.update = function( params, set ) {\n\tvar font = this,\n\t\tmatrix;\n\n\tUtils.updateParameters( font, params );\n\n\tUtils.updateProperties( font, params );\n\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.update( params );\n\t}, this);\n\n\tif ( font.transforms ) {\n\t\tmatrix = Utils.transformsToMatrix(\n\t\t\tfont.transforms.slice(0), font.transformOrigin\n\t\t);\n\n\t\tfont.applyMatrix = false;\n\t\tfont.matrix = matrix;\n\t}\n\n\treturn this;\n};\n\n/* Update the shape of the glyph, according to formula and parameters\n * 0. before running, nodes have already been created by ParametricFont\n *   (including expanded ones thanks to naive.expandSkeletons). And static\n *   properties have been copied over to those nodes\n * 1. We use the solving order to calculate all node properties\n * 2. transform contours\n * 3. Update components and transform them\n */\npaper.PaperScope.prototype.Glyph.prototype.update = function( _params ) {\n\tvar glyph = this,\n\t\tfont = glyph.parent,\n\t\tmatrix,\n\t\tparams;\n\n\t// 0. calculate local parameters\n\tparams = _.assign( {}, _params, glyph.parameters, glyph.parentParameters );\n\n\tUtils.updateParameters( glyph, params );\n\n\t// parentParameters always overwrite glyph parameters. Use aliases\n\t// (e.g. _width) to let glyph hav the final word\n\t_.assign( params, glyph.parentParameters );\n\n\t// 1. calculate node properties\n\tUtils.updateProperties( glyph, params );\n\n\t// 2. transform contours\n\tthis.contours.forEach(function(contour) {\n\t\t// a. transform the nodes\n\t\tcontour.nodes.forEach(function(node) {\n\t\t\tif ( node.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tnode.transforms.slice(0), node.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\t\t// We don't want to apply the transforms immediatly,\n\t\t\t\t\t// otherwise the transformation will add-up on each\n\t\t\t\t\t// update.\n\t\t\t\t\tnode.applyMatrix = false;\n\t\t\t\t\tnode.matrix = matrix;\n\n\t\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t\t// expanded items\n\t\t\t\t} else {\n\t\t\t\t\tnode.expandedTo.forEach(function( _node ) {\n\t\t\t\t\t\t_node.applyMatrix = false;\n\t\t\t\t\t\t_node.matrix = matrix;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// b. transform the contour\n\t\t// prepare and update outlines and expanded contours, but not\n\t\t// skeletons\n\t\tif ( contour.transforms ) {\n\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\tcontour.transforms.slice(0), contour.transformOrigin\n\t\t\t);\n\n\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\tcontour.applyMatrix = false;\n\t\t\t\tcontour.matrix = matrix;\n\n\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t// expanded items\n\t\t\t} else {\n\t\t\t\tcontour.expandedTo.forEach(function( _contour ) {\n\t\t\t\t\t_contour.applyMatrix = false;\n\t\t\t\t\t_contour.matrix = matrix;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, this);\n\n\t// 3. update components and transform components\n\tif ( this.components.length && font ) {\n\t\t// subcomponents have the parent component as their parent\n\t\t// so search for the font\n\t\twhile ( !('glyphs' in font) ) {\n\t\t\tfont = font.parent;\n\t\t}\n\n\t\tthis.components.forEach(function(component) {\n\t\t\tcomponent.update( params );\n\n\t\t\tif ( component.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tcomponent.transforms.slice(0), component.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tcomponent.applyMatrix = false;\n\t\t\t\tcomponent.matrix = matrix;\n\t\t\t}\n\t\t}, this);\n\t}\n\n\t// 4. transform whole glyph\n\tif ( glyph.transforms ) {\n\t\tmatrix = Utils.transformsToMatrix(\n\t\t\tglyph.transforms.slice(0), glyph.transformOrigin\n\t\t);\n\n\t\tglyph.applyMatrix = false;\n\t\tglyph.matrix = matrix;\n\t}\n\n\treturn this;\n};\n\n// Before updating SVG or OpenType data, we must determine paths exports\n// directions. Basically, everything needs to be clockwise.\n// this method needs to be called only after the first update\npaper.PaperScope.prototype.Outline.prototype.prepareDataUpdate = function() {\n\tthis.children.forEach(function(contour) {\n\t\t// expanded contours are handled from their skeleton\n\t\tif ( contour.expandedFrom ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( contour.skeleton !== true ) {\n\t\t\tcontour.export = 'clockwise';\n\n\t\t} else {\n\t\t\tcontour.expandedTo[0].export = 'clockwise';\n\n\t\t\tif ( contour.expandedTo[1] ) {\n\t\t\t\tcontour.expandedTo[0].export = contour.clockwise ?\n\t\t\t\t\t'clockwise' :\n\t\t\t\t\t'anticlockwise';\n\n\t\t\t\tcontour.expandedTo[1].export = contour.clockwise ?\n\t\t\t\t\t'anticlockwise' :\n\t\t\t\t\t'clockwise';\n\t\t\t}\n\t\t}\n\t});\n};\n\nvar updateSVGData =\n\t\tpaper.PaperScope.prototype.Outline.prototype.updateSVGData,\n\tupdateOTCommands =\n\t\tpaper.PaperScope.prototype.Outline.prototype.updateOTCommands;\n\npaper.PaperScope.prototype.Outline.prototype.updateSVGData = function() {\n\tif ( !this.isPrepared ) {\n\t\tthis.prepareDataUpdate();\n\t\tthis.isPrepared = true;\n\t}\n\n\tupdateSVGData.apply( this, arguments );\n};\n\npaper.PaperScope.prototype.Outline.prototype.updateOTCommands = function() {\n\tif ( !this.isPrepared ) {\n\t\tthis.prepareDataUpdate();\n\t\tthis.isPrepared = true;\n\t}\n\n\tupdateOTCommands.apply( this, arguments );\n};\n\nmodule.exports = plumin;\n","var Utils = {};\n\n// The following function should be useless, thanks to paper\nUtils.lineLineIntersection = function( p1, p2, p3, p4 ) {\n\tvar x1 = p1.x,\n\t\ty1 = p1.y,\n\t\tx2 = p2.x,\n\t\ty2 = p2.y,\n\t\tx3 = p3.x,\n\t\ty3 = p3.y,\n\t\tx4 = p4.x,\n\t\ty4 = p4.y,\n\t\td = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n\tif ( d === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn new Float32Array([\n\t\t( (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4) ) /\n\t\td,\n\t\t( (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4) ) /\n\t\td\n\t]);\n};\n\n// Find the intersection of two rays.\n// A ray is defined by a point and an angle.\nUtils.rayRayIntersection = function( p1, a1, p2, a2 ) {\n\t// line equations\n\tvar a = Math.tan(a1),\n\t\tb = Math.tan(a2),\n\t\tc = p1.y - a * p1.x,\n\t\td = p2.y - b * p2.x,\n\t\tx,\n\t\ty;\n\n\t// When searching for lines intersection,\n\t// angles can be normalized to 0 < a < PI\n\t// This will be helpful in detecting special cases below.\n\ta1 = a1 % Math.PI;\n\tif ( a1 < 0 ) {\n\t\ta1 += Math.PI;\n\t}\n\ta2 = a2 % Math.PI;\n\tif ( a2 < 0 ) {\n\t\ta2 += Math.PI;\n\t}\n\n\t// no intersection\n\tif ( a1 === a2 ) {\n\t\treturn null;\n\t}\n\n\t// Optimize frequent and easy special cases.\n\t// Without optimization, results would be incorrect when cos(a) === 0\n\tif ( a1 === 0 ) {\n\t\ty = p1.y;\n\t} else if ( a1 === Math.PI / 2 ) {\n\t\tx = p1.x;\n\t}\n\tif ( a2 === 0 ) {\n\t\ty = p2.y;\n\t} else if ( a2 === Math.PI / 2 ) {\n\t\tx = p2.x;\n\t}\n\n\t// easiest case\n\tif ( x !== undefined && y !== undefined ) {\n\t\treturn new Float32Array([ x, y ]);\n\t}\n\n\t// other cases that can be optimized\n\tif ( a1 === 0 ) {\n\t\treturn new Float32Array([ ( y - d ) / b, y ]);\n\t}\n\tif ( a1 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, b * x + d ]);\n\t}\n\tif ( a2 === 0 ) {\n\t\treturn new Float32Array([ ( y - c ) / a, y ]);\n\t}\n\tif ( a2 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, a * x + c ]);\n\t}\n\n\t// intersection from two line equations\n\t// algo: http://en.wikipedia.org/wiki/Line–line_intersection#Given_the_equations_of_the_lines\n\treturn new Float32Array([\n\t\tx = (d - c) / (a - b),\n\t\t// this should work equally well with ax+c or bx+d\n\t\ta * x + c\n\t]);\n};\n\n// return the angle between two points\nUtils.lineAngle = function( p0, p1 ) {\n\treturn Math.atan2( p1.y - p0.y, p1.x - p0.x );\n};\n\nUtils.onLine = function( params ) {\n\tvar origin = params.on[0],\n\t\tvector = [\n\t\t\tparams.on[1].x - params.on[0].x,\n\t\t\tparams.on[1].y - params.on[0].y\n\t\t];\n\n\treturn 'x' in params ?\n\t\t( params.x - origin.x ) / vector[0] * vector[1] + origin.y :\n\t\t( params.y - origin.y ) / vector[1] * vector[0] + origin.x;\n};\n\nUtils.pointOnCurve = function(pointHandleOut,\n\tpointHandleIn,\n\tdistanceFromOut,\n\tlinePrecision) {\n\tlinePrecision = linePrecision || 3;\n\tvar length = 0;\n\tvar previousPoint;\n\n\tvar points = [\n\t\tpointHandleOut.point,\n\t\tpointHandleOut.point.add(pointHandleOut.handleOut),\n\t\tpointHandleIn.point.add(pointHandleIn.handleIn),\n\t\tpointHandleIn.point\n\t];\n\n\tfor (var i = 0; i < linePrecision; i++) {\n\t\tvar point = Utils.deCasteljau(points,\n\t\t\t( i / ( linePrecision - 1 ) ) );\n\n\t\tif (previousPoint) {\n\t\t\tlength += Utils.distance(previousPoint.x,\n\t\t\t\tpreviousPoint.y,\n\t\t\t\tpoint.x,\n\t\t\t\tpoint.y);\n\n\t\t}\n\n\t\tpreviousPoint = point;\n\t}\n\n\tvar t = length === 0 ? 0 : distanceFromOut / length;\n\n\tt = Math.max(0.1, Math.min(1, t));\n\n    return Utils.deCasteljau(points, t);\n};\n\nUtils.deCasteljau = function(points, t) {\n\tvar newPoints = [];\n\tfor (var i = 1; i < points.length; i++) {\n\t\tnewPoints.push(\n\t\t\tpoints[i - 1]\n\t\t\t\t.multiply(1 - t)\n\t\t\t\t.add(\n\t\t\t\t\tpoints[i]\n\t\t\t\t\t\t.multiply(t)\n\t\t\t\t)\n\t\t\t);\n\t}\n\n\tif (newPoints.length === 1) {\n\t\treturn newPoints[0];\n\t} else {\n\t\treturn Utils.deCasteljau(newPoints, t);\n\t}\n};\n\nUtils.distance = function(x1, y1, x2, y2) {\n\treturn Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y1 - y2, 2));\n};\n\nUtils.log = function() {\n\tconsole.log.apply( console, arguments );\n\treturn arguments[0];\n};\n\nmodule.exports = Utils;\n"]}