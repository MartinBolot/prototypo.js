{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/deptree/index.js","node_modules/lodash.merge/index.js","node_modules/lodash.merge/node_modules/lodash._arraycopy/index.js","node_modules/lodash.merge/node_modules/lodash._arrayeach/index.js","node_modules/lodash.merge/node_modules/lodash._basefor/index.js","node_modules/lodash.merge/node_modules/lodash._createassigner/index.js","node_modules/lodash.merge/node_modules/lodash._createassigner/node_modules/lodash._bindcallback/index.js","node_modules/lodash.merge/node_modules/lodash._createassigner/node_modules/lodash._isiterateecall/index.js","node_modules/lodash.merge/node_modules/lodash.isarguments/index.js","node_modules/lodash.merge/node_modules/lodash.isarray/index.js","node_modules/lodash.merge/node_modules/lodash.isnative/index.js","node_modules/lodash.merge/node_modules/lodash.isplainobject/index.js","node_modules/lodash.merge/node_modules/lodash.istypedarray/index.js","node_modules/lodash.merge/node_modules/lodash.keys/index.js","node_modules/lodash.merge/node_modules/lodash.keysin/index.js","node_modules/lodash.merge/node_modules/lodash.toplainobject/index.js","node_modules/lodash.merge/node_modules/lodash.toplainobject/node_modules/lodash._basecopy/index.js","node_modules/plumin.js/dist/plumin.js","src/Utils.js","src/naive.js","src/prototypo.js","src/updateUtils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","prototypo","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"DepTree","nodes","prototype","add","node","dependants","Array","resolveNode","resolved","processing","deps","forEach","dep","indexOf","push","resolve","arrayCopy","arrayEach","baseFor","createAssigner","isArguments","isArray","isNative","isPlainObject","isTypedArray","keys","keysIn","toPlainObject","isObjectLike","value","MAX_SAFE_INTEGER","Math","pow","baseForOwn","object","iteratee","baseMerge","source","customizer","stackA","stackB","isObject","isSrcArr","isLength","srcValue","key","baseMergeDeep","result","undefined","isCommon","mergeFunc","type","merge","array","index","createBaseFor","fromRight","keysFunc","iterable","toObject","props","Object","bindCallback","isIterateeCall","assigner","args","arguments","thisArg","guard","func","argCount","identity","collection","accumulator","other","apply","isIndex","prereq","argsTag","objectProto","objToString","toString","arrayTag","funcTag","reHostCtor","reRegExpChars","reHasRegExpChars","RegExp","baseToString","fnToString","Function","reNative","escapeRegExp","replace","nativeIsArray","test","string","objectTag","hasOwnProperty","getPrototypeOf","baseForIn","shimIsPlainObject","Ctor","constructor","subValue","valueOf","objProto","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","typedArrayTags","propertyIsEnumerable","nativeKeys","support","x","nonEnumArgs","shimKeys","propsLength","allowIndexes","isProto","skipIndexes","baseCopy","plumin","opentype","argument","predicate","message","assert",2,"line","ctx","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke",3,"cffStandardStrings","cffStandardEncoding","cffExpertEncoding","standardNames","DefaultEncoding","font","charToGlyphIndex","c","glyphs","glyph","j","charCodeAt","unicodes","CmapEncoding","cmap","glyphIndexMap","CffEncoding","encoding","charset","charName","GlyphNames","post","version","names","slice","numberOfGlyphs","glyphNameIndex","nameToGlyphIndex","name","glyphIndexToName","gid","addGlyphNames","charCodes","glyphIndex","tables","addUnicode","parseInt","cffEncoding","glyphNames",4,"path","sfnt","Font","options","familyName","styleName","designer","designerURL","manufacturer","manufacturerURL","license","licenseURL","description","copyright","trademark","unitsPerEm","ascender","descender","supported","hasChar","charToGlyph","stringToGlyphs","nameToGlyph","nametoGlyphIndex","getKerningValue","leftGlyph","rightGlyph","gposKerning","getGposKerningValue","kerningPairs","forEachGlyph","text","y","fontSize","callback","kerning","fontScale","kerningValue","advanceWidth","getPath","fullPath","Path","gX","gY","gFontSize","glyphPath","extend","draw","drawPoints","drawMetrics","validate","warnings","assertStringAttribute","attrName","trim","toTables","fontToTable","toBuffer","sfntTable","bytes","encode","buffer","ArrayBuffer","intArray","Uint8Array","download","fileName","requestFileSystem","webkitRequestFileSystem","TEMPORARY","byteLength","fs","root","getFile","create","fileEntry","createWriter","writer","dataView","DataView","blob","Blob","write","addEventListener","location","href","toURL","err","./encoding","./path","./tables/sfnt",5,"check","Glyph","unicode","xMin","yMin","xMax","yMax","scale","p","commands","cmd","quadraticCurveTo","curveTo","closePath","getContours","contours","currentContour","pt","points","lastPointOfContour","getMetrics","xCoords","yCoords","metrics","min","max","leftSideBearing","rightSideBearing","drawCircles","PI_SQ","PI","arc","fill","blueCircles","redCircles","fillStyle","lineWidth","strokeStyle","./check","./draw",6,"_font","parse","cff","glyf","gpos","head","hhea","hmtx","kern","loca","maxp","_name","os2","toArrayBuffer","arrayBuffer","data","loadFromFile","readFile","loadFromUrl","url","request","XMLHttpRequest","open","responseType","onload","status","statusText","response","send","parseBuffer","numTables","tag","offset","hmtxOffset","glyfOffset","locaOffset","cffOffset","kernOffset","gposOffset","indexToLocFormat","numGlyphs","locaTable","shortVersion","getFixed","outlinesFormat","getTag","getUShort","getULong","numberOfHMetrics","fontFamily","fontSubfamily","load","isNode","loadFn","./font","./glyph","./parse","./tables/cff","./tables/cmap","./tables/glyf","./tables/gpos","./tables/head","./tables/hhea","./tables/hmtx","./tables/kern","./tables/loca","./tables/maxp","./tables/name","./tables/os2","./tables/post",7,"getByte","getUint8","getCard8","getUint16","getCard16","getShort","getInt16","getUint32","decimal","fraction","String","fromCharCode","getInt8","getOffset","offSize","v","getBytes","startOffset","endOffset","bytesToString","typeOffsets","byte","uShort","short","uLong","fixed","longDateTime","Parser","relativeOffset","parseByte","parseChar","parseCard8","parseUShort","parseCard16","parseSID","parseOffset16","parseShort","parseF2Dot14","parseULong","parseFixed","parseOffset16List","parseUShortList","count","offsets","parseString","parseTag","parseLongDateTime","parseVersion","major","minor","skip","amount",8,"strokeWidth","bezierCurveTo","quadTo","close","pathOrCommands","toPathData","decimalPlaces","floatToString","round","toFixed","packValues","d","toSVG","svg",9,"sizeOf","Table","tableName","fields","field","optionKeys","k","sizeOfFunction","TABLE","./types",10,"_glyph","table","equals","b","parseCFFIndex","start","conversionFn","objects","offsetSize","objectOffset","pos","parseFloatOperand","parser","eof","lookup","n1","n2","parseFloat","parseOperand","b0","b1","b2","b3","b4","entriesToObject","entries","values","parseCFFDict","size","operands","op","getCFFString","strings","interpretDict","dict","meta","m","newDict","parseCFFHeader","header","formatMajor","formatMinor","TOP_DICT_META","PRIVATE_DICT_META","parseCFFTopDict","parseCFFPrivateDict","parseCFFCharset","nGlyphs","format","sid","parseCFFEncoding","enc","nCodes","nRanges","first","nLeft","parseCFFCharstring","stack","nStems","haveWidth","width","c1x","c1y","c2x","c2y","defaultWidthX","newContour","parseStems","hasWidthArg","shift","nominalWidthX","codeIndex","subrCode","pop","subrsBias","subrs","jpx","jpy","c3x","c3y","c4x","c4y","fd","abs","console","log","gsubrsBias","gsubrs","calcCFFSubroutineBias","bias","parseCFFTable","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDict","privateDictOffset","privateDict","subrOffset","subrIndex","charString","charStringsIndex","topDictData","charStrings","encodeString","makeHeader","makeNameIndex","fontNames","makeDict","attrs","entry","makeTopDict","makeTopDictIndex","topDicts","makeStringIndex","makeGlobalSubrIndex","makeCharsets","glyphName","glyphSID","glyphToOps","ops","dx","dy","dx1","dy1","dx2","dy2","_13","_23","makeCharStringsIndex","makePrivateDict","makePrivateDictIndex","privateDicts","makeCFFTable","fullName","weight","weightName","private","privateAttrs","postScriptName","charsets","privateDictIndex","make","../encoding","../glyph","../parse","../path","../table",11,"parseCmapTable","platformId","encodingId","segCount","endCountParser","startCountParser","idDeltaParser","idRangeOffsetParser","glyphIndexOffset","endCount","startCount","idDelta","idRangeOffset","numtables","language","addSegment","segments","end","delta","addTerminatorSegment","makeCmapTable","segCountX2","searchRange","floor","entrySelector","rangeShift","endCounts","startCounts","idDeltas","idRangeOffsets","glyphIds","segment","concat","glyphId","../check",12,"parseGlyphCoordinate","flag","previousValue","shortVectorBitMask","sameBitMask","parseGlyph","flags","endPointIndices","numberOfCoordinates","repeatCount","point","px","py","component","moreComponents","numberOfContours","instructionLength","instructions","onCurve","isComposite","components","xScale","scale01","scale10","yScale","transformPoints","transform","newPoints","newPt","realFirstPoint","contour","firstPt","prevPt","midPt","curvePt","lastPt","parseGlyfTable","nextOffset","componentGlyph","transformedPoints",13,"parseTaggedListTable","list","parseCoverageTable","begin","coverage","parseClassDefTable","startGlyph","glyphCount","classes","glyphID","rangeCount","startGlyphs","endGlyphs","classValues","parsePairPosSubTable","coverageOffset","valueFormat1","valueFormat2","sharedPairSets","firstGlyph","secondGlyph","value1","value2","pairSetCount","pairSetOffsets","pairSetOffset","sharedPairSet","pairValueCount","pairSet","pairs","classDef1Offset","classDef2Offset","class1Count","class2Count","getClass1","getClass2","kerningMatrix","kerningRow","covered","class1","class2","parseLookupTable","lookupType","lookupFlag","useMarkFilteringSet","subTableCount","subTableOffsets","subtables","markFilteringSet","parseGposTable","tableVersion","lookupListOffset","scriptList","featureList","lookupCount","lookupTableOffsets","lookupListAbsoluteOffset",14,"parseHeadTable","fontRevision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","glyphDataFormat","makeHeadTable",15,"parseHheaTable","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","makeHheaTable",16,"parseHmtxTable","numMetrics","makeHmtxTable",17,"parseKernTable","subTableVersion","nPairs","leftIndex","rightIndex",18,"parseLocaTable","parseFn","glyphOffsets","glyphOffset",19,"parseMaxpTable","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","makeMaxpTable",20,"nameTableNames","parseNameTable","stringOffset","platformID","encodingID","languageID","nameID","property","str","codePoints","unknownCount","langTagCount","makeNameRecord","addMacintoshNameRecord","recordID","stringBytes","STRING","records","addWindowsNameRecord","utf16Bytes","UTF16","makeNameTable","../types",21,"parseOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContent","makeOS2Table",22,"parsePostTable","nameLength","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","makePostTable",23,"log2","computeCheckSum","sum","makeTableRecord","checkSum","makeSfntTable","highestPowerOf2","recordFields","tableFields","tableLength","tableRecord","isNaN","sort","r1","r2","metricsForChar","chars","notFoundMetrics","charCodeBounds","minCode","maxCode","average","vs","fontToSfntTable","xMins","yMins","xMaxs","yMaxs","advanceWidths","leftSideBearings","rightSideBearings","globals","advanceWidthAvg","maxLeftSideBearing","headTable","hheaTable","maxpTable","codeBounds","os2Table","hmtxTable","cmapTable","nameTable","uniqueID","preferredFamily","preferredSubfamily","postTable","cffTable","./cff","./cmap","./head","./hhea","./hmtx","./maxp","./name","./os2","./post",24,"LIMIT16","LIMIT32","decode","constant","BYTE","CHAR","CHARARRAY","USHORT","SHORT","UINT24","ULONG","LONG","FIXED","FWORD","UFWORD","LONGDATETIME","TAG","Card8","Card16","OffSize","SID","NUMBER","NUMBER16","NUMBER32","NAME","INDEX","offsetEncoder","encodedOffsets","encodedOffset","dataSize","OBJECT","DICT","OPERAND","OPERATOR","OP","wmm","WeakMap","CHARSTRING","has","get","set","encodingFunction","LITERAL","paper","noCanvas","process","browser","WorkerGlobalScope","Base","hidden","iter","bind","forIn","proto","__proto__","describe","getOwnPropertyDescriptor","obj","__lookupGetter__","__lookupSetter__","enumerable","configurable","writable","_define","defineProperty","desc","__defineGetter__","__defineSetter__","inject","dest","src","beans","preserve","beansNames","val","substring","isFunc","res","prev","bean","base","match","toLowerCase","part","each","getLength","exclude","statics","ctor","initialize","clone","pick","_id","_class","Formatter","instance","number","join","getClassName","exportJSON","toJSON","serialize","_set","dontCheck","orig","_filtering","obj1","obj2","checkKeys","o1","o2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","formatter","precision","definitions","references","item","id","ref","unshift","_serialize","_compact","deserialize","json","_data","isRoot","isDictionary","JSON","stringify","importJSON","target","isTarget","Item","Layer","insert","splice","items","remove","append","_index","removed","capitalize","toUpperCase","camelize","all","chr","hyphenate","Emitter","on","_eventTypes","handlers","_callbacks","install","off","uninstall","once","emit","event","stop","responds","attach","detach","fire","_installEvents","events","_events","types","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","project","projects","tools","palettes","_scopes","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","navigator","userAgent","v1","v2","rv","chrome","versionNumber","webkit","atom","getView","getPaper","execute","PaperScript","View","updateFocus","scope","that","setup","element","Project","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","val1","val2","separator","height","rectangle","Numerical","abscissas","weights","sqrt","TOLERANCE","EPSILON","MACHINE_EPSILON","KAPPA","isZero","integrate","w","A","B","Ax","findRoot","df","tolerance","fx","nx","solveQuadratic","roots","Infinity","D","gmC","mult","LOG10E","isFinite","R","q","solveCubic","c2","ec","x0","qd","tmp","Point","arg0","arg1","hasY","angle","setAngle","setLength","_angle","cos","sin","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","atan2","div","NaN","dot","acos","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","current","rotate","center","subtract","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","contains","isClose","isColinear","isOrthogonal","point1","point2","random","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","to","next","rect","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","left","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","concatenate","a1","c1","d1","a2","d2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","bounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","apx","apy","avx","avy","bpx","bpy","bvx","bvy","ta","tb","vx","vy","v2x","v2y","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","_drawSelection","Symbol","dontCenter","setDefinition","_definition","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","position","PlacedSymbol","symbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","visible","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","parent","setParent","mouseFlags","mousedown","mousedrag","click","doubleclick","mouseup","mousemove","mouseenter","mouseleave","mouseEvent","counters","_eventCounters","onFrame","_animateItem","onLoad","animate","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","children","_children","namedChildren","_namedChildren","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getRegistration","setRegistration","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","child","setBounds","cache","_boundsCache","ids","cached","_internal","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","copy","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","ceil","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","getIntersections","guides","parentTotalMatrix","_totalMatrix","view","totalMatrix","tolerancePadding","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","class","checkBounds","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","matches","compare","matchObject","firstOnly","overlapping","inside","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","reduce","namedArray","notifyParent","replaceWith","reverseChildren","reverse","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","toCanvasStyle","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","getViewMatrix","normalBlend","nativeBlend","direct","dontStart","clip","_canComposite","mainCtx","itemOffset","prevOffset","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","getWindingRule","getCornerCenter","halfSize","dir","corner","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","getElement","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","modify","setContext","context","toDataURL","loaded","update","document","getElementById","Image","setTimeout","DomEvent","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","isLinear","_point","_handleIn","_handleOut","_path","curves","_curves","curve","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","setLinear","linear","next1","getNext","next2","getPrevious","isArc","handle1","handle2","_selectionState","state","oldState","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","removeSegment","interpolate","segment0","segment1","coef","dxPoint","dyPoint","dxHandleIn","dyHandleIn","dxHandleOut","dyHandleOut","change","Curve","arg6","arg7","_segment2","segment2","_length","getPoint1","setPoint1","getPoint2","setPoint2","getHandle1","setHandle1","getHandle2","setHandle2","getSegment1","getSegment2","getPoints","getPart","getPartLength","filterIntersections","_getParameter","isParameter","parameter","getParameterAt","ignoreLinear","subdivide","split","p1","h1","h2","p2","evaluate","p1x","p1y","p2x","p2y","bx","ax","by","ay","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","txs","tys","sx","sy","isFlatEnough","ux","uy","getEdgeSum","_addBounds","v0","v3","padding","tMin","tMax","getLocationAt","getLocationOf","getOffsetOf","loc","getNearestLocation","minDist","minT","refine","dist","step","getNearestPoint","getLengthIntegrand","getIterations","ds","forward","rangeLength","guess","addLocation","locations","curve1","t1","curve2","t2","addCurveIntersections","uMin","uMax","oldTDiff","recursion","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","tMinNew","tMaxNew","tDiff","hull","getConvexHull","tMinClip","tMaxClip","clipConvexHull","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","flip","pmax","distZero","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rlx2","rvl","rvc","tc","tl","addLineIntersection","linear1","linear2","c1p1","c1p2","c2p1","c2p2","_expand","last","_curve","_curve2","_parameter","_parameter2","loc1","loc2","path1","path2","getParameter","getIntersection","_point2","_distance","getSegment","_preferFirst","_segment","_uncached","intersection","_intersection","_getOffset","getCurveOffset","getPointAt","curves1","curves2","matrix1","matrix2","length1","length2","values2","values1","seg1","seg2","setPathData","relative","previous","control","getCoord","command","lower","move","cubicCurveTo","arcTo","winding","_getWinding","closed","setSegments","_clockwise","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","curX","curY","prevX","prevY","inX","inY","outX","outY","skipLine","isPolygon","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","simplify","fitter","PathFitter","fit","isClockwise","setClockwise","clockwise","last1","last2","first2","first1","path0","toShape","topCenter","shape","numSegments","strokePadding","cap","hitStroke","hitFill","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","_addBevelJoin","_addSquareCap","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","overlap","knots","f1","f2","ie","je","getCurrentSegment","moveBy","through","extent","vector","middle","large","epsilon","rxSq","rySq","xSq","ySq","l1","l2","throughSide","centerSide","ext","inc","z","out","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","prevCoords","processSegment","joinBounds","addRound","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getNormal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","compoundpath0","compoundpath1","paths","getCurrentPath","operators","computeBoolean","operation","operator","preparePath","reorient","_path1","_path2","splitPath","monoCurves","collect","_getMonoCurves","_winding","startSeg","totalLength","windingSum","curveLength","getTangentAt","getWinding","tracePaths","intersections","linearHandles","resetLinear","newCurve","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","prevT","slope","selfOp","_visited","inter","startInterSeg","added","interSeg","c4","c3","t3","t4","w3","w4","nextCurve","nextSeg","firstSegment","lastSegment","prevCurve","insertCurve","y0","handleCurve","y3","getInteriorPoint","xIntercepts","maxRecursion","minDifference","addCurve","computeParts","maxT","halfT","prevVal","prevLen","error","fitCubic","tan1","tan2","pt1","pt2","uPrime","chordLengthParameterize","maxError","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","C","X","detC0C1","alpha1","alpha2","detC0X","detXC1","c0","segLength","diff","degree","maxDist","P","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","gray","rgb","hsb","hsl","gradient","componentParsers","colorCache","colorCtx","fromCSS","hsbIndices","converters","rgb-hsb","h","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","hasOverlap","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","_stops","origin","destination","canvasGradient","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","acronym","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","nativeRequest","requested","callbacks","focused","timer","focus","blur","handleCallbacks","setInterval","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","getCanvasSize","_windowEvents","resize","setViewSize","_setViewSize","Stats","_stats","stats","domElement","appendChild","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","onResize","_time","_count","_requestFrame","_requested","_handleFrame","now","Date","_before","_handlingFrame","time","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tool","prevFocus","tempFocus","dragging","handleMouseMove","_handleEvent","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","HTMLCanvasElement","deviceRatio","backingStoreRatio","prevFont","measureText","downPoint","lastPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","callEvent","MouseEvent","isStopped","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","specialKeys",27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","space","charCodeMap","keyMap","downCode","handleKey","keyCode","charCode","specialKey","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","method","xhr","ActiveXObject","overrideMimeType","onreadystatechange","readyState","responseText","canvases","createElement","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","attribute","fromSVG","exportFilter","SVGNamespaces","xlink","setAttributes","namespace","setAttributeNS","createElementNS","getTransform","coordinates","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","exporters","applyStyle","visibility","svgs","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","map","importGroup","childNodes","isClip","currentStyle","applyAttributes","importSVG","importPoly","importPath","pathData","importGradient","isRadial","importers","#document","nextSibling","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","applyTransform","transforms","applyOpacity","attributes","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","styles","group","parentNode","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","onImport","expandShapes","Collection","cb","wrapConstructor","useConstructed","wrapper","arr","params","rconstructor","constructorFilter","unwrapArg","isPlural","unwrapArgs","proxy","methodNames","getOwnPropertyNames","filter","plural","ot","glyphMap","charMap","altMap","_subset","addGlyph","addGlyphs","fonts","addedFonts","delete","styleElement","styleSheet","styleSheets","ss","ownerNode","_lastSubset","normalizeSubset","getGlyphSubset","font0","font1","updateSVGData","updateOTCommands","importOT","otFont","otGlyph","_URL","URL","webkitURL","addToFonts","fontface","FontFace","createObjectURL","fontObjectURL","revokeObjectURL","deleteRule","insertRule","onloadend","readAsDataURL","lastIndexOf","../node_modules/opentype.js/dist/opentype.js","./Glyph.js","anchors","parentAnchors","addComponent","addComponents","addAnchor","addAnchors","addParentAnchor","glyph0","glyph1","svgData","addContour","../node_modules/paper/dist/paper-core.js","defineProperties","firstNode","lastNode","_updateData","pushSimple","pushBezier","Node","./Collection.js","./Font.js","./Node.js","./Path.js","updateUtils","Utils","ufoToPaper","outline","lib","transformList","glyphFromSrc","glyphSrc","fontSrc","naive","embed","mergeStatic","anchorSrc","contourSrc","nodeSrc","embedComponents","componentSrc","annotator","cursor","propFromCursor","_dependencies","_parameters","_updaters","createUpdaters","leaf","_operation","solveDependencyTree","depTree","dependencyTree","order","simplified","simplifyResolutionOrder","parentSrc","leafSrc","currCursor","rdeg","transformsToMatrix","Float32Array","curr","rslt","_","autoExpandedNodeSrc","side","expandedNodeUpdater","expandedTo","skeletonCopier","explicitExpandedNodeSrc","expandedContourSrc","nodesSrc","curviness","prepareContour","updateContour","additionalContours","skeleton","leftContour","rightContour","leftNodes","rightNodes","leftNodesSrc","rightNodesSrc","expandedFrom","copier","_updater","typeIn","typeOut","addContours","isLeft","distr","_dirOut","_dirIn","tensionIn","tensionOut","tension","lineAngle","startCtrl","endCtrl","startType","endType","startTension","endTension","startDir","endDir","rri","rayRayIntersection","dirIn","dirOut","splitCursor","parametricFont","fontinfo","info","solvingOrder","propName","transformOrigin","_contour","_node","lineLineIntersection","p4","x3","x4","y4","onLine"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACznHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChzOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClxyjjghsourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var DepTree = function() {\n  this.nodes = {}; \n};\n\nDepTree.prototype.add = function(node, dependants) {\n  var self = this;\n\n  if (!dependants) {\n    dependants = [];\n  } else if (!(dependants instanceof Array)) {\n    dependants = [dependants];\n  }\n\n  this.nodes[node] = dependants;\n};\n\n\nDepTree.prototype.resolveNode = function(node, resolved, processing) {\n\n  var self = this;\n\n  resolved = resolved || [];\n  processing = processing || {};\n  var deps = this.nodes[node] || [];\n\n  processing[node] = true;\n\n  deps.forEach(function(dep) {\n    if (resolved.indexOf(dep) != -1) {\n      return;\n    }\n    if (processing[dep]) {\n      throw new Error('Circular dependency: '+dep);\n    }\n    self.resolveNode(dep, resolved, processing);\n  });\n\n  if (resolved.indexOf(node) == -1) {\n    processing[node] = false;\n    resolved.push(node);\n  }\n  return resolved;\n};\n\nDepTree.prototype.resolve = function() {\n\n  var resolved = [];\n  for (var node in this.nodes) {\n    this.resolveNode(node, resolved);\n  }\n\n  return resolved;\n\n};\n\n\nmodule.exports = DepTree;\n","/**\n * lodash 3.1.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar arrayCopy = require('lodash._arraycopy'),\n    arrayEach = require('lodash._arrayeach'),\n    baseFor = require('lodash._basefor'),\n    createAssigner = require('lodash._createassigner'),\n    isArguments = require('lodash.isarguments'),\n    isArray = require('lodash.isarray'),\n    isNative = require('lodash.isnative'),\n    isPlainObject = require('lodash.isplainobject'),\n    isTypedArray = require('lodash.istypedarray'),\n    keys = require('lodash.keys'),\n    keysIn = require('lodash.keysin'),\n    toPlainObject = require('lodash.toplainobject');\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.merge` without support for argument juggling,\n * multiple sources, and `this` binding `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} [customizer] The function to customize merging properties.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates values with source counterparts.\n * @returns {Object} Returns the destination object.\n */\nfunction baseMerge(object, source, customizer, stackA, stackB) {\n  if (!isObject(object)) {\n    return object;\n  }\n  var isSrcArr = isLength(source.length) && (isArray(source) || isTypedArray(source));\n  (isSrcArr ? arrayEach : baseForOwn)(source, function(srcValue, key, source) {\n    if (isObjectLike(srcValue)) {\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n      return baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n    }\n    var value = object[key],\n        result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n        isCommon = typeof result == 'undefined';\n\n    if (isCommon) {\n      result = srcValue;\n    }\n    if ((isSrcArr || typeof result != 'undefined') &&\n        (isCommon || (result === result ? (result !== value) : (value === value)))) {\n      object[key] = result;\n    }\n  });\n  return object;\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize merging properties.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates values with source counterparts.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n  var length = stackA.length,\n      srcValue = source[key];\n\n  while (length--) {\n    if (stackA[length] == srcValue) {\n      object[key] = stackB[length];\n      return;\n    }\n  }\n  var value = object[key],\n      result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n      isCommon = typeof result == 'undefined';\n\n  if (isCommon) {\n    result = srcValue;\n    if (isLength(srcValue.length) && (isArray(srcValue) || isTypedArray(srcValue))) {\n      result = isArray(value)\n        ? value\n        : ((value && value.length) ? arrayCopy(value) : []);\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      result = isArguments(value)\n        ? toPlainObject(value)\n        : (isPlainObject(value) ? value : {});\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  // Add the source value to the stack of traversed objects and associate\n  // it with its merged value.\n  stackA.push(srcValue);\n  stackB.push(result);\n\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n  } else if (result === result ? (result !== value) : (value === value)) {\n    object[key] = result;\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type == 'function' || (!!value && type == 'object');\n}\n\n/**\n * Recursively merges own enumerable properties of the source object(s), that\n * don't resolve to `undefined` into the destination object. Subsequent sources\n * overwrite property assignments of previous sources. If `customizer` is\n * provided it is invoked to produce the merged values of the destination and\n * source properties. If `customizer` returns `undefined` merging is handled\n * by the method instead. The `customizer` is bound to `thisArg` and invoked\n * with five arguments: (objectValue, sourceValue, key, object, source).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @param {Function} [customizer] The function to customize merging properties.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var users = {\n *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n * };\n *\n * var ages = {\n *   'data': [{ 'age': 36 }, { 'age': 40 }]\n * };\n *\n * _.merge(users, ages);\n * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n *\n * // using a customizer callback\n * var object = {\n *   'fruits': ['apple'],\n *   'vegetables': ['beet']\n * };\n *\n * var other = {\n *   'fruits': ['banana'],\n *   'vegetables': ['carrot']\n * };\n *\n * _.merge(object, other, function(a, b) {\n *   if (_.isArray(a)) {\n *     return a.concat(b);\n *   }\n * });\n * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n */\nvar merge = createAssigner(baseMerge);\n\nmodule.exports = merge;\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction arrayCopy(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayCopy;\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `_.forEach` for arrays without support for callback\n * shorthands or `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iterator functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Converts `value` to an object if it is not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type == 'function' || (!!value && type == 'object');\n}\n\nmodule.exports = baseFor;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar bindCallback = require('lodash._bindcallback'),\n    isIterateeCall = require('lodash._isiterateecall');\n\n/**\n * Creates a function that assigns properties of source object(s) to a given\n * destination object.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return function() {\n    var args = arguments,\n        length = args.length,\n        object = args[0];\n\n    if (length < 2 || object == null) {\n      return object;\n    }\n    var customizer = args[length - 2],\n        thisArg = args[length - 1],\n        guard = args[3];\n\n    if (length > 3 && typeof customizer == 'function') {\n      customizer = bindCallback(customizer, thisArg, 5);\n      length -= 2;\n    } else {\n      customizer = (length > 2 && typeof thisArg == 'function') ? thisArg : null;\n      length -= (customizer ? 1 : 0);\n    }\n    if (guard && isIterateeCall(args[1], args[2], guard)) {\n      customizer = length == 3 ? null : customizer;\n      length = 2;\n    }\n    var index = 0;\n    while (++index < length) {\n      var source = args[index];\n      if (source) {\n        assigner(object, source, customizer);\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createAssigner;\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (typeof thisArg == 'undefined') {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = bindCallback;\n","/**\n * lodash 3.0.5 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = +value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number') {\n    var length = object.length,\n        prereq = isLength(length) && isIndex(index, length);\n  } else {\n    prereq = type == 'string' && index in object;\n  }\n  if (prereq) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type == 'function' || (!!value && type == 'object');\n}\n\nmodule.exports = isIterateeCall;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  var length = isObjectLike(value) ? value.length : undefined;\n  return isLength(length) && objToString.call(value) == argsTag;\n}\n\nmodule.exports = isArguments;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]',\n    funcTag = '[object Function]';\n\n/** Used to detect host constructors (Safari > 5). */\nvar reHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n * In addition to special characters the forward slash is escaped to allow for\n * easier `eval` use and `Function` compilation.\n */\nvar reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n    reHasRegExpChars = RegExp(reRegExpChars.source);\n\n/**\n * Converts `value` to a string if it is not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  if (typeof value == 'string') {\n    return value;\n  }\n  return value == null ? '' : (value + '');\n}\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reNative = RegExp('^' +\n  escapeRegExp(objToString)\n  .replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (objToString.call(value) == funcTag) {\n    return reNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reHostCtor.test(value);\n}\n\n/**\n * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n */\nfunction escapeRegExp(string) {\n  string = baseToString(string);\n  return (string && reHasRegExpChars.test(string))\n    ? string.replace(reRegExpChars, '\\\\$&')\n    : string;\n}\n\nmodule.exports = isArray;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used to detect host constructors (Safari > 5). */\nvar reHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n * In addition to special characters the forward slash is escaped to allow for\n * easier `eval` use and `Function` compilation.\n */\nvar reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n    reHasRegExpChars = RegExp(reRegExpChars.source);\n\n/**\n * Converts `value` to a string if it is not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  if (typeof value == 'string') {\n    return value;\n  }\n  return value == null ? '' : (value + '');\n}\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reNative = RegExp('^' +\n  escapeRegExp(objToString)\n  .replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (objToString.call(value) == funcTag) {\n    return reNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reHostCtor.test(value);\n}\n\n/**\n * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n */\nfunction escapeRegExp(string) {\n  string = baseToString(string);\n  return (string && reHasRegExpChars.test(string))\n    ? string.replace(reRegExpChars, '\\\\$&')\n    : string;\n}\n\nmodule.exports = isNative;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseFor = require('lodash._basefor'),\n    isNative = require('lodash.isnative'),\n    keysIn = require('lodash.keysin');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Native method references. */\nvar getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf;\n\n/**\n * The base implementation of `_.forIn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForIn(object, iteratee) {\n  return baseFor(object, iteratee, keysIn);\n}\n\n/**\n * A fallback implementation of `_.isPlainObject` which checks if `value`\n * is an object created by the `Object` constructor or has a `[[Prototype]]`\n * of `null`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n */\nfunction shimIsPlainObject(value) {\n  var Ctor;\n\n  // Exit early for non `Object` objects.\n  if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\n      (!hasOwnProperty.call(value, 'constructor') &&\n        (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n    return false;\n  }\n  // IE < 9 iterates inherited properties before own properties. If the first\n  // iterated property is an object's own property then there are no inherited\n  // enumerable properties.\n  var result;\n  // In most environments an object's own properties are iterated before\n  // its inherited properties. If the last iterated property is an object's\n  // own property then there are no inherited enumerable properties.\n  baseForIn(value, function(subValue, key) {\n    result = key;\n  });\n  return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * **Note:** This method assumes objects created by the `Object` constructor\n * have no inherited enumerable properties.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nvar isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n  if (!(value && objToString.call(value) == objectTag)) {\n    return false;\n  }\n  var valueOf = value.valueOf,\n      objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n  return objProto\n    ? (value == objProto || getPrototypeOf(value) == objProto)\n    : shimIsPlainObject(value);\n};\n\nmodule.exports = isPlainObject;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n}\n\nmodule.exports = isTypedArray;\n","/**\n * lodash 3.0.5 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar isArguments = require('lodash.isarguments'),\n    isArray = require('lodash.isarray'),\n    isNative = require('lodash.isnative');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * An object environment feature flags.\n *\n * @static\n * @memberOf _\n * @type Object\n */\nvar support = {};\n\n(function(x) {\n\n  /**\n   * Detect if `arguments` object indexes are non-enumerable.\n   *\n   * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n   * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n   * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n   * checks for indexes that exceed their function's formal parameters with\n   * associated values of `0`.\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  try {\n    support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n  } catch(e) {\n    support.nonEnumArgs = true;\n  }\n}(0, 0));\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = +value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = length && isLength(length) &&\n    (isArray(object) || (support.nonEnumArgs && isArguments(object)));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type == 'function' || (!!value && type == 'object');\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  if (object) {\n    var Ctor = object.constructor,\n        length = object.length;\n  }\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && (length && isLength(length)))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || (support.nonEnumArgs && isArguments(object))) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n","/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar isArguments = require('lodash.isarguments'),\n    isArray = require('lodash.isarray');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * An object environment feature flags.\n *\n * @static\n * @memberOf _\n * @type Object\n */\nvar support = {};\n\n(function(x) {\n\n  /**\n   * Detect if `arguments` object indexes are non-enumerable.\n   *\n   * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n   * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n   * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n   * checks for indexes that exceed their function's formal parameters with\n   * associated values of `0`.\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  try {\n    support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n  } catch(e) {\n    support.nonEnumArgs = true;\n  }\n}(0, 0));\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = +value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type == 'function' || (!!value && type == 'object');\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || (support.nonEnumArgs && isArguments(object))) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keysIn;\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseCopy = require('lodash._basecopy'),\n    keysIn = require('lodash.keysin');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable\n * properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return baseCopy(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Copies the properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Array} props The property names to copy.\n * @returns {Object} Returns `object`.\n */\nfunction baseCopy(source, object, props) {\n  if (!props) {\n    props = object;\n    object = {};\n  }\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    object[key] = source[key];\n  }\n  return object;\n}\n\nmodule.exports = baseCopy;\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.plumin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.opentype=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// Run-time checking of preconditions.\n\n'use strict';\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nexports.argument = function (predicate, message) {\n    if (!predicate) {\n        throw new Error(message);\n    }\n};\n\n// Precondition function that checks if the given assertion is true.\n// If not, it will throw an error.\nexports.assert = exports.argument;\n\n},{}],2:[function(require,module,exports){\n// Drawing utility functions.\n\n'use strict';\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexports.line = line;\n\n},{}],3:[function(require,module,exports){\n// Glyph encoding\n\n'use strict';\n\nvar cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nvar cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n// This is the encoding used for fonts created from scratch.\n// It loops through all glyphs and finds the appropriate unicode value.\n// Since it's linear time, other encodings will be faster.\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function (c) {\n    var code, glyphs, i, glyph, j;\n    code = c.charCodeAt(0);\n    glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (i = 0; i < glyphs.length; i += 1) {\n            glyph = glyphs[i];\n            for (j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    } else {\n        return null;\n    }\n};\n\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\nCmapEncoding.prototype.charToGlyphIndex = function (c) {\n    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n};\n\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\nCffEncoding.prototype.charToGlyphIndex = function (s) {\n    var code, charName;\n    code = s.charCodeAt(0);\n    charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction GlyphNames(post) {\n    var i;\n    switch (post.version) {\n    case 1:\n        this.names = exports.standardNames.slice();\n        break;\n    case 2:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] < exports.standardNames.length) {\n                this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n            } else {\n                this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n            }\n        }\n        break;\n    case 2.5:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n        }\n        break;\n    case 3:\n        this.names = [];\n        break;\n    }\n}\n\nGlyphNames.prototype.nameToGlyphIndex = function (name) {\n    return this.names.indexOf(name);\n};\n\nGlyphNames.prototype.glyphIndexToName = function (gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNames(font) {\n    var glyphIndexMap, charCodes, i, c, glyphIndex, glyph;\n    glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    charCodes = Object.keys(glyphIndexMap);\n    for (i = 0; i < charCodes.length; i += 1) {\n        c = charCodes[i];\n        glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs[glyphIndex];\n        glyph.addUnicode(parseInt(c));\n    }\n    for (i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs[i];\n        if (font.cffEncoding) {\n            glyph.name = font.cffEncoding.charset[i];\n        } else {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexports.cffStandardStrings = cffStandardStrings;\nexports.cffStandardEncoding = cffStandardEncoding;\nexports.cffExpertEncoding = cffExpertEncoding;\nexports.standardNames = standardNames;\nexports.DefaultEncoding = DefaultEncoding;\nexports.CmapEncoding = CmapEncoding;\nexports.CffEncoding = CffEncoding;\nexports.GlyphNames = GlyphNames;\nexports.addGlyphNames = addGlyphNames;\n\n},{}],4:[function(require,module,exports){\n// The Font object\n\n'use strict';\n\nvar path = require('./path');\nvar sfnt = require('./tables/sfnt');\nvar encoding = require('./encoding');\n\n// A Font represents a loaded OpenType font file.\n// It contains a set of glyphs and methods to draw text on a drawing context,\n// or to get a path representing the text.\nfunction Font(options) {\n    options = options || {};\n    // OS X will complain if the names are empty, so we put a single space everywhere by default.\n    this.familyName = options.familyName || ' ';\n    this.styleName = options.styleName || ' ';\n    this.designer = options.designer || ' ';\n    this.designerURL = options.designerURL || ' ';\n    this.manufacturer = options.manufacturer || ' ';\n    this.manufacturerURL = options.manufacturerURL || ' ';\n    this.license = options.license || ' ';\n    this.licenseURL = options.licenseURL || ' ';\n    this.version = options.version || 'Version 0.1';\n    this.description = options.description || ' ';\n    this.copyright = options.copyright || ' ';\n    this.trademark = options.trademark || ' ';\n    this.unitsPerEm = options.unitsPerEm || 1000;\n    this.ascender = options.ascender;\n    this.descender = options.descender;\n    this.supported = true;\n    this.glyphs = options.glyphs || [];\n    this.encoding = new encoding.DefaultEncoding(this);\n    this.tables = {};\n}\n\n// Check if the font has a glyph for the given character.\nFont.prototype.hasChar = function (c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n// Convert the given character to a single glyph index.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyphIndex = function (s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n// Convert the given character to a single Glyph object.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyph = function (c) {\n    var glyphIndex, glyph;\n    glyphIndex = this.charToGlyphIndex(c);\n    glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        glyph = this.glyphs[0]; // .notdef\n    }\n    return glyph;\n};\n\n// Convert the given text to a list of Glyph objects.\n// Note that there is no strict one-to-one mapping between characters and\n// glyphs, so the list of returned glyphs can be larger or smaller than the\n// length of the given string.\nFont.prototype.stringToGlyphs = function (s) {\n    var i, c, glyphs;\n    glyphs = [];\n    for (i = 0; i < s.length; i += 1) {\n        c = s[i];\n        glyphs.push(this.charToGlyph(c));\n    }\n    return glyphs;\n};\n\nFont.prototype.nameToGlyphIndex = function (name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\nFont.prototype.nameToGlyph = function (name) {\n    var glyphIndex, glyph;\n    glyphIndex = this.nametoGlyphIndex(name);\n    glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        glyph = this.glyphs[0]; // .notdef\n    }\n    return glyph;\n};\n\nFont.prototype.glyphIndexToName = function (gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n// Retrieve the value of the kerning pair between the left glyph (or its index)\n// and the right glyph (or its index). If no kerning pair is found, return 0.\n// The kerning value gets added to the advance width when calculating the spacing\n// between glyphs.\nFont.prototype.getKerningValue = function (leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.getGposKerningValue;\n    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n};\n\n// Helper function that invokes the given callback for each glyph in the given text.\n// The callback gets `(glyph, x, y, fontSize, options)`.\nFont.prototype.forEachGlyph = function (text, x, y, fontSize, options, callback) {\n    var kerning, fontScale, glyphs, i, glyph, kerningValue;\n    if (!this.supported) {\n        return;\n    }\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || {};\n    kerning = options.kerning === undefined ? true : options.kerning;\n    fontScale = 1 / this.unitsPerEm * fontSize;\n    glyphs = this.stringToGlyphs(text);\n    for (i = 0; i < glyphs.length; i += 1) {\n        glyph = glyphs[i];\n        callback(glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n        if (kerning && i < glyphs.length - 1) {\n            kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n    }\n};\n\n// Create a Path object that represents the given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns a Path object.\nFont.prototype.getPath = function (text, x, y, fontSize, options) {\n    var fullPath = new path.Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function (glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        fullPath.extend(glyphPath);\n    });\n    return fullPath;\n};\n\n// Draw the text on the given drawing context.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.draw = function (ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n// Draw the points of all glyphs in the text.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawPoints = function (ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function (glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Draw lines indicating important font measurements for all glyphs in the text.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawMetrics = function (ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function (glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Validate\nFont.prototype.validate = function () {\n    var warnings = [];\n    var font = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertStringAttribute(attrName) {\n        assert(font[attrName] && font[attrName].trim().length > 0, 'No ' + attrName + ' specified.');\n    }\n\n    // Identification information\n    assertStringAttribute('familyName');\n    assertStringAttribute('weightName');\n    assertStringAttribute('manufacturer');\n    assertStringAttribute('copyright');\n    assertStringAttribute('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nFont.prototype.toTables = function () {\n    return sfnt.fontToTable(this);\n};\n\nFont.prototype.toBuffer = function () {\n    var sfntTable = this.toTables();\n    var bytes = sfntTable.encode();\n    var buffer = new ArrayBuffer(bytes.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n    return buffer;\n};\n\n// Initiate a download of the OpenType font.\nFont.prototype.download = function () {\n    var fileName = this.familyName.replace(/\\s/g, '') + '-' + this.styleName + '.otf';\n    var buffer = this.toBuffer();\n\n    window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n    window.requestFileSystem(window.TEMPORARY, buffer.byteLength, function (fs) {\n        fs.root.getFile(fileName, {create: true}, function (fileEntry) {\n            fileEntry.createWriter(function (writer) {\n                var dataView = new DataView(buffer);\n                var blob = new Blob([dataView], {type: 'font/opentype'});\n                writer.write(blob);\n\n                 writer.addEventListener('writeend', function () {\n                    // Navigating to the file will download it.\n                    location.href = fileEntry.toURL();\n                 }, false);\n            });\n        });\n    }, function (err) {\n        throw err;\n    });\n};\n\nexports.Font = Font;\n\n},{\"./encoding\":3,\"./path\":8,\"./tables/sfnt\":23}],5:[function(require,module,exports){\n// The Glyph object\n\n'use strict';\n\nvar check = require('./check');\nvar draw = require('./draw');\nvar path = require('./path');\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\nfunction Glyph(options) {\n    this.font = options.font || null;\n    this.index = options.index || 0;\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n    this.xMin = options.xMin || 0;\n    this.yMin = options.yMin || 0;\n    this.xMax = options.xMax || 0;\n    this.yMax = options.yMax || 0;\n    this.advanceWidth = options.advanceWidth || 0;\n    this.path = options.path || null;\n}\n\nGlyph.prototype.addUnicode = function (unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n    this.unicodes.push(unicode);\n};\n\n// Convert the glyph to a Path we can draw on a drawing context.\n//\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.getPath = function (x, y, fontSize) {\n    var scale, p, commands, cmd;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n    p = new path.Path();\n    commands = this.path.commands;\n    for (var i = 0; i < commands.length; i += 1) {\n        cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                               x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                      x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n                      x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n    return p;\n};\n\n// Split the glyph into contours.\n// This function is here for backwards compatibility, and to\n// provide raw access to the TrueType glyph outlines.\nGlyph.prototype.getContours = function () {\n    var contours, currentContour, i, pt;\n    if (this.points === undefined) {\n        return [];\n    }\n    contours = [];\n    currentContour = [];\n    for (i = 0; i < this.points.length; i += 1) {\n        pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n// Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\nGlyph.prototype.getMetrics = function () {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: 0\n    };\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// Draw the glyph on the given context.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.draw = function (ctx, x, y, fontSize) {\n    this.getPath(x, y, fontSize).draw(ctx);\n};\n\n// Draw the points of the glyph.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawPoints = function (ctx, x, y, fontSize) {\n\n    function drawCircles(l, x, y, scale) {\n        var j, PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    var scale, i, blueCircles, redCircles, path, cmd;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n\n    blueCircles = [];\n    redCircles = [];\n    path = this.path;\n    for (i = 0; i < path.commands.length; i += 1) {\n        cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n// Draw lines indicating important font measurements.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawMetrics = function (ctx, x, y, fontSize) {\n    var scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (this.xMin * scale), -10000, x + (this.xMin * scale), 10000);\n    draw.line(ctx, x + (this.xMax * scale), -10000, x + (this.xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-this.yMin * scale), 10000, y + (-this.yMin * scale));\n    draw.line(ctx, -10000, y + (-this.yMax * scale), 10000, y + (-this.yMax * scale));\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (this.advanceWidth * scale), -10000, x + (this.advanceWidth * scale), 10000);\n};\n\nexports.Glyph = Glyph;\n\n},{\"./check\":1,\"./draw\":2,\"./path\":8}],6:[function(require,module,exports){\n// opentype.js\n// https://github.com/nodebox/opentype.js\n// (c) 2014 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global ArrayBuffer, DataView, Uint8Array, XMLHttpRequest  */\n\n'use strict';\n\nvar encoding = require('./encoding');\nvar _font = require('./font');\nvar glyph = require('./glyph');\nvar parse = require('./parse');\nvar path = require('./path');\n\nvar cmap = require('./tables/cmap');\nvar cff = require('./tables/cff');\nvar glyf = require('./tables/glyf');\nvar gpos = require('./tables/gpos');\nvar head = require('./tables/head');\nvar hhea = require('./tables/hhea');\nvar hmtx = require('./tables/hmtx');\nvar kern = require('./tables/kern');\nvar loca = require('./tables/loca');\nvar maxp = require('./tables/maxp');\nvar _name = require('./tables/name');\nvar os2 = require('./tables/os2');\nvar post = require('./tables/post');\n\n// File loaders /////////////////////////////////////////////////////////\n\n// Convert a Node.js Buffer to an ArrayBuffer\nfunction toArrayBuffer(buffer) {\n    var i,\n        arrayBuffer = new ArrayBuffer(buffer.length),\n        data = new Uint8Array(arrayBuffer);\n\n    for (i = 0; i < buffer.length; i += 1) {\n        data[i] = buffer[i];\n    }\n\n    return arrayBuffer;\n}\n\nfunction loadFromFile(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function (err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, toArrayBuffer(buffer));\n    });\n}\n\nfunction loadFromUrl(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function () {\n        if (request.status !== 200) {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n        return callback(null, request.response);\n    };\n    request.send();\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n// Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n// If the file could not be parsed (most likely because it contains Postscript outlines)\n// we return an empty Font object with the `supported` flag set to `false`.\nfunction parseBuffer(buffer) {\n    var font, data, version, numTables, i, p, tag, offset, hmtxOffset, glyfOffset, locaOffset,\n        cffOffset, kernOffset, gposOffset, indexToLocFormat, numGlyphs, locaTable,\n        shortVersion;\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n\n    font = new _font.Font();\n    data = new DataView(buffer, 0);\n\n    version = parse.getFixed(data, 0);\n    if (version === 1.0) {\n        font.outlinesFormat = 'truetype';\n    } else {\n        version = parse.getTag(data, 0);\n        if (version === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType version ' + version);\n        }\n    }\n\n    numTables = parse.getUShort(data, 4);\n\n    // Offset into the table records.\n    p = 12;\n    for (i = 0; i < numTables; i += 1) {\n        tag = parse.getTag(data, p);\n        offset = parse.getULong(data, p + 8);\n        switch (tag) {\n        case 'cmap':\n            font.tables.cmap = cmap.parse(data, offset);\n            font.encoding = new encoding.CmapEncoding(font.tables.cmap);\n            if (!font.encoding) {\n                font.supported = false;\n            }\n            break;\n        case 'head':\n            font.tables.head = head.parse(data, offset);\n            font.unitsPerEm = font.tables.head.unitsPerEm;\n            indexToLocFormat = font.tables.head.indexToLocFormat;\n            break;\n        case 'hhea':\n            font.tables.hhea = hhea.parse(data, offset);\n            font.ascender = font.tables.hhea.ascender;\n            font.descender = font.tables.hhea.descender;\n            font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n            break;\n        case 'hmtx':\n            hmtxOffset = offset;\n            break;\n        case 'maxp':\n            font.tables.maxp = maxp.parse(data, offset);\n            font.numGlyphs = numGlyphs = font.tables.maxp.numGlyphs;\n            break;\n        case 'name':\n            font.tables.name = _name.parse(data, offset);\n            font.familyName = font.tables.name.fontFamily;\n            font.styleName = font.tables.name.fontSubfamily;\n            break;\n        case 'OS/2':\n            font.tables.os2 = os2.parse(data, offset);\n            break;\n        case 'post':\n            font.tables.post = post.parse(data, offset);\n            font.glyphNames = new encoding.GlyphNames(font.tables.post);\n            break;\n        case 'glyf':\n            glyfOffset = offset;\n            break;\n        case 'loca':\n            locaOffset = offset;\n            break;\n        case 'CFF ':\n            cffOffset = offset;\n            break;\n        case 'kern':\n            kernOffset = offset;\n            break;\n        case 'GPOS':\n            gposOffset = offset;\n            break;\n        }\n        p += 16;\n    }\n\n    if (glyfOffset && locaOffset) {\n        shortVersion = indexToLocFormat === 0;\n        locaTable = loca.parse(data, locaOffset, numGlyphs, shortVersion);\n        font.glyphs = glyf.parse(data, glyfOffset, locaTable, font);\n        hmtx.parse(data, hmtxOffset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n        encoding.addGlyphNames(font);\n    } else if (cffOffset) {\n        cff.parse(data, cffOffset, font);\n        encoding.addGlyphNames(font);\n    } else {\n        font.supported = false;\n    }\n\n    if (font.supported) {\n        if (kernOffset) {\n            font.kerningPairs = kern.parse(data, kernOffset);\n        } else {\n            font.kerningPairs = {};\n        }\n        if (gposOffset) {\n            gpos.parse(data, gposOffset, font);\n        }\n    }\n\n    return font;\n}\n\n// Asynchronously load the font from a URL or a filesystem. When done, call the callback\n// with two arguments `(err, font)`. The `err` will be null on success,\n// the `font` is a Font object.\n//\n// We use the node.js callback convention so that\n// opentype.js can integrate with frameworks like async.js.\nfunction load(url, callback) {\n    var isNode = typeof window === 'undefined';\n    var loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function (err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n        var font = parseBuffer(arrayBuffer);\n        if (!font.supported) {\n            return callback('Font is not supported (is this a Postscript font?)');\n        }\n        return callback(null, font);\n    });\n}\n\nexports.Font = _font.Font;\nexports.Glyph = glyph.Glyph;\nexports.Path = path.Path;\nexports.parse = parseBuffer;\nexports.load = load;\n\n},{\"./encoding\":3,\"./font\":4,\"./glyph\":5,\"./parse\":7,\"./path\":8,\"./tables/cff\":10,\"./tables/cmap\":11,\"./tables/glyf\":12,\"./tables/gpos\":13,\"./tables/head\":14,\"./tables/hhea\":15,\"./tables/hmtx\":16,\"./tables/kern\":17,\"./tables/loca\":18,\"./tables/maxp\":19,\"./tables/name\":20,\"./tables/os2\":21,\"./tables/post\":22,\"fs\":undefined}],7:[function(require,module,exports){\n// Parsing utility functions\n\n'use strict';\n\n// Retrieve an unsigned byte from the DataView.\nexports.getByte = function getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n};\n\nexports.getCard8 = exports.getByte;\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getUShort = function (dataView, offset) {\n    return dataView.getUint16(offset, false);\n};\n\nexports.getCard16 = exports.getUShort;\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getShort = function (dataView, offset) {\n    return dataView.getInt16(offset, false);\n};\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nexports.getULong = function (dataView, offset) {\n    return dataView.getUint32(offset, false);\n};\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nexports.getFixed = function (dataView, offset) {\n    var decimal, fraction;\n    decimal = dataView.getInt16(offset, false);\n    fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n};\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nexports.getTag = function (dataView, offset) {\n    var tag = '', i;\n    for (i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n    return tag;\n};\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nexports.getOffset = function (dataView, offset, offSize) {\n    var i, v;\n    v = 0;\n    for (i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n    return v;\n};\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nexports.getBytes = function (dataView, startOffset, endOffset) {\n    var bytes, i;\n    bytes = [];\n    for (i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n    return bytes;\n};\n\n// Convert the list of bytes to a string.\nexports.bytesToString = function (bytes) {\n    var s, i;\n    s = '';\n    for (i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n    return s;\n};\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function () {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function () {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function () {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function () {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function () {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function () {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseFixed = function () {\n    var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function (count) {\n    var offsets = new Array(count),\n        dataView = this.data,\n        offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = exports.getUShort(dataView, offset);\n        offset += 2;\n    }\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\nParser.prototype.parseString = function (length) {\n    var dataView = this.data,\n        offset = this.offset + this.relativeOffset,\n        string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n    return string;\n};\n\nParser.prototype.parseTag = function () {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\nParser.prototype.parseLongDateTime = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v / 65536;\n};\n\nParser.prototype.parseVersion = function() {\n    var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // This returns the correct number if minor = 0xN000 where N is 0-9\n    var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    return major + minor / 0x1000 / 10;\n};\n\nParser.prototype.skip = function (type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\nexports.Parser = Parser;\n\n},{}],8:[function(require,module,exports){\n// Geometric objects\n\n'use strict';\n\n// A bézier path containing a set of path commands similar to a SVG path.\n// Paths can be drawn on a context using `draw`.\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\nPath.prototype.moveTo = function (x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.lineTo = function (x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function (x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function (x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.close = Path.prototype.closePath = function () {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n// Add the given path or list of commands to the commands of this path.\nPath.prototype.extend = function (pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n// Draw the path to a 2D context.\nPath.prototype.draw = function (ctx) {\n    var i, cmd;\n    ctx.beginPath();\n    for (i = 0; i < this.commands.length; i += 1) {\n        cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n// Convert the Path to a string of path data instructions\n// See http://www.w3.org/TR/SVG/paths.html#PathData\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toPathData = function (decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n            s += floatToString(v);\n        }\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n    return d;\n};\n\n// Convert the path to a SVG <path> element, as a string.\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toSVG = function (decimalPlaces) {\n    var svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill & this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n    svg += '/>';\n    return svg;\n};\n\nexports.Path = Path;\n\n},{}],9:[function(require,module,exports){\n// Table metadata\n\n'use strict';\n\nvar check = require('./check');\nvar encode = require('./types').encode;\nvar sizeOf = require('./types').sizeOf;\n\nfunction Table(tableName, fields, options) {\n    var i;\n    for (i = 0; i < fields.length; i += 1) {\n        var field = fields[i];\n        this[field.name] = field.value;\n    }\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        var optionKeys = Object.keys(options);\n        for (i = 0; i < optionKeys.length; i += 1) {\n            var k = optionKeys[i];\n            var v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\nTable.prototype.sizeOf = function () {\n    var v = 0;\n    for (var i = 0; i < this.fields.length; i += 1) {\n        var field = this.fields[i];\n        var value = this[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n        if (typeof value.sizeOf === 'function') {\n            v += value.sizeOf();\n        } else {\n            var sizeOfFunction = sizeOf[field.type];\n            check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n            v += sizeOfFunction(value);\n        }\n    }\n    return v;\n};\n\nTable.prototype.encode = function () {\n    return encode.TABLE(this);\n};\n\nexports.Table = Table;\n\n},{\"./check\":1,\"./types\":24}],10:[function(require,module,exports){\n// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\nvar table = require('../table');\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    var offsets, objects, count, endOffset, offsetSize, objectOffset, pos, i, value;\n    offsets = [];\n    objects = [];\n    count = parse.getCard16(data, start);\n    if (count !== 0) {\n        offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        pos = start + 3;\n        for (i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n    for (i = 0; i < offsets.length - 1; i += 1) {\n        value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n        objects.push(value);\n    }\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s, eof, lookup, b, n1, n2;\n    s = '';\n    eof = 15;\n    lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        b = parser.parseByte();\n        n1 = b >> 4;\n        n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n        s += lookup[n2];\n    }\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1, b2, b3, b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o, key, values, i, value;\n    o = {};\n    for (i = 0; i < entries.length; i += 1) {\n        key = entries[i][0];\n        values = entries[i][1];\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n        if (o.hasOwnProperty(key)) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n        o[key] = value;\n    }\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    var parser, entries, operands, op;\n    start = start !== undefined ? start : 0;\n    parser = new parse.Parser(data, start);\n    entries = [];\n    operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        op = parser.parseByte();\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = encoding.cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var i, m, value, newDict;\n    newDict = {};\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (i = 0; i < meta.length; i += 1) {\n        m = meta[i];\n        value = dict[m.op];\n        if (value === undefined) {\n            value = m.value !== undefined ? m.value : null;\n        }\n        if (m.type === 'SID') {\n            value = getCFFString(strings, value);\n        }\n        newDict[m.name] = value;\n    }\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n];\n\nvar PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict;\n    dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict;\n    dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var parser, format, charset, i, sid, count;\n    parser = new parse.Parser(data, start);\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    charset = ['.notdef'];\n\n    format = parser.parseCard8();\n    if (format === 0) {\n        for (i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var enc, parser, format, nCodes, i, code, nRanges, first, nLeft, j;\n    enc = {};\n    parser = new parse.Parser(data, start);\n    format = parser.parseCard8();\n    if (format === 0) {\n        nCodes = parser.parseCard8();\n        for (i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        nRanges = parser.parseCard8();\n        code = 1;\n        for (i = 0; i < nRanges; i += 1) {\n            first = parser.parseCard8();\n            nLeft = parser.parseCard8();\n            for (j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n    return new encoding.CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(code, font, index) {\n    var p, glyph, stack, nStems, haveWidth, width, open, x, y, c1x, c1y, c2x, c2y, v;\n    p = new path.Path();\n    stack = [];\n    nStems = 0;\n    haveWidth = false;\n    width = font.defaultWidthX;\n    open = false;\n    x = y = 0;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + font.nominalWidthX;\n        }\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var i, b1, b2, b3, b4, codeIndex, subrCode;\n        i = 0;\n        while (i < code.length) {\n            v = code[i];\n            i += 1;\n            switch (v) {\n            case 1: // hstem\n                parseStems();\n                break;\n            case 3: // vstem\n                parseStems();\n                break;\n            case 4: // vmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n                y += stack.pop();\n                newContour(x, y);\n                break;\n            case 5: // rlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n                break;\n            case 6: // hlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n                break;\n            case 7: // vlineto\n                while (stack.length > 0) {\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                }\n                break;\n            case 8: // rrcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                break;\n            case 10: // callsubr\n                codeIndex = stack.pop() + font.subrsBias;\n                subrCode = font.subrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n                break;\n            case 11: // return\n                return;\n            case 12: // flex operators\n                v = code[i];\n                i += 1;\n                var jpx, jpy, c3x, c3y, c4x, c4y, fd;\n                switch (v) {\n                case 35: // flex\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    y = c4y + stack.shift();      // dy6\n                    fd = stack.shift();           // flex depth\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 34: // hflex\n                    // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y;                      // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = y;                      // dy5\n                    x = c4x + stack.shift();      // dx6\n                    // y = y;                     // dy6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 36: // hflex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    // y = y;                     // dy6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 37: // flex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n\n                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                        x = c4x + stack.shift();  // d6\n                    } else {\n                        y = c4y + stack.shift();  // d6\n                    }\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                default:\n                    console.log('Glyph ' + index + ': unknown operator ' + 1200 + v);\n                    stack.length = 0;\n                }\n                break;\n            case 14: // endchar\n                if (stack.length > 0 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n                p.closePath();\n                open = false;\n                break;\n            case 18: // hstemhm\n                parseStems();\n                break;\n            case 19: // hintmask\n            case 20: // cntrmask\n                parseStems();\n                i += (nStems + 7) >> 3;\n                break;\n            case 21: // rmoveto\n                if (stack.length > 2 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n                y += stack.pop();\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 22: // hmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 23: // vstemhm\n                parseStems();\n                break;\n            case 24: // rcurveline\n                while (stack.length > 2) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                x += stack.shift();\n                y += stack.shift();\n                p.lineTo(x, y);\n                break;\n            case 25: // rlinecurve\n                while (stack.length > 6) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                break;\n            case 26: // vvcurveto\n                if (stack.length % 2) {\n                    x += stack.shift();\n                }\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x;\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                break;\n            case 27: // hhcurveto\n                if (stack.length % 2) {\n                    y += stack.shift();\n                }\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y;\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                break;\n            case 28: // shortint\n                b1 = code[i];\n                b2 = code[i + 1];\n                stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                i += 2;\n                break;\n            case 29: // callgsubr\n                codeIndex = stack.pop() + font.gsubrsBias;\n                subrCode = font.gsubrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n                break;\n            case 30: // vhcurveto\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                break;\n            case 31: // hvcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                break;\n            default:\n                if (v < 32) {\n                    console.log('Glyph ' + index + ': unknown operator ' + v);\n                } else if (v < 247) {\n                    stack.push(v - 139);\n                } else if (v < 251) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push((v - 247) * 256 + b1 + 108);\n                } else if (v < 255) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push(-(v - 251) * 256 - b1 - 108);\n                } else {\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    b3 = code[i + 2];\n                    b4 = code[i + 3];\n                    i += 4;\n                    stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                }\n            }\n        }\n    }\n\n    parse(code);\n    glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.path = p;\n    glyph.advanceWidth = width;\n    return glyph;\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n    return bias;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    var header, nameIndex, topDictIndex, stringIndex, globalSubrIndex, topDict, privateDictOffset, privateDict,\n        subrOffset, subrIndex, charString, charStringsIndex, charset, i;\n    font.tables.cff = {};\n    header = parseCFFHeader(data, start);\n    nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n    topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n    font.tables.cff.topDict = topDict;\n\n    privateDictOffset = start + topDict['private'][1];\n    privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        subrOffset = privateDictOffset + privateDict.subrs;\n        subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) { // Standard encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) { // Expert encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = [];\n    for (i = 0; i < font.nGlyphs; i += 1) {\n        charString = charStringsIndex.objects[i];\n        font.glyphs.push(parseCFFCharstring(charString, font, i));\n    }\n}\n\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    var i, sid;\n    // Is the string in the CFF standard strings?\n    i = encoding.cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + encoding.cffStandardStrings.length;\n    } else {\n        sid = encoding.cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Table('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    var t = new table.Table('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (var i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    var m = {}, i, entry, value;\n    for (i = 0; i < meta.length; i += 1) {\n        entry = meta[i];\n        value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    var t = new table.Table('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    var t = new table.Table('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    var t = new table.Table('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (var i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Table('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    var t = new table.Table('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (var i = 0; i < glyphNames.length; i += 1) {\n        var glyphName = glyphNames[i];\n        var glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    var ops = [], path = glyph.path, x, y, i, cmd, dx, dy, dx1, dy1, dx2, dy2;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    x = 0;\n    y = 0;\n    for (i = 0; i < path.commands.length; i += 1) {\n        cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            var _13 = 1 / 3;\n            var _23 = 2 / 3;\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = cmd.x - x;\n            dy = cmd.y - y;\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = cmd.x;\n            y = cmd.y;\n        } else if (cmd.type === 'L') {\n            dx = cmd.x - x;\n            dy = cmd.y - y;\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = cmd.x;\n            y = cmd.y;\n        } else if (cmd.type === 'C') {\n            dx1 = cmd.x1 - x;\n            dy1 = cmd.y1 - y;\n            dx2 = cmd.x2 - cmd.x1;\n            dy2 = cmd.y2 - cmd.y1;\n            dx = cmd.x - cmd.x2;\n            dy = cmd.y - cmd.y2;\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = cmd.x;\n            y = cmd.y;\n        } else if (cmd.type === 'Z') {\n            // Contours are closed automatically.\n        }\n    }\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    var t = new table.Table('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    var t = new table.Table('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makePrivateDictIndex(privateDict) {\n    var t = new table.Table('Private DICT INDEX', [\n        {name: 'privateDicts', type: 'INDEX', value: []}\n    ]);\n    t.privateDicts = [{name: 'privateDict_0', type: 'TABLE', value: privateDict}];\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    var t = new table.Table('CFF ', [\n        {name: 'header', type: 'TABLE'},\n        {name: 'nameIndex', type: 'TABLE'},\n        {name: 'topDictIndex', type: 'TABLE'},\n        {name: 'stringIndex', type: 'TABLE'},\n        {name: 'globalSubrIndex', type: 'TABLE'},\n        {name: 'charsets', type: 'TABLE'},\n        {name: 'charStringsIndex', type: 'TABLE'},\n        {name: 'privateDictIndex', type: 'TABLE'}\n    ]);\n\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    var attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    var privateAttrs = {};\n\n    var glyphNames = [];\n    // Skip first glyph (.notdef)\n    for (var i = 1; i < glyphs.length; i += 1) {\n        glyphNames.push(glyphs[i].name);\n    }\n\n    var strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    var topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    var privateDict = makePrivateDict(privateAttrs, strings);\n    t.privateDictIndex = makePrivateDictIndex(privateDict);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    var startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n    attrs.encoding = 0; // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexports.parse = parseCFFTable;\nexports.make = makeCFFTable;\n\n},{\"../encoding\":3,\"../glyph\":5,\"../parse\":7,\"../path\":8,\"../table\":9}],11:[function(require,module,exports){\n// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var version, numTables, offset, platformId, encodingId, format, segCount,\n        endCountParser, startCountParser, idDeltaParser, idRangeOffsetParser, glyphIndexOffset,\n        endCount, startCount, i, c, idDelta, idRangeOffset, p, glyphIndex;\n    var cmap = {};\n    cmap.version = version = parse.getUShort(data, start);\n    check.argument(version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 3\" table. This is a Windows format.\n    cmap.numtables = numTables = parse.getUShort(data, start + 2);\n    offset = -1;\n    for (i = 0; i < numTables; i += 1) {\n        platformId = parse.getUShort(data, start + 4 + (i * 8));\n        encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n    if (offset === -1) {\n        // There is no cmap table in the font that we support, so return null.\n        // This font will be marked as unsupported.\n        return null;\n    }\n\n    p = new parse.Parser(data, start + offset);\n    cmap.format = format = p.parseUShort();\n    check.argument(format === 4, 'Only format 4 cmap tables are supported.');\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n    // segCount is stored x 2.\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n\n    endCountParser = new parse.Parser(data, start + offset + 14);\n    startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (i = 0; i < segCount - 1; i += 1) {\n        endCount = endCountParser.parseUShort();\n        startCount = startCountParser.parseUShort();\n        idDelta = idDeltaParser.parseShort();\n        idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\nfunction makeCmapTable(glyphs) {\n    var i, j, glyph;\n    var t = new table.Table('cmap', [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: 1},\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: 12},\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        glyph = glyphs[i];\n        for (j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n    }\n    addTerminatorSegment(t);\n\n    var segCount;\n    segCount = t.segments.length;\n    t.segCountX2 = segCount * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n     // Set up parallel segment arrays.\n    var endCounts = [],\n        startCounts = [],\n        idDeltas = [],\n        idRangeOffsets = [],\n        glyphIds = [];\n\n    for (i = 0; i < segCount; i += 1) {\n        var segment = t.segments[i];\n        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n        if (segment.glyphId !== undefined) {\n            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n        }\n    }\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n    return t;\n}\n\nexports.parse = parseCmapTable;\nexports.make = makeCmapTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],12:[function(require,module,exports){\n// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\n'use strict';\n\nvar check = require('../check');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(data, start, index, font) {\n    var p, glyph, flag, i, j, flags,\n        endPointIndices, numberOfCoordinates, repeatCount, points, point, px, py,\n        component, moreComponents;\n    p = new parse.Parser(data, start);\n    glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.numberOfContours = p.parseShort();\n    glyph.xMin = p.parseShort();\n    glyph.yMin = p.parseShort();\n    glyph.xMax = p.parseShort();\n    glyph.yMax = p.parseShort();\n    if (glyph.numberOfContours > 0) {\n        // This glyph is not a composite.\n        endPointIndices = glyph.endPointIndices = [];\n        for (i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                repeatCount = p.parseByte();\n                for (j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            points = [];\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n                px = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                py = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            component = {\n                glyphIndex: p.parseUShort(),\n                 xScale: 1,\n                 scale01: 0,\n                 scale10: 0,\n                 yScale: 1,\n                 dx: 0,\n                 dy: 0\n             };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                component.dx = p.parseShort();\n                component.dy = p.parseShort();\n            } else {\n                // The arguments are bytes\n                component.dx = p.parseChar();\n                component.dy = p.parseChar();\n            }\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n    }\n    return glyph;\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints, i, pt, newPt;\n    newPoints = [];\n    for (i = 0; i < points.length; i += 1) {\n        pt = points[i];\n        newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n    return newPoints;\n}\n\n\nfunction getContours(points) {\n    var contours, currentContour, i, pt;\n    contours = [];\n    currentContour = [];\n    for (i = 0; i < points.length; i += 1) {\n        pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p, contours, i, realFirstPoint, j, contour, pt, firstPt,\n        prevPt, midPt, curvePt, lastPt;\n    p = new path.Path();\n    if (!points) {\n        return p;\n    }\n    contours = getContours(points);\n    for (i = 0; i < contours.length; i += 1) {\n        contour = contours[i];\n        firstPt = contour[0];\n        lastPt = contour[contour.length - 1];\n        if (firstPt.onCurve) {\n            curvePt = null;\n            // The first point will be consumed by the moveTo command,\n            // so skip it in the loop.\n            realFirstPoint = true;\n        } else {\n            if (lastPt.onCurve) {\n                // If the first point is off-curve and the last point is on-curve,\n                // start at the last point.\n                firstPt = lastPt;\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n            }\n            curvePt = firstPt;\n            // The first point is synthesized, so don't skip the real first point.\n            realFirstPoint = false;\n        }\n        p.moveTo(firstPt.x, firstPt.y);\n\n        for (j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n            pt = contour[j];\n            prevPt = j === 0 ? firstPt : contour[j - 1];\n            if (prevPt.onCurve && pt.onCurve) {\n                // This is a straight line.\n                p.lineTo(pt.x, pt.y);\n            } else if (prevPt.onCurve && !pt.onCurve) {\n                curvePt = pt;\n            } else if (!prevPt.onCurve && !pt.onCurve) {\n                midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n                p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n                curvePt = pt;\n            } else if (!prevPt.onCurve && pt.onCurve) {\n                // Previous point off-curve, this point on-curve.\n                p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                curvePt = null;\n            } else {\n                throw new Error('Invalid state.');\n            }\n        }\n        if (firstPt !== lastPt) {\n            // Connect the last and first points\n            if (curvePt) {\n                p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            } else {\n                p.lineTo(firstPt.x, firstPt.y);\n            }\n        }\n    }\n    p.closePath();\n    return p;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    var glyphs, i, j, offset, nextOffset, glyph,\n        component, componentGlyph, transformedPoints;\n    glyphs = [];\n    // The last element of the loca table is invalid.\n    for (i = 0; i < loca.length - 1; i += 1) {\n        offset = loca[i];\n        nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(parseGlyph(data, start + offset, i, font));\n        } else {\n            glyphs.push(new _glyph.Glyph({font: font, index: i}));\n        }\n    }\n    // Go over the glyphs again, resolving the composite glyphs.\n    for (i = 0; i < glyphs.length; i += 1) {\n        glyph = glyphs[i];\n        if (glyph.isComposite) {\n            for (j = 0; j < glyph.components.length; j += 1) {\n                component = glyph.components[j];\n                componentGlyph = glyphs[component.glyphIndex];\n                if (componentGlyph.points) {\n                    transformedPoints = transformPoints(componentGlyph.points, component);\n                    glyph.points = glyph.points.concat(transformedPoints);\n                }\n            }\n        }\n        glyph.path = getPath(glyph.points);\n    }\n    return glyphs;\n}\n\nexports.parse = parseGlyfTable;\n\n},{\"../check\":1,\"../glyph\":5,\"../parse\":7,\"../path\":8}],13:[function(require,module,exports){\n// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n// These lists are unused by now, this function is just the basis for a real parsing.\nfunction parseTaggedListTable(data, start) {\n    var p = new parse.Parser(data, start),\n        n = p.parseUShort(),\n        list = [];\n    for (var i = 0; i < n; i++) {\n        list[p.parseTag()] = { offset: p.parseUShort() };\n    }\n    return list;\n}\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// Format 1 is a simple list of glyph ids,\n// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\nfunction parseCoverageTable(data, start) {\n    var p = new parse.Parser(data, start),\n        format = p.parseUShort(),\n        count =  p.parseUShort();\n    if (format === 1) {\n        return p.parseUShortList(count);\n    }\n    else if (format === 2) {\n        var i, begin, end, index, coverage = [];\n        for (; count--;) {\n            begin = p.parseUShort();\n            end = p.parseUShort();\n            index = p.parseUShort();\n            for (i = begin; i <= end; i++) {\n                coverage[index++] = i;\n            }\n        }\n        return coverage;\n    }\n}\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// Returns a function that gets a class value from a glyph ID.\nfunction parseClassDefTable(data, start) {\n    var p = new parse.Parser(data, start),\n        format = p.parseUShort();\n    if (format === 1) {\n        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n        var startGlyph = p.parseUShort(),\n            glyphCount = p.parseUShort(),\n            classes = p.parseUShortList(glyphCount);\n        return function(glyphID) {\n            return classes[glyphID - startGlyph] || 0;\n        };\n    }\n    else if (format === 2) {\n        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n        var rangeCount = p.parseUShort(),\n            startGlyphs = [],\n            endGlyphs = [],\n            classValues = [];\n        for (var i = 0; i < rangeCount; i++) {\n            startGlyphs[i] = p.parseUShort();\n            endGlyphs[i] = p.parseUShort();\n            classValues[i] = p.parseUShort();\n        }\n        return function(glyphID) {\n            var l, c, r;\n            l = 0;\n            r = startGlyphs.length - 1;\n            while (l < r) {\n                c = (l + r + 1) >> 1;\n                if (glyphID < startGlyphs[c]) {\n                    r = c - 1;\n                } else {\n                    l = c;\n                }\n            }\n            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                return classValues[l] || 0;\n            }\n            return 0;\n        };\n    }\n}\n\n// Parse a pair adjustment positioning subtable, format 1 or format 2\n// The subtable is returned in the form of a lookup function.\nfunction parsePairPosSubTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format, coverageOffset, coverage, valueFormat1, valueFormat2,\n        sharedPairSets, firstGlyph, secondGlyph, value1, value2;\n    // This part is common to format 1 and format 2 subtables\n    format = p.parseUShort();\n    coverageOffset = p.parseUShort();\n    coverage = parseCoverageTable(data, start + coverageOffset);\n    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n    // Only valueFormat1=4 and valueFormat2=0 is supported.\n    valueFormat1 = p.parseUShort();\n    valueFormat2 = p.parseUShort();\n    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n    sharedPairSets = {};\n    if (format === 1) {\n        // Pair Positioning Adjustment: Format 1\n        var pairSetCount, pairSetOffsets, pairSetOffset, sharedPairSet, pairValueCount, pairSet;\n        pairSetCount = p.parseUShort();\n        pairSet = [];\n        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n        pairSetOffsets = p.parseOffset16List(pairSetCount);\n        for (firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n            pairSetOffset = pairSetOffsets[firstGlyph];\n            sharedPairSet = sharedPairSets[pairSetOffset];\n            if (!sharedPairSet) {\n                // Parse a pairset table in a pair adjustment subtable format 1\n                sharedPairSet = {};\n                p.relativeOffset = pairSetOffset;\n                pairValueCount = p.parseUShort();\n                for (; pairValueCount--;) {\n                    secondGlyph = p.parseUShort();\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) value2 = p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    sharedPairSet[secondGlyph] = value1;\n                }\n            }\n            pairSet[coverage[firstGlyph]] = sharedPairSet;\n        }\n        return function(leftGlyph, rightGlyph) {\n            var pairs = pairSet[leftGlyph];\n            if (pairs) return pairs[rightGlyph];\n        };\n    }\n    else if (format === 2) {\n        // Pair Positioning Adjustment: Format 2\n        var classDef1Offset, classDef2Offset, class1Count, class2Count, i, j,\n            getClass1, getClass2, kerningMatrix, kerningRow, covered;\n        classDef1Offset = p.parseUShort();\n        classDef2Offset = p.parseUShort();\n        class1Count = p.parseUShort();\n        class2Count = p.parseUShort();\n        getClass1 = parseClassDefTable(data, start+classDef1Offset);\n        getClass2 = parseClassDefTable(data, start+classDef2Offset);\n\n        // Parse kerning values by class pair.\n        kerningMatrix = [];\n        for (i = 0; i < class1Count; i++) {\n            kerningRow = kerningMatrix[i] = [];\n            for (j = 0; j < class2Count; j++) {\n                if (valueFormat1) value1 = p.parseShort();\n                if (valueFormat2) value2 = p.parseShort();\n                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                // so value1 is the XAdvance and value2 is empty.\n                kerningRow[j] = value1;\n            }\n        }\n\n        // Convert coverage list to a hash\n        covered = {};\n        for(i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\n        // Get the kerning value for a specific glyph pair.\n        return function(leftGlyph, rightGlyph) {\n            if (!covered[leftGlyph]) return;\n            var class1 = getClass1(leftGlyph),\n                class2 = getClass2(rightGlyph),\n                kerningRow = kerningMatrix[class1];\n\n            if (kerningRow) {\n                return kerningRow[class2];\n            }\n        };\n    }\n}\n\n// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\nfunction parseLookupTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var table, lookupType, lookupFlag, useMarkFilteringSet, subTableCount, subTableOffsets, subtables, i;\n    lookupType = p.parseUShort();\n    lookupFlag = p.parseUShort();\n    useMarkFilteringSet = lookupFlag & 0x10;\n    subTableCount = p.parseUShort();\n    subTableOffsets = p.parseOffset16List(subTableCount);\n    table = {\n        lookupType: lookupType,\n        lookupFlag: lookupFlag,\n        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n    };\n    // LookupType 2, Pair adjustment\n    if (lookupType === 2) {\n        subtables = [];\n        for (i = 0; i < subTableCount; i++) {\n            subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n        }\n        // Return a function which finds the kerning values in the subtables.\n        table.getKerningValue = function(leftGlyph, rightGlyph) {\n            for (var i = subtables.length; i--;) {\n                var value = subtables[i](leftGlyph, rightGlyph);\n                if (value !== undefined) return value;\n            }\n            return 0;\n        };\n    }\n    return table;\n}\n\n// Parse the `GPOS` table which contains, among other things, kerning pairs.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\nfunction parseGposTable(data, start, font) {\n    var p, tableVersion, lookupListOffset, scriptList, i, featureList, lookupCount,\n        lookupTableOffsets, lookupListAbsoluteOffset, table;\n\n    p = new parse.Parser(data, start);\n    tableVersion = p.parseFixed();\n    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n    // ScriptList and FeatureList - ignored for now\n    scriptList = parseTaggedListTable(data, start+p.parseUShort());\n    // 'kern' is the feature we are looking for.\n    featureList = parseTaggedListTable(data, start+p.parseUShort());\n\n    // LookupList\n    lookupListOffset = p.parseUShort();\n    p.relativeOffset = lookupListOffset;\n    lookupCount = p.parseUShort();\n    lookupTableOffsets = p.parseOffset16List(lookupCount);\n    lookupListAbsoluteOffset = start + lookupListOffset;\n    for (i = 0; i < lookupCount; i++) {\n        table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n    }\n}\n\nexports.parse = parseGposTable;\n\n},{\"../check\":1,\"../parse\":7}],14:[function(require,module,exports){\n// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {},\n        p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();     // 50\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: 0},\n        {name: 'modified', type: 'LONGDATETIME', value: 0},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHeadTable;\nexports.make = makeHeadTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],15:[function(require,module,exports){\n// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {},\n        p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHheaTable;\nexports.make = makeHheaTable;\n\n},{\"../parse\":7,\"../table\":9}],16:[function(require,module,exports){\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    var p, i, glyph, advanceWidth, leftSideBearing;\n    p = new parse.Parser(data, start);\n    for (i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n        glyph = glyphs[i];\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    var t = new table.Table('hmtx', []);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var advanceWidth = glyph.advanceWidth || 0;\n        var leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n    return t;\n}\n\nexports.parse = parseHmtxTable;\nexports.make = makeHmtxTable;\n\n\n\n\n},{\"../parse\":7,\"../table\":9}],17:[function(require,module,exports){\n// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var pairs, p, tableVersion, subTableVersion, nPairs,\n        i, leftIndex, rightIndex, value;\n    pairs = {};\n    p = new parse.Parser(data, start);\n    tableVersion = p.parseUShort();\n    check.argument(tableVersion === 0, 'Unsupported kern table version.');\n    // Skip nTables.\n    p.skip('uShort', 1);\n    subTableVersion = p.parseUShort();\n    check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subTableLength, subTableCoverage\n    p.skip('uShort', 2);\n    nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (i = 0; i < nPairs; i += 1) {\n        leftIndex = p.parseUShort();\n        rightIndex = p.parseUShort();\n        value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n    return pairs;\n}\n\nexports.parse = parseKernTable;\n\n},{\"../check\":1,\"../parse\":7}],18:[function(require,module,exports){\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\n'use strict';\n\nvar parse = require('../parse');\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p, parseFn, glyphOffsets, glyphOffset, i;\n    p = new parse.Parser(data, start);\n    parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    glyphOffsets = [];\n    for (i = 0; i < numGlyphs + 1; i += 1) {\n        glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n        glyphOffsets.push(glyphOffset);\n    }\n    return glyphOffsets;\n}\n\nexports.parse = parseLocaTable;\n\n},{\"../parse\":7}],19:[function(require,module,exports){\n// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {},\n        p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexports.parse = parseMaxpTable;\nexports.make = makeMaxpTable;\n\n},{\"../parse\":7,\"../table\":9}],20:[function(require,module,exports){\n// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\n'use strict';\n\nvar encode = require('../types').encode;\nvar parse = require('../parse');\nvar table = require('../table');\n\n// NameIDs for the name table.\nvar nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'licence',                // 13\n    'licenceURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\n// Parse the naming `name` table\n// Only Windows Unicode English names are supported.\n// Format 1 additional fields are not supported\nfunction parseNameTable(data, start) {\n    var name = {},\n        p = new parse.Parser(data, start);\n    name.format = p.parseUShort();\n    var count = p.parseUShort(),\n        stringOffset = p.offset + p.parseUShort();\n    var platformID, encodingID, languageID, nameID, property, byteLength,\n        offset, str, i, j, codePoints;\n    var unknownCount = 0;\n    for(i = 0; i < count; i++) {\n        platformID = p.parseUShort();\n        encodingID = p.parseUShort();\n        languageID = p.parseUShort();\n        nameID = p.parseUShort();\n        property = nameTableNames[nameID];\n        byteLength = p.parseUShort();\n        offset = p.parseUShort();\n        // platformID - encodingID - languageID standard combinations :\n        // 1 - 0 - 0 : Macintosh, Roman, English\n        // 3 - 1 - 0x409 : Windows, Unicode BMP (UCS-2), en-US\n        if (platformID === 3 && encodingID === 1 && languageID === 0x409) {\n            codePoints = [];\n            var length = byteLength/2;\n            for(j = 0; j < length; j++, offset += 2) {\n                codePoints[j] = parse.getShort(data, stringOffset+offset);\n            }\n            str = String.fromCharCode.apply(null, codePoints);\n            if (property) {\n                name[property] = str;\n            }\n            else {\n                unknownCount++;\n                name['unknown'+unknownCount] = str;\n            }\n        }\n\n    }\n    if (name.format === 1) {\n        name.langTagCount = p.parseUShort();\n    }\n    return name;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Table('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\nfunction addMacintoshNameRecord(t, recordID, s, offset) {\n    // Macintosh, Roman, English\n    var stringBytes = encode.STRING(s);\n    t.records.push(makeNameRecord(1, 0, 0, recordID, stringBytes.length, offset));\n    t.strings.push(stringBytes);\n    offset += stringBytes.length;\n    return offset;\n}\n\nfunction addWindowsNameRecord(t, recordID, s, offset) {\n    // Windows, Unicode BMP (UCS-2), US English\n    var utf16Bytes = encode.UTF16(s);\n    t.records.push(makeNameRecord(3, 1, 0x0409, recordID, utf16Bytes.length, offset));\n    t.strings.push(utf16Bytes);\n    offset += utf16Bytes.length;\n    return offset;\n}\n\nfunction makeNameTable(options) {\n    var i, s;\n    var t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: 0},\n        {name: 'stringOffset', type: 'USHORT', value: 0}\n    ]);\n    t.records = [];\n    t.strings = [];\n    var offset = 0;\n    // Add Macintosh records first\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addMacintoshNameRecord(t, i, s, offset);\n        }\n    }\n    // Then add Windows records\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addWindowsNameRecord(t, i, s, offset);\n        }\n    }\n\n    t.count = t.records.length;\n    t.stringOffset = 6 + t.count * 12;\n    for (i = 0; i < t.records.length; i += 1) {\n        t.fields.push({name: 'record_' + i, type: 'TABLE', value: t.records[i]});\n    }\n    for (i = 0; i < t.strings.length; i += 1) {\n        t.fields.push({name: 'string_' + i, type: 'LITERAL', value: t.strings[i]});\n    }\n    return t;\n}\n\nexports.parse = parseNameTable;\nexports.make = makeNameTable;\n\n},{\"../parse\":7,\"../table\":9,\"../types\":24}],21:[function(require,module,exports){\n// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {},\n        p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 0},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 0},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 0},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 0},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseOS2Table;\nexports.make = makeOS2Table;\n\n},{\"../parse\":7,\"../table\":9}],22:[function(require,module,exports){\n// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {},\n        p = new parse.Parser(data, start),\n        i, nameLength;\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n    case 1:\n        post.names = encoding.standardNames.slice();\n        break;\n    case 2:\n        post.numberOfGlyphs = p.parseUShort();\n        post.glyphNameIndex = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.glyphNameIndex[i] = p.parseUShort();\n        }\n        post.names = [];\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n                nameLength = p.parseChar();\n                post.names.push(p.parseString(nameLength));\n            }\n        }\n        break;\n    case 2.5:\n        post.numberOfGlyphs = p.parseUShort();\n        post.offset = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.offset[i] = p.parseChar();\n        }\n        break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexports.parse = parsePostTable;\nexports.make = makePostTable;\n\n},{\"../encoding\":3,\"../parse\":7,\"../table\":9}],23:[function(require,module,exports){\n// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\n'use strict';\n\nvar check = require('../check');\nvar table = require('../table');\n\nvar cmap = require('./cmap');\nvar cff = require('./cff');\nvar head = require('./head');\nvar hhea = require('./hhea');\nvar hmtx = require('./hmtx');\nvar maxp = require('./maxp');\nvar _name = require('./name');\nvar os2 = require('./os2');\nvar post = require('./post');\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n    var sum = 0;\n    for (var i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Table('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    var sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    var recordFields = [];\n    var tableFields = [];\n\n    var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (var i = 0; i < tables.length; i += 1) {\n        var t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        var tableLength = t.sizeOf();\n        var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function (r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (var i = 0; i < chars.length; i += 1) {\n        var glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            var glyph = font.glyphs[glyphIndex];\n            return glyph.getMetrics();\n        }\n    }\n    return notFoundMetrics;\n}\n\n// Return the smallest and largest unicode values of the characters in this font.\n// For most fonts the smallest value would be 20 (space).\nfunction charCodeBounds(glyphs) {\n    var minCode, maxCode;\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        if (glyph.unicode >= 20) {\n            if (minCode === undefined) {\n                minCode = glyph.unicode;\n            } else if (glyph.unicode < minCode) {\n                minCode = glyph.unicode;\n            }\n            if (maxCode === undefined) {\n                maxCode = glyph.unicode;\n            } else if (glyph.unicode > maxCode) {\n                maxCode = glyph.unicode;\n            }\n        }\n    }\n    return [minCode, maxCode];\n}\n\nfunction average(vs) {\n    var sum = 0;\n    for (var i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    var xMins = [];\n    var yMins = [];\n    var xMaxs = [];\n    var yMaxs = [];\n    var advanceWidths = [];\n    var leftSideBearings = [];\n    var rightSideBearings = [];\n    for (var i = 0; i < font.glyphs.length; i += 1) {\n        var glyph = font.glyphs[i];\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        var metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n    var globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n    globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\n    var headTable = head.make({\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax\n    });\n\n    var hheaTable = hhea.make({\n        // Adding a little here makes OS X Quick Look happy\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    var maxpTable = maxp.make(font.glyphs.length);\n\n    var codeBounds = charCodeBounds(font.glyphs);\n    var os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: 500, // Medium FIXME Make this configurable\n        usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n        usFirstCharIndex: codeBounds[0],\n        usLastCharIndex: codeBounds[1],\n        ulUnicodeRange1: 0x00000001, // Basic Latin\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.ascender,\n        usWinDescent: -globals.descender,\n        ulCodePageRange1: 0x00000001, // Basic Latin\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: 0}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n\n    var hmtxTable = hmtx.make(font.glyphs);\n    var cmapTable = cmap.make(font.glyphs);\n\n    var fullName = font.familyName + ' ' + font.styleName;\n    var postScriptName = font.familyName.replace(/\\s/g, '') + '-' + font.styleName;\n    var nameTable = _name.make({\n        copyright: font.copyright,\n        fontFamily: font.familyName,\n        fontSubfamily: font.styleName,\n        uniqueID: font.manufacturer + ':' + fullName,\n        fullName: fullName,\n        version: font.version,\n        postScriptName: postScriptName,\n        trademark: font.trademark,\n        manufacturer: font.manufacturer,\n        designer: font.designer,\n        description: font.description,\n        manufacturerURL: font.manufacturerURL,\n        designerURL: font.designerURL,\n        license: font.license,\n        licenseURL: font.licenseURL,\n        preferredFamily: font.familyName,\n        preferredSubfamily: font.styleName\n    });\n    var postTable = post.make();\n    var cffTable = cff.make(font.glyphs, {\n        version: font.version,\n        fullName: fullName,\n        familyName: font.familyName,\n        weightName: font.styleName,\n        postScriptName: postScriptName\n    });\n    // Order the tables according to the the OpenType specification 1.4.\n    var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n\n    var sfntTable = makeSfntTable(tables);\n\n    var bytes = sfntTable.encode();\n    var checkSum = computeCheckSum(bytes);\n    headTable.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n\n    // Build the font again, now with the proper checkSum.\n    sfntTable = makeSfntTable(tables);\n\n    return sfntTable;\n}\n\nexports.computeCheckSum = computeCheckSum;\nexports.make = makeSfntTable;\nexports.fontToTable = fontToSfntTable;\n\n},{\"../check\":1,\"../table\":9,\"./cff\":10,\"./cmap\":11,\"./head\":14,\"./hhea\":15,\"./hmtx\":16,\"./maxp\":19,\"./name\":20,\"./os2\":21,\"./post\":22}],24:[function(require,module,exports){\n// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = require('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\nvar decode = {};\nvar encode = {};\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function () {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n// Convert an 8-bit unsigned integer to a list of 1 byte.\nencode.BYTE = function (v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert a 8-bit signed integer to a list of 1 byte.\nencode.CHAR = function (v) {\n    return [v.charCodeAt(0)];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert an ASCII string to a list of bytes.\nencode.CHARARRAY = function (v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(v.charCodeAt(i));\n    }\n    return b;\n};\n\nsizeOf.CHARARRAY = function (v) {\n    return v.length;\n};\n\n// Convert a 16-bit unsigned integer to a list of 2 bytes.\nencode.USHORT = function (v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.USHORT = constant(2);\n\n// Convert a 16-bit signed integer to a list of 2 bytes.\nencode.SHORT = function (v) {\n    // Two's complement\n    if (v >= LIMIT16){\n        v = - ( 2 * LIMIT16 - v);\n    }\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.SHORT = constant(2);\n\n// Convert a 24-bit unsigned integer to a list of 3 bytes.\nencode.UINT24 = function (v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.UINT24 = constant(3);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.ULONG = function (v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.ULONG = constant(4);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.LONG = function (v) {\n     // Two's complement\n    if (v >= LIMIT32){\n        v = - ( 2 * LIMIT32 - v);\n    }\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n\n// FIXME Implement LONGDATETIME\nencode.LONGDATETIME = function () {\n    return [0, 0, 0, 0, 0, 0, 0, 0];\n};\n\nsizeOf.LONGDATETIME = constant(8);\n\n// Convert a 4-char tag to a list of 4 bytes.\nencode.TAG = function (v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\nencode.NUMBER = function (v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131 ) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\nsizeOf.NUMBER = function (v) {\n    return encode.NUMBER(v).length;\n};\n\n// Convert a signed number between -32768 and +32767 to a three-byte value.\n// This ensures we always use three bytes, but is not the most compact format.\nencode.NUMBER16 = function (v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER16 = constant(2);\n\n// Convert a signed number between -(2^31) and +(2^31-1) to a four-byte value.\n// This is useful if you want to be sure you always use four bytes,\n// at the expense of wasting a few bytes for smaller numbers.\nencode.NUMBER32 = function (v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER32 = constant(4);\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n// Convert a ASCII string to a list of UTF16 bytes.\nencode.UTF16 = function (v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(0);\n        b.push(v.charCodeAt(i));\n    }\n    return b;\n};\n\nsizeOf.UTF16 = function (v) {\n    return v.length * 2;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\nencode.INDEX = function (l) {\n    var offSize, offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n        dataSize, i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    offset = 1; // First offset is always 1.\n    offsets = [offset];\n    data = [];\n    dataSize = 0;\n    for (i = 0; i < l.length; i += 1) {\n        v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        dataSize += v.length;\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    encodedOffsets = [];\n    offSize = (1 + Math.floor(Math.log(dataSize)/Math.log(2)) / 8) | 0;\n    offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\nsizeOf.INDEX = function (v) {\n    return encode.INDEX(v).length;\n};\n\n// Convert an object to a CFF DICT structure.\n// The keys should be numeric.\n// The values should be objects containing name / type / value.\nencode.DICT = function (m) {\n    var d = [],\n        keys = Object.keys(m),\n        length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\nsizeOf.DICT = function (m) {\n    return encode.DICT(m).length;\n};\n\nencode.OPERATOR = function (v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\nencode.OPERAND = function (v, type) {\n    var d, i;\n    d = [];\n    if (Array.isArray(type)) {\n        for (i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else {\n            // FIXME Add support for booleans\n            d = d.concat(encode.NUMBER(v));\n        }\n    }\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n// Convert a list of CharString operations to bytes.\nencode.CHARSTRING = function (ops) {\n    if ( wmm && wmm.has( ops ) ) {\n        return wmm.get( ops );\n    }\n\n    var d = [],\n        length = ops.length,\n        op,\n        i;\n\n    for (i = 0; i < length; i += 1) {\n        op = ops[i];\n        d = d.concat( encode[op.type](op.value) );\n    }\n\n    if ( wmm ) {\n        wmm.set( ops, d );\n    }\n\n    return d;\n};\n\nsizeOf.CHARSTRING = function (ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n// Convert an object containing name / type / value to bytes.\nencode.OBJECT = function (v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n// Convert a table object to bytes.\n// A table contains a list of fields containing the metadata (name, type and default value).\n// The table itself has the field values set as attributes.\nencode.TABLE = function (table) {\n    var d = [],\n        length = table.fields.length,\n        i;\n\n    for (i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n        var bytes = encodingFunction(value);\n        d = d.concat(bytes);\n    }\n    return d;\n};\n\n// Merge in a list of bytes.\nencode.LITERAL = function (v) {\n    return v;\n};\n\nsizeOf.LITERAL = function (v) {\n    return v.length;\n};\n\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n\n},{\"./check\":1}]},{},[6])(6)\n});\n},{}],2:[function(require,module,exports){\n/*!\n * Paper.js v0.9.22 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Mon Mar 23 22:20:31 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\n\t\t  var noCanvas =\n\t\t\t  ( typeof process === 'object' && process.browser !== true ) ||\n\t\t\t  ( typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope );\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && (!exclude || !exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tctor.prototype = create(this.prototype);\n\t\t\tctor.base = base;\n\t\t\tdefine(ctor.prototype, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\treturn arguments.length ? this.inject.apply(ctor, arguments) : ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function() {\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\t\tif (arguments[i] !== undefined)\n\t\t\t\t\t\treturn arguments[i];\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar orig = props._filtering || props;\n\t\t\tfor (var key in orig) {\n\t\t\t\tif (orig.hasOwnProperty(key) && !(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tfunction checkKeys(o1, o2) {\n\t\t\t\tfor (var i in o1)\n\t\t\t\t\tif (o1.hasOwnProperty(i) && !o2.hasOwnProperty(i))\n\t\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\tif (obj1.length !== obj2.length)\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i = 0, l = obj1.length; i < l; i++) {\n\t\t\t\t\tif (!Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 && typeof obj1 === 'object'\n\t\t\t\t\t&& obj2 && typeof obj2 === 'object') {\n\t\t\t\tif (!checkKeys(obj1, obj2) || !checkKeys(obj2, obj1))\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i in obj1) {\n\t\t\t\t\tif (obj1.hasOwnProperty(i)\n\t\t\t\t\t\t\t&& !Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var i in obj)\n\t\t\t\t\tif (obj.hasOwnProperty(i))\n\t\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\t\tdictionary);\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (!isDictionary) {\n\t\t\t\t\tif (_data.dictionary && json.length == 1 && /^#/.test(type))\n\t\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\t\ttype = Base.exports[type];\n\t\t\t\t}\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data));\n\t\t\t\tif (isDictionary) {\n\t\t\t\t\t_data.dictionary = res[0];\n\t\t\t\t} else if (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar entry = this._eventTypes[type];\n\t\t\tif (entry) {\n\t\t\t\tvar handlers = this._callbacks = this._callbacks || {};\n\t\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\t\thandlers.push(func);\n\t\t\t\t\tif (entry.install && handlers.length == 1)\n\t\t\t\t\t\tentry.install.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar entry = this._eventTypes[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (entry && handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false\n\t\t\t\t\t&& event && event.stop) {\n\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar entry = this._eventTypes[type],\n\t\t\t\t\tfunc = entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif ( noCanvas ) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar browser = proto.browser = {};\n\t\t\tnavigator.userAgent.toLowerCase().replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: '0.9.22',\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tTOLERANCE = 1e-6,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\treturn {\n\t\tTOLERANCE: TOLERANCE,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn abs(val) <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= 2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar pow = Math.pow,\n\t\t\t\t\tgmC = pow(abs(a*b*c), 1/3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\t/*\n\t\t\t\t\t * we multiply with a factor to normalize the\n\t\t\t\t\t * coefficients. The factor is just the nearest exponent\n\t\t\t\t\t * of 10, big enough to raise all the coefficients to\n\t\t\t\t\t * nearly [-1, +1] range.\n\t\t\t\t\t */\n\t\t\t\t\tvar mult = pow(10, abs(\n\t\t\t\t\t\tMath.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < MACHINE_EPSILON) {\n\t\t\t\tif (abs(B) < MACHINE_EPSILON)\n\t\t\t\t\treturn abs(c) < MACHINE_EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else {\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tD = D < 0 ? 0 : D;\n\t\t\t\t\tvar R = sqrt(D);\n\t\t\t\t\tif (b >= MACHINE_EPSILON && b <= MACHINE_EPSILON) {\n\t\t\t\t\t\tx1 = abs(a) >= abs(c) ? R / a : -c / R;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar q = -(b + (b < 0 ? -1 : 1) * R);\n\t\t\t\t\t\tx1 = q / a;\n\t\t\t\t\t\tx2 = c / q;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 >= min && x1 <= max))\n\t\t\t\troots[count++] = x1;\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 >= min && x2 <= max))\n\t\t\t\troots[count++] = x2;\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar x, b1, c2, count = 0;\n\t\t\tif (a === 0) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (d === 0) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x >= min && x <= max))\n\t\t\t\troots[count++] = x;\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\ts = Math.sin(angle),\n\t\t\tc = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * c - point.y * s,\n\t\t\tpoint.x * s + point.y * c\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function(point, tolerance) {\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisColinear: function(point) {\n\t\treturn Math.abs(this.cross(point)) < 1e-12;\n\t},\n\n\tisOrthogonal: function(point) {\n\t\treturn Math.abs(this.dot(point)) < 1e-12;\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments);\n\t\tif (point.isZero()) {\n\t\t\treturn new Point(0, 0);\n\t\t} else {\n\t\t\tvar scale = this.dot(point) / point.dot(point);\n\t\t\treturn new Point(\n\t\t\t\tpoint.x * scale,\n\t\t\t\tpoint.y * scale\n\t\t\t);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n}, new function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = coords.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tstatics: {\n\t\tintersect: function(apx, apy, avx, avy, bpx, bpy, bvx, bvy, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tavx -= apx;\n\t\t\t\tavy -= apy;\n\t\t\t\tbvx -= bpx;\n\t\t\t\tbvy -= bpy;\n\t\t\t}\n\t\t\tvar cross = avx * bvy - avy * bvx;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = apx - bpx,\n\t\t\t\t\tdy = apy - bpy,\n\t\t\t\t\tta = (bvx * dy - bvy * dx) / cross,\n\t\t\t\t\ttb = (avx * dy - avy * dx) / cross;\n\t\t\t\tif (isInfinite || 0 <= ta && ta <= 1 && 0 <= tb && tb <= 1)\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\t\tapx + ta * avx,\n\t\t\t\t\t\t\t\tapy + ta * avy);\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0) {\n\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\tif (ccw > 0) {\n\t\t\t\t\tv2x -= vx;\n\t\t\t\t\tv2y -= vy;\n\t\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\t\tif (ccw < 0)\n\t\t\t\t\t\tccw = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn Numerical.isZero(vx)\n\t\t\t\t\t? vy >= 0 ? px - x : x - px\n\t\t\t\t\t: Numerical.isZero(vy)\n\t\t\t\t\t\t? vx >= 0 ? y - py : py - y\n\t\t\t\t\t\t: (vx * (y - py) - vy * (x - px)) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = Symbol._id = (Symbol._id || 0) + 1;\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = Item._id = (Item._id || 0) + 1;\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, parent: true }, true);\n\t\treturn hasProps;\n\t},\n\n\t_events: new function() {\n\n\t\tvar mouseFlags = {\n\t\t\tmousedown: {\n\t\t\t\tmousedown: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmouseup: {\n\t\t\t\tmouseup: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmousemove: {\n\t\t\t\tmousedrag: 1,\n\t\t\t\tmousemove: 1,\n\t\t\t\tmouseenter: 1,\n\t\t\t\tmouseleave: 1\n\t\t\t}\n\t\t};\n\n\t\tvar mouseEvent = {\n\t\t\tinstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tuninstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = mouseEvent;\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis._animateItem(true);\n\t\t\t\t\t},\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis._animateItem(false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {}\n\t\t\t}\n\t\t);\n\t},\n\n\t_animateItem: function(animate) {\n\t\tthis.getView()._animateItem(this, animate);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments);\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n\n\tgetRegistration: '#getPivot',\n\tsetRegistration: '#setPivot'\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tvar cacheParent = this._parent || this._parentSymbol;\n\t\tif (cacheParent) {\n\t\t\tvar id = cacheItem._id,\n\t\t\t\tref = cacheParent._boundsCache = cacheParent._boundsCache || {\n\t\t\t\t\tids: {},\n\t\t\t\t\tlist: []\n\t\t\t\t};\n\t\t\tif (!ref.ids[id]) {\n\t\t\t\tref.list.push(cacheItem);\n\t\t\t\tref.ids[id] = cacheItem;\n\t\t\t}\n\t\t}\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++) {\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function(matrix) {\n\t\tthis._matrix.initialize(matrix);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert) {\n\t\tcopy.setStyle(this._style);\n\t\tif (this._children) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tcopy.addChild(this._children[i].clone(false), true);\n\t\t}\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide', '_applyMatrix'];\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tcopy.setSelected(this._selected);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(),\n\t\t\t\t_matrix || item._matrix).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 0.000001)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tif (typeof name === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param) {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect =\tbounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: rect,\n\t\t\t\t\toverlapping: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param.items,\n\t\t\t\tinside = param.inside,\n\t\t\t\toverlapping = param.overlapping;\n\t\t\tmatrix = inside && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (inside) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!inside.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(inside && inside.contains(bounds)) && !(overlapping\n\t\t\t\t\t\t\t&& overlapping.intersects(child, childMatrix)))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2;\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t});\n\t\tpath.setStyle(this._style);\n\t\tpath.transform(this._matrix);\n\t\tif (insert || insert === undefined)\n\t\t\tpath.insertAbove(this);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rect' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\t\timage = document.getElementById(src) || new Image();\n\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, {\n\t\t\t\tload: loaded\n\t\t\t});\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL() : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif (arg0.point) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.isLinear() ? this._point\n\t\t\t\t: [this._point, this._handleIn, this._handleOut],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._handleIn.isZero() && this._handleOut.isZero();\n\t},\n\n\tsetLinear: function(linear) {\n\t\tif (linear) {\n\t\t\tthis._handleIn.set(0, 0);\n\t\t\tthis._handleOut.set(0, 0);\n\t\t} else {\n\t\t}\n\t},\n\n\tisColinear: function(segment) {\n\t\tvar next1 = this.getNext(),\n\t\t\tnext2 = segment.getNext();\n\t\treturn this._handleOut.isZero() && next1._handleIn.isZero()\n\t\t\t\t&& segment._handleOut.isZero() && next2._handleIn.isZero()\n\t\t\t\t&& next1._point.subtract(this._point).isColinear(\n\t\t\t\t\tnext2._point.subtract(segment._point));\n\t},\n\n\tisOrthogonal: function() {\n\t\tvar prev = this.getPrevious(),\n\t\t\tnext = this.getNext();\n\t\treturn prev._handleOut.isZero() && this._handleIn.isZero()\n\t\t\t&& this._handleOut.isZero() && next._handleIn.isZero()\n\t\t\t&& this._point.subtract(prev._point).isOrthogonal(\n\t\t\t\t\tnext._point.subtract(this._point));\n\t},\n\n\tisArc: function() {\n\t\tvar next = this.getNext(),\n\t\t\thandle1 = this._handleOut,\n\t\t\thandle2 = next._handleIn,\n\t\t\tkappa = 0.5522847498307936;\n\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\tvar from = this._point,\n\t\t\t\tto = next._point,\n\t\t\t\tcorner = new Line(from, handle1, true).intersect(\n\t\t\t\t\t\tnew Line(to, handle2, true), true);\n\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\tcorner.subtract(from).getLength() - kappa)\n\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\tcorner.subtract(to).getLength() - kappa);\n\t\t}\n\t\treturn false;\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\treverse: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(segment0, segment1, coef) {\n\t\tvar dxPoint = segment1._point._x - segment0._point._x,\n\t\t\tdyPoint = segment1._point._y - segment0._point._y,\n\t\t\tdxHandleIn = segment1._handleIn._x - segment0._handleIn._x,\n\t\t\tdyHandleIn = segment1._handleIn._y - segment0._handleIn._y,\n\t\t\tdxHandleOut = segment1._handleOut._x - segment0._handleOut._x,\n\t\t\tdyHandleOut = segment1._handleOut._y - segment0._handleOut._y;\n\n\t\tthis._point._x = segment0._point._x + dxPoint * coef;\n\t\tthis._point._y = segment0._point._y + dyPoint * coef;\n\t\tthis._handleIn._x = segment0._handleIn._x + dxHandleIn * coef;\n\t\tthis._handleIn._y = segment0._handleIn._y + dyHandleIn * coef;\n\t\tthis._handleOut._x = segment0._handleOut._x + dxHandleOut * coef;\n\t\tthis._handleOut._y = segment0._handleOut._y + dyHandleOut * coef;\n\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tthis._segment1 = arg1;\n\t\t\tthis._segment2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tthis._segment1 = new Segment();\n\t\t\tthis._segment2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tthis._segment1 = new Segment(arg0.segment1);\n\t\t\tthis._segment2 = new Segment(arg0.segment2);\n\t\t} else if (count === 2) {\n\t\t\tthis._segment1 = new Segment(arg0);\n\t\t\tthis._segment2 = new Segment(arg1);\n\t\t} else {\n\t\t\tvar point1, handle1, handle2, point2;\n\t\t\tif (count === 4) {\n\t\t\t\tpoint1 = arg0;\n\t\t\t\thandle1 = arg1;\n\t\t\t\thandle2 = arg2;\n\t\t\t\tpoint2 = arg3;\n\t\t\t} else if (count === 8) {\n\t\t\t\tpoint1 = [arg0, arg1];\n\t\t\t\tpoint2 = [arg6, arg7];\n\t\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t\t}\n\t\t\tthis._segment1 = new Segment(point1, null, handle1);\n\t\t\tthis._segment2 = new Segment(point2, handle2, null);\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tthis._length = this.isLinear()\n\t\t\t\t? this._segment2._point.getDistance(this._segment1._point)\n\t\t\t\t: Curve.getLength(this.getValues(), 0, 1);\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._segment1._handleOut.isZero()\n\t\t\t\t&& this._segment2._handleIn.isZero();\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve.filterIntersections(Curve.getIntersections(\n\t\t\t\tthis.getValues(), curve.getValues(), this, curve, []));\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, ignoreLinear) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttolerance = 0.000001,\n\t\t\tres = null;\n\t\tif (parameter > tolerance && parameter < 1 - tolerance) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tisLinear = ignoreLinear ? false : this.isLinear(),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1];\n\n\t\t\tif (!isLinear) {\n\t\t\t\tthis._segment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tthis._segment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\t!isLinear && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\t!isLinear && new Point(right[2] - x, right[3] - y));\n\n\t\t\tif (this._path) {\n\t\t\t\tif (this._segment1._index > 0 && this._segment2._index === 0) {\n\t\t\t\t\tthis._path.add(segment);\n\t\t\t\t} else {\n\t\t\t\t\tthis._path.insert(this._segment2._index, segment);\n\t\t\t\t}\n\t\t\t\tres = this;\n\t\t\t} else {\n\t\t\t\tvar end = this._segment2;\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, end);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treverse: function() {\n\t\treturn new Curve(this._segment2.reverse(), this._segment1.reverse());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tevaluate: function(v, t, type) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tolerance || t > 1 - tolerance)) {\n\t\t\tvar isZero = t < tolerance;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tolerance && c1x === p1x && c1y === p1y\n\t\t\t\t\t\t|| t > 1 - tolerance && c2x === p2x && c2y === p2y) {\n\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t} else if (t < tolerance) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > 1 - tolerance) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by;\n\t\t\t\t\treturn (x * y2 - y * x2) / Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b,\n\t\t\tisZero = Numerical.isZero;\n\t\tif (isZero(a) && isZero(b))\n\t\t\ta = b = 0;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, x, y) {\n\t\tvar tolerance = 0.000001;\n\t\tif (Math.abs(v[0] - x) < tolerance && Math.abs(v[1] - y) < tolerance)\n\t\t\treturn 0;\n\t\tif (Math.abs(v[6] - x) < tolerance && Math.abs(v[7] - y) < tolerance)\n\t\t\treturn 1;\n\t\tvar txs = [],\n\t\t\ttys = [],\n\t\t\tsx = Curve.solveCubic(v, 0, x, txs, 0, 1),\n\t\t\tsy = Curve.solveCubic(v, 1, y, tys, 0, 1),\n\t\t\ttx, ty;\n\t\tfor (var cx = 0;  sx == -1 || cx < sx;) {\n\t\t\tif (sx == -1 || (tx = txs[cx++]) >= 0 && tx <= 1) {\n\t\t\t\tfor (var cy = 0; sy == -1 || cy < sy;) {\n\t\t\t\t\tif (sy == -1 || (ty = tys[cy++]) >= 0 && ty <= 1) {\n\t\t\t\t\t\tif (sx == -1) tx = ty;\n\t\t\t\t\t\telse if (sy == -1) ty = tx;\n\t\t\t\t\t\tif (Math.abs(tx - ty) < tolerance)\n\t\t\t\t\t\t\treturn (tx + ty) * 0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sx == -1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn v;\n\t},\n\n\tisLinear: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]);\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn (  3.0 * c1y * p1x - 1.5 * c1y * c2x\n\t\t\t\t- 1.5 * c1y * p2x - 3.0 * p1y * c1x\n\t\t\t\t- 1.5 * p1y * c2x - 0.5 * p1y * p2x\n\t\t\t\t+ 1.5 * c2y * p1x + 1.5 * c2y * c1x\n\t\t\t\t- 3.0 * c2y * p2x + 0.5 * p2y * p1x\n\t\t\t\t+ 1.5 * p2y * c1x + 3.0 * p2y * c2x) / 10;\n\t},\n\n\tgetEdgeSum: function(v) {\n\t\treturn\t  (v[0] - v[2]) * (v[3] + v[1])\n\t\t\t\t+ (v[2] - v[4]) * (v[5] + v[3])\n\t\t\t\t+ (v[4] - v[6]) * (v[7] + v[5]);\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name]([this._segment1,\n\t\t\t\t\t\tthis._segment2], false, this._path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve.evaluate(values, isParameter\n\t\t\t\t\t? offset : Curve.getParameterAt(values, offset, 0), index);\n\t\t};\n\t\tthis[name] = function(parameter) {\n\t\t\treturn Curve.evaluate(this.getValues(), parameter, index);\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Curve.getParameterOf(this.getValues(), point.x, point.y);\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tif (!isParameter)\n\t\t\toffset = this.getParameterAt(offset);\n\t\treturn offset >= 0 && offset <= 1 && new CurveLocation(this, offset);\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tcount = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(\n\t\t\t\t\t\tCurve.evaluate(values, t, 0), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 0.000001) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\tvar pt = Curve.evaluate(values, minT, 0);\n\t\treturn new CurveLocation(this, minT, pt, null, null, null,\n\t\t\t\tpoint.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n}),\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\treturn {\n\t\tstatics: true,\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tvar isZero = Numerical.isZero;\n\t\t\tif (a === 0 && b === 1\n\t\t\t\t\t&& isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t\t&& isZero(v[6] - v[4]) && isZero(v[7] - v[5])) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar forward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (Math.abs(offset) >= rangeLength)\n\t\t\t\treturn forward ? b : a;\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 16,\n\t\t\t\t\t0.000001);\n\t\t}\n\t};\n}, new function() {\n\tfunction addLocation(locations, include, curve1, t1, point1, curve2, t2,\n\t\t\tpoint2) {\n\t\tvar loc = new CurveLocation(curve1, t1, point1, curve2, t2, point2);\n\t\tif (!include || include(loc))\n\t\t\tlocations.push(loc);\n\t}\n\n\tfunction addCurveIntersections(v1, v2, curve1, curve2, locations, include,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (recursion > 32)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]) || 0,\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]) || 0,\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\ttMinNew, tMaxNew, tDiff;\n\t\tif (q0x === q3x && uMax - uMin <= tolerance && recursion > 3) {\n\t\t\ttMaxNew = tMinNew = (tMax + tMin) / 2;\n\t\t\ttDiff = 0;\n\t\t} else {\n\t\t\tvar hull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\t\ttop = hull[0],\n\t\t\t\tbottom = hull[1],\n\t\t\t\ttMinClip, tMaxClip;\n\t\t\ttMinClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\ttop.reverse();\n\t\t\tbottom.reverse();\n\t\t\ttMaxClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\tif (tMinClip == null || tMaxClip == null)\n\t\t\t\treturn;\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\ttDiff = tMaxClip - tMinClip;\n\t\t\ttMinNew = tMax * tMinClip + tMin * (1 - tMinClip);\n\t\t\ttMaxNew = tMax * tMaxClip + tMin * (1 - tMaxClip);\n\t\t}\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, curve2, curve1, locations, include,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew) < tolerance) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tif (reverse) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0),\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0));\n\t\t\t} else {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t} else if (tDiff > 0) {\n\t\t\taddCurveIntersections(v2, v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\tdist1 = getSignedDistance(0, dq0, 1, dq3, 1 / 3, dq1),\n\t\t\tdist2 = getSignedDistance(0, dq0, 1, dq3, 2 / 3, dq2),\n\t\t\tflip = false,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t\tflip = dist1 < 0;\n\t\t} else {\n\t\t\tvar pmax, cross = 0,\n\t\t\t\tdistZero = dist1 === 0 || dist2 === 0;\n\t\t\tif (Math.abs(dist1) > Math.abs(dist2)) {\n\t\t\t\tpmax = p1;\n\t\t\t\tcross = (dq3 - dq2 - (dq3 - dq0) / 3)\n\t\t\t\t\t\t* (2 * (dq3 - dq2) - dq3 + dq1) / 3;\n\t\t\t} else {\n\t\t\t\tpmax = p2;\n\t\t\t\tcross = (dq1 - dq0 + (dq0 - dq3) / 3)\n\t\t\t\t\t\t* (-2 * (dq0 - dq1) + dq0 - dq2) / 3;\n\t\t\t}\n\t\t\thull = cross < 0 || distZero\n\t\t\t\t\t? [[p0, pmax, p3], [p0, p3]]\n\t\t\t\t\t: [[p0, p1, p2, p3], [p0, p3]];\n\t\t\tflip = dist1 ? dist1 < 0 : dist2 < 0;\n\t\t}\n\t\treturn flip ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold)\n\t\t\t\treturn px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, curve1, curve2, locations,\n\t\t\tinclude) {\n\t\tvar flip = Curve.isLinear(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trlx2 = ldx * cos - ldy * sin,\n\t\t\trvl = [0, 0, 0, 0, rlx2, 0, rlx2, 0],\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\ty * cos + x * sin);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tx = Curve.evaluate(rvc, tc, 0).x;\n\t\t\tif (x >= 0 && x <= rlx2) {\n\t\t\t\tvar tl = Curve.getParameterOf(rvl, x, 0),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, curve1, curve2, locations, include) {\n\t\tvar point = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (point) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tcurve1, Curve.getParameterOf(v1, x, y), point,\n\t\t\t\t\tcurve2, Curve.getParameterOf(v2, x, y), point);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\tgetIntersections: function(v1, v2, c1, c2, locations, include) {\n\t\t\tvar linear1 = Curve.isLinear(v1),\n\t\t\t\tlinear2 = Curve.isLinear(v2),\n\t\t\t\tc1p1 = c1.getPoint1(),\n\t\t\t\tc1p2 = c1.getPoint2(),\n\t\t\t\tc2p1 = c2.getPoint1(),\n\t\t\t\tc2p2 = c2.getPoint2(),\n\t\t\t\ttolerance = 0.000001;\n\t\t\tif (c1p1.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 0, c1p1);\n\t\t\tif (c1p1.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 1, c1p1);\n\t\t\t(linear1 && linear2\n\t\t\t\t? addLineIntersection\n\t\t\t\t: linear1 || linear2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, include,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (c1p2.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 0, c1p2);\n\t\t\tif (c1p2.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 1, c1p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\tfilterIntersections: function(locations, _expand) {\n\t\t\tvar last = locations.length - 1,\n\t\t\t\ttMax = 1 - 0.000001;\n\t\t\tfor (var i = last; i >= 0; i--) {\n\t\t\t\tvar loc = locations[i],\n\t\t\t\t\tnext = loc._curve.getNext(),\n\t\t\t\t\tnext2 = loc._curve2.getNext();\n\t\t\t\tif (next && loc._parameter >= tMax) {\n\t\t\t\t\tloc._parameter = 0;\n\t\t\t\t\tloc._curve = next;\n\t\t\t\t}\n\t\t\t\tif (next2 && loc._parameter2 >= tMax) {\n\t\t\t\t\tloc._parameter2 = 0;\n\t\t\t\t\tloc._curve2 = next2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction compare(loc1, loc2) {\n\t\t\t\tvar path1 = loc1.getPath(),\n\t\t\t\t\tpath2 = loc2.getPath();\n\t\t\t\treturn path1 === path2\n\t\t\t\t\t\t? (loc1.getIndex() + loc1.getParameter())\n\t\t\t\t\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t\t\t: path1._id - path2._id;\n\t\t\t}\n\n\t\t\tif (last > 0) {\n\t\t\t\tlocations.sort(compare);\n\t\t\t\tfor (var i = last; i > 0; i--) {\n\t\t\t\t\tif (locations[i].equals(locations[i - 1])) {\n\t\t\t\t\t\tlocations.splice(i, 1);\n\t\t\t\t\t\tlast--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_expand) {\n\t\t\t\tfor (var i = last; i >= 0; i--)\n\t\t\t\t\tlocations.push(locations[i].getIntersection());\n\t\t\t\tlocations.sort(compare);\n\t\t\t}\n\t\t\treturn locations;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point, _curve2,\n\t\t\t_parameter2, _point2, _distance) {\n\t\tthis._id = CurveLocation._id = (CurveLocation._id || 0) + 1;\n\t\tthis._curve = curve;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t\tthis._parameter = parameter;\n\t\tthis._point = point;\n\t\tthis._curve2 = _curve2;\n\t\tthis._parameter2 = _parameter2;\n\t\tthis._point2 = _point2;\n\t\tthis._distance = _distance;\n\t},\n\n\tgetSegment: function(_preferFirst) {\n\t\tif (!this._segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this.getParameter();\n\t\t\tif (parameter === 1) {\n\t\t\t\tthis._segment = curve._segment2;\n\t\t\t} else if (parameter === 0 || _preferFirst) {\n\t\t\t\tthis._segment = curve._segment1;\n\t\t\t} else if (parameter == null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis._segment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t}\n\t\treturn this._segment;\n\t},\n\n\tgetCurve: function(_uncached) {\n\t\tif (!this._curve || _uncached) {\n\t\t\tthis._curve = this._segment1.getCurve();\n\t\t\tif (this._curve.getParameterOf(this._point) == null)\n\t\t\t\tthis._curve = this._segment2.getPrevious().getCurve();\n\t\t}\n\t\treturn this._curve;\n\t},\n\n\tgetIntersection: function() {\n\t\tvar intersection = this._intersection;\n\t\tif (!intersection && this._curve2) {\n\t\t\tvar param = this._parameter2;\n\t\t\tthis._intersection = intersection = new CurveLocation(\n\t\t\t\t\tthis._curve2, param, this._point2 || this._point, this);\n\t\t\tintersection._intersection = this;\n\t\t}\n\t\treturn intersection;\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetOffset: function() {\n\t\tvar path = this.getPath();\n\t\treturn path ? path._getOffset(this) : this.getCurveOffset();\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetParameter: function(_uncached) {\n\t\tif ((this._parameter == null || _uncached) && this._point) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._parameter = curve && curve.getParameterOf(this._point);\n\t\t}\n\t\treturn this._parameter;\n\t},\n\n\tgetPoint: function(_uncached) {\n\t\tif ((!this._point || _uncached) && this._parameter != null) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._point = curve && curve.getPointAt(this._parameter, true);\n\t\t}\n\t\treturn this._point;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.divide(this.getParameter(true), true);\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.split(this.getParameter(true), true);\n\t},\n\n\tequals: function(loc) {\n\t\tvar abs = Math.abs,\n\t\t\ttolerance = 0.000001;\n\t\treturn this === loc\n\t\t\t\t|| loc\n\t\t\t\t\t&& this._curve === loc._curve\n\t\t\t\t\t&& this._curve2 === loc._curve2\n\t\t\t\t\t&& abs(this._parameter - loc._parameter) <= tolerance\n\t\t\t\t\t&& abs(this._parameter2 - loc._parameter2) <= tolerance\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t}\n}, Base.each(['getTangent', 'getNormal', 'getCurvature'], function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {}));\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, _matrix, _expand) {\n\t\tif (this === path)\n\t\t\tpath = null;\n\t\tvar locations = [],\n\t\t\tcurves1 = this.getCurves(),\n\t\t\tcurves2 = path ? path.getCurves() : curves1,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = path ? (_matrix || path._matrix).orNullIfIdentity()\n\t\t\t\t: matrix1,\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = path ? curves2.length : length1,\n\t\t\tvalues2 = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tif (path && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = path ? curve1.getValues(matrix1) : values2[i];\n\t\t\tif (!path) {\n\t\t\t\tvar seg1 = curve1.getSegment1(),\n\t\t\t\t\tseg2 = curve1.getSegment2(),\n\t\t\t\t\th1 = seg1._handleOut,\n\t\t\t\t\th2 = seg2._handleIn;\n\t\t\t\tif (new Line(seg1._point.subtract(h1), h1.multiply(2), true)\n\t\t\t\t\t\t.intersect(new Line(seg2._point.subtract(h2),\n\t\t\t\t\t\th2.multiply(2), true), false)) {\n\t\t\t\t\tvar parts = Curve.subdivide(values1);\n\t\t\t\t\tCurve.getIntersections(\n\t\t\t\t\t\tparts[0], parts[1], curve1, curve1, locations,\n\t\t\t\t\t\tfunction(loc) {\n\t\t\t\t\t\t\tif (loc._parameter <= tMax) {\n\t\t\t\t\t\t\t\tloc._parameter /= 2;\n\t\t\t\t\t\t\t\tloc._parameter2 = 0.5 + loc._parameter2 / 2;\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var j = path ? 0 : i + 1; j < length2; j++) {\n\t\t\t\tCurve.getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curves2[j], locations,\n\t\t\t\t\t!path && (j === i + 1 || j === length2 - 1 && i === 0)\n\t\t\t\t\t\t&& function(loc) {\n\t\t\t\t\t\t\tvar t = loc._parameter;\n\t\t\t\t\t\t\treturn t >= tMin && t <= tMax;\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Curve.filterIntersections(locations, _expand);\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tif (move && previous && previous !== 'z')\n\t\t\t\t\tthis.closePath(true);\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._clockwise = undefined;\n\t\t\tif (this._curves && !(flags & 16)) {\n\t\t\t\tfor (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t\tthis._monoCurves = undefined;\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\tisPolygon: function() {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif (!this._segments[i].isLinear())\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves || segs._curves) {\n\t\t\tif (!curves)\n\t\t\t\tcurves = this._curves = [];\n\t\t\tvar from = index > 0 ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, this._countCurves());\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves();\n\t\t\tthis._length = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tthis._length += curves[i].getLength();\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar curves = this.getCurves();\n\t\tvar area = 0;\n\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\tarea += curves[i].getArea();\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.evaluate(pos, 0)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (curve.isLinear() && curve.getLength() === 0)\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tolerance = 0.000001;\n\t\tif (parameter >= 1 - tolerance) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter > tolerance) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = this._clone(new Path().insertAbove(this, true));\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn Path.isClockwise(this._segments);\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path.closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\tinterpolate: function(path0, path1, coef) {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif ( !path0._segments[i] || !path1._segments[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._segments[i].interpolate(\n\t\t\t\tpath0._segments[i],\n\t\t\t\tpath1._segments[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\n\t\tthis._changed(9);\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isColinear(i, j) {\n\t\t\treturn segments[i].isColinear(segments[j]);\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\treturn segments[i].isOrthogonal();\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\treturn segments[i].isArc();\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (this.isPolygon() && segments.length === 4\n\t\t\t\t&& isColinear(0, 2) && isColinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isColinear(1, 5) && isColinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t});\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\tshape.setStyle(this._style);\n\t\t\tif (insert || insert === undefined)\n\t\t\t\tshape.insertAbove(this);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\t_getOffset: function(location) {\n\t\tvar index = location && location.getIndex();\n\t\tif (index != null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\toffset = 0;\n\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\toffset += curves[i].getLength();\n\t\t\tvar curve = curves[index],\n\t\t\t\tparameter = location.getParameter();\n\t\t\tif (parameter > 0)\n\t\t\t\toffset += curve.getPartLength(0, parameter);\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset;\n\t\t\treturn curves[index].getLocationAt(offset - index, true);\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}), new function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n}, new function() {\n\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n}, new function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < epsilon)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tisClockwise: function(segments) {\n\t\tvar sum = 0;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsum += Curve.getEdgeSum(Curve.getValues(\n\t\t\t\t\tsegments[i], segments[i + 1 < l ? i + 1 : 0]));\n\t\treturn sum > 0;\n\t},\n\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isColinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().normalize(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tif (this._children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t} else {\n\t\t\treturn reduce.base.call(this);\n\t\t}\n\t},\n\n\tinterpolate: function(compoundpath0, compoundpath1, coef) {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\tif ( !compoundpath0._children[i] || !compoundpath1._children[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._children[i].interpolate(\n\t\t\t\tcompoundpath0._children[i],\n\t\t\t\tcompoundpath1._children[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : mx, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n}, new function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current : new Path();\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tvar operator = operators[operation];\n\t\tfunction preparePath(path) {\n\t\t\treturn path.clone(false).reduce().reorient().transform(null, true,\n\t\t\t\t\ttrue);\n\t\t}\n\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tsplitPath(_path1.getIntersections(_path2, null, true));\n\n\t\tvar chain = [],\n\t\t\tsegments = [],\n\t\t\tmonoCurves = [],\n\t\t\ttolerance = 0.000001;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tsegments.sort(function(a, b) {\n\t\t\tvar _a = a._intersection,\n\t\t\t\t_b = b._intersection;\n\t\t\treturn !_a && !_b || _a && _b ? 0 : _a ? -1 : 1;\n\t\t});\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding != null)\n\t\t\t\tcontinue;\n\t\t\tchain.length = 0;\n\t\t\tvar startSeg = segment,\n\t\t\t\ttotalLength = 0,\n\t\t\t\twindingSum = 0;\n\t\t\tdo {\n\t\t\t\tvar length = segment.getCurve().getLength();\n\t\t\t\tchain.push({ segment: segment, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t\tsegment = segment.getNext();\n\t\t\t} while (segment && !segment._intersection && segment !== startSeg);\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar length = totalLength * (j + 1) / 4;\n\t\t\t\tfor (k = 0, m = chain.length; k < m; k++) {\n\t\t\t\t\tvar node = chain[k],\n\t\t\t\t\t\tcurveLength = node.length;\n\t\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\t\tif (length <= tolerance\n\t\t\t\t\t\t\t\t|| curveLength - length <= tolerance)\n\t\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\t\tvar curve = node.segment.getCurve(),\n\t\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\t\thor = curve.isLinear() && Math.abs(curve\n\t\t\t\t\t\t\t\t\t.getTangentAt(0.5, true).y) <= tolerance,\n\t\t\t\t\t\t\tpath = curve._path;\n\t\t\t\t\t\tif (path._parent instanceof CompoundPath)\n\t\t\t\t\t\t\tpath = path._parent;\n\t\t\t\t\t\twindingSum += operation === 'subtract' && _path2\n\t\t\t\t\t\t\t&& (path === _path1 && _path2._getWinding(pt, hor)\n\t\t\t\t\t\t\t|| path === _path2 && !_path1._getWinding(pt, hor))\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlength -= curveLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar winding = Math.round(windingSum / 3);\n\t\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.insertAbove(path1);\n\t\tresult.addChildren(tracePaths(segments, operator), true);\n\t\tresult = result.reduce();\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction splitPath(intersections) {\n\t\tvar tMin = 0.000001,\n\t\t\ttMax = 1 - tMin,\n\t\t\tlinearHandles;\n\n\t\tfunction resetLinear() {\n\t\t\tfor (var i = 0, l = linearHandles.length; i < l; i++)\n\t\t\t\tlinearHandles[i].set(0, 0);\n\t\t}\n\n\t\tfor (var i = intersections.length - 1, curve, prev; i >= 0; i--) {\n\t\t\tvar loc = intersections[i],\n\t\t\t\tt = loc._parameter;\n\t\t\tif (prev && prev._curve === loc._curve && prev._parameter > 0) {\n\t\t\t\tt /= prev._parameter;\n\t\t\t} else {\n\t\t\t\tcurve = loc._curve;\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tresetLinear();\n\t\t\t\tlinearHandles = curve.isLinear() ? [\n\t\t\t\t\t\tcurve._segment1._handleOut,\n\t\t\t\t\t\tcurve._segment2._handleIn\n\t\t\t\t\t] : null;\n\t\t\t}\n\t\t\tvar newCurve,\n\t\t\t\tsegment;\n\t\t\tif (newCurve = curve.divide(t, true, true)) {\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tcurve = newCurve.getPrevious();\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tlinearHandles.push(segment._handleOut, segment._handleIn);\n\t\t\t} else {\n\t\t\t\tsegment = t < tMin\n\t\t\t\t\t? curve._segment1\n\t\t\t\t\t: t > tMax\n\t\t\t\t\t\t? curve._segment2\n\t\t\t\t\t\t: curve.getPartLength(0, t) < curve.getPartLength(t, 1)\n\t\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tsegment._intersection = loc.getIntersection();\n\t\t\tloc._segment = segment;\n\t\t\tprev = loc;\n\t\t}\n\t\tif (linearHandles)\n\t\t\tresetLinear();\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar tolerance = 0.000001,\n\t\t\ttMin = tolerance,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - tolerance,\n\t\t\t\tyAfter = py + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.evaluate(values, roots[j], 0).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves);\n\t\t} else {\n\t\t\tvar xBefore = px - tolerance,\n\t\t\t\txAfter = px + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding,\n\t\t\t\t\tprevT,\n\t\t\t\t\tprevX;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tx = Curve.evaluate(values, t, 0).x,\n\t\t\t\t\t\tslope = Curve.evaluate(values, t, 1).y;\n\t\t\t\t\tif (!(t > tMax\n\t\t\t\t\t\t\t&& (i === l - 1 || curve.next !== curves[i + 1])\n\t\t\t\t\t\t\t&& abs(Curve.evaluate(curve.next.values, 0, 0).x -x)\n\t\t\t\t\t\t\t\t<= tolerance\n\t\t\t\t\t\t|| i > 0 && curve.previous === curves[i - 1]\n\t\t\t\t\t\t\t&& abs(prevX - x) < tolerance\n\t\t\t\t\t\t\t&& prevT > tMax && t < tMin)) {\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isLinear(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0, 1).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprevT = t;\n\t\t\t\t\tprevX = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction tracePaths(segments, operator, selfOp) {\n\t\tvar paths = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0, seg, startSeg, l = segments.length; i < l; i++) {\n\t\t\tseg = startSeg = segments[i];\n\t\t\tif (seg._visited || !operator(seg._winding))\n\t\t\t\tcontinue;\n\t\t\tvar path = new Path(Item.NO_INSERT),\n\t\t\t\tinter = seg._intersection,\n\t\t\t\tstartInterSeg = inter && inter._segment,\n\t\t\t\tadded = false,\n\t\t\t\tdir = 1;\n\t\t\tdo {\n\t\t\t\tvar handleIn = dir > 0 ? seg._handleIn : seg._handleOut,\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn,\n\t\t\t\t\tinterSeg;\n\t\t\t\tif (added && (!operator(seg._winding) || selfOp)\n\t\t\t\t\t\t&& (inter = seg._intersection)\n\t\t\t\t\t\t&& (interSeg = inter._segment)\n\t\t\t\t\t\t&& interSeg !== startSeg) {\n\t\t\t\t\tif (selfOp) {\n\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar c1 = seg.getCurve();\n\t\t\t\t\t\tif (dir > 0)\n\t\t\t\t\t\t\tc1 = c1.getPrevious();\n\t\t\t\t\t\tvar t1 = c1.getTangentAt(dir < 1 ? tMin : tMax, true),\n\t\t\t\t\t\t\tc4 = interSeg.getCurve(),\n\t\t\t\t\t\t\tc3 = c4.getPrevious(),\n\t\t\t\t\t\t\tt3 = c3.getTangentAt(tMax, true),\n\t\t\t\t\t\t\tt4 = c4.getTangentAt(tMin, true),\n\t\t\t\t\t\t\tw3 = t1.cross(t3),\n\t\t\t\t\t\t\tw4 = t1.cross(t4);\n\t\t\t\t\t\tif (w3 * w4 !== 0) {\n\t\t\t\t\t\t\tvar curve = w3 < w4 ? c3 : c4,\n\t\t\t\t\t\t\t\tnextCurve = operator(curve._segment1._winding)\n\t\t\t\t\t\t\t\t\t? curve\n\t\t\t\t\t\t\t\t\t: w3 < w4 ? c4 : c3,\n\t\t\t\t\t\t\t\tnextSeg = nextCurve._segment1;\n\t\t\t\t\t\t\tdir = nextCurve === c3 ? -1 : 1;\n\t\t\t\t\t\t\tif (nextSeg._visited && seg._path !== nextSeg._path\n\t\t\t\t\t\t\t\t\t\t|| !operator(nextSeg._winding)) {\n\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\t\t\tif (nextSeg._visited)\n\t\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, added && handleIn, handleOut));\n\t\t\t\tadded = true;\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = dir > 0 ? seg.getNext() : seg. getPrevious();\n\t\t\t} while (seg && !seg._visited\n\t\t\t\t\t&& seg !== startSeg && seg !== startInterSeg\n\t\t\t\t\t&& (seg._intersection || operator(seg._winding)));\n\t\t\tif (seg && (seg === startSeg || seg === startInterSeg)) {\n\t\t\t\tpath.firstSegment.setHandleIn((seg === startInterSeg\n\t\t\t\t\t\t? startInterSeg : seg)._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else {\n\t\t\t\tpath.lastSegment._handleOut.set(0, 0);\n\t\t\t}\n\t\t\tif (path._segments.length >\n\t\t\t\t\t(path._closed ? path.isPolygon() ? 2 : 0 : 1))\n\t\t\t\tpaths.push(path);\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn new Group([this.subtract(path), this.intersect(path)]);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isLinear(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttolerance = 0.000001,\n\t\t\t\t\troots = [];\n\t\t\t\tvar count = Numerical.solveQuadratic(a, b, c, roots, tolerance,\n\t\t\t\t\t\t1 - tolerance);\n\t\t\t\tif (count === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.evaluate(values, roots[j], 0).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 0.000001) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tevaluate: function(offset, type) {\n\t\tvar param = this.getParameterAt(offset);\n\t\treturn Curve.evaluate(this.curves[param.index], param.value, type);\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\treturn this.evaluate(offset, index);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tthis.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1);\n\t\tepsilon *= segLength;\n\t\tif (alpha1 < epsilon || alpha2 < epsilon) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t}\n\n\t\treturn [pt1, pt1.add(tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 0.000001)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tvalue = parser.call(this, value);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tthis._components[index] = value;\n\t\t\t\t\tthis._changed();\n\t\t\t\t}\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type];\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tif (type === 'gradient')\n\t\t\t\tthis._id = Color._id = (Color._id || 0) + 1;\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n}, new function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nBase.each(Color._types, function(properties, type) {\n\tvar ctor = this[Base.capitalize(type) + 'Color'] = function(arg) {\n\t\t\tvar argType = arg != null && typeof arg,\n\t\t\t\tcomponents = argType === 'object' && arg.length != null\n\t\t\t\t\t? arg\n\t\t\t\t\t: argType === 'string'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: arguments;\n\t\t\treturn components\n\t\t\t\t\t? new Color(type, components)\n\t\t\t\t\t: new Color(arg);\n\t\t};\n\tif (type.length == 3) {\n\t\tvar acronym = type.toUpperCase();\n\t\tColor[acronym] = this[acronym + 'Color'] = ctor;\n\t}\n}, Base.exports);\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = Gradient._id = (Gradient._id || 0) + 1;\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = typeof window === 'object' &&\n\t\t\tDomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tif ( typeof window === 'object' ) {\n\t\tDomEvent.add(window, {\n\t\t\tfocus: function() {\n\t\t\t\tfocused = true;\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tfocused = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif ( !noCanvas ) {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchAction: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\tuserDrag: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\n\t\t\tfunction getSize(name) {\n\t\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t\t}\n\n\t\t\tfunction getCanvasSize() {\n\t\t\t\tvar size = DomElement.getSize(element);\n\t\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t\t: size;\n\t\t\t}\n\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._setViewSize(size = getCanvasSize());\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = 1;\n\t\t\tthis._id = 'view-' + View._id++;\n\t\t\tsize = new Size(element.width, element.height);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: {\n\t\tonFrame: {\n\t\t\tinstall: function() {\n\t\t\t\tthis.play();\n\t\t\t},\n\n\t\t\tuninstall: function() {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t},\n\n\t\tonResize: {}\n\t},\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n}, new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif ( !noCanvas ) {\n\t\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tif (size.isZero())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t\t}\n\t\t\tthis._context = canvas.getContext('2d');\n\t\t}\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!noCanvas && !/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font;\n\t\tctx.font = size + ' serif';\n\t\tsize = parseFloat(ctx.font);\n\t\tctx.font = prevFont;\n\t\treturn size;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function() {\n\t\tvar project = this._project;\n\t\tif (!project || !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n}, new function() {\n\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers)\n\t\t\tmodifiers[name] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = this._minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = distance;\n\t\tthis._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tvar maxDist = maxDistance != null ? maxDistance : 0;\n\t\t\t\tif (maxDist != 0) {\n\t\t\t\t\tif (distance > maxDist) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDist));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback) {\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, true);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif ( noCanvas ) {\n\t\t\treturn { getContext: function() {} };\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tif (options.matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (item.isPolygon()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (applyMatrix && item)\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n\n},{}],3:[function(require,module,exports){\nfunction Collection( args ) {\n\t// already a Collection? Job's done\n\tif ( arguments.length === 1 && args instanceof Collection ) {\n\t\treturn args;\n\n\t} else if ( arguments.length > 1 || !Array.isArray( args ) ) {\n\t\targs = [].slice.call( arguments, 0 );\n\t}\n\n\tthis.length = 0;\n\n\targs.forEach(function( arg ) {\n\t\t// unwrap any collection\n\t\tif ( arg instanceof Collection ) {\n\t\t\tfor ( var i = -1; ++i < arg.length; ) {\n\t\t\t\tthis[this.length++] = arg[i];\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis[this.length++] = arg;\n\t\t}\n\n\t}, this);\n\n\treturn this;\n}\n\nCollection.prototype.forEach = function(cb, scope) {\n\tfor ( var i = -1; ++i < this.length; ) {\n\t\tcb.call(scope || this[i], this[i], i, this);\n\t}\n\n\treturn this;\n};\n\nCollection.prototype.prop = function(name, val) {\n\tvar i;\n\n\t// object setter\n\tif ( typeof name === 'object' ) {\n\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\tthis[i].set( name );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// getter\n\tif ( val === undefined ) {\n\t\treturn this[0][name];\n\t}\n\n\t// simple setter\n\tfor ( i = -1; ++i < this.length; ) {\n\t\tthis[i][name] = val;\n\t}\n\n\treturn this;\n};\n\nfunction wrapConstructor( constructor, prototype, useConstructed ) {\n\treturn function wrapper() {\n\t\tvar c,\n\t\t\ttmp,\n\t\t\tarr = [];\n\n\t\t// constructor used with new\n\t\tif ( this instanceof wrapper ) {\n\t\t\t// proxy to paper native constructor\n\t\t\tc = Object.create(prototype);\n\t\t\ttmp = constructor.apply(c, arguments);\n\t\t\treturn useConstructed ?\n\t\t\t\ttmp : c;\n\n\t\t// without new, build a collection\n\t\t} else {\n\t\t\tif ( Array.isArray( arguments[0] ) ) {\n\t\t\t\targuments[0].forEach(function(params, i) {\n\t\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\t\tc = constructor.call( arr[i], params );\n\t\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\t\tarr[i] = c;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\tc = constructor.apply( arr[0], arguments );\n\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\tarr[0] = c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Collection( arr );\n\t\t}\n\t};\n}\n\nvar rconstructor = /(^|\\.)[A-Z][A-z]+$/;\nfunction constructorFilter( name ) {\n\treturn typeof this[name] === 'function' && rconstructor.test(name);\n}\n\n// unwrap a collection or array of collection\nfunction unwrapArg( arr, id, isPlural ) {\n\t// unwrap a single collection\n\tif ( arr && arr[id] instanceof Collection ) {\n\t\tarr[id] = isPlural ?\n\t\t\t[].slice.call( arr[id], 0 ) :\n\t\t\tarr[id][0];\n\n\t// unwrap an array of collection\n\t} else if ( arr && arr[id].length && arr[id][0] instanceof Collection ) {\n\t\tfor ( var i = -1; ++i < arr[id].length; ) {\n\t\t\tarr[id][i] = arr[id][i][0];\n\t\t}\n\t}\n}\n\nfunction unwrapArgs() {\n\tvar isPlural = this.isPlural,\n\t\targs = [].slice.call( arguments, 0 ),\n\t\tid,\n\t\ti;\n\n\t// first arg is an object and might have a collection or array of collection\n\t// Todo: objects should be unwrapped recursively\n\tif ( args[0] && args[0].constructor === Object ) {\n\t\tif ( 'children' in args[0] ) {\n\t\t\tid = 'children';\n\n\t\t} else if ( 'segments' in args[0] ) {\n\t\t\tid = 'segments';\n\n\t\t} else if ( 'nodes' in args[0] ) {\n\t\t\tid = 'nodes';\n\t\t}\n\n\t\tunwrapArg( args[0], id, true );\n\n\t// otherwise unwrap each arg\n\t} else {\n\t\tfor ( i = -1; ++i < args.length; ) {\n\t\t\t// if the method is plural (addChildren) and we're unwrapping\n\t\t\t// the last argument, we want to keep it in an array\n\t\t\tunwrapArg( args, i, i === args.length - 1 && isPlural );\n\t\t}\n\t}\n\n\treturn args;\n}\n\nCollection.proxy = function( paper ) {\n\tvar plumin = this;\n\n\tplumin.paper = paper;\n\n\tvar methodNames = {};\n\tObject.getOwnPropertyNames( paper.PaperScope.prototype )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype )\n\t\t.forEach(function(name) {\n\t\t\tplumin[name] = wrapConstructor( this[name], this[name].prototype );\n\n\t\t\t// we don't want to proxy methods of Collection\n\t\t\tif ( name === 'Collection' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tObject.getOwnPropertyNames( this[name].prototype )\n\t\t\t\t.forEach(function(_name) {\n\t\t\t\t\t// collect unique method names (first test avoids getters)\n\t\t\t\t\tif ( !Object.getOwnPropertyDescriptor(this, _name).get &&\n\t\t\t\t\t\t\ttypeof this[_name] === 'function' ) {\n\n\t\t\t\t\t\tmethodNames[_name] = true;\n\t\t\t\t\t}\n\n\t\t\t\t}, this[name].prototype);\n\n\t\t}, paper.PaperScope.prototype);\n\n\tObject.keys( paper.PaperScope.prototype.Path )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Path )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Path[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Path );\n\n\tObject.keys( paper.PaperScope.prototype.Shape )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Shape )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Shape[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Shape );\n\n\t// proxy the most commonly used method of paper\n\t// do it only after proxying constructors otherwise it's overwritten\n\tplumin.setup = paper.setup.bind(paper);\n\n\t// proxy all methods from every constructor\n\t// by default methods aren't chainable\n\tObject.keys( methodNames ).sort().forEach(function(name) {\n\t\t// please oh please, don't overwrite my constructor, I need it.\n\t\tif ( name === 'constructor' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(null, arguments),\n\t\t\t\ti,\n\t\t\t\tresult;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tresult = this[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// by default methods aren't chainable\n\t\t\t// return the last result\n\t\t\treturn result;\n\t\t};\n\t});\n\n\t\t// addChild( item ) and other methods with similar signatures\n\t\t// that we want to make chainable\n\tvar chain = [\n\t\t\t'set',\n\t\t\t'setX',\n\t\t\t'setY',\n\t\t\t'insertAbove',\n\t\t\t'insertBelow',\n\t\t\t'sendToBack',\n\t\t\t'bringToFront',\n\t\t\t'remove',\n\t\t\t'removeChildren',\n\t\t\t'reverseChildren',\n\n\t\t\t'translate',\n\t\t\t'rotate',\n\t\t\t'scale',\n\t\t\t'shear',\n\t\t\t'skew',\n\t\t\t'transform',\n\t\t\t'fitBounds',\n\t\t\t'emit',\n\n\t\t\t'activate',\n\n\t\t\t'setPixel',\n\n\t\t\t'smooth',\n\t\t\t'moveTo',\n\t\t\t'lineTo',\n\t\t\t'cubicCurveTo',\n\t\t\t'quadraticCurveTo',\n\t\t\t'curveTo',\n\t\t\t'arcTo',\n\t\t\t'closePath',\n\t\t\t'moveBy',\n\t\t\t'lineBy',\n\t\t\t'cubicCurveBy',\n\t\t\t'quadraticCurveBy',\n\t\t\t'curveBy',\n\t\t\t'arcBy',\n\n\t\t\t'removeSegments',\n\t\t\t'simplify',\n\t\t\t'reverse',\n\n\t\t\t// Rectangle\n\t\t\t'include',\n\t\t\t'expand',\n\t\t\t'scale',\n\t\t// ],\n\t\t// createAndChain = [\n\t\t\t'addChild',\n\t\t\t'insertChild',\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'replaceWith',\n\n\t\t\t'appendTop',\n\t\t\t'appendBottom',\n\n\t\t\t'add',\n\t\t\t'insert',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNode',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\n\t\t\t'addGlyph',\n\t\t\t'addGlyphs',\n\n\t\t\t'addContour',\n\t\t\t'insertContour',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addAnchor',\n\t\t\t'addAnchors',\n\t\t\t'addComponent',\n\t\t\t'addComponents',\n\n\t\t\t'addUnicode',\n\t\t\t'prepareOt',\n\t\t\t'addToFonts',\n\t\t\t'download'\n\t\t],\n\t\tplural = [\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\t\t\t'addGlyphs',\n\t\t\t'addAnchors',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addComponents'\n\t\t]/*,\n\t\tmathPoinFn = [\n\t\t\t'round',\n\t\t\t'ceil',\n\t\t\t'floor',\n\t\t\t'abs'\n\t\t],\n\t\tbooleanPathOp = [\n\t\t\t'unite',\n\t\t\t'intersect',\n\t\t\t'subtract',\n\t\t\t'exclude',\n\t\t\t'divide'\n\t\t]*/;\n\n\tchain.forEach(function(name) {\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(\n\t\t\t\t\t{ isPlural: plural.indexOf(name) !== -1 },\n\t\t\t\t\targuments\n\t\t\t\t),\n\t\t\t\ti;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tthis[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// make method chainable\n\t\t\treturn this;\n\t\t};\n\t});\n\n\t// singular chainable method\n};\n\nmodule.exports = Collection;\n\n},{}],4:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tGlyph = require('./Glyph.js');\n\nfunction Font( args ) {\n\tif ( !args ) {\n\t\targs = {};\n\t}\n\n\tif ( !args.styleName ) {\n\t\targs.styleName = 'Regular';\n\t}\n\n\tif ( !args.unitsPerEm ) {\n\t\targs.unitsPerEm = 1024;\n\t}\n\n\tthis.ot = new opentype.Font( args );\n\n\tthis.glyphs = [];\n\tthis.glyphMap = {};\n\tthis.charMap = {};\n\tthis.altMap = {};\n\tthis._subset = false;\n\n\tthis.addGlyph(new Glyph({\n\t\tname: '.notdef',\n\t\tunicode: 0\n\t}));\n\n\tif ( args && args.glyphs ) {\n\t\tthis.addGlyphs( args.glyphs );\n\t}\n\n\tif ( typeof window === 'object' && window.document ) {\n\t\t// work around https://bugzilla.mozilla.org/show_bug.cgi?id=1100005\n\t\t// by using fonts.delete in batch, every 1 second\n\t\tif ( document.fonts ) {\n\t\t\tthis.addedFonts = [];\n\n\t\t\tsetInterval(function() {\n\t\t\t\twhile ( this.addedFonts.length > 1 ) {\n\t\t\t\t\tdocument.fonts.delete( this.addedFonts.shift() );\n\t\t\t\t}\n\t\t\t}.bind(this), 1000);\n\n\t\t} else {\n\t\t\tdocument.head.appendChild(\n\t\t\t\tthis.styleElement = document.createElement('style')\n\t\t\t);\n\t\t\t// let's find the corresponding CSSStyleSheet\n\t\t\t// (would be much easier with Array#find)\n\t\t\tthis.styleSheet = document.styleSheets[\n\t\t\t\t[].map.call(document.styleSheets, function(ss) {\n\t\t\t\t\treturn ss.ownerNode;\n\t\t\t\t}).indexOf(this.styleElement)\n\t\t\t];\n\t\t}\n\t}\n}\n\nFont.prototype.addGlyph = function( glyph ) {\n\tthis.glyphs.push( glyph );\n\tthis.glyphMap[glyph.name] = glyph;\n\n\tif ( glyph.ot.unicode === undefined ) {\n\t\treturn glyph;\n\t}\n\n\t// build the default cmap\n\t// if multiple glyphs share the same unicode, use the glyph where unicode\n\t// and name are equal\n\tif ( !this.charMap[glyph.ot.unicode] ||\n\t\t\t( glyph.name.length === 1 &&\n\t\t\t\tglyph.name.charCodeAt(0) === glyph.ot.unicode ) ) {\n\n\t\tthis.charMap[glyph.ot.unicode] = glyph;\n\t}\n\n\t// build the alternates map\n\tif ( !this.altMap[glyph.ot.unicode] ) {\n\t\tthis.altMap[glyph.ot.unicode] = [];\n\t}\n\tthis.altMap[glyph.ot.unicode].push( glyph );\n\n\t// invalidate glyph subset cache\n\t// TODO: switch to immutable.js to avoid this maddness\n\tthis._lastSubset = undefined;\n\n\treturn glyph;\n};\n\nFont.prototype.addGlyphs = function( glyphs ) {\n\treturn glyphs.forEach(function( glyph ) {\n\t\tthis.addGlyph(glyph);\n\n\t}, this);\n};\n\nObject.defineProperty( Font.prototype, 'subset', {\n\tget: function() {\n\t\treturn this._subset;\n\t},\n\tset: function( set ) {\n\t\tthis._subset = set === false ?\n\t\t\tfalse : Font.normalizeSubset( set );\n\n\t\treturn this._subset;\n\t}\n});\n\nFont.prototype.getGlyphSubset = function( set ) {\n\tif ( set === true ) {\n\t\treturn this.glyphs;\n\t}\n\n\tset = set !== undefined ?\n\t\tFont.normalizeSubset( set ) :\n\t\tthis._subset;\n\n\t// reuse last subset if possible\n\t// TODO: implement caching using immutable.js\n\tif ( this._lastSubset &&\n\t\t\tthis._lastSubset[0] === ( this._subset || [] ).join() ) {\n\n\t\treturn this._lastSubset[1];\n\t}\n\n\t// memoize last subset\n\tthis._lastSubset = [\n\t\t( this._subset || [] ).join(),\n\t\tthis.glyphs.filter(function( glyph ) {\n\t\t\tif ( this._subset === false &&\n\t\t\t\t\t( glyph.ot.unicode !== undefined ||\n\t\t\t\t\t( glyph.ot.unicodes && glyph.ot.unicodes.length ) ) ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( this._subset &&\n\t\t\t\t\tthis._subset.indexOf( glyph.ot.unicode ) !== -1 ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// TODO: handle multiple unicodes\n\t\t\treturn false;\n\n\t\t}, this)\n\t];\n\n\treturn this._lastSubset[1];\n};\n\nFont.prototype.interpolate = function( font0, font1, coef, set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\tglyph.interpolate(\n\t\t\tfont0.glyphMap[glyph.name],\n\t\t\tfont1.glyphMap[glyph.name],\n\t\t\tcoef\n\t\t);\n\t});\n\n\t// TODO: evaluate if taking subsetting into account makes kerning\n\t// interpolation faster or slower.\n\tif ( this.ot.kerningPairs ) {\n\t\tfor ( var i in this.ot.kerningPairs ) {\n\t\t\tthis.ot.kerningPairs[i] =\n\t\t\t\tfont0.ot.kerningPairs[i] +\n\t\t\t\t( font1.ot.kerningPairs[i] - font0.ot.kerningPairs[i] ) * coef;\n\t\t}\n\t}\n\n\tthis.ot.ascender =\n\t\tfont0.ot.ascender + ( font1.ot.ascender - font0.ot.ascender ) * coef;\n\tthis.ot.descender =\n\t\tfont0.ot.descender + ( font1.ot.descender - font0.ot.descender ) * coef;\n\n\treturn this;\n};\n\nFont.prototype.updateSVGData = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateSVGData();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.updateOTCommands = function( set ) {\n\tthis.ot.glyphs = this.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateOTCommands();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.importOT = function( otFont ) {\n\tthis.ot = otFont;\n\n\totFont.glyphs.forEach(function( otGlyph ) {\n\t\tvar glyph = new Glyph({\n\t\t\t\tname: otGlyph.name,\n\t\t\t\tunicode: otGlyph.unicode\n\t\t\t});\n\n\t\tthis.addGlyph( glyph );\n\t\tglyph.importOT( otGlyph );\n\n\t}, this);\n\n\treturn this;\n};\n\nif ( typeof window === 'object' && window.document ) {\n\n\tvar _URL = window.URL || window.webkitURL;\n\tFont.prototype.addToFonts = document.fonts ?\n\t\t// CSS font loading, lightning fast\n\t\tfunction( buffer ) {\n\t\t\tvar fontface = new window.FontFace(\n\t\t\t\tthis.ot.familyName,\n\t\t\t\tbuffer || this.ot.toBuffer()\n\t\t\t);\n\n\t\t\tdocument.fonts.add( fontface );\n\t\t\tthis.addedFonts.push( fontface );\n\n\t\t\treturn this;\n\t\t} :\n\t\tfunction( buffer ) {\n\t\t\tvar url = _URL.createObjectURL(\n\t\t\t\t\tnew Blob(\n\t\t\t\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t\t\t\t{ type: 'font/opentype' }\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tif ( this.fontObjectURL ) {\n\t\t\t\t_URL.revokeObjectURL( this.fontObjectURL );\n\t\t\t\tthis.styleSheet.deleteRule(0);\n\t\t\t}\n\n\t\t\tthis.styleSheet.insertRule(\n\t\t\t\t'@font-face { font-family: \"' + this.ot.familyName + '\";' +\n\t\t\t\t'src: url(' + url + '); }',\n\t\t\t\t0\n\t\t\t);\n\t\t\tthis.fontObjectURL = url;\n\n\t\t\treturn this;\n\t\t};\n\n\tFont.prototype.download = function( buffer ) {\n\t\tvar reader = new FileReader();\n\n\t\treader.onloadend = function() {\n\t\t\twindow.location = reader.result;\n\t\t};\n\n\t\treader.readAsDataURL(new Blob(\n\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t{ type: 'font/opentype' }\n\t\t));\n\n\t\treturn this;\n\t};\n\n}\n\nFont.normalizeSubset = function( set ) {\n\treturn ( typeof set === 'string' ?\n\t\t\tset.split('').map(function(e) {\n\t\t\t\treturn e.charCodeAt(0);\n\t\t\t}) :\n\t\t\tset\n\t\t)\n\t\t.filter(function(e, i, arr) {\n\t\t\treturn arr.lastIndexOf(e) === i;\n\t\t})\n\t\t.sort();\n};\n\nmodule.exports = Font;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"./Glyph.js\":5}],5:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js');\n\nfunction Glyph( args ) {\n\tpaper.CompoundPath.prototype.constructor.apply( this );\n\n\tif ( args && typeof args.unicode === 'string' ) {\n\t\targs.unicode = args.unicode.charCodeAt(0);\n\t}\n\n\tthis.ot = new opentype.Glyph( args );\n\tthis.ot.path = new opentype.Path();\n\n\tthis.name = args.name;\n\t// workaround opentype 'unicode === 0' bug\n\tthis.ot.unicode = args.unicode;\n\n\t//this.contours = ( args && args.contours ) || [];\n\tthis.anchors = ( args && args.anchors ) || [];\n\tthis.components = ( args && args.components ) || [];\n\tthis.parentAnchors = ( args && args.parentAnchors ) || [];\n\n\t// default fill color needed to display the glyph in a canvas\n\tthis.fillColor = new paper.Color(0, 0, 0);\n\t// but each individual glyph must be explicitely made visible\n\tthis.visible = false;\n}\n\nGlyph.prototype = Object.create(paper.CompoundPath.prototype);\nGlyph.prototype.constructor = Glyph;\n\n// Todo: handle unicode updates\nObject.defineProperty(Glyph.prototype, 'unicode', {\n\tset: function( code ) {\n\t\tthis.ot.unicode = typeof code === 'string' ?\n\t\t\tcode.charCodeAt(0) :\n\t\t\tcode;\n\t},\n\tget: function() {\n\t\treturn this.ot.unicode;\n\t}\n});\n\n// proxy *Child/*Children methods to *Contour/*Contours\n// This has the added benefit of preventing CompoundPath#insertChildren\n// from arbitrarily changing the direction of paths\nObject.getOwnPropertyNames( paper.Item.prototype )\n\t.forEach(function(name) {\n\t\t// exclude getters and non-methods\n\t\tif ( Object.getOwnPropertyDescriptor(this, name).get ||\n\t\t\t\ttypeof this[name] !== 'function' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( name.indexOf('Children') !== -1 ) {\n\t\t\tthis[name.replace('Children', 'Contours')] = this[name];\n\n\t\t} else if ( name.indexOf('Child') !== -1 ) {\n\t\t\tthis[name.replace('Child', 'Contour')] = this[name];\n\t\t}\n\n\t}, paper.Item.prototype);\n\n// Fix two problems with CompoundPath#insertChildren:\n// - it arbitrarily changes the direction of paths\n// - it seems that it doesn't handle CompoundPath arguments\nGlyph.prototype.insertChildren = function(index, items, _preserve) {\n\tif ( Array.isArray( items ) ) {\n\t\t// flatten items to handle CompoundPath children\n\t\titems = [].concat.apply([], items.map(function(item) {\n\t\t\treturn item instanceof paper.Path ? item : item.children;\n\t\t}));\n\t}\n\n\treturn paper.Item.prototype.insertChildren.call(\n\t\tthis, index, items, _preserve, paper.Path\n\t);\n};\n\n// proxy .children to .contours\nObject.defineProperty(\n\tGlyph.prototype,\n\t'contours',\n\tObject.getOwnPropertyDescriptor( paper.Item.prototype, 'children' )\n);\n\nGlyph.prototype.addComponent = function( item ) {\n\tthis.components.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addComponents = function( components ) {\n\treturn components.forEach(function(component) {\n\t\tthis.addComponent(component);\n\t}, this);\n};\n\nGlyph.prototype.addAnchor = function( item ) {\n\tthis.anchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addAnchors = function( anchors ) {\n\treturn anchors.forEach(function(anchor) {\n\t\tthis.addAnchor(anchor);\n\t}, this);\n};\n\nGlyph.prototype.addParentAnchor = function( item ) {\n\tthis.parentAnchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addUnicode = function( code ) {\n\tthis.ot.addUnicode( code );\n\n\treturn this;\n};\n\nGlyph.prototype.interpolate = function( glyph0, glyph1, coef ) {\n\tfor (var i = 0, l = this.contours.length; i < l; i++) {\n\t\t// The number of children should be the same everywhere,\n\t\t// but we're going to try our best anyway\n\t\tif ( !glyph0.contours[i] || !glyph1.contours[i] ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.contours[i].interpolate(\n\t\t\tglyph0.contours[i],\n\t\t\tglyph1.contours[i],\n\t\t\tcoef\n\t\t);\n\n\t\t/* eslint-disable no-loop-func */\n\t\tthis.components.forEach(function(component, j) {\n\t\t\tcomponent.interpolate(\n\t\t\t\tglyph0.components[j], glyph1.components[j], coef\n\t\t\t);\n\t\t});\n\t\t/* eslint-enable no-loop-func */\n\n\t\tthis.ot.advanceWidth =\n\t\t\tglyph0.ot.advanceWidth +\n\t\t\t( glyph1.ot.advanceWidth - glyph0.ot.advanceWidth ) * coef;\n\t\tthis.ot.leftSideBearing =\n\t\t\tglyph0.ot.leftSideBearing +\n\t\t\t( glyph1.ot.leftSideBearing - glyph0.ot.leftSideBearing ) * coef;\n\t\tthis.ot.xMax =\n\t\t\tglyph0.ot.xMax + ( glyph1.ot.xMax - glyph0.ot.xMax ) * coef;\n\t\tthis.ot.xMin =\n\t\t\tglyph0.ot.xMin + ( glyph1.ot.xMin - glyph0.ot.xMin ) * coef;\n\t\tthis.ot.yMax =\n\t\t\tglyph0.ot.yMax + ( glyph1.ot.yMax - glyph0.ot.yMax ) * coef;\n\t\tthis.ot.yMin =\n\t\t\tglyph0.ot.yMin + ( glyph1.ot.yMin - glyph0.ot.yMin ) * coef;\n\t}\n\n\treturn this;\n};\n\nGlyph.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.contours.forEach(function( contour ) {\n\t\tcontour.updateSVGData( path );\n\t}, this);\n\n\tthis.components.forEach(function( component ) {\n\t\tcomponent.updateSVGData( path );\n\t});\n\n\treturn this.svgData;\n};\n\nGlyph.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.contours.forEach(function( contour ) {\n\t\tcontour.updateOTCommands( path );\n\t}, this);\n\n\tthis.components.forEach(function( component ) {\n\t\tcomponent.updateOTCommands( path );\n\t});\n\n\treturn this.ot;\n};\n\nGlyph.prototype.importOT = function( otGlyph ) {\n\tvar current;\n\tthis.ot = otGlyph;\n\n\tif ( !otGlyph.path || !otGlyph.path.commands ) {\n\t\treturn this;\n\t}\n\n\tthis.ot.path.commands.forEach(function(command) {\n\t\tswitch ( command.type ) {\n\t\t\tcase 'M':\n\t\t\t\tcurrent = new paper.Path();\n\t\t\t\tthis.addContour( current );\n\n\t\t\t\tcurrent.moveTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tcurrent.lineTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tcurrent.cubicCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\t[ command.x2, command.y2 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tcurrent.quadraticCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\t// When the glyph has no contour,\n\t\t\t\t// they contain a single Z command in\n\t\t\t\t// opentype.js.\n\t\t\t\t// TODO: see how we should handle that\n\t\t\t\tif ( current ) {\n\t\t\t\t\tcurrent.closePath();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}, this);\n\n\treturn this;\n};\n\nmodule.exports = Glyph;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2}],6:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nObject.defineProperty( paper.Segment.prototype, 'x', {\n\tget: function() {\n\t\treturn this.point.x;\n\t},\n\tset: function( value ) {\n\t\tthis.point.x = value;\n\t}\n});\n\nObject.defineProperty( paper.Segment.prototype, 'y', {\n\tget: function() {\n\t\treturn this.point.y;\n\t},\n\tset: function( value ) {\n\t\tthis.point.y = value;\n\t}\n});\n\nmodule.exports = paper.Segment;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],7:[function(require,module,exports){\n/* Extend the Path prototype to add OpenType conversion\n * and alias *segments methods and properties to *nodes\n */\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nvar proto = paper.PaperScope.prototype.Path.prototype;\n\n// alias *Segments methods to *Nodes equivalents\n[ 'add', 'insert', 'remove' ].forEach(function(name) {\n\tproto[name + 'Nodes'] =\n\t\tproto[name + 'Segments'];\n});\n\n// alias .segments to .nodes\nObject.defineProperties(proto, {\n\tnodes: Object.getOwnPropertyDescriptor( proto, 'segments' ),\n\tfirstNode: Object.getOwnPropertyDescriptor( proto, 'firstSegment' ),\n\tlastNode: Object.getOwnPropertyDescriptor( proto, 'lastSegment' )\n});\n\nproto._updateData = function( data, pushSimple, pushBezier ) {\n\tif ( this.visible === false ) {\n\t\treturn data;\n\t}\n\n\tvar length = this.curves.length,\n\t\tclosed = this.closed;\n\n\tpushSimple(\n\t\t'M',\n\t\tMath.round( this.curves[0].point1.x ) || 0,\n\t\tMath.round( this.curves[0].point1.y ) || 0\n\t);\n\n\tthis.curves.slice(0, closed ? -1 : length).forEach(function( curve ) {\n\t\tif ( curve.isLinear() ) {\n\t\t\tpushSimple(\n\t\t\t\t'L',\n\t\t\t\tMath.round( curve.point2.x ) || 0,\n\t\t\t\tMath.round( curve.point2.y ) || 0\n\t\t\t);\n\n\t\t} else {\n\t\t\tpushBezier(\n\t\t\t\t'C',\n\t\t\t\tMath.round( curve.point1.x + curve.handle1.x ) || 0,\n\t\t\t\tMath.round( curve.point1.y + curve.handle1.y ) || 0,\n\t\t\t\tMath.round( curve.point2.x + curve.handle2.x ) || 0,\n\t\t\t\tMath.round( curve.point2.y + curve.handle2.y ) || 0,\n\t\t\t\tMath.round( curve.point2.x ) || 0,\n\t\t\t\tMath.round( curve.point2.y ) || 0\n\t\t\t);\n\t\t}\n\t});\n\n\tif ( closed ) {\n\t\tpushSimple('Z');\n\t}\n\n\treturn data;\n};\n\nproto.updateOTCommands = function( data ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tfunction pushSimple() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx: arguments[1],\n\t\t\t\ty: arguments[2]\n\t\t\t});\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx1: arguments[1],\n\t\t\t\ty1: arguments[2],\n\t\t\t\tx2: arguments[3],\n\t\t\t\ty2: arguments[4],\n\t\t\t\tx: arguments[5],\n\t\t\t\ty: arguments[6]\n\t\t\t});\n\t\t}\n\t);\n};\n\nproto.updateSVGData = function( data ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tfunction pushSimple() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t}\n\t);\n};\n\nmodule.exports = paper.Path;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],8:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tFont = require('./Font.js'),\n\tGlyph = require('./Glyph.js'),\n\tPath = require('./Path.js'),\n\tNode = require('./Node.js'),\n\tCollection = require('./Collection.js');\n\npaper.PaperScope.prototype.Font = Font;\npaper.PaperScope.prototype.Glyph = Glyph;\npaper.PaperScope.prototype.Path = Path;\npaper.PaperScope.prototype.Node = Node;\npaper.PaperScope.prototype.Collection = Collection;\n\nfunction plumin( arg ) {\n\tif ( arguments.length === 1 && arg instanceof Collection ) {\n\t\treturn arg;\n\t}\n\n\tvar c = Object.create( Collection.prototype );\n\tCollection.apply( c, arguments );\n\treturn c;\n}\n\nplumin.opentype = opentype;\n\nplumin.proxy = Collection.proxy.bind(plumin);\nplumin.proxy(paper);\n\nmodule.exports = plumin;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Collection.js\":3,\"./Font.js\":4,\"./Glyph.js\":5,\"./Node.js\":6,\"./Path.js\":7}]},{},[8,2])(8)\n});\n\n\n//# sourceMappingURL=plumin.js.map","var plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tDepTree = require('../node_modules/deptree/index.js'),\n\tupdateUtils = require('./updateUtils.js');\n\nvar paper = plumin.paper,\n\tUtils = updateUtils;\n\n// convert the glyph source from the ufo object model to the paper object model\n// this is the inverse operation done by jsufonify\nUtils.ufoToPaper = function( src ) {\n\tif ( src.anchor ) {\n\t\tsrc.anchors = src.anchor;\n\t\tdelete src.anchor;\n\t}\n\n\tif ( src.outline && src.outline.contour ) {\n\t\tsrc.contours = src.outline.contour;\n\t\tdelete src.outline.contour;\n\t}\n\n\tsrc.contours.forEach(function(contour) {\n\t\tif ( contour.point ) {\n\t\t\tcontour.nodes = contour.point;\n\t\t\tdelete contour.point;\n\t\t}\n\t});\n\n\tif ( src.outline && src.outline.component ) {\n\t\tsrc.components = src.outline.component;\n\n\t\tsrc.components.forEach(function(component) {\n\t\t\tif ( component.anchor ) {\n\t\t\t\tcomponent.parentAnchors = component.anchor;\n\t\t\t\tdelete component.anchor;\n\t\t\t}\n\t\t});\n\n\t\tdelete src.outline.component;\n\t}\n\n\tdelete src.outline;\n\n\tif ( src.lib && src.lib.transformList ) {\n\t\tsrc.transformList = src.lib.transformList;\n\t\tdelete src.lib.transformList;\n\t}\n\n\treturn src;\n};\n\n// create Glyph instance and all its child items: anchors, contours\n// and components\nUtils.glyphFromSrc = function( glyphSrc, fontSrc, naive, embed ) {\n\tvar glyph = new paper.Glyph({\n\t\tname: glyphSrc.name,\n\t\tunicode: glyphSrc.unicode\n\t});\n\tglyph.src = glyphSrc;\n\tUtils.mergeStatic( glyph, glyphSrc );\n\n\t(glyphSrc.anchors || []).forEach(function(anchorSrc) {\n\t\tvar anchor = new paper.Node();\n\t\tanchor.src = anchorSrc;\n\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\tglyph.addAnchor( anchor );\n\t});\n\n\t(glyphSrc.contours || []).forEach(function(contourSrc) {\n\t\tvar contour = new paper.Path();\n\t\tcontour.src = contourSrc;\n\t\tUtils.mergeStatic( contour, contourSrc );\n\n\t\tglyph.addContour( contour );\n\n\t\t// TODO: handle oncurve/offcurve points\n\t\tcontourSrc.nodes.forEach(function(nodeSrc) {\n\t\t\tvar node = new paper.Node();\n\t\t\tnode.src = nodeSrc;\n\t\t\tUtils.mergeStatic( node, nodeSrc );\n\n\t\t\tcontour.add( node );\n\t\t});\n\t});\n\n\tif ( !glyphSrc.components ) {\n\t\treturn glyph;\n\t}\n\n\t// components can only be embedded once all glyphs have been generated\n\t// from source\n\tglyph.embedComponents = function() {\n\t\tglyphSrc.components.forEach(function(componentSrc) {\n\t\t\t// components are glyphs, quite simply\n\t\t\tvar component = Utils.glyphFromSrc(\n\t\t\t\t\tfontSrc.glyphs[componentSrc.base],\n\t\t\t\t\tfontSrc,\n\t\t\t\t\t// components' subcomponents can be embedded immediatly\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\tnaive.annotator( component );\n\t\t\tglyph.addComponent( component );\n\n\t\t\t(componentSrc.parentAnchors || []).forEach(function(anchorSrc) {\n\t\t\t\tvar anchor = new paper.Node();\n\t\t\t\tanchor.src = anchorSrc;\n\t\t\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\t\t\tcomponent.addParentAnchor( anchor );\n\t\t\t});\n\t\t});\n\n\t\tdelete glyph.embedComponents;\n\t};\n\n\tif ( embed ) {\n\t\tglyph.embedComponents();\n\t}\n\n\treturn glyph;\n};\n\n// build a full cursor from arguments\n// adds 'contours' and 'nodes' automagically when arguments start with a number\nUtils.cursor = function() {\n\tvar cursor = [];\n\n\tfor ( var i = -1; ++i < arguments.length; ) {\n\t\tif ( i === 0 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'contours' );\n\t\t}\n\t\tif ( i === 1 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'nodes' );\n\t\t}\n\t\tcursor.push( arguments[i] );\n\t}\n\n\treturn cursor.join('.');\n};\n\nUtils.propFromCursor = function( cursor, context, length ) {\n\tif ( length === undefined ) {\n\t\tlength = cursor.length;\n\t}\n\n\tfor ( var i = -1; ++i < length; ) {\n\t\tcontext = context[ cursor[i] ];\n\t}\n\n\treturn context;\n};\n\nUtils.mergeStatic = function( obj, src ) {\n\tfor ( var i in src ) {\n\t\tif ( typeof src[i] !== 'object' ) {\n\t\t\tobj[i] = src[i];\n\n\t\t// props that have empty dependencies and params are static\n\t\t} else if ( src[i]._dependencies && src[i]._dependencies.length === 0 &&\n\t\t\t\tsrc[i]._parameters.length === 0 ) {\n\n\t\t\tobj[i] = src[i]._updaters[0].apply(\n\t\t\t\tobj,\n\t\t\t\t[ null, null, null, null, Utils ]\n\t\t\t);\n\t\t}\n\t}\n};\n\nUtils.createUpdaters = function( leaf, path ) {\n\tif ( leaf.constructor === Object &&\n\t\t\t( typeof leaf._operation === 'string' ||\n\t\t\ttypeof leaf._operation === 'function' ) ) {\n\n\t\tvar args = [\n\t\t\t\t\t'propName', 'contours', 'anchors', 'parentAnchors', 'Utils'\n\t\t\t\t]\n\t\t\t\t.concat( leaf._parameters || [] )\n\t\t\t\t.concat(\n\t\t\t\t\t( typeof leaf._operation === 'string' ?\n\t\t\t\t\t\t'return ' + leaf._operation :\n\t\t\t\t\t\t// In which case is the operation a function?\n\t\t\t\t\t\t// I can't remember, maybe I thought it could be useful\n\t\t\t\t\t\t// someday...\n\t\t\t\t\t\tleaf._operation.toString()\n\t\t\t\t\t\t\t.replace(/function\\s*()\\s*\\{(.*?)\\}$/, '$1').trim()\n\t\t\t\t\t) +\n\t\t\t\t\t// add sourceURL pragma to help debugging\n\t\t\t\t\t'\\n\\n//# sourceURL=' + path\n\t\t\t\t);\n\n\t\tleaf._updaters = [ Function.apply( null, args ) ];\n\t\treturn leaf._updaters;\n\t}\n\n\tif ( leaf.constructor === Object ) {\n\t\tfor ( var i in leaf ) {\n\t\t\tUtils.createUpdaters( leaf[i], path + '.' + i );\n\t\t}\n\t}\n\n\tif ( leaf.constructor === Array ) {\n\t\tleaf.forEach(function(child, j) {\n\t\t\tUtils.createUpdaters( child, path + '.' + j );\n\t\t});\n\t}\n};\n\nUtils.solveDependencyTree = function( glyph ) {\n\tvar depTree = Utils.dependencyTree( glyph.src, null ),\n\t\torder = depTree.resolve(),\n\t\tsimplified = Utils.simplifyResolutionOrder( order );\n\n\treturn simplified;\n};\n\nUtils.dependencyTree = function( parentSrc, cursor, depTree ) {\n\tif ( !depTree ) {\n\t\tdepTree = new DepTree();\n\t}\n\n\tObject.keys( parentSrc ).forEach(function( i ) {\n\t\tvar leafSrc = parentSrc[i],\n\t\t\tcurrCursor = cursor ? cursor + '.' + i : i;\n\n\t\tif ( typeof leafSrc === 'object' ) {\n\t\t\t// objects with updater functions have dependencies\n\t\t\tif ( leafSrc._updaters && leafSrc._updaters.length ) {\n\t\t\t\tdepTree.add( currCursor, leafSrc._dependencies );\n\t\t\t}\n\n\t\t\tif ( !leafSrc._operation ) {\n\t\t\t\tUtils.dependencyTree( leafSrc, currCursor, depTree );\n\t\t\t}\n\t\t}\n\t});\n\n\treturn depTree;\n};\n\n// Simplify resolution order by removing cursors that don't point to objects\n// with updater functions\nUtils.simplifyResolutionOrder = function( depTree ) {\n\t// TODO: test + implement this optimization\n\treturn depTree;\n};\n\nvar rdeg = /deg$/;\nUtils.transformsToMatrix = function( transforms, origin ) {\n\tvar prev = new Float32Array(6),\n\t\tcurr = new Float32Array(6),\n\t\trslt = new Float32Array([ 1, 0, 0, 1, 0, 0 ]);\n\n\tif ( origin ) {\n\t\ttransforms.unshift([ 'translate', origin[0], origin[1] ]);\n\t\ttransforms.push([ 'translate', -origin[0], -origin[1] ]);\n\t}\n\n\ttransforms.forEach(function( transform ) {\n\t\tcurr[0] = curr[3] = 1;\n\t\tcurr[1] = curr[2] = curr[4] = curr[5] = 0;\n\n\t\t// convert degrees to radian\n\t\tfor ( var i = 1; i < transform.length; i++ ) {\n\t\t\tif ( transform[i] && typeof transform[i] === 'string' &&\n\t\t\t\t\trdeg.test(transform[i]) ) {\n\t\t\t\ttransform[i] = parseFloat(transform[i]) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\t\t}\n\n\t\tswitch ( transform[0] ) {\n\t\tcase 'translateX':\n\t\t\tcurr[4] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translateY':\n\t\t\tcurr[5] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translate':\n\t\t\tcurr[4] = transform[1];\n\t\t\tcurr[5] = transform[2] || 0;\n\t\t\tbreak;\n\n\t\tcase 'rotate':\n\t\t\tcurr[0] = Math.cos( transform[1] );\n\t\t\tcurr[1] = Math.sin( transform[1] );\n\t\t\tcurr[2] = -curr[1];\n\t\t\tcurr[3] = curr[0];\n\t\t\tbreak;\n\n\t\tcase 'scaleX':\n\t\t\tcurr[0] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scaleY':\n\t\t\tcurr[3] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scale':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[3] = transform.length > 2 ? transform[2] : transform[1];\n\t\t\tbreak;\n\n\t\tcase 'skewX':\n\t\t\t// stop parsing transform when encountering skewX(90)\n\t\t\t// see http://stackoverflow.com/questions/21094958/how-to-deal-with-infinity-in-a-2d-matrix\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[2] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'skewY':\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[1] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'matrix':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[1] = transform[2];\n\t\t\tcurr[2] = transform[3];\n\t\t\tcurr[3] = transform[4];\n\t\t\tcurr[4] = transform[5];\n\t\t\tcurr[5] = transform[6];\n\t\t\tbreak;\n\t\t}\n\n\t\tprev[0] = rslt[0];\n\t\tprev[1] = rslt[1];\n\t\tprev[2] = rslt[2];\n\t\tprev[3] = rslt[3];\n\t\tprev[4] = rslt[4];\n\t\tprev[5] = rslt[5];\n\n\t\trslt[0] = prev[0] * curr[0] + prev[2] * curr[1];\n\t\trslt[1] = prev[1] * curr[0] + prev[3] * curr[1];\n\t\trslt[2] = ( prev[0] * curr[2] || 0 ) + prev[2] * curr[3];\n\t\trslt[3] = ( prev[1] * curr[2] || 0 ) + prev[3] * curr[3];\n\t\trslt[4] = prev[0] * curr[4] + prev[2] * curr[5] + prev[4];\n\t\trslt[5] = prev[1] * curr[4] + prev[3] * curr[5] + prev[5];\n\t});\n\n\treturn new paper.Matrix(\n\t\trslt[0],\n\t\trslt[2],\n\t\trslt[1],\n\t\trslt[3],\n\t\trslt[4],\n\t\trslt[5]\n\t);\n};\n\n// Utils.normalizeAngle = function( angle ) {\n// \treturn angle % ( 2 * Math.PI ) + ( angle < 0 ? 2 * Math.PI : 0 );\n// };\n\n// Utils.findUpdater = function( glyph, cursor ) {\n// \tvar steps = [ 'glyph' ].concat( cursor.split('.') ),\n// \t\tcontext = { glyph: glyph };\n//\n// \tfor ( var i = -1; ++i < steps.length; ) {\n// \t\tcontext = context[ steps[i] ];\n//\n// \t\tif ()\n// \t}\n// };\n\n// patterns that should be searched for in dependencies and expanded\n// This list is expandable by plugins, 'naive' uses this possibility\n// hashtag #expandableception\n// Utils.expandables = [\n// \t[ /\\.nodes\\.\\d+\\.point$/, function( dep ) {\n// \t\tdep = dep.replace(/\\.point$/, '');\n//\n// \t\treturn [\n// \t\t\tdep + '.x',\n// \t\t\tdep + '.y'\n// \t\t];\n// \t} ],\n// \t[ /\\.nodes\\.\\d+$/, function( dep ) {\n// \t\treturn [\n// \t\t\tdep + '.x',\n// \t\t\tdep + '.y',\n// \t\t\tdep + '.handleIn.point',\n// \t\t\tdep + '.handleOut.point'\n// \t\t];\n// \t} ]\n// ];\n// Utils.expandDependencies = function( glyphSrc, deps, excludeList ) {\n// \tdeps = deps.map(function(dep) {\n// \t\t// search for an expandable pattern and... expand the dependency\n// \t\tfor ( var i = -1, l = Utils.expandables.length; ++i < l; ) {\n// \t\t\tif ( Utils.expandables[i][0].test( dep ) ) {\n// \t\t\t\treturn Utils.expandables[i][1]( dep, glyphSrc );\n// \t\t\t}\n// \t\t}\n//\n// \t\treturn dep;\n// \t});\n//\n// \t// flatten deps array and remove items from excludeList\n// \treturn [].concat.apply([], deps).filter(function(dep) {\n// \t\treturn excludeList.indexOf( dep ) === -1;\n// \t});\n// };\n\nmodule.exports = Utils;\n","var plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tUtils = require('./Utils.js'),\n\tmerge = require('lodash.merge');\n\nvar paper = plumin.paper,\n\tnaive = {},\n\t_ = { merge: merge };\n\nfunction autoExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tpoint: {\n\t\t\t_dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'y' ),\n\t\t\t\tUtils.cursor( i, j, 'expand' )\n\t\t\t],\n\t\t\t_parameters: [ 'width' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar width = arguments[\n\t\t\t\t\t\targuments.length - 1\n\t\t\t\t\t];\n\n\t\t\t\tnaive.expandedNodeUpdater(\n\t\t\t\t\tnode.expandedTo[side], side === 0, width\n\t\t\t\t);\n\n\t\t\t\tnaive.skeletonCopier( node );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'points' )\n\t\t]\n\t};\n}\n\nfunction explicitExpandedNodeSrc( i, j, side, isClosed ) {\n\treturn {\n\t\tpoint: {\n\t\t\t_dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'y' )\n\t\t\t]\n\t\t},\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'points' )\n\t\t]\n\t};\n}\n\nfunction expandedContourSrc( contour, i, side, nodesSrc ) {\n\treturn {\n\t\tpoints: {\n\t\t\t_dependencies: contour.nodes.map(function(node, j) {\n\t\t\t\treturn Utils.cursor(\n\t\t\t\t\t'contours', i, 'expandedTo', side, 'nodes', j, 'point'\n\t\t\t\t);\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\tnodes: nodesSrc,\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo', side, 'points' )\n\t\t]\n\t};\n}\n\nfunction nodeSrc( i, j ) {\n\treturn {\n\t\tpoint: {\n\t\t\t_dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'y' )\n\t\t\t]\n\t\t},\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'points' )\n\t\t]\n\t};\n}\n\nfunction contourSrc( contour, i ) {\n\treturn {\n\t\tpoints: {\n\t\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\t\treturn Utils.cursor( i, j, 'point' );\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\treturn Utils.cursor( i, j );\n\t\t})\n\t};\n}\n\n// default method to expand skeletons:\n// derives two additional node from every node with an .expand object\nnaive.annotator = function( glyph ) {\n\tvar additionalContours = [];\n\n\tglyph.contours.forEach(function( contour, i ) {\n\t\tif ( contour.skeleton !== true ) {\n\t\t\t// annotate nodes+points that aren't in a skeleton\n\t\t\tcontour.nodes.forEach(function( node, j ) {\n\t\t\t\t_.merge( node.src, nodeSrc( i, j ) );\n\t\t\t});\n\n\t\t\t_.merge( contour.src, contourSrc( contour, i ) );\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar leftContour,\n\t\t\trightContour,\n\t\t\tleftNodes = [],\n\t\t\trightNodes = [],\n\t\t\tleftNodesSrc = [],\n\t\t\trightNodesSrc = [],\n\t\t\tfirstNode,\n\t\t\tlastNode;\n\n\t\t// skeletons should be hidden\n\t\tcontour.visible = false;\n\n\t\tcontour.nodes.forEach(function( node, j ) {\n\n\t\t\tvar left = new paper.Node(),\n\t\t\t\tright = new paper.Node();\n\n\t\t\tleftNodes.push(left);\n\t\t\trightNodes.unshift(right);\n\t\t\tnode.expandedTo = [ left, right ];\n\t\t\tleft.expandedFrom = right.expandedFrom = node;\n\n\t\t\tif ( !node.src.expandedTo ) {\n\t\t\t\t// annotate nodes+points that are automatically expanded\n\t\t\t\tleftNodesSrc.push(\n\t\t\t\t\tautoExpandedNodeSrc( node, i, j, 0, contour.closed )\n\t\t\t\t);\n\t\t\t\trightNodesSrc.push(\n\t\t\t\t\tautoExpandedNodeSrc( node, i, j, 1, contour.closed )\n\t\t\t\t);\n\t\t\t\t// node.src.expandedTo = [\n\t\t\t\t// \tautoExpandedNodeSrc( node, i, j, 0, contour.closed ),\n\t\t\t\t// \tautoExpandedNodeSrc( node, i, j, 1, contour.closed )\n\t\t\t\t// ];\n\n\t\t\t\t// This will copy properties such as types, directions and\n\t\t\t\t// tensions to the expanded node.\n\t\t\t\t// This should be the last updated property of this node.\n\t\t\t\t// We rely on the fact that javascript interpreters currently\n\t\t\t\t// enumerate properties in insertion order, but this behavior\n\t\t\t\t// isn't in the specs.\n\t\t\t\tnode.src.copier = {\n\t\t\t\t\t// We depend on .expand.angle, but we don't specify it,\n\t\t\t\t\t// otherwise copier would be executed right after .expand,\n\t\t\t\t\t// but before the other properties.\n\t\t\t\t\t_dependencies: [],\n\t\t\t\t\t_parameters: [],\n\t\t\t\t\t_updater: naive.skeletonCopier\n\t\t\t\t};\n\n\t\t\t// the expanded node might have been defined explicitely\n\t\t\t} else if ( node.src.expandedTo[0] &&\n\t\t\t\t\t!node.src.expandedTo[0]._updaters ) {\n\t\t\t\tnode.src.expandedTo.forEach(function( src, k ) {\n\t\t\t\t\tUtils.mergeStatic( node.expandedTo[k], src );\n\t\t\t\t});\n\n\t\t\t\t// annotate nodes+points that are explicitely expanded\n\t\t\t\t_.merge( node.src.expandedTo[0],\n\t\t\t\t\texplicitExpandedNodeSrc( i, j, 0, contour.closed )\n\t\t\t\t);\n\t\t\t\t_.merge( node.src.expandedTo[1],\n\t\t\t\t\texplicitExpandedNodeSrc( i, j, 1, contour.closed )\n\t\t\t\t);\n\n\t\t\t\t// There should never be two ways to access a source leaf,\n\t\t\t\t// otherwise this might introduce redundant operations in the\n\t\t\t\t// solving order and all dependencies will be a lot harder to\n\t\t\t\t// represent mentally.\n\t\t\t\t// Move them to the appropriate *NodesSrc so that node sources\n\t\t\t\t// in the glyph source tree are only accessible from contours\n\t\t\t\t// and expanded contours, not from expanded nodes.\n\t\t\t\tleftNodesSrc.push( node.src.expandedTo[0] );\n\t\t\t\trightNodesSrc.push( node.src.expandedTo[1] );\n\t\t\t\tdelete node.src.expandedTo;\n\t\t\t}\n\t\t});\n\n\t\tif ( !contour.expandedTo && !contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes.concat(rightNodes)\n\t\t\t});\n\t\t\tcontour.expandedTo = [ leftContour ];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i, 0,\n\t\t\t\t\tleftNodesSrc.concat( rightNodesSrc )\n\t\t\t\t)\n\t\t\t];\n\t\t\tleftContour.expandedFrom = contour;\n\t\t\tadditionalContours.push( leftContour );\n\n\t\t\tfirstNode = contour.firstNode;\n\t\t\tlastNode = contour.lastNode;\n\n\t\t\tfirstNode.type = 'corner';\n\t\t\tlastNode.type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].type = 'corner';\n\t\t\tfirstNode.expandedTo[1].type = 'corner';\n\t\t\tlastNode.expandedTo[0].type = 'corner';\n\t\t\tlastNode.expandedTo[1].type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].typeIn = 'line';\n\t\t\tfirstNode.expandedTo[1].typeOut = 'line';\n\t\t\tlastNode.expandedTo[0].typeOut = 'line';\n\t\t\tlastNode.expandedTo[1].typeIn = 'line';\n\n\t\t} else if ( !contour.expandedTo && contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes\n\t\t\t});\n\t\t\tadditionalContours.push( leftContour );\n\t\t\trightContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: rightNodes\n\t\t\t});\n\t\t\tadditionalContours.push( rightContour );\n\n\t\t\tcontour.expandedTo = [\n\t\t\t\tleftContour,\n\t\t\t\trightContour\n\t\t\t];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i, 0, leftNodesSrc ),\n\t\t\t\texpandedContourSrc( rightContour, i, 1, rightNodesSrc )\n\t\t\t];\n\t\t\tleftContour.expandedFrom = rightContour.expandedFrom = contour;\n\t\t}\n\t});\n\n\tglyph.addContours( additionalContours );\n};\n\n// Calculate expanded node position\nnaive.expandedNodeUpdater = function( node, isLeft, _width ) {\n\tvar origin = node.expandedFrom,\n\t\texpand = origin.expand,\n\t\twidth = expand && expand.width !== undefined ?\n\t\t\texpand.width : _width,\n\t\tcoef = expand && expand.distr !== undefined ?\n\t\t\t( isLeft ? expand.distr : 1 - expand.distr ) :\n\t\t\t0.5,\n\t\tangle = ( isLeft ? Math.PI : 0 ) +\n\t\t\t( expand && expand.angle !== undefined ?\n\t\t\t\texpand.angle :\n\t\t\t\t// We resort to using directions.\n\t\t\t\t// This is wrong, directions are not included in the\n\t\t\t\t// dependencies of the updater and might not be ready yet.\n\t\t\t\t// TODO: Fix this (always require angle to be specified?)\n\t\t\t\t( origin._dirOut !== undefined ?\n\t\t\t\t\torigin._dirOut - Math.PI / 2 :\n\t\t\t\t\torigin._dirIn + Math.PI / 2\n\t\t\t\t)\n\t\t\t);\n\n\t// position\n\tnode.point.x = origin.point.x + ( width * coef * Math.cos( angle ) );\n\tnode.point.y = origin.point.y + ( width * coef * Math.sin( angle ) );\n};\n\n// copy skeleton properties such as types, directions and tensions to expanded\n// nodes\nnaive.skeletonCopier = function( node ) {\n\tvar angle = node.expand && node.expand.angle || 0,\n\t\tleft = node.expandedTo[0],\n\t\tright = node.expandedTo[1];\n\n\t// node type\n\tif ( node.type !== undefined ) {\n\t\tleft.type = right.type = node.type;\n\t}\n\n\t// direction type\n\tif ( node.typeIn !== undefined ) {\n\t\tleft.typeIn = right.typeOut = node.typeIn;\n\t}\n\tif ( node.typeOut !== undefined ) {\n\t\tleft.typeOut = right.typeIn = node.typeOut;\n\t}\n\n\t// direction\n\tif ( node._dirIn !== undefined ) {\n\t\tleft._dirIn = right._dirOut = node._dirIn;\n\n\t\tif ( node.type === 'smooth' && node._dirOut === undefined ) {\n\t\t\tleft._dirOut = right._dirIn = node._dirIn + Math.PI;\n\t\t}\n\t}\n\tif ( node._dirOut !== undefined ) {\n\t\tleft._dirOut = right._dirIn = node._dirOut;\n\n\t\tif ( node.type === 'smooth' && node._dirIn === undefined ) {\n\t\t\tleft._dirIn = right._dirOut = node._dirOut + Math.PI;\n\t\t}\n\t}\n\t// use angle if direction isn't already defined\n\tif ( left._dirIn === undefined ) { // implies right._dirOut === undefined\n\t\tleft._dirIn = angle - Math.PI / 2;\n\t\tright._dirOut = angle + Math.PI / 2;\n\t}\n\tif ( left._dirOut === undefined ) { // implies right._dirIn === undefined\n\t\tleft._dirOut = angle + Math.PI / 2;\n\t\tright._dirIn = angle - Math.PI / 2;\n\t}\n\n\t// tension\n\tleft.tensionIn = right.tensionOut = node.tensionIn !== undefined ?\n\t\tnode.tensionIn :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n\tleft.tensionOut = right.tensionIn = node.tensionOut !== undefined ?\n\t\tnode.tensionOut :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n};\n\n// Make sure 'line' types are set on both side of segments\n// and if a smooth node is used in a straight segment, update the directions\n// appropriately this can only be done once the types, directions and position\n// of all nodes have been updated can be renamed #prepareLines if no other\n// operation is added\n// TODO: try doing it at the same time as updateContour (once we have more\n// complex glyphs)\nnaive.prepareContour = function( path ) {\n\tpath.nodes.forEach(function(node) {\n\t\tif ( node.typeIn === 'line' && node.previous ) {\n\t\t\tnode.previous.typeOut = 'line';\n\n\t\t\tif ( node.type === 'smooth' ) {\n\t\t\t\tnode._dirIn = Utils.lineAngle(\n\t\t\t\t\tnode.point, node.previous.point\n\t\t\t\t);\n\t\t\t\tnode._dirOut = node._dirIn + Math.PI;\n\t\t\t}\n\t\t}\n\n\t\tif ( node.typeOut === 'line' && node.next ) {\n\t\t\tnode.next.typeIn = 'line';\n\n\t\t\tif ( node.type === 'smooth' ) {\n\t\t\t\tnode._dirOut = Utils.lineAngle(\n\t\t\t\t\tnode.point, node.next.point\n\t\t\t\t);\n\t\t\t\tnode._dirIn = node._dirOut + Math.PI;\n\t\t\t}\n\t\t}\n\t});\n};\n\n// sets the position of control points\n// can be renamed #updateControls if no other operation is added\nnaive.updateContour = function( path, curviness ) {\n\tif ( curviness === undefined ) {\n\t\tcurviness = 2 / 3;\n\t}\n\n\tpath.nodes.forEach(function(node) {\n\t\tvar start = node,\n\t\t\tend,\n\t\t\tstartCtrl,\n\t\t\tendCtrl,\n\t\t\tstartType,\n\t\t\tendType,\n\t\t\tstartTension,\n\t\t\tendTension,\n\t\t\tstartDir,\n\t\t\tendDir,\n\t\t\trri;\n\n\t\tif ( !node.next ) {\n\t\t\treturn;\n\t\t}\n\n\t\tend = node.next;\n\t\tstartCtrl = start.handleOut;\n\t\tendCtrl = end.handleIn;\n\n\t\tstartType = start.typeOut;\n\t\tendType = end.typeIn;\n\n\t\tif ( startType === 'line' || endType === 'line' ) {\n\t\t\tstartCtrl.x = 0;\n\t\t\tstartCtrl.y = 0;\n\t\t\tendCtrl.x = 0;\n\t\t\tendCtrl.y = 0;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartTension = start.tensionOut !== undefined ?\n\t\t\tstart.tensionOut :\n\t\t\t( start.tension !== undefined ? start.tension : 1 );\n\t\tendTension = end.tensionIn !== undefined ?\n\t\t\tend.tensionIn :\n\t\t\t( end.tension !== undefined ? end.tension : 1 );\n\n\t\tstartDir = start._dirOut !== undefined ?\n\t\t\tstart._dirOut :\n\t\t\tstart.type === 'smooth' ? start._dirIn + Math.PI : 0;\n\t\tendDir = end._dirIn !== undefined ?\n\t\t\tend._dirIn :\n\t\t\tend.type === 'smooth' ? end._dirOut - Math.PI : 0;\n\n\t\trri = Utils.rayRayIntersection(\n\t\t\tstart._point,\n\t\t\tstartDir,\n\t\t\tend._point,\n\t\t\tendDir\n\t\t);\n\n\t\t// direction of handles is parallel\n\t\tif ( rri === null ) {\n\t\t\tvar angle = Utils.lineAngle( start._point, end._point ),\n\t\t\t\tmiddle = {\n\t\t\t\t\tx: ( end._point.x - start._point.x ) / 2 + start._point.x,\n\t\t\t\t\ty: ( end._point.y - start._point.y ) / 2 + start._point.y\n\t\t\t\t},\n\t\t\t\tp0 = Utils.rayRayIntersection(\n\t\t\t\t\tstart._point, startDir, middle, angle - Math.PI / 2\n\t\t\t\t),\n\t\t\t\tp1 = Utils.rayRayIntersection(\n\t\t\t\t\tmiddle, angle + Math.PI / 2, end._point, endDir\n\t\t\t\t);\n\n\t\t\tstartCtrl.x = ( Math.round(p0[0]) - start._point.x ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tstartCtrl.y = ( Math.round(p0[1]) - start._point.y ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tendCtrl.x = ( Math.round(p1[0]) - end._point.x ) *\n\t\t\t\tcurviness * endTension;\n\t\t\tendCtrl.y = ( Math.round(p1[1]) - end._point.y ) *\n\t\t\t\tcurviness * endTension;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartCtrl.x = ( Math.round(rri[0]) - start.point.x ) *\n\t\t\tcurviness * startTension;\n\t\tstartCtrl.y = ( Math.round(rri[1]) - start.point.y ) *\n\t\t\tcurviness * startTension;\n\t\tendCtrl.x = ( Math.round(rri[0]) - end.point.x ) *\n\t\t\tcurviness * endTension;\n\t\tendCtrl.y = ( Math.round(rri[1]) - end.point.y ) *\n\t\t\tcurviness * endTension;\n\t});\n};\n\nvar rdeg = /deg$/;\nObject.defineProperties(paper.PaperScope.prototype.Segment.prototype, {\n\texpand: {\n\t\tget: function() {\n\t\t\treturn this._expand;\n\t\t},\n\t\tset: function( expand ) {\n\t\t\tif ( typeof expand.angle === 'string' && rdeg.test(expand.angle) ) {\n\t\t\t\texpand.angle = parseFloat(expand.angle) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\n\t\t\tthis._expand = expand;\n\t\t}\n\t},\n\tdirIn: {\n\t\tget: function() {\n\t\t\treturn this._dirIn;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirIn = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirIn = dir;\n\t\t\t}\n\t\t}\n\t},\n\tdirOut: {\n\t\tget: function() {\n\t\t\treturn this._dirOut;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirOut = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirOut = dir;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = naive;\n","/*jshint -W098 */\nvar plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tUtils = require('./Utils.js'),\n\tnaive = require('./naive.js');\n\nvar paper = plumin.paper;\n\nfunction splitCursor( cursor ) {\n\treturn cursor.split('.');\n}\n\nfunction parametricFont( src ) {\n\tvar font,\n\t\tname,\n\t\tglyphSrc,\n\t\tglyph;\n\n\t// TODO: this, block is only here for backward compat\n\t// and should be removed at some point in the future\n\tif ( !src.fontinfo ) {\n\t\tsrc.fontinfo = src.info;\n\t}\n\n\tfont = new paper.Font( src.fontinfo );\n\n\tfont.src = src;\n\n\tfor ( name in src.glyphs ) {\n\t\tglyphSrc = src.glyphs[name];\n\n\t\tUtils.ufoToPaper( glyphSrc );\n\n\t\tglyph = Utils.glyphFromSrc( glyphSrc, src, naive );\n\n\t\t// turn ._operation strings to ._updaters functions\n\t\tUtils.createUpdaters( glyphSrc, 'glyphs/glyph_' + name );\n\n\t\tfont.addGlyph( glyph );\n\n\t\t// Create additional paths for skeletons and set ._dependencies\n\t\t// appropriately\n\t\tnaive.annotator( glyph );\n\n\t\tglyph.solvingOrder =\n\t\t\tUtils.solveDependencyTree( glyph ).map( splitCursor );\n\t}\n\n\t// all glyphs are ready, embed components now\n\tfont.glyphs.forEach(function( _glyph ) {\n\t\tif ( _glyph.embedComponents ) {\n\t\t\t_glyph.embedComponents();\n\t\t}\n\t});\n\n\treturn font;\n}\n\nplumin.parametricFont = parametricFont;\nplumin.Utils = Utils;\nplumin.Utils.naive = naive;\n\npaper.PaperScope.prototype.Font.prototype.update = function( params, set ) {\n\treturn this.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.update( params, this );\n\t}, this);\n};\n\n/* Update the shape of the glyph, according to formula and parameters\n * 0. before running, nodes have already been created by ParametricFont\n *   (including expanded ones thanks to naive.expandSkeletons). And static\n *   properties have been copied over to those nodes\n * 1. We use the solving order to calculate all node properties\n * // 2. and 3. are now done during 1.\n * // 2. We make sure 'line' types are set on both node of bezier curve,\n * //    when present.\n * //    And we make smooth nodes... smooth.\n * // 3. Calculate the position of handles.\n * 4. transform contours\n * 5. Update components and transform them\n */\npaper.PaperScope.prototype.Glyph.prototype.update =\n\tfunction( params, font, solvingOrder ) {\n\t\tvar glyph = this;\n\n\t\t// 1. calculate node properties\n\t\t( solvingOrder || glyph.solvingOrder || [] ).forEach(function(cursor) {\n\t\t\tvar propName = cursor[ cursor.length - 1 ],\n\t\t\t\tsrc = Utils.propFromCursor( cursor, glyph.src ),\n\t\t\t\tobj = Utils.propFromCursor( cursor, glyph, cursor.length - 1 ),\n\t\t\t\t// TODO: one day we could allow multiple _updaters\n\t\t\t\tresult = src && src._updaters && src._updaters[0].apply( obj,\n\t\t\t\t\t[\n\t\t\t\t\t\tpropName, glyph.contours, glyph.anchors,\n\t\t\t\t\t\tglyph.parentAnchors, Utils\n\t\t\t\t\t].concat(\n\t\t\t\t\t\tsrc._parameters.map(function(name) {\n\t\t\t\t\t\t\treturn params[name];\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t// Assume that updaters returning undefined have their own\n\t\t\t// assignment logic\n\t\t\tif ( result !== undefined ) {\n\t\t\t\tobj[propName] = result;\n\t\t\t}\n\t\t}, this);\n\n\t\t// 4. transform contours\n\t\tthis.contours.forEach(function(contour) {\n\t\t\t// a. transform the contour\n\t\t\t// prepare and update outlines and expanded contours, but not\n\t\t\t// skeletons\n\t\t\tif ( contour.transforms ) {\n\t\t\t\tvar matrix = Utils.transformsToMatrix(\n\t\t\t\t\t\t\tcontour.transforms, contour.transformOrigin\n\t\t\t\t\t\t);\n\n\t\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\t\tcontour.transform( matrix );\n\n\t\t\t\t// when dealing with a skeleton, apply transforms only to\n\t\t\t\t// expanded items\n\t\t\t\t} else {\n\t\t\t\t\tcontour.expandedTo.forEach(function( _contour ) {\n\t\t\t\t\t\t_contour.transform( matrix );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// b. transform the nodes\n\t\t\tcontour.nodes.forEach(function(node) {\n\t\t\t\tif ( node.transforms ) {\n\t\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\t\tnode.transforms, node.transformOrigin\n\t\t\t\t\t);\n\n\t\t\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\t\t\tnode.transform( matrix );\n\n\t\t\t\t\t// when dealing with a skeleton, apply transforms only to\n\t\t\t\t\t// expanded items\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.expandedTo.forEach(function( _node ) {\n\t\t\t\t\t\t\t_node.transform( matrix );\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// 5. TODO: update components and transform components\n\t\tthis.components.forEach(function(component) {\n\t\t\tcomponent.update(\n\t\t\t\tparams, font, font.glyphMap[component.name].solvingOrder\n\t\t\t);\n\t\t});\n\t};\n\nmodule.exports = plumin;\n","var Utils = {};\n\n// The following function should be useless, thanks to paper\nUtils.lineLineIntersection = function( p1, p2, p3, p4 ) {\n\tvar x1 = p1.x,\n\t\ty1 = p1.y,\n\t\tx2 = p2.x,\n\t\ty2 = p2.y,\n\t\tx3 = p3.x,\n\t\ty3 = p3.y,\n\t\tx4 = p4.x,\n\t\ty4 = p4.y,\n\t\td = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n\tif ( d === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn new Float32Array([\n\t\t( (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4) ) /\n\t\td,\n\t\t( (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4) ) /\n\t\td\n\t]);\n};\n\n// Find the intersection of two rays.\n// A ray is defined by a point and an angle.\nUtils.rayRayIntersection = function( p1, a1, p2, a2 ) {\n\t// line equations\n\tvar a = Math.tan(a1),\n\t\tb = Math.tan(a2),\n\t\tc = p1.y - a * p1.x,\n\t\td = p2.y - b * p2.x,\n\t\tx,\n\t\ty;\n\n\t// When searching for lines intersection,\n\t// angles can be normalized to 0 < a < PI\n\t// This will be helpful in detecting special cases below.\n\ta1 = a1 % Math.PI;\n\tif ( a1 < 0 ) {\n\t\ta1 += Math.PI;\n\t}\n\ta2 = a2 % Math.PI;\n\tif ( a2 < 0 ) {\n\t\ta2 += Math.PI;\n\t}\n\n\t// no intersection\n\tif ( a1 === a2 ) {\n\t\treturn null;\n\t}\n\n\t// Optimize frequent and easy special cases.\n\t// Without optimization, results would be incorrect when cos(a) === 0\n\tif ( a1 === 0 ) {\n\t\ty = p1.y;\n\t} else if ( a1 === Math.PI / 2 ) {\n\t\tx = p1.x;\n\t}\n\tif ( a2 === 0 ) {\n\t\ty = p2.y;\n\t} else if ( a2 === Math.PI / 2 ) {\n\t\tx = p2.x;\n\t}\n\n\t// easiest case\n\tif ( x !== undefined && y !== undefined ) {\n\t\treturn new Float32Array([ x, y ]);\n\t}\n\n\t// other cases that can be optimized\n\tif ( a1 === 0 ) {\n\t\treturn new Float32Array([ ( y - d ) / b, y ]);\n\t}\n\tif ( a1 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, b * x + d ]);\n\t}\n\tif ( a2 === 0 ) {\n\t\treturn new Float32Array([ ( y - c ) / a, y ]);\n\t}\n\tif ( a2 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, a * x + c ]);\n\t}\n\n\t// intersection from two line equations\n\t// algo: http://en.wikipedia.org/wiki/Line–line_intersection#Given_the_equations_of_the_lines\n\treturn new Float32Array([\n\t\tx = (d - c) / (a - b),\n\t\t// this should work equally well with ax+c or bx+d\n\t\ta * x + c\n\t]);\n};\n\n// return the angle between two points\nUtils.lineAngle = function( p0, p1 ) {\n\treturn Math.atan2( p1.y - p0.y, p1.x - p0.x );\n};\n\nUtils.onLine = function( params ) {\n\tvar origin = params.on[0],\n\t\tvector = [\n\t\t\tparams.on[1].x - params.on[0].x,\n\t\t\tparams.on[1].y - params.on[0].y\n\t\t];\n\n\treturn 'x' in params ?\n\t\t( params.x - origin.x ) / vector[0] * vector[1] + origin.y :\n\t\t( params.y - origin.y ) / vector[1] * vector[0] + origin.x;\n};\n\nmodule.exports = Utils;\n"]}