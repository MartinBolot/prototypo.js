{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/deptree/index.js","node_modules/plumin.js/dist/plumin.js","src/Utils.js","src/naive.js","src/prototypo.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","prototypo","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"DepTree","nodes","prototype","add","node","dependants","Array","resolveNode","resolved","processing","deps","forEach","dep","indexOf","push","resolve","plumin","opentype","argument","predicate","message","assert",2,"line","ctx","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke",3,"cffStandardStrings","cffStandardEncoding","cffExpertEncoding","standardNames","DefaultEncoding","font","charToGlyphIndex","c","glyphs","glyph","j","charCodeAt","unicodes","CmapEncoding","cmap","glyphIndexMap","CffEncoding","encoding","charset","charName","GlyphNames","post","version","names","slice","numberOfGlyphs","glyphNameIndex","nameToGlyphIndex","name","glyphIndexToName","gid","addGlyphNames","charCodes","glyphIndex","tables","Object","keys","addUnicode","parseInt","cffEncoding","glyphNames",4,"path","sfnt","Font","options","familyName","styleName","designer","designerURL","manufacturer","manufacturerURL","license","licenseURL","description","copyright","trademark","unitsPerEm","ascender","descender","supported","hasChar","charToGlyph","stringToGlyphs","nameToGlyph","nametoGlyphIndex","getKerningValue","leftGlyph","rightGlyph","index","gposKerning","getGposKerningValue","kerningPairs","forEachGlyph","text","x","y","fontSize","callback","kerning","fontScale","kerningValue","undefined","advanceWidth","getPath","fullPath","Path","gX","gY","gFontSize","glyphPath","extend","draw","drawPoints","drawMetrics","validate","warnings","assertStringAttribute","attrName","trim","toTables","fontToTable","toBuffer","sfntTable","bytes","encode","buffer","ArrayBuffer","intArray","Uint8Array","download","fileName","replace","requestFileSystem","webkitRequestFileSystem","TEMPORARY","byteLength","fs","root","getFile","create","fileEntry","createWriter","writer","dataView","DataView","blob","Blob","type","write","addEventListener","location","href","toURL","err","./encoding","./path","./tables/sfnt",5,"check","Glyph","unicode","xMin","yMin","xMax","yMax","scale","p","commands","cmd","quadraticCurveTo","curveTo","closePath","getContours","contours","currentContour","pt","points","lastPointOfContour","getMetrics","xCoords","yCoords","metrics","Math","min","apply","max","leftSideBearing","rightSideBearing","drawCircles","PI_SQ","PI","arc","fill","blueCircles","redCircles","fillStyle","lineWidth","strokeStyle","./check","./draw",6,"_font","parse","cff","glyf","gpos","head","hhea","hmtx","kern","loca","maxp","_name","os2","toArrayBuffer","arrayBuffer","data","loadFromFile","readFile","loadFromUrl","url","request","XMLHttpRequest","open","responseType","onload","status","statusText","response","send","parseBuffer","numTables","tag","offset","hmtxOffset","glyfOffset","locaOffset","cffOffset","kernOffset","gposOffset","indexToLocFormat","numGlyphs","locaTable","shortVersion","getFixed","outlinesFormat","getTag","getUShort","getULong","numberOfHMetrics","fontFamily","fontSubfamily","load","isNode","loadFn","./font","./glyph","./parse","./tables/cff","./tables/cmap","./tables/glyf","./tables/gpos","./tables/head","./tables/hhea","./tables/hmtx","./tables/kern","./tables/loca","./tables/maxp","./tables/name","./tables/os2","./tables/post",7,"getByte","getUint8","getCard8","getUint16","getCard16","getShort","getInt16","getUint32","decimal","fraction","String","fromCharCode","getInt8","getOffset","offSize","v","getBytes","startOffset","endOffset","bytesToString","typeOffsets","byte","uShort","short","uLong","fixed","longDateTime","Parser","relativeOffset","parseByte","parseChar","parseCard8","parseUShort","parseCard16","parseSID","parseOffset16","parseShort","parseF2Dot14","parseULong","parseFixed","parseOffset16List","parseUShortList","count","offsets","parseString","string","parseTag","parseLongDateTime","parseVersion","major","minor","skip","amount",8,"strokeWidth","bezierCurveTo","quadTo","close","pathOrCommands","toPathData","decimalPlaces","floatToString","round","toFixed","packValues","arguments","d","toSVG","svg",9,"sizeOf","Table","tableName","fields","field","value","optionKeys","k","sizeOfFunction","TABLE","./types",10,"_glyph","table","equals","b","isArray","parseCFFIndex","start","conversionFn","objects","offsetSize","objectOffset","pos","parseFloatOperand","parser","eof","lookup","n1","n2","parseFloat","parseOperand","b0","b1","b2","b3","b4","entriesToObject","entries","key","values","hasOwnProperty","parseCFFDict","size","operands","op","getCFFString","strings","interpretDict","dict","meta","m","newDict","parseCFFHeader","header","formatMajor","formatMinor","TOP_DICT_META","PRIVATE_DICT_META","parseCFFTopDict","parseCFFPrivateDict","parseCFFCharset","nGlyphs","format","sid","parseCFFEncoding","enc","nCodes","nRanges","first","nLeft","parseCFFCharstring","stack","nStems","haveWidth","width","c1x","c1y","c2x","c2y","defaultWidthX","newContour","parseStems","hasWidthArg","shift","nominalWidthX","codeIndex","subrCode","pop","subrsBias","subrs","jpx","jpy","c3x","c3y","c4x","c4y","fd","abs","console","log","gsubrsBias","gsubrs","calcCFFSubroutineBias","bias","parseCFFTable","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDict","privateDictOffset","privateDict","subrOffset","subrIndex","charString","charStringsIndex","topDictData","charStrings","encodeString","makeHeader","makeNameIndex","fontNames","makeDict","attrs","entry","makeTopDict","makeTopDictIndex","topDicts","makeStringIndex","makeGlobalSubrIndex","makeCharsets","glyphName","glyphSID","glyphToOps","ops","dx","dy","dx1","dy1","dx2","dy2","_13","_23","makeCharStringsIndex","makePrivateDict","makePrivateDictIndex","privateDicts","makeCFFTable","fullName","weight","weightName","private","privateAttrs","postScriptName","charsets","privateDictIndex","make","../encoding","../glyph","../parse","../path","../table",11,"parseCmapTable","platformId","encodingId","segCount","endCountParser","startCountParser","idDeltaParser","idRangeOffsetParser","glyphIndexOffset","endCount","startCount","idDelta","idRangeOffset","numtables","language","addSegment","segments","end","delta","addTerminatorSegment","makeCmapTable","segCountX2","searchRange","pow","floor","entrySelector","rangeShift","endCounts","startCounts","idDeltas","idRangeOffsets","glyphIds","segment","concat","glyphId","../check",12,"parseGlyphCoordinate","flag","previousValue","shortVectorBitMask","sameBitMask","parseGlyph","flags","endPointIndices","numberOfCoordinates","repeatCount","point","px","py","component","moreComponents","numberOfContours","instructionLength","instructions","onCurve","isComposite","components","xScale","scale01","scale10","yScale","transformPoints","transform","newPoints","newPt","realFirstPoint","contour","firstPt","prevPt","midPt","curvePt","lastPt","parseGlyfTable","nextOffset","componentGlyph","transformedPoints",13,"parseTaggedListTable","list","parseCoverageTable","begin","coverage","parseClassDefTable","startGlyph","glyphCount","classes","glyphID","rangeCount","startGlyphs","endGlyphs","classValues","parsePairPosSubTable","coverageOffset","valueFormat1","valueFormat2","sharedPairSets","firstGlyph","secondGlyph","value1","value2","pairSetCount","pairSetOffsets","pairSetOffset","sharedPairSet","pairValueCount","pairSet","pairs","classDef1Offset","classDef2Offset","class1Count","class2Count","getClass1","getClass2","kerningMatrix","kerningRow","covered","class1","class2","parseLookupTable","lookupType","lookupFlag","useMarkFilteringSet","subTableCount","subTableOffsets","subtables","markFilteringSet","parseGposTable","tableVersion","lookupListOffset","scriptList","featureList","lookupCount","lookupTableOffsets","lookupListAbsoluteOffset",14,"parseHeadTable","fontRevision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","glyphDataFormat","makeHeadTable",15,"parseHheaTable","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","makeHheaTable",16,"parseHmtxTable","numMetrics","makeHmtxTable",17,"parseKernTable","subTableVersion","nPairs","leftIndex","rightIndex",18,"parseLocaTable","parseFn","glyphOffsets","glyphOffset",19,"parseMaxpTable","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","makeMaxpTable",20,"nameTableNames","parseNameTable","stringOffset","platformID","encodingID","languageID","nameID","property","str","codePoints","unknownCount","langTagCount","makeNameRecord","addMacintoshNameRecord","recordID","stringBytes","STRING","records","addWindowsNameRecord","utf16Bytes","UTF16","makeNameTable","../types",21,"parseOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContent","makeOS2Table",22,"parsePostTable","nameLength","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","makePostTable",23,"log2","computeCheckSum","sum","makeTableRecord","checkSum","makeSfntTable","highestPowerOf2","recordFields","tableFields","tableLength","tableRecord","isNaN","sort","r1","r2","metricsForChar","chars","notFoundMetrics","charCodeBounds","minCode","maxCode","average","vs","fontToSfntTable","xMins","yMins","xMaxs","yMaxs","advanceWidths","leftSideBearings","rightSideBearings","globals","advanceWidthAvg","maxLeftSideBearing","headTable","hheaTable","maxpTable","codeBounds","os2Table","hmtxTable","cmapTable","nameTable","uniqueID","preferredFamily","preferredSubfamily","postTable","cffTable","./cff","./cmap","./head","./hhea","./hmtx","./maxp","./name","./os2","./post",24,"LIMIT16","LIMIT32","decode","constant","BYTE","CHAR","CHARARRAY","USHORT","SHORT","UINT24","ULONG","LONG","FIXED","FWORD","UFWORD","LONGDATETIME","TAG","Card8","Card16","OffSize","SID","NUMBER","NUMBER16","NUMBER32","NAME","INDEX","offsetEncoder","encodedOffsets","encodedOffset","dataSize","OBJECT","DICT","OPERAND","OPERATOR","OP","wmm","WeakMap","CHARSTRING","has","get","set","encodingFunction","LITERAL","paper","noCanvas","process","browser","WorkerGlobalScope","Base","hidden","iter","bind","forIn","proto","__proto__","describe","getOwnPropertyDescriptor","obj","__lookupGetter__","__lookupSetter__","enumerable","configurable","writable","_define","defineProperty","desc","__defineGetter__","__defineSetter__","inject","dest","src","beans","preserve","beansNames","val","substring","isFunc","res","prev","bean","base","match","toLowerCase","isPlainObject","test","part","each","getLength","props","exclude","statics","ctor","initialize","clone","constructor","pick","toString","_id","_class","Formatter","instance","number","join","getClassName","exportJSON","toJSON","serialize","_set","dontCheck","orig","_filtering","obj1","obj2","checkKeys","o1","o2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","formatter","precision","definitions","references","item","id","ref","unshift","_serialize","_compact","deserialize","json","_data","isRoot","isDictionary","args","JSON","stringify","importJSON","target","isTarget","Item","Layer","insert","splice","items","remove","append","_index","removed","capitalize","toUpperCase","camelize","all","chr","hyphenate","Emitter","on","func","_eventTypes","handlers","_callbacks","install","off","uninstall","once","emit","event","stop","responds","attach","detach","fire","_installEvents","events","_events","types","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","project","projects","tools","palettes","_scopes","support","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","navigator","userAgent","v1","v2","rv","chrome","versionNumber","webkit","atom","getView","getPaper","execute","PaperScript","View","updateFocus","scope","that","setup","element","Project","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","val1","val2","separator","height","rectangle","Numerical","abscissas","weights","sqrt","TOLERANCE","EPSILON","MACHINE_EPSILON","KAPPA","isZero","integrate","w","A","B","Ax","findRoot","df","tolerance","fx","nx","solveQuadratic","roots","Infinity","D","gmC","mult","LOG10E","isFinite","R","q","solveCubic","c2","ec","x0","qd","tmp","Point","arg0","arg1","hasY","angle","setAngle","setLength","_angle","cos","sin","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","atan2","div","NaN","dot","acos","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","current","rotate","center","subtract","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","contains","isClose","isColinear","isOrthogonal","point1","point2","random","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","to","next","rect","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","left","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","concatenate","a1","c1","d1","a2","d2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","bounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","apx","apy","avx","avy","bpx","bpy","bvx","bvy","ta","tb","vx","vy","v2x","v2y","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","_drawSelection","Symbol","dontCenter","setDefinition","_definition","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","position","PlacedSymbol","symbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","visible","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","parent","setParent","mouseFlags","mousedown","mousedrag","click","doubleclick","mouseup","mousemove","mouseenter","mouseleave","mouseEvent","counters","_eventCounters","onFrame","_animateItem","onLoad","animate","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","children","_children","namedChildren","_namedChildren","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getRegistration","setRegistration","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","child","setBounds","cache","_boundsCache","ids","cached","_internal","other","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","copy","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","ceil","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","getIntersections","guides","parentTotalMatrix","_totalMatrix","view","totalMatrix","tolerancePadding","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","class","checkBounds","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","matches","compare","matchObject","RegExp","firstOnly","overlapping","inside","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","reduce","namedArray","notifyParent","replaceWith","reverseChildren","reverse","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","toCanvasStyle","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","getViewMatrix","normalBlend","nativeBlend","direct","dontStart","clip","_canComposite","mainCtx","itemOffset","prevOffset","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","getWindingRule","getCornerCenter","halfSize","dir","corner","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","source","object","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","getElement","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","modify","setContext","context","toDataURL","loaded","update","document","getElementById","Image","setTimeout","DomEvent","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","isLinear","_point","_handleIn","_handleOut","_path","curves","_curves","curve","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","setLinear","linear","next1","getNext","next2","getPrevious","isArc","handle1","handle2","_selectionState","state","oldState","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","removeSegment","interpolate","segment0","segment1","coef","dxPoint","dyPoint","dxHandleIn","dyHandleIn","dxHandleOut","dyHandleOut","change","Curve","arg6","arg7","_segment2","segment2","_length","getPoint1","setPoint1","getPoint2","setPoint2","getHandle1","setHandle1","getHandle2","setHandle2","getSegment1","getSegment2","getPoints","getPart","getPartLength","filterIntersections","_getParameter","isParameter","parameter","getParameterAt","ignoreLinear","subdivide","split","p1","h1","h2","p2","evaluate","p1x","p1y","p2x","p2y","bx","ax","by","ay","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","txs","tys","sx","sy","isFlatEnough","ux","uy","getEdgeSum","_addBounds","v0","v3","padding","tMin","tMax","getLocationAt","getLocationOf","getOffsetOf","loc","getNearestLocation","minDist","minT","refine","dist","step","getNearestPoint","getLengthIntegrand","getIterations","ds","forward","rangeLength","guess","addLocation","locations","curve1","t1","curve2","t2","addCurveIntersections","uMin","uMax","oldTDiff","recursion","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","tMinNew","tMaxNew","tDiff","hull","getConvexHull","tMinClip","tMaxClip","clipConvexHull","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","flip","pmax","distZero","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rlx2","rvl","rvc","tc","tl","addLineIntersection","linear1","linear2","c1p1","c1p2","c2p1","c2p2","_expand","last","_curve","_curve2","_parameter","_parameter2","loc1","loc2","path1","path2","getParameter","getIntersection","_point2","_distance","getSegment","_preferFirst","_segment","_uncached","intersection","_intersection","_getOffset","getCurveOffset","getPointAt","curves1","curves2","matrix1","matrix2","length1","length2","values2","values1","seg1","seg2","setPathData","relative","previous","control","getCoord","command","lower","move","cubicCurveTo","arcTo","winding","_getWinding","closed","setSegments","_clockwise","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","curX","curY","prevX","prevY","inX","inY","outX","outY","skipLine","isPolygon","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","simplify","fitter","PathFitter","fit","isClockwise","setClockwise","clockwise","last1","last2","first2","first1","path0","toShape","topCenter","shape","numSegments","strokePadding","cap","hitStroke","hitFill","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","_addBevelJoin","_addSquareCap","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","overlap","knots","f1","f2","ie","je","getCurrentSegment","moveBy","through","extent","vector","middle","large","epsilon","rxSq","rySq","xSq","ySq","l1","l2","throughSide","centerSide","ext","inc","z","out","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","prevCoords","processSegment","joinBounds","addRound","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getNormal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","compoundpath0","compoundpath1","paths","getCurrentPath","operators","computeBoolean","operation","operator","preparePath","reorient","_path1","_path2","splitPath","monoCurves","collect","_getMonoCurves","_winding","startSeg","totalLength","windingSum","curveLength","getTangentAt","getWinding","result","tracePaths","intersections","linearHandles","resetLinear","newCurve","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","prevT","slope","selfOp","_visited","inter","startInterSeg","added","interSeg","c4","c3","t3","t4","w3","w4","nextCurve","nextSeg","firstSegment","lastSegment","prevCurve","insertCurve","y0","handleCurve","y3","getInteriorPoint","xIntercepts","maxRecursion","minDifference","addCurve","computeParts","maxT","halfT","prevVal","prevLen","error","fitCubic","tan1","tan2","pt1","pt2","uPrime","chordLengthParameterize","maxError","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","C","X","detC0C1","alpha1","alpha2","detC0X","detXC1","c0","segLength","diff","degree","maxDist","P","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","gray","rgb","hsb","hsl","gradient","componentParsers","colorCache","colorCtx","fromCSS","hsbIndices","converters","rgb-hsb","h","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","hasOverlap","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","_stops","origin","destination","canvasGradient","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","acronym","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","nativeRequest","requested","callbacks","focused","timer","focus","blur","handleCallbacks","setInterval","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","getCanvasSize","_windowEvents","resize","setViewSize","_setViewSize","Stats","_stats","stats","domElement","appendChild","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","onResize","_time","_count","_requestFrame","_requested","_handleFrame","now","Date","_before","_handlingFrame","time","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tool","prevFocus","tempFocus","dragging","handleMouseMove","_handleEvent","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","HTMLCanvasElement","deviceRatio","backingStoreRatio","prevFont","measureText","downPoint","lastPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","callEvent","MouseEvent","isStopped","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","specialKeys",27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","space","charCodeMap","keyMap","downCode","handleKey","keyCode","charCode","specialKey","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","method","xhr","ActiveXObject","overrideMimeType","onreadystatechange","readyState","responseText","canvases","createElement","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","attribute","fromSVG","exportFilter","SVGNamespaces","xlink","setAttributes","namespace","setAttributeNS","createElementNS","getTransform","coordinates","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","exporters","applyStyle","visibility","svgs","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","map","importGroup","childNodes","isClip","currentStyle","applyAttributes","importSVG","importPoly","importPath","pathData","importGradient","isRadial","importers","#document","nextSibling","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","applyTransform","transforms","applyOpacity","attributes","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","styles","group","parentNode","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","onImport","expandShapes","Collection","cb","wrapConstructor","useConstructed","wrapper","arr","params","rconstructor","constructorFilter","unwrapArg","isPlural","unwrapArgs","proxy","methodNames","getOwnPropertyNames","filter","plural","ot","glyphMap","charMap","altMap","_subset","addGlyph","addGlyphs","fonts","addedFonts","delete","styleElement","styleSheet","styleSheets","ss","ownerNode","_lastSubset","normalizeSubset","getGlyphSubset","font0","font1","updateSVGData","updateOTCommands","importOT","otFont","otGlyph","_URL","URL","webkitURL","addToFonts","fontface","FontFace","createObjectURL","fontObjectURL","revokeObjectURL","deleteRule","insertRule","onloadend","readAsDataURL","lastIndexOf","../node_modules/opentype.js/dist/opentype.js","./Glyph.js","anchors","parentAnchors","addComponent","addComponents","addAnchor","addAnchors","addParentAnchor","glyph0","glyph1","svgData","addContour","../node_modules/paper/dist/paper-core.js","defineProperties","firstNode","lastNode","Node","./Collection.js","./Font.js","./Node.js","./Path.js","Utils","glyphFromSrc","glyphSrc","fontSrc","embed","mergeStatic","anchorSrc","contourSrc","nodeSrc","embedComponents","componentSrc","naive","expandSkeletons","propFromPath","createUpdaters","leaf","_operation","_parameters","_updater","Function","ufoToPaper","outline","lib","transformList","solveDependencyTree","leafSrc","excludeList","depTree","dependencyTree","currPath","_dependencies","expandDependencies","rpoint","expandables","lineLineIntersection","p4","x3","x4","y4","Float32Array","rayRayIntersection","lineAngle","onLine","rdeg","transformsToMatrix","curr","rslt","normalizeAngle","additionalContours","skeleton","leftContour","rightContour","leftNodes","rightNodes","expandedTo","expandedFrom","expandedNodeUpdater","copier","skeletonCopier","typeIn","typeOut","addContours","propName","_Utils","isLeft","distr","_dirOut","_dirIn","tensionIn","tensionOut","tension","prepareContour","updateContour","curviness","startCtrl","endCtrl","startType","endType","startTension","endTension","startDir","endDir","rri","dirIn","dirOut","rexpandedTo","ParametricFont","fontinfo","info","solvingOrder","transformOrigin","_contour","_node"],"mappings":"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":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var DepTree = function() {\n  this.nodes = {}; \n};\n\nDepTree.prototype.add = function(node, dependants) {\n  var self = this;\n\n  if (!dependants) {\n    dependants = [];\n  } else if (!(dependants instanceof Array)) {\n    dependants = [dependants];\n  }\n\n  this.nodes[node] = dependants;\n};\n\n\nDepTree.prototype.resolveNode = function(node, resolved, processing) {\n\n  var self = this;\n\n  resolved = resolved || [];\n  processing = processing || {};\n  var deps = this.nodes[node] || [];\n\n  processing[node] = true;\n\n  deps.forEach(function(dep) {\n    if (resolved.indexOf(dep) != -1) {\n      return;\n    }\n    if (processing[dep]) {\n      throw new Error('Circular dependency: '+dep);\n    }\n    self.resolveNode(dep, resolved, processing);\n  });\n\n  if (resolved.indexOf(node) == -1) {\n    processing[node] = false;\n    resolved.push(node);\n  }\n  return resolved;\n};\n\nDepTree.prototype.resolve = function() {\n\n  var resolved = [];\n  for (var node in this.nodes) {\n    this.resolveNode(node, resolved);\n  }\n\n  return resolved;\n\n};\n\n\nmodule.exports = DepTree;\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.plumin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.opentype=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// Run-time checking of preconditions.\n\n'use strict';\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nexports.argument = function (predicate, message) {\n    if (!predicate) {\n        throw new Error(message);\n    }\n};\n\n// Precondition function that checks if the given assertion is true.\n// If not, it will throw an error.\nexports.assert = exports.argument;\n\n},{}],2:[function(require,module,exports){\n// Drawing utility functions.\n\n'use strict';\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexports.line = line;\n\n},{}],3:[function(require,module,exports){\n// Glyph encoding\n\n'use strict';\n\nvar cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nvar cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n// This is the encoding used for fonts created from scratch.\n// It loops through all glyphs and finds the appropriate unicode value.\n// Since it's linear time, other encodings will be faster.\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function (c) {\n    var code, glyphs, i, glyph, j;\n    code = c.charCodeAt(0);\n    glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (i = 0; i < glyphs.length; i += 1) {\n            glyph = glyphs[i];\n            for (j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    } else {\n        return null;\n    }\n};\n\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\nCmapEncoding.prototype.charToGlyphIndex = function (c) {\n    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n};\n\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\nCffEncoding.prototype.charToGlyphIndex = function (s) {\n    var code, charName;\n    code = s.charCodeAt(0);\n    charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction GlyphNames(post) {\n    var i;\n    switch (post.version) {\n    case 1:\n        this.names = exports.standardNames.slice();\n        break;\n    case 2:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] < exports.standardNames.length) {\n                this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n            } else {\n                this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n            }\n        }\n        break;\n    case 2.5:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n        }\n        break;\n    case 3:\n        this.names = [];\n        break;\n    }\n}\n\nGlyphNames.prototype.nameToGlyphIndex = function (name) {\n    return this.names.indexOf(name);\n};\n\nGlyphNames.prototype.glyphIndexToName = function (gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNames(font) {\n    var glyphIndexMap, charCodes, i, c, glyphIndex, glyph;\n    glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    charCodes = Object.keys(glyphIndexMap);\n    for (i = 0; i < charCodes.length; i += 1) {\n        c = charCodes[i];\n        glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs[glyphIndex];\n        glyph.addUnicode(parseInt(c));\n    }\n    for (i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs[i];\n        if (font.cffEncoding) {\n            glyph.name = font.cffEncoding.charset[i];\n        } else {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexports.cffStandardStrings = cffStandardStrings;\nexports.cffStandardEncoding = cffStandardEncoding;\nexports.cffExpertEncoding = cffExpertEncoding;\nexports.standardNames = standardNames;\nexports.DefaultEncoding = DefaultEncoding;\nexports.CmapEncoding = CmapEncoding;\nexports.CffEncoding = CffEncoding;\nexports.GlyphNames = GlyphNames;\nexports.addGlyphNames = addGlyphNames;\n\n},{}],4:[function(require,module,exports){\n// The Font object\n\n'use strict';\n\nvar path = require('./path');\nvar sfnt = require('./tables/sfnt');\nvar encoding = require('./encoding');\n\n// A Font represents a loaded OpenType font file.\n// It contains a set of glyphs and methods to draw text on a drawing context,\n// or to get a path representing the text.\nfunction Font(options) {\n    options = options || {};\n    // OS X will complain if the names are empty, so we put a single space everywhere by default.\n    this.familyName = options.familyName || ' ';\n    this.styleName = options.styleName || ' ';\n    this.designer = options.designer || ' ';\n    this.designerURL = options.designerURL || ' ';\n    this.manufacturer = options.manufacturer || ' ';\n    this.manufacturerURL = options.manufacturerURL || ' ';\n    this.license = options.license || ' ';\n    this.licenseURL = options.licenseURL || ' ';\n    this.version = options.version || 'Version 0.1';\n    this.description = options.description || ' ';\n    this.copyright = options.copyright || ' ';\n    this.trademark = options.trademark || ' ';\n    this.unitsPerEm = options.unitsPerEm || 1000;\n    this.ascender = options.ascender;\n    this.descender = options.descender;\n    this.supported = true;\n    this.glyphs = options.glyphs || [];\n    this.encoding = new encoding.DefaultEncoding(this);\n    this.tables = {};\n}\n\n// Check if the font has a glyph for the given character.\nFont.prototype.hasChar = function (c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n// Convert the given character to a single glyph index.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyphIndex = function (s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n// Convert the given character to a single Glyph object.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyph = function (c) {\n    var glyphIndex, glyph;\n    glyphIndex = this.charToGlyphIndex(c);\n    glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        glyph = this.glyphs[0]; // .notdef\n    }\n    return glyph;\n};\n\n// Convert the given text to a list of Glyph objects.\n// Note that there is no strict one-to-one mapping between characters and\n// glyphs, so the list of returned glyphs can be larger or smaller than the\n// length of the given string.\nFont.prototype.stringToGlyphs = function (s) {\n    var i, c, glyphs;\n    glyphs = [];\n    for (i = 0; i < s.length; i += 1) {\n        c = s[i];\n        glyphs.push(this.charToGlyph(c));\n    }\n    return glyphs;\n};\n\nFont.prototype.nameToGlyphIndex = function (name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\nFont.prototype.nameToGlyph = function (name) {\n    var glyphIndex, glyph;\n    glyphIndex = this.nametoGlyphIndex(name);\n    glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        glyph = this.glyphs[0]; // .notdef\n    }\n    return glyph;\n};\n\nFont.prototype.glyphIndexToName = function (gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n// Retrieve the value of the kerning pair between the left glyph (or its index)\n// and the right glyph (or its index). If no kerning pair is found, return 0.\n// The kerning value gets added to the advance width when calculating the spacing\n// between glyphs.\nFont.prototype.getKerningValue = function (leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.getGposKerningValue;\n    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n};\n\n// Helper function that invokes the given callback for each glyph in the given text.\n// The callback gets `(glyph, x, y, fontSize, options)`.\nFont.prototype.forEachGlyph = function (text, x, y, fontSize, options, callback) {\n    var kerning, fontScale, glyphs, i, glyph, kerningValue;\n    if (!this.supported) {\n        return;\n    }\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || {};\n    kerning = options.kerning === undefined ? true : options.kerning;\n    fontScale = 1 / this.unitsPerEm * fontSize;\n    glyphs = this.stringToGlyphs(text);\n    for (i = 0; i < glyphs.length; i += 1) {\n        glyph = glyphs[i];\n        callback(glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n        if (kerning && i < glyphs.length - 1) {\n            kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n    }\n};\n\n// Create a Path object that represents the given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns a Path object.\nFont.prototype.getPath = function (text, x, y, fontSize, options) {\n    var fullPath = new path.Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function (glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        fullPath.extend(glyphPath);\n    });\n    return fullPath;\n};\n\n// Draw the text on the given drawing context.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.draw = function (ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n// Draw the points of all glyphs in the text.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawPoints = function (ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function (glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Draw lines indicating important font measurements for all glyphs in the text.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawMetrics = function (ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function (glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Validate\nFont.prototype.validate = function () {\n    var warnings = [];\n    var font = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertStringAttribute(attrName) {\n        assert(font[attrName] && font[attrName].trim().length > 0, 'No ' + attrName + ' specified.');\n    }\n\n    // Identification information\n    assertStringAttribute('familyName');\n    assertStringAttribute('weightName');\n    assertStringAttribute('manufacturer');\n    assertStringAttribute('copyright');\n    assertStringAttribute('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nFont.prototype.toTables = function () {\n    return sfnt.fontToTable(this);\n};\n\nFont.prototype.toBuffer = function () {\n    var sfntTable = this.toTables();\n    var bytes = sfntTable.encode();\n    var buffer = new ArrayBuffer(bytes.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n    return buffer;\n};\n\n// Initiate a download of the OpenType font.\nFont.prototype.download = function () {\n    var fileName = this.familyName.replace(/\\s/g, '') + '-' + this.styleName + '.otf';\n    var buffer = this.toBuffer();\n\n    window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n    window.requestFileSystem(window.TEMPORARY, buffer.byteLength, function (fs) {\n        fs.root.getFile(fileName, {create: true}, function (fileEntry) {\n            fileEntry.createWriter(function (writer) {\n                var dataView = new DataView(buffer);\n                var blob = new Blob([dataView], {type: 'font/opentype'});\n                writer.write(blob);\n\n                 writer.addEventListener('writeend', function () {\n                    // Navigating to the file will download it.\n                    location.href = fileEntry.toURL();\n                 }, false);\n            });\n        });\n    }, function (err) {\n        throw err;\n    });\n};\n\nexports.Font = Font;\n\n},{\"./encoding\":3,\"./path\":8,\"./tables/sfnt\":23}],5:[function(require,module,exports){\n// The Glyph object\n\n'use strict';\n\nvar check = require('./check');\nvar draw = require('./draw');\nvar path = require('./path');\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\nfunction Glyph(options) {\n    this.font = options.font || null;\n    this.index = options.index || 0;\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n    this.xMin = options.xMin || 0;\n    this.yMin = options.yMin || 0;\n    this.xMax = options.xMax || 0;\n    this.yMax = options.yMax || 0;\n    this.advanceWidth = options.advanceWidth || 0;\n    this.path = options.path || null;\n}\n\nGlyph.prototype.addUnicode = function (unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n    this.unicodes.push(unicode);\n};\n\n// Convert the glyph to a Path we can draw on a drawing context.\n//\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.getPath = function (x, y, fontSize) {\n    var scale, p, commands, cmd;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n    p = new path.Path();\n    commands = this.path.commands;\n    for (var i = 0; i < commands.length; i += 1) {\n        cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                               x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                      x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n                      x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n    return p;\n};\n\n// Split the glyph into contours.\n// This function is here for backwards compatibility, and to\n// provide raw access to the TrueType glyph outlines.\nGlyph.prototype.getContours = function () {\n    var contours, currentContour, i, pt;\n    if (this.points === undefined) {\n        return [];\n    }\n    contours = [];\n    currentContour = [];\n    for (i = 0; i < this.points.length; i += 1) {\n        pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n// Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\nGlyph.prototype.getMetrics = function () {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: 0\n    };\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// Draw the glyph on the given context.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.draw = function (ctx, x, y, fontSize) {\n    this.getPath(x, y, fontSize).draw(ctx);\n};\n\n// Draw the points of the glyph.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawPoints = function (ctx, x, y, fontSize) {\n\n    function drawCircles(l, x, y, scale) {\n        var j, PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    var scale, i, blueCircles, redCircles, path, cmd;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n\n    blueCircles = [];\n    redCircles = [];\n    path = this.path;\n    for (i = 0; i < path.commands.length; i += 1) {\n        cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n// Draw lines indicating important font measurements.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawMetrics = function (ctx, x, y, fontSize) {\n    var scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (this.xMin * scale), -10000, x + (this.xMin * scale), 10000);\n    draw.line(ctx, x + (this.xMax * scale), -10000, x + (this.xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-this.yMin * scale), 10000, y + (-this.yMin * scale));\n    draw.line(ctx, -10000, y + (-this.yMax * scale), 10000, y + (-this.yMax * scale));\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (this.advanceWidth * scale), -10000, x + (this.advanceWidth * scale), 10000);\n};\n\nexports.Glyph = Glyph;\n\n},{\"./check\":1,\"./draw\":2,\"./path\":8}],6:[function(require,module,exports){\n// opentype.js\n// https://github.com/nodebox/opentype.js\n// (c) 2014 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global ArrayBuffer, DataView, Uint8Array, XMLHttpRequest  */\n\n'use strict';\n\nvar encoding = require('./encoding');\nvar _font = require('./font');\nvar glyph = require('./glyph');\nvar parse = require('./parse');\nvar path = require('./path');\n\nvar cmap = require('./tables/cmap');\nvar cff = require('./tables/cff');\nvar glyf = require('./tables/glyf');\nvar gpos = require('./tables/gpos');\nvar head = require('./tables/head');\nvar hhea = require('./tables/hhea');\nvar hmtx = require('./tables/hmtx');\nvar kern = require('./tables/kern');\nvar loca = require('./tables/loca');\nvar maxp = require('./tables/maxp');\nvar _name = require('./tables/name');\nvar os2 = require('./tables/os2');\nvar post = require('./tables/post');\n\n// File loaders /////////////////////////////////////////////////////////\n\n// Convert a Node.js Buffer to an ArrayBuffer\nfunction toArrayBuffer(buffer) {\n    var i,\n        arrayBuffer = new ArrayBuffer(buffer.length),\n        data = new Uint8Array(arrayBuffer);\n\n    for (i = 0; i < buffer.length; i += 1) {\n        data[i] = buffer[i];\n    }\n\n    return arrayBuffer;\n}\n\nfunction loadFromFile(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function (err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, toArrayBuffer(buffer));\n    });\n}\n\nfunction loadFromUrl(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function () {\n        if (request.status !== 200) {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n        return callback(null, request.response);\n    };\n    request.send();\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n// Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n// If the file could not be parsed (most likely because it contains Postscript outlines)\n// we return an empty Font object with the `supported` flag set to `false`.\nfunction parseBuffer(buffer) {\n    var font, data, version, numTables, i, p, tag, offset, hmtxOffset, glyfOffset, locaOffset,\n        cffOffset, kernOffset, gposOffset, indexToLocFormat, numGlyphs, locaTable,\n        shortVersion;\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n\n    font = new _font.Font();\n    data = new DataView(buffer, 0);\n\n    version = parse.getFixed(data, 0);\n    if (version === 1.0) {\n        font.outlinesFormat = 'truetype';\n    } else {\n        version = parse.getTag(data, 0);\n        if (version === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType version ' + version);\n        }\n    }\n\n    numTables = parse.getUShort(data, 4);\n\n    // Offset into the table records.\n    p = 12;\n    for (i = 0; i < numTables; i += 1) {\n        tag = parse.getTag(data, p);\n        offset = parse.getULong(data, p + 8);\n        switch (tag) {\n        case 'cmap':\n            font.tables.cmap = cmap.parse(data, offset);\n            font.encoding = new encoding.CmapEncoding(font.tables.cmap);\n            if (!font.encoding) {\n                font.supported = false;\n            }\n            break;\n        case 'head':\n            font.tables.head = head.parse(data, offset);\n            font.unitsPerEm = font.tables.head.unitsPerEm;\n            indexToLocFormat = font.tables.head.indexToLocFormat;\n            break;\n        case 'hhea':\n            font.tables.hhea = hhea.parse(data, offset);\n            font.ascender = font.tables.hhea.ascender;\n            font.descender = font.tables.hhea.descender;\n            font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n            break;\n        case 'hmtx':\n            hmtxOffset = offset;\n            break;\n        case 'maxp':\n            font.tables.maxp = maxp.parse(data, offset);\n            font.numGlyphs = numGlyphs = font.tables.maxp.numGlyphs;\n            break;\n        case 'name':\n            font.tables.name = _name.parse(data, offset);\n            font.familyName = font.tables.name.fontFamily;\n            font.styleName = font.tables.name.fontSubfamily;\n            break;\n        case 'OS/2':\n            font.tables.os2 = os2.parse(data, offset);\n            break;\n        case 'post':\n            font.tables.post = post.parse(data, offset);\n            font.glyphNames = new encoding.GlyphNames(font.tables.post);\n            break;\n        case 'glyf':\n            glyfOffset = offset;\n            break;\n        case 'loca':\n            locaOffset = offset;\n            break;\n        case 'CFF ':\n            cffOffset = offset;\n            break;\n        case 'kern':\n            kernOffset = offset;\n            break;\n        case 'GPOS':\n            gposOffset = offset;\n            break;\n        }\n        p += 16;\n    }\n\n    if (glyfOffset && locaOffset) {\n        shortVersion = indexToLocFormat === 0;\n        locaTable = loca.parse(data, locaOffset, numGlyphs, shortVersion);\n        font.glyphs = glyf.parse(data, glyfOffset, locaTable, font);\n        hmtx.parse(data, hmtxOffset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n        encoding.addGlyphNames(font);\n    } else if (cffOffset) {\n        cff.parse(data, cffOffset, font);\n        encoding.addGlyphNames(font);\n    } else {\n        font.supported = false;\n    }\n\n    if (font.supported) {\n        if (kernOffset) {\n            font.kerningPairs = kern.parse(data, kernOffset);\n        } else {\n            font.kerningPairs = {};\n        }\n        if (gposOffset) {\n            gpos.parse(data, gposOffset, font);\n        }\n    }\n\n    return font;\n}\n\n// Asynchronously load the font from a URL or a filesystem. When done, call the callback\n// with two arguments `(err, font)`. The `err` will be null on success,\n// the `font` is a Font object.\n//\n// We use the node.js callback convention so that\n// opentype.js can integrate with frameworks like async.js.\nfunction load(url, callback) {\n    var isNode = typeof window === 'undefined';\n    var loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function (err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n        var font = parseBuffer(arrayBuffer);\n        if (!font.supported) {\n            return callback('Font is not supported (is this a Postscript font?)');\n        }\n        return callback(null, font);\n    });\n}\n\nexports.Font = _font.Font;\nexports.Glyph = glyph.Glyph;\nexports.Path = path.Path;\nexports.parse = parseBuffer;\nexports.load = load;\n\n},{\"./encoding\":3,\"./font\":4,\"./glyph\":5,\"./parse\":7,\"./path\":8,\"./tables/cff\":10,\"./tables/cmap\":11,\"./tables/glyf\":12,\"./tables/gpos\":13,\"./tables/head\":14,\"./tables/hhea\":15,\"./tables/hmtx\":16,\"./tables/kern\":17,\"./tables/loca\":18,\"./tables/maxp\":19,\"./tables/name\":20,\"./tables/os2\":21,\"./tables/post\":22,\"fs\":undefined}],7:[function(require,module,exports){\n// Parsing utility functions\n\n'use strict';\n\n// Retrieve an unsigned byte from the DataView.\nexports.getByte = function getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n};\n\nexports.getCard8 = exports.getByte;\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getUShort = function (dataView, offset) {\n    return dataView.getUint16(offset, false);\n};\n\nexports.getCard16 = exports.getUShort;\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getShort = function (dataView, offset) {\n    return dataView.getInt16(offset, false);\n};\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nexports.getULong = function (dataView, offset) {\n    return dataView.getUint32(offset, false);\n};\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nexports.getFixed = function (dataView, offset) {\n    var decimal, fraction;\n    decimal = dataView.getInt16(offset, false);\n    fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n};\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nexports.getTag = function (dataView, offset) {\n    var tag = '', i;\n    for (i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n    return tag;\n};\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nexports.getOffset = function (dataView, offset, offSize) {\n    var i, v;\n    v = 0;\n    for (i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n    return v;\n};\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nexports.getBytes = function (dataView, startOffset, endOffset) {\n    var bytes, i;\n    bytes = [];\n    for (i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n    return bytes;\n};\n\n// Convert the list of bytes to a string.\nexports.bytesToString = function (bytes) {\n    var s, i;\n    s = '';\n    for (i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n    return s;\n};\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function () {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function () {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function () {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function () {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function () {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function () {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseFixed = function () {\n    var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function (count) {\n    var offsets = new Array(count),\n        dataView = this.data,\n        offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = exports.getUShort(dataView, offset);\n        offset += 2;\n    }\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\nParser.prototype.parseString = function (length) {\n    var dataView = this.data,\n        offset = this.offset + this.relativeOffset,\n        string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n    return string;\n};\n\nParser.prototype.parseTag = function () {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\nParser.prototype.parseLongDateTime = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v / 65536;\n};\n\nParser.prototype.parseVersion = function() {\n    var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // This returns the correct number if minor = 0xN000 where N is 0-9\n    var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    return major + minor / 0x1000 / 10;\n};\n\nParser.prototype.skip = function (type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\nexports.Parser = Parser;\n\n},{}],8:[function(require,module,exports){\n// Geometric objects\n\n'use strict';\n\n// A bézier path containing a set of path commands similar to a SVG path.\n// Paths can be drawn on a context using `draw`.\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\nPath.prototype.moveTo = function (x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.lineTo = function (x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function (x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function (x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.close = Path.prototype.closePath = function () {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n// Add the given path or list of commands to the commands of this path.\nPath.prototype.extend = function (pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n// Draw the path to a 2D context.\nPath.prototype.draw = function (ctx) {\n    var i, cmd;\n    ctx.beginPath();\n    for (i = 0; i < this.commands.length; i += 1) {\n        cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n// Convert the Path to a string of path data instructions\n// See http://www.w3.org/TR/SVG/paths.html#PathData\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toPathData = function (decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n            s += floatToString(v);\n        }\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n    return d;\n};\n\n// Convert the path to a SVG <path> element, as a string.\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toSVG = function (decimalPlaces) {\n    var svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill & this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n    svg += '/>';\n    return svg;\n};\n\nexports.Path = Path;\n\n},{}],9:[function(require,module,exports){\n// Table metadata\n\n'use strict';\n\nvar check = require('./check');\nvar encode = require('./types').encode;\nvar sizeOf = require('./types').sizeOf;\n\nfunction Table(tableName, fields, options) {\n    var i;\n    for (i = 0; i < fields.length; i += 1) {\n        var field = fields[i];\n        this[field.name] = field.value;\n    }\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        var optionKeys = Object.keys(options);\n        for (i = 0; i < optionKeys.length; i += 1) {\n            var k = optionKeys[i];\n            var v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\nTable.prototype.sizeOf = function () {\n    var v = 0;\n    for (var i = 0; i < this.fields.length; i += 1) {\n        var field = this.fields[i];\n        var value = this[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n        if (typeof value.sizeOf === 'function') {\n            v += value.sizeOf();\n        } else {\n            var sizeOfFunction = sizeOf[field.type];\n            check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n            v += sizeOfFunction(value);\n        }\n    }\n    return v;\n};\n\nTable.prototype.encode = function () {\n    return encode.TABLE(this);\n};\n\nexports.Table = Table;\n\n},{\"./check\":1,\"./types\":24}],10:[function(require,module,exports){\n// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\nvar table = require('../table');\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    var offsets, objects, count, endOffset, offsetSize, objectOffset, pos, i, value;\n    offsets = [];\n    objects = [];\n    count = parse.getCard16(data, start);\n    if (count !== 0) {\n        offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        pos = start + 3;\n        for (i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n    for (i = 0; i < offsets.length - 1; i += 1) {\n        value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n        objects.push(value);\n    }\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s, eof, lookup, b, n1, n2;\n    s = '';\n    eof = 15;\n    lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        b = parser.parseByte();\n        n1 = b >> 4;\n        n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n        s += lookup[n2];\n    }\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1, b2, b3, b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o, key, values, i, value;\n    o = {};\n    for (i = 0; i < entries.length; i += 1) {\n        key = entries[i][0];\n        values = entries[i][1];\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n        if (o.hasOwnProperty(key)) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n        o[key] = value;\n    }\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    var parser, entries, operands, op;\n    start = start !== undefined ? start : 0;\n    parser = new parse.Parser(data, start);\n    entries = [];\n    operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        op = parser.parseByte();\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = encoding.cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var i, m, value, newDict;\n    newDict = {};\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (i = 0; i < meta.length; i += 1) {\n        m = meta[i];\n        value = dict[m.op];\n        if (value === undefined) {\n            value = m.value !== undefined ? m.value : null;\n        }\n        if (m.type === 'SID') {\n            value = getCFFString(strings, value);\n        }\n        newDict[m.name] = value;\n    }\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n];\n\nvar PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict;\n    dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict;\n    dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var parser, format, charset, i, sid, count;\n    parser = new parse.Parser(data, start);\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    charset = ['.notdef'];\n\n    format = parser.parseCard8();\n    if (format === 0) {\n        for (i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var enc, parser, format, nCodes, i, code, nRanges, first, nLeft, j;\n    enc = {};\n    parser = new parse.Parser(data, start);\n    format = parser.parseCard8();\n    if (format === 0) {\n        nCodes = parser.parseCard8();\n        for (i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        nRanges = parser.parseCard8();\n        code = 1;\n        for (i = 0; i < nRanges; i += 1) {\n            first = parser.parseCard8();\n            nLeft = parser.parseCard8();\n            for (j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n    return new encoding.CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(code, font, index) {\n    var p, glyph, stack, nStems, haveWidth, width, open, x, y, c1x, c1y, c2x, c2y, v;\n    p = new path.Path();\n    stack = [];\n    nStems = 0;\n    haveWidth = false;\n    width = font.defaultWidthX;\n    open = false;\n    x = y = 0;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + font.nominalWidthX;\n        }\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var i, b1, b2, b3, b4, codeIndex, subrCode;\n        i = 0;\n        while (i < code.length) {\n            v = code[i];\n            i += 1;\n            switch (v) {\n            case 1: // hstem\n                parseStems();\n                break;\n            case 3: // vstem\n                parseStems();\n                break;\n            case 4: // vmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n                y += stack.pop();\n                newContour(x, y);\n                break;\n            case 5: // rlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n                break;\n            case 6: // hlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n                break;\n            case 7: // vlineto\n                while (stack.length > 0) {\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                }\n                break;\n            case 8: // rrcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                break;\n            case 10: // callsubr\n                codeIndex = stack.pop() + font.subrsBias;\n                subrCode = font.subrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n                break;\n            case 11: // return\n                return;\n            case 12: // flex operators\n                v = code[i];\n                i += 1;\n                var jpx, jpy, c3x, c3y, c4x, c4y, fd;\n                switch (v) {\n                case 35: // flex\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    y = c4y + stack.shift();      // dy6\n                    fd = stack.shift();           // flex depth\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 34: // hflex\n                    // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y;                      // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = y;                      // dy5\n                    x = c4x + stack.shift();      // dx6\n                    // y = y;                     // dy6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 36: // hflex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    // y = y;                     // dy6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 37: // flex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n\n                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                        x = c4x + stack.shift();  // d6\n                    } else {\n                        y = c4y + stack.shift();  // d6\n                    }\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                default:\n                    console.log('Glyph ' + index + ': unknown operator ' + 1200 + v);\n                    stack.length = 0;\n                }\n                break;\n            case 14: // endchar\n                if (stack.length > 0 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n                p.closePath();\n                open = false;\n                break;\n            case 18: // hstemhm\n                parseStems();\n                break;\n            case 19: // hintmask\n            case 20: // cntrmask\n                parseStems();\n                i += (nStems + 7) >> 3;\n                break;\n            case 21: // rmoveto\n                if (stack.length > 2 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n                y += stack.pop();\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 22: // hmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 23: // vstemhm\n                parseStems();\n                break;\n            case 24: // rcurveline\n                while (stack.length > 2) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                x += stack.shift();\n                y += stack.shift();\n                p.lineTo(x, y);\n                break;\n            case 25: // rlinecurve\n                while (stack.length > 6) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                break;\n            case 26: // vvcurveto\n                if (stack.length % 2) {\n                    x += stack.shift();\n                }\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x;\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                break;\n            case 27: // hhcurveto\n                if (stack.length % 2) {\n                    y += stack.shift();\n                }\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y;\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                break;\n            case 28: // shortint\n                b1 = code[i];\n                b2 = code[i + 1];\n                stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                i += 2;\n                break;\n            case 29: // callgsubr\n                codeIndex = stack.pop() + font.gsubrsBias;\n                subrCode = font.gsubrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n                break;\n            case 30: // vhcurveto\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                break;\n            case 31: // hvcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                break;\n            default:\n                if (v < 32) {\n                    console.log('Glyph ' + index + ': unknown operator ' + v);\n                } else if (v < 247) {\n                    stack.push(v - 139);\n                } else if (v < 251) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push((v - 247) * 256 + b1 + 108);\n                } else if (v < 255) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push(-(v - 251) * 256 - b1 - 108);\n                } else {\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    b3 = code[i + 2];\n                    b4 = code[i + 3];\n                    i += 4;\n                    stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                }\n            }\n        }\n    }\n\n    parse(code);\n    glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.path = p;\n    glyph.advanceWidth = width;\n    return glyph;\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n    return bias;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    var header, nameIndex, topDictIndex, stringIndex, globalSubrIndex, topDict, privateDictOffset, privateDict,\n        subrOffset, subrIndex, charString, charStringsIndex, charset, i;\n    font.tables.cff = {};\n    header = parseCFFHeader(data, start);\n    nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n    topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n    font.tables.cff.topDict = topDict;\n\n    privateDictOffset = start + topDict['private'][1];\n    privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        subrOffset = privateDictOffset + privateDict.subrs;\n        subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) { // Standard encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) { // Expert encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = [];\n    for (i = 0; i < font.nGlyphs; i += 1) {\n        charString = charStringsIndex.objects[i];\n        font.glyphs.push(parseCFFCharstring(charString, font, i));\n    }\n}\n\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    var i, sid;\n    // Is the string in the CFF standard strings?\n    i = encoding.cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + encoding.cffStandardStrings.length;\n    } else {\n        sid = encoding.cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Table('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    var t = new table.Table('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (var i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    var m = {}, i, entry, value;\n    for (i = 0; i < meta.length; i += 1) {\n        entry = meta[i];\n        value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    var t = new table.Table('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    var t = new table.Table('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    var t = new table.Table('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (var i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Table('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    var t = new table.Table('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (var i = 0; i < glyphNames.length; i += 1) {\n        var glyphName = glyphNames[i];\n        var glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    var ops = [], path = glyph.path, x, y, i, cmd, dx, dy, dx1, dy1, dx2, dy2;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    x = 0;\n    y = 0;\n    for (i = 0; i < path.commands.length; i += 1) {\n        cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            var _13 = 1 / 3;\n            var _23 = 2 / 3;\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = cmd.x - x;\n            dy = cmd.y - y;\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = cmd.x;\n            y = cmd.y;\n        } else if (cmd.type === 'L') {\n            dx = cmd.x - x;\n            dy = cmd.y - y;\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = cmd.x;\n            y = cmd.y;\n        } else if (cmd.type === 'C') {\n            dx1 = cmd.x1 - x;\n            dy1 = cmd.y1 - y;\n            dx2 = cmd.x2 - cmd.x1;\n            dy2 = cmd.y2 - cmd.y1;\n            dx = cmd.x - cmd.x2;\n            dy = cmd.y - cmd.y2;\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = cmd.x;\n            y = cmd.y;\n        } else if (cmd.type === 'Z') {\n            // Contours are closed automatically.\n        }\n    }\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    var t = new table.Table('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    var t = new table.Table('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makePrivateDictIndex(privateDict) {\n    var t = new table.Table('Private DICT INDEX', [\n        {name: 'privateDicts', type: 'INDEX', value: []}\n    ]);\n    t.privateDicts = [{name: 'privateDict_0', type: 'TABLE', value: privateDict}];\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    var t = new table.Table('CFF ', [\n        {name: 'header', type: 'TABLE'},\n        {name: 'nameIndex', type: 'TABLE'},\n        {name: 'topDictIndex', type: 'TABLE'},\n        {name: 'stringIndex', type: 'TABLE'},\n        {name: 'globalSubrIndex', type: 'TABLE'},\n        {name: 'charsets', type: 'TABLE'},\n        {name: 'charStringsIndex', type: 'TABLE'},\n        {name: 'privateDictIndex', type: 'TABLE'}\n    ]);\n\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    var attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    var privateAttrs = {};\n\n    var glyphNames = [];\n    // Skip first glyph (.notdef)\n    for (var i = 1; i < glyphs.length; i += 1) {\n        glyphNames.push(glyphs[i].name);\n    }\n\n    var strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    var topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    var privateDict = makePrivateDict(privateAttrs, strings);\n    t.privateDictIndex = makePrivateDictIndex(privateDict);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    var startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n    attrs.encoding = 0; // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexports.parse = parseCFFTable;\nexports.make = makeCFFTable;\n\n},{\"../encoding\":3,\"../glyph\":5,\"../parse\":7,\"../path\":8,\"../table\":9}],11:[function(require,module,exports){\n// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var version, numTables, offset, platformId, encodingId, format, segCount,\n        endCountParser, startCountParser, idDeltaParser, idRangeOffsetParser, glyphIndexOffset,\n        endCount, startCount, i, c, idDelta, idRangeOffset, p, glyphIndex;\n    var cmap = {};\n    cmap.version = version = parse.getUShort(data, start);\n    check.argument(version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 3\" table. This is a Windows format.\n    cmap.numtables = numTables = parse.getUShort(data, start + 2);\n    offset = -1;\n    for (i = 0; i < numTables; i += 1) {\n        platformId = parse.getUShort(data, start + 4 + (i * 8));\n        encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n    if (offset === -1) {\n        // There is no cmap table in the font that we support, so return null.\n        // This font will be marked as unsupported.\n        return null;\n    }\n\n    p = new parse.Parser(data, start + offset);\n    cmap.format = format = p.parseUShort();\n    check.argument(format === 4, 'Only format 4 cmap tables are supported.');\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n    // segCount is stored x 2.\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n\n    endCountParser = new parse.Parser(data, start + offset + 14);\n    startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (i = 0; i < segCount - 1; i += 1) {\n        endCount = endCountParser.parseUShort();\n        startCount = startCountParser.parseUShort();\n        idDelta = idDeltaParser.parseShort();\n        idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\nfunction makeCmapTable(glyphs) {\n    var i, j, glyph;\n    var t = new table.Table('cmap', [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: 1},\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: 12},\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        glyph = glyphs[i];\n        for (j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n    }\n    addTerminatorSegment(t);\n\n    var segCount;\n    segCount = t.segments.length;\n    t.segCountX2 = segCount * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n     // Set up parallel segment arrays.\n    var endCounts = [],\n        startCounts = [],\n        idDeltas = [],\n        idRangeOffsets = [],\n        glyphIds = [];\n\n    for (i = 0; i < segCount; i += 1) {\n        var segment = t.segments[i];\n        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n        if (segment.glyphId !== undefined) {\n            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n        }\n    }\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n    return t;\n}\n\nexports.parse = parseCmapTable;\nexports.make = makeCmapTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],12:[function(require,module,exports){\n// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\n'use strict';\n\nvar check = require('../check');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(data, start, index, font) {\n    var p, glyph, flag, i, j, flags,\n        endPointIndices, numberOfCoordinates, repeatCount, points, point, px, py,\n        component, moreComponents;\n    p = new parse.Parser(data, start);\n    glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.numberOfContours = p.parseShort();\n    glyph.xMin = p.parseShort();\n    glyph.yMin = p.parseShort();\n    glyph.xMax = p.parseShort();\n    glyph.yMax = p.parseShort();\n    if (glyph.numberOfContours > 0) {\n        // This glyph is not a composite.\n        endPointIndices = glyph.endPointIndices = [];\n        for (i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                repeatCount = p.parseByte();\n                for (j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            points = [];\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n                px = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                py = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            component = {\n                glyphIndex: p.parseUShort(),\n                 xScale: 1,\n                 scale01: 0,\n                 scale10: 0,\n                 yScale: 1,\n                 dx: 0,\n                 dy: 0\n             };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                component.dx = p.parseShort();\n                component.dy = p.parseShort();\n            } else {\n                // The arguments are bytes\n                component.dx = p.parseChar();\n                component.dy = p.parseChar();\n            }\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n    }\n    return glyph;\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints, i, pt, newPt;\n    newPoints = [];\n    for (i = 0; i < points.length; i += 1) {\n        pt = points[i];\n        newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n    return newPoints;\n}\n\n\nfunction getContours(points) {\n    var contours, currentContour, i, pt;\n    contours = [];\n    currentContour = [];\n    for (i = 0; i < points.length; i += 1) {\n        pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p, contours, i, realFirstPoint, j, contour, pt, firstPt,\n        prevPt, midPt, curvePt, lastPt;\n    p = new path.Path();\n    if (!points) {\n        return p;\n    }\n    contours = getContours(points);\n    for (i = 0; i < contours.length; i += 1) {\n        contour = contours[i];\n        firstPt = contour[0];\n        lastPt = contour[contour.length - 1];\n        if (firstPt.onCurve) {\n            curvePt = null;\n            // The first point will be consumed by the moveTo command,\n            // so skip it in the loop.\n            realFirstPoint = true;\n        } else {\n            if (lastPt.onCurve) {\n                // If the first point is off-curve and the last point is on-curve,\n                // start at the last point.\n                firstPt = lastPt;\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n            }\n            curvePt = firstPt;\n            // The first point is synthesized, so don't skip the real first point.\n            realFirstPoint = false;\n        }\n        p.moveTo(firstPt.x, firstPt.y);\n\n        for (j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n            pt = contour[j];\n            prevPt = j === 0 ? firstPt : contour[j - 1];\n            if (prevPt.onCurve && pt.onCurve) {\n                // This is a straight line.\n                p.lineTo(pt.x, pt.y);\n            } else if (prevPt.onCurve && !pt.onCurve) {\n                curvePt = pt;\n            } else if (!prevPt.onCurve && !pt.onCurve) {\n                midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n                p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n                curvePt = pt;\n            } else if (!prevPt.onCurve && pt.onCurve) {\n                // Previous point off-curve, this point on-curve.\n                p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                curvePt = null;\n            } else {\n                throw new Error('Invalid state.');\n            }\n        }\n        if (firstPt !== lastPt) {\n            // Connect the last and first points\n            if (curvePt) {\n                p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            } else {\n                p.lineTo(firstPt.x, firstPt.y);\n            }\n        }\n    }\n    p.closePath();\n    return p;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    var glyphs, i, j, offset, nextOffset, glyph,\n        component, componentGlyph, transformedPoints;\n    glyphs = [];\n    // The last element of the loca table is invalid.\n    for (i = 0; i < loca.length - 1; i += 1) {\n        offset = loca[i];\n        nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(parseGlyph(data, start + offset, i, font));\n        } else {\n            glyphs.push(new _glyph.Glyph({font: font, index: i}));\n        }\n    }\n    // Go over the glyphs again, resolving the composite glyphs.\n    for (i = 0; i < glyphs.length; i += 1) {\n        glyph = glyphs[i];\n        if (glyph.isComposite) {\n            for (j = 0; j < glyph.components.length; j += 1) {\n                component = glyph.components[j];\n                componentGlyph = glyphs[component.glyphIndex];\n                if (componentGlyph.points) {\n                    transformedPoints = transformPoints(componentGlyph.points, component);\n                    glyph.points = glyph.points.concat(transformedPoints);\n                }\n            }\n        }\n        glyph.path = getPath(glyph.points);\n    }\n    return glyphs;\n}\n\nexports.parse = parseGlyfTable;\n\n},{\"../check\":1,\"../glyph\":5,\"../parse\":7,\"../path\":8}],13:[function(require,module,exports){\n// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n// These lists are unused by now, this function is just the basis for a real parsing.\nfunction parseTaggedListTable(data, start) {\n    var p = new parse.Parser(data, start),\n        n = p.parseUShort(),\n        list = [];\n    for (var i = 0; i < n; i++) {\n        list[p.parseTag()] = { offset: p.parseUShort() };\n    }\n    return list;\n}\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// Format 1 is a simple list of glyph ids,\n// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\nfunction parseCoverageTable(data, start) {\n    var p = new parse.Parser(data, start),\n        format = p.parseUShort(),\n        count =  p.parseUShort();\n    if (format === 1) {\n        return p.parseUShortList(count);\n    }\n    else if (format === 2) {\n        var i, begin, end, index, coverage = [];\n        for (; count--;) {\n            begin = p.parseUShort();\n            end = p.parseUShort();\n            index = p.parseUShort();\n            for (i = begin; i <= end; i++) {\n                coverage[index++] = i;\n            }\n        }\n        return coverage;\n    }\n}\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// Returns a function that gets a class value from a glyph ID.\nfunction parseClassDefTable(data, start) {\n    var p = new parse.Parser(data, start),\n        format = p.parseUShort();\n    if (format === 1) {\n        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n        var startGlyph = p.parseUShort(),\n            glyphCount = p.parseUShort(),\n            classes = p.parseUShortList(glyphCount);\n        return function(glyphID) {\n            return classes[glyphID - startGlyph] || 0;\n        };\n    }\n    else if (format === 2) {\n        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n        var rangeCount = p.parseUShort(),\n            startGlyphs = [],\n            endGlyphs = [],\n            classValues = [];\n        for (var i = 0; i < rangeCount; i++) {\n            startGlyphs[i] = p.parseUShort();\n            endGlyphs[i] = p.parseUShort();\n            classValues[i] = p.parseUShort();\n        }\n        return function(glyphID) {\n            var l, c, r;\n            l = 0;\n            r = startGlyphs.length - 1;\n            while (l < r) {\n                c = (l + r + 1) >> 1;\n                if (glyphID < startGlyphs[c]) {\n                    r = c - 1;\n                } else {\n                    l = c;\n                }\n            }\n            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                return classValues[l] || 0;\n            }\n            return 0;\n        };\n    }\n}\n\n// Parse a pair adjustment positioning subtable, format 1 or format 2\n// The subtable is returned in the form of a lookup function.\nfunction parsePairPosSubTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format, coverageOffset, coverage, valueFormat1, valueFormat2,\n        sharedPairSets, firstGlyph, secondGlyph, value1, value2;\n    // This part is common to format 1 and format 2 subtables\n    format = p.parseUShort();\n    coverageOffset = p.parseUShort();\n    coverage = parseCoverageTable(data, start + coverageOffset);\n    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n    // Only valueFormat1=4 and valueFormat2=0 is supported.\n    valueFormat1 = p.parseUShort();\n    valueFormat2 = p.parseUShort();\n    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n    sharedPairSets = {};\n    if (format === 1) {\n        // Pair Positioning Adjustment: Format 1\n        var pairSetCount, pairSetOffsets, pairSetOffset, sharedPairSet, pairValueCount, pairSet;\n        pairSetCount = p.parseUShort();\n        pairSet = [];\n        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n        pairSetOffsets = p.parseOffset16List(pairSetCount);\n        for (firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n            pairSetOffset = pairSetOffsets[firstGlyph];\n            sharedPairSet = sharedPairSets[pairSetOffset];\n            if (!sharedPairSet) {\n                // Parse a pairset table in a pair adjustment subtable format 1\n                sharedPairSet = {};\n                p.relativeOffset = pairSetOffset;\n                pairValueCount = p.parseUShort();\n                for (; pairValueCount--;) {\n                    secondGlyph = p.parseUShort();\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) value2 = p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    sharedPairSet[secondGlyph] = value1;\n                }\n            }\n            pairSet[coverage[firstGlyph]] = sharedPairSet;\n        }\n        return function(leftGlyph, rightGlyph) {\n            var pairs = pairSet[leftGlyph];\n            if (pairs) return pairs[rightGlyph];\n        };\n    }\n    else if (format === 2) {\n        // Pair Positioning Adjustment: Format 2\n        var classDef1Offset, classDef2Offset, class1Count, class2Count, i, j,\n            getClass1, getClass2, kerningMatrix, kerningRow, covered;\n        classDef1Offset = p.parseUShort();\n        classDef2Offset = p.parseUShort();\n        class1Count = p.parseUShort();\n        class2Count = p.parseUShort();\n        getClass1 = parseClassDefTable(data, start+classDef1Offset);\n        getClass2 = parseClassDefTable(data, start+classDef2Offset);\n\n        // Parse kerning values by class pair.\n        kerningMatrix = [];\n        for (i = 0; i < class1Count; i++) {\n            kerningRow = kerningMatrix[i] = [];\n            for (j = 0; j < class2Count; j++) {\n                if (valueFormat1) value1 = p.parseShort();\n                if (valueFormat2) value2 = p.parseShort();\n                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                // so value1 is the XAdvance and value2 is empty.\n                kerningRow[j] = value1;\n            }\n        }\n\n        // Convert coverage list to a hash\n        covered = {};\n        for(i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\n        // Get the kerning value for a specific glyph pair.\n        return function(leftGlyph, rightGlyph) {\n            if (!covered[leftGlyph]) return;\n            var class1 = getClass1(leftGlyph),\n                class2 = getClass2(rightGlyph),\n                kerningRow = kerningMatrix[class1];\n\n            if (kerningRow) {\n                return kerningRow[class2];\n            }\n        };\n    }\n}\n\n// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\nfunction parseLookupTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var table, lookupType, lookupFlag, useMarkFilteringSet, subTableCount, subTableOffsets, subtables, i;\n    lookupType = p.parseUShort();\n    lookupFlag = p.parseUShort();\n    useMarkFilteringSet = lookupFlag & 0x10;\n    subTableCount = p.parseUShort();\n    subTableOffsets = p.parseOffset16List(subTableCount);\n    table = {\n        lookupType: lookupType,\n        lookupFlag: lookupFlag,\n        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n    };\n    // LookupType 2, Pair adjustment\n    if (lookupType === 2) {\n        subtables = [];\n        for (i = 0; i < subTableCount; i++) {\n            subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n        }\n        // Return a function which finds the kerning values in the subtables.\n        table.getKerningValue = function(leftGlyph, rightGlyph) {\n            for (var i = subtables.length; i--;) {\n                var value = subtables[i](leftGlyph, rightGlyph);\n                if (value !== undefined) return value;\n            }\n            return 0;\n        };\n    }\n    return table;\n}\n\n// Parse the `GPOS` table which contains, among other things, kerning pairs.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\nfunction parseGposTable(data, start, font) {\n    var p, tableVersion, lookupListOffset, scriptList, i, featureList, lookupCount,\n        lookupTableOffsets, lookupListAbsoluteOffset, table;\n\n    p = new parse.Parser(data, start);\n    tableVersion = p.parseFixed();\n    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n    // ScriptList and FeatureList - ignored for now\n    scriptList = parseTaggedListTable(data, start+p.parseUShort());\n    // 'kern' is the feature we are looking for.\n    featureList = parseTaggedListTable(data, start+p.parseUShort());\n\n    // LookupList\n    lookupListOffset = p.parseUShort();\n    p.relativeOffset = lookupListOffset;\n    lookupCount = p.parseUShort();\n    lookupTableOffsets = p.parseOffset16List(lookupCount);\n    lookupListAbsoluteOffset = start + lookupListOffset;\n    for (i = 0; i < lookupCount; i++) {\n        table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n    }\n}\n\nexports.parse = parseGposTable;\n\n},{\"../check\":1,\"../parse\":7}],14:[function(require,module,exports){\n// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {},\n        p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();     // 50\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: 0},\n        {name: 'modified', type: 'LONGDATETIME', value: 0},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHeadTable;\nexports.make = makeHeadTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],15:[function(require,module,exports){\n// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {},\n        p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHheaTable;\nexports.make = makeHheaTable;\n\n},{\"../parse\":7,\"../table\":9}],16:[function(require,module,exports){\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    var p, i, glyph, advanceWidth, leftSideBearing;\n    p = new parse.Parser(data, start);\n    for (i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n        glyph = glyphs[i];\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    var t = new table.Table('hmtx', []);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var advanceWidth = glyph.advanceWidth || 0;\n        var leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n    return t;\n}\n\nexports.parse = parseHmtxTable;\nexports.make = makeHmtxTable;\n\n\n\n\n},{\"../parse\":7,\"../table\":9}],17:[function(require,module,exports){\n// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var pairs, p, tableVersion, subTableVersion, nPairs,\n        i, leftIndex, rightIndex, value;\n    pairs = {};\n    p = new parse.Parser(data, start);\n    tableVersion = p.parseUShort();\n    check.argument(tableVersion === 0, 'Unsupported kern table version.');\n    // Skip nTables.\n    p.skip('uShort', 1);\n    subTableVersion = p.parseUShort();\n    check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subTableLength, subTableCoverage\n    p.skip('uShort', 2);\n    nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (i = 0; i < nPairs; i += 1) {\n        leftIndex = p.parseUShort();\n        rightIndex = p.parseUShort();\n        value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n    return pairs;\n}\n\nexports.parse = parseKernTable;\n\n},{\"../check\":1,\"../parse\":7}],18:[function(require,module,exports){\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\n'use strict';\n\nvar parse = require('../parse');\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p, parseFn, glyphOffsets, glyphOffset, i;\n    p = new parse.Parser(data, start);\n    parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    glyphOffsets = [];\n    for (i = 0; i < numGlyphs + 1; i += 1) {\n        glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n        glyphOffsets.push(glyphOffset);\n    }\n    return glyphOffsets;\n}\n\nexports.parse = parseLocaTable;\n\n},{\"../parse\":7}],19:[function(require,module,exports){\n// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {},\n        p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexports.parse = parseMaxpTable;\nexports.make = makeMaxpTable;\n\n},{\"../parse\":7,\"../table\":9}],20:[function(require,module,exports){\n// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\n'use strict';\n\nvar encode = require('../types').encode;\nvar parse = require('../parse');\nvar table = require('../table');\n\n// NameIDs for the name table.\nvar nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'licence',                // 13\n    'licenceURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\n// Parse the naming `name` table\n// Only Windows Unicode English names are supported.\n// Format 1 additional fields are not supported\nfunction parseNameTable(data, start) {\n    var name = {},\n        p = new parse.Parser(data, start);\n    name.format = p.parseUShort();\n    var count = p.parseUShort(),\n        stringOffset = p.offset + p.parseUShort();\n    var platformID, encodingID, languageID, nameID, property, byteLength,\n        offset, str, i, j, codePoints;\n    var unknownCount = 0;\n    for(i = 0; i < count; i++) {\n        platformID = p.parseUShort();\n        encodingID = p.parseUShort();\n        languageID = p.parseUShort();\n        nameID = p.parseUShort();\n        property = nameTableNames[nameID];\n        byteLength = p.parseUShort();\n        offset = p.parseUShort();\n        // platformID - encodingID - languageID standard combinations :\n        // 1 - 0 - 0 : Macintosh, Roman, English\n        // 3 - 1 - 0x409 : Windows, Unicode BMP (UCS-2), en-US\n        if (platformID === 3 && encodingID === 1 && languageID === 0x409) {\n            codePoints = [];\n            var length = byteLength/2;\n            for(j = 0; j < length; j++, offset += 2) {\n                codePoints[j] = parse.getShort(data, stringOffset+offset);\n            }\n            str = String.fromCharCode.apply(null, codePoints);\n            if (property) {\n                name[property] = str;\n            }\n            else {\n                unknownCount++;\n                name['unknown'+unknownCount] = str;\n            }\n        }\n\n    }\n    if (name.format === 1) {\n        name.langTagCount = p.parseUShort();\n    }\n    return name;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Table('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\nfunction addMacintoshNameRecord(t, recordID, s, offset) {\n    // Macintosh, Roman, English\n    var stringBytes = encode.STRING(s);\n    t.records.push(makeNameRecord(1, 0, 0, recordID, stringBytes.length, offset));\n    t.strings.push(stringBytes);\n    offset += stringBytes.length;\n    return offset;\n}\n\nfunction addWindowsNameRecord(t, recordID, s, offset) {\n    // Windows, Unicode BMP (UCS-2), US English\n    var utf16Bytes = encode.UTF16(s);\n    t.records.push(makeNameRecord(3, 1, 0x0409, recordID, utf16Bytes.length, offset));\n    t.strings.push(utf16Bytes);\n    offset += utf16Bytes.length;\n    return offset;\n}\n\nfunction makeNameTable(options) {\n    var i, s;\n    var t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: 0},\n        {name: 'stringOffset', type: 'USHORT', value: 0}\n    ]);\n    t.records = [];\n    t.strings = [];\n    var offset = 0;\n    // Add Macintosh records first\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addMacintoshNameRecord(t, i, s, offset);\n        }\n    }\n    // Then add Windows records\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addWindowsNameRecord(t, i, s, offset);\n        }\n    }\n\n    t.count = t.records.length;\n    t.stringOffset = 6 + t.count * 12;\n    for (i = 0; i < t.records.length; i += 1) {\n        t.fields.push({name: 'record_' + i, type: 'TABLE', value: t.records[i]});\n    }\n    for (i = 0; i < t.strings.length; i += 1) {\n        t.fields.push({name: 'string_' + i, type: 'LITERAL', value: t.strings[i]});\n    }\n    return t;\n}\n\nexports.parse = parseNameTable;\nexports.make = makeNameTable;\n\n},{\"../parse\":7,\"../table\":9,\"../types\":24}],21:[function(require,module,exports){\n// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {},\n        p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 0},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 0},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 0},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 0},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseOS2Table;\nexports.make = makeOS2Table;\n\n},{\"../parse\":7,\"../table\":9}],22:[function(require,module,exports){\n// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {},\n        p = new parse.Parser(data, start),\n        i, nameLength;\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n    case 1:\n        post.names = encoding.standardNames.slice();\n        break;\n    case 2:\n        post.numberOfGlyphs = p.parseUShort();\n        post.glyphNameIndex = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.glyphNameIndex[i] = p.parseUShort();\n        }\n        post.names = [];\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n                nameLength = p.parseChar();\n                post.names.push(p.parseString(nameLength));\n            }\n        }\n        break;\n    case 2.5:\n        post.numberOfGlyphs = p.parseUShort();\n        post.offset = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.offset[i] = p.parseChar();\n        }\n        break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexports.parse = parsePostTable;\nexports.make = makePostTable;\n\n},{\"../encoding\":3,\"../parse\":7,\"../table\":9}],23:[function(require,module,exports){\n// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\n'use strict';\n\nvar check = require('../check');\nvar table = require('../table');\n\nvar cmap = require('./cmap');\nvar cff = require('./cff');\nvar head = require('./head');\nvar hhea = require('./hhea');\nvar hmtx = require('./hmtx');\nvar maxp = require('./maxp');\nvar _name = require('./name');\nvar os2 = require('./os2');\nvar post = require('./post');\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n    var sum = 0;\n    for (var i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Table('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    var sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    var recordFields = [];\n    var tableFields = [];\n\n    var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (var i = 0; i < tables.length; i += 1) {\n        var t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        var tableLength = t.sizeOf();\n        var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function (r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (var i = 0; i < chars.length; i += 1) {\n        var glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            var glyph = font.glyphs[glyphIndex];\n            return glyph.getMetrics();\n        }\n    }\n    return notFoundMetrics;\n}\n\n// Return the smallest and largest unicode values of the characters in this font.\n// For most fonts the smallest value would be 20 (space).\nfunction charCodeBounds(glyphs) {\n    var minCode, maxCode;\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        if (glyph.unicode >= 20) {\n            if (minCode === undefined) {\n                minCode = glyph.unicode;\n            } else if (glyph.unicode < minCode) {\n                minCode = glyph.unicode;\n            }\n            if (maxCode === undefined) {\n                maxCode = glyph.unicode;\n            } else if (glyph.unicode > maxCode) {\n                maxCode = glyph.unicode;\n            }\n        }\n    }\n    return [minCode, maxCode];\n}\n\nfunction average(vs) {\n    var sum = 0;\n    for (var i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    var xMins = [];\n    var yMins = [];\n    var xMaxs = [];\n    var yMaxs = [];\n    var advanceWidths = [];\n    var leftSideBearings = [];\n    var rightSideBearings = [];\n    for (var i = 0; i < font.glyphs.length; i += 1) {\n        var glyph = font.glyphs[i];\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        var metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n    var globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n    globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\n    var headTable = head.make({\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax\n    });\n\n    var hheaTable = hhea.make({\n        // Adding a little here makes OS X Quick Look happy\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    var maxpTable = maxp.make(font.glyphs.length);\n\n    var codeBounds = charCodeBounds(font.glyphs);\n    var os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: 500, // Medium FIXME Make this configurable\n        usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n        usFirstCharIndex: codeBounds[0],\n        usLastCharIndex: codeBounds[1],\n        ulUnicodeRange1: 0x00000001, // Basic Latin\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.ascender,\n        usWinDescent: -globals.descender,\n        ulCodePageRange1: 0x00000001, // Basic Latin\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: 0}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n\n    var hmtxTable = hmtx.make(font.glyphs);\n    var cmapTable = cmap.make(font.glyphs);\n\n    var fullName = font.familyName + ' ' + font.styleName;\n    var postScriptName = font.familyName.replace(/\\s/g, '') + '-' + font.styleName;\n    var nameTable = _name.make({\n        copyright: font.copyright,\n        fontFamily: font.familyName,\n        fontSubfamily: font.styleName,\n        uniqueID: font.manufacturer + ':' + fullName,\n        fullName: fullName,\n        version: font.version,\n        postScriptName: postScriptName,\n        trademark: font.trademark,\n        manufacturer: font.manufacturer,\n        designer: font.designer,\n        description: font.description,\n        manufacturerURL: font.manufacturerURL,\n        designerURL: font.designerURL,\n        license: font.license,\n        licenseURL: font.licenseURL,\n        preferredFamily: font.familyName,\n        preferredSubfamily: font.styleName\n    });\n    var postTable = post.make();\n    var cffTable = cff.make(font.glyphs, {\n        version: font.version,\n        fullName: fullName,\n        familyName: font.familyName,\n        weightName: font.styleName,\n        postScriptName: postScriptName\n    });\n    // Order the tables according to the the OpenType specification 1.4.\n    var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n\n    var sfntTable = makeSfntTable(tables);\n\n    var bytes = sfntTable.encode();\n    var checkSum = computeCheckSum(bytes);\n    headTable.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n\n    // Build the font again, now with the proper checkSum.\n    sfntTable = makeSfntTable(tables);\n\n    return sfntTable;\n}\n\nexports.computeCheckSum = computeCheckSum;\nexports.make = makeSfntTable;\nexports.fontToTable = fontToSfntTable;\n\n},{\"../check\":1,\"../table\":9,\"./cff\":10,\"./cmap\":11,\"./head\":14,\"./hhea\":15,\"./hmtx\":16,\"./maxp\":19,\"./name\":20,\"./os2\":21,\"./post\":22}],24:[function(require,module,exports){\n// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = require('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\nvar decode = {};\nvar encode = {};\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function () {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n// Convert an 8-bit unsigned integer to a list of 1 byte.\nencode.BYTE = function (v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert a 8-bit signed integer to a list of 1 byte.\nencode.CHAR = function (v) {\n    return [v.charCodeAt(0)];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert an ASCII string to a list of bytes.\nencode.CHARARRAY = function (v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(v.charCodeAt(i));\n    }\n    return b;\n};\n\nsizeOf.CHARARRAY = function (v) {\n    return v.length;\n};\n\n// Convert a 16-bit unsigned integer to a list of 2 bytes.\nencode.USHORT = function (v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.USHORT = constant(2);\n\n// Convert a 16-bit signed integer to a list of 2 bytes.\nencode.SHORT = function (v) {\n    // Two's complement\n    if (v >= LIMIT16){\n        v = - ( 2 * LIMIT16 - v);\n    }\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.SHORT = constant(2);\n\n// Convert a 24-bit unsigned integer to a list of 3 bytes.\nencode.UINT24 = function (v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.UINT24 = constant(3);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.ULONG = function (v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.ULONG = constant(4);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.LONG = function (v) {\n     // Two's complement\n    if (v >= LIMIT32){\n        v = - ( 2 * LIMIT32 - v);\n    }\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n\n// FIXME Implement LONGDATETIME\nencode.LONGDATETIME = function () {\n    return [0, 0, 0, 0, 0, 0, 0, 0];\n};\n\nsizeOf.LONGDATETIME = constant(8);\n\n// Convert a 4-char tag to a list of 4 bytes.\nencode.TAG = function (v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\nencode.NUMBER = function (v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131 ) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\nsizeOf.NUMBER = function (v) {\n    return encode.NUMBER(v).length;\n};\n\n// Convert a signed number between -32768 and +32767 to a three-byte value.\n// This ensures we always use three bytes, but is not the most compact format.\nencode.NUMBER16 = function (v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER16 = constant(2);\n\n// Convert a signed number between -(2^31) and +(2^31-1) to a four-byte value.\n// This is useful if you want to be sure you always use four bytes,\n// at the expense of wasting a few bytes for smaller numbers.\nencode.NUMBER32 = function (v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER32 = constant(4);\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n// Convert a ASCII string to a list of UTF16 bytes.\nencode.UTF16 = function (v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(0);\n        b.push(v.charCodeAt(i));\n    }\n    return b;\n};\n\nsizeOf.UTF16 = function (v) {\n    return v.length * 2;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\nencode.INDEX = function (l) {\n    var offSize, offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n        dataSize, i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    offset = 1; // First offset is always 1.\n    offsets = [offset];\n    data = [];\n    dataSize = 0;\n    for (i = 0; i < l.length; i += 1) {\n        v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        dataSize += v.length;\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    encodedOffsets = [];\n    offSize = (1 + Math.floor(Math.log(dataSize)/Math.log(2)) / 8) | 0;\n    offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\nsizeOf.INDEX = function (v) {\n    return encode.INDEX(v).length;\n};\n\n// Convert an object to a CFF DICT structure.\n// The keys should be numeric.\n// The values should be objects containing name / type / value.\nencode.DICT = function (m) {\n    var d = [],\n        keys = Object.keys(m),\n        length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\nsizeOf.DICT = function (m) {\n    return encode.DICT(m).length;\n};\n\nencode.OPERATOR = function (v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\nencode.OPERAND = function (v, type) {\n    var d, i;\n    d = [];\n    if (Array.isArray(type)) {\n        for (i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else {\n            // FIXME Add support for booleans\n            d = d.concat(encode.NUMBER(v));\n        }\n    }\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n// Convert a list of CharString operations to bytes.\nencode.CHARSTRING = function (ops) {\n    if ( wmm && wmm.has( ops ) ) {\n        return wmm.get( ops );\n    }\n\n    var d = [],\n        length = ops.length,\n        op,\n        i;\n\n    for (i = 0; i < length; i += 1) {\n        op = ops[i];\n        d = d.concat( encode[op.type](op.value) );\n    }\n\n    if ( wmm ) {\n        wmm.set( ops, d );\n    }\n\n    return d;\n};\n\nsizeOf.CHARSTRING = function (ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n// Convert an object containing name / type / value to bytes.\nencode.OBJECT = function (v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n// Convert a table object to bytes.\n// A table contains a list of fields containing the metadata (name, type and default value).\n// The table itself has the field values set as attributes.\nencode.TABLE = function (table) {\n    var d = [],\n        length = table.fields.length,\n        i;\n\n    for (i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n        var bytes = encodingFunction(value);\n        d = d.concat(bytes);\n    }\n    return d;\n};\n\n// Merge in a list of bytes.\nencode.LITERAL = function (v) {\n    return v;\n};\n\nsizeOf.LITERAL = function (v) {\n    return v.length;\n};\n\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n\n},{\"./check\":1}]},{},[6])(6)\n});\n},{}],2:[function(require,module,exports){\n/*!\n * Paper.js v0.9.22 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Wed Mar 18 10:25:56 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\n\t\t  var noCanvas =\n\t\t\t  ( typeof process === 'object' && process.browser !== true ) ||\n\t\t\t  ( typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope );\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && (!exclude || !exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tctor.prototype = create(this.prototype);\n\t\t\tctor.base = base;\n\t\t\tdefine(ctor.prototype, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\treturn arguments.length ? this.inject.apply(ctor, arguments) : ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function() {\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\t\tif (arguments[i] !== undefined)\n\t\t\t\t\t\treturn arguments[i];\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar orig = props._filtering || props;\n\t\t\tfor (var key in orig) {\n\t\t\t\tif (orig.hasOwnProperty(key) && !(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tfunction checkKeys(o1, o2) {\n\t\t\t\tfor (var i in o1)\n\t\t\t\t\tif (o1.hasOwnProperty(i) && !o2.hasOwnProperty(i))\n\t\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\tif (obj1.length !== obj2.length)\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i = 0, l = obj1.length; i < l; i++) {\n\t\t\t\t\tif (!Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 && typeof obj1 === 'object'\n\t\t\t\t\t&& obj2 && typeof obj2 === 'object') {\n\t\t\t\tif (!checkKeys(obj1, obj2) || !checkKeys(obj2, obj1))\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i in obj1) {\n\t\t\t\t\tif (obj1.hasOwnProperty(i)\n\t\t\t\t\t\t\t&& !Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var i in obj)\n\t\t\t\t\tif (obj.hasOwnProperty(i))\n\t\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\t\tdictionary);\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (!isDictionary) {\n\t\t\t\t\tif (_data.dictionary && json.length == 1 && /^#/.test(type))\n\t\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\t\ttype = Base.exports[type];\n\t\t\t\t}\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data));\n\t\t\t\tif (isDictionary) {\n\t\t\t\t\t_data.dictionary = res[0];\n\t\t\t\t} else if (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar entry = this._eventTypes[type];\n\t\t\tif (entry) {\n\t\t\t\tvar handlers = this._callbacks = this._callbacks || {};\n\t\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\t\thandlers.push(func);\n\t\t\t\t\tif (entry.install && handlers.length == 1)\n\t\t\t\t\t\tentry.install.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar entry = this._eventTypes[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (entry && handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false\n\t\t\t\t\t&& event && event.stop) {\n\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar entry = this._eventTypes[type],\n\t\t\t\t\tfunc = entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif ( noCanvas ) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar browser = proto.browser = {};\n\t\t\tnavigator.userAgent.toLowerCase().replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: '0.9.22',\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tTOLERANCE = 1e-6,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\treturn {\n\t\tTOLERANCE: TOLERANCE,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn abs(val) <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= 2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar pow = Math.pow,\n\t\t\t\t\tgmC = pow(abs(a*b*c), 1/3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\t/*\n\t\t\t\t\t * we multiply with a factor to normalize the\n\t\t\t\t\t * coefficients. The factor is just the nearest exponent\n\t\t\t\t\t * of 10, big enough to raise all the coefficients to\n\t\t\t\t\t * nearly [-1, +1] range.\n\t\t\t\t\t */\n\t\t\t\t\tvar mult = pow(10, abs(\n\t\t\t\t\t\tMath.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < MACHINE_EPSILON) {\n\t\t\t\tif (abs(B) < MACHINE_EPSILON)\n\t\t\t\t\treturn abs(c) < MACHINE_EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else {\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tD = D < 0 ? 0 : D;\n\t\t\t\t\tvar R = sqrt(D);\n\t\t\t\t\tif (b >= MACHINE_EPSILON && b <= MACHINE_EPSILON) {\n\t\t\t\t\t\tx1 = abs(a) >= abs(c) ? R / a : -c / R;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar q = -(b + (b < 0 ? -1 : 1) * R);\n\t\t\t\t\t\tx1 = q / a;\n\t\t\t\t\t\tx2 = c / q;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 >= min && x1 <= max))\n\t\t\t\troots[count++] = x1;\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 >= min && x2 <= max))\n\t\t\t\troots[count++] = x2;\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar x, b1, c2, count = 0;\n\t\t\tif (a === 0) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (d === 0) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x >= min && x <= max))\n\t\t\t\troots[count++] = x;\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\ts = Math.sin(angle),\n\t\t\tc = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * c - point.y * s,\n\t\t\tpoint.x * s + point.y * c\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function(point, tolerance) {\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisColinear: function(point) {\n\t\treturn Math.abs(this.cross(point)) < 1e-12;\n\t},\n\n\tisOrthogonal: function(point) {\n\t\treturn Math.abs(this.dot(point)) < 1e-12;\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments);\n\t\tif (point.isZero()) {\n\t\t\treturn new Point(0, 0);\n\t\t} else {\n\t\t\tvar scale = this.dot(point) / point.dot(point);\n\t\t\treturn new Point(\n\t\t\t\tpoint.x * scale,\n\t\t\t\tpoint.y * scale\n\t\t\t);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n}, new function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = coords.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tstatics: {\n\t\tintersect: function(apx, apy, avx, avy, bpx, bpy, bvx, bvy, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tavx -= apx;\n\t\t\t\tavy -= apy;\n\t\t\t\tbvx -= bpx;\n\t\t\t\tbvy -= bpy;\n\t\t\t}\n\t\t\tvar cross = avx * bvy - avy * bvx;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = apx - bpx,\n\t\t\t\t\tdy = apy - bpy,\n\t\t\t\t\tta = (bvx * dy - bvy * dx) / cross,\n\t\t\t\t\ttb = (avx * dy - avy * dx) / cross;\n\t\t\t\tif (isInfinite || 0 <= ta && ta <= 1 && 0 <= tb && tb <= 1)\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\t\tapx + ta * avx,\n\t\t\t\t\t\t\t\tapy + ta * avy);\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0) {\n\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\tif (ccw > 0) {\n\t\t\t\t\tv2x -= vx;\n\t\t\t\t\tv2y -= vy;\n\t\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\t\tif (ccw < 0)\n\t\t\t\t\t\tccw = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn Numerical.isZero(vx)\n\t\t\t\t\t? vy >= 0 ? px - x : x - px\n\t\t\t\t\t: Numerical.isZero(vy)\n\t\t\t\t\t\t? vx >= 0 ? y - py : py - y\n\t\t\t\t\t\t: (vx * (y - py) - vy * (x - px)) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = Symbol._id = (Symbol._id || 0) + 1;\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = Item._id = (Item._id || 0) + 1;\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, parent: true }, true);\n\t\treturn hasProps;\n\t},\n\n\t_events: new function() {\n\n\t\tvar mouseFlags = {\n\t\t\tmousedown: {\n\t\t\t\tmousedown: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmouseup: {\n\t\t\t\tmouseup: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmousemove: {\n\t\t\t\tmousedrag: 1,\n\t\t\t\tmousemove: 1,\n\t\t\t\tmouseenter: 1,\n\t\t\t\tmouseleave: 1\n\t\t\t}\n\t\t};\n\n\t\tvar mouseEvent = {\n\t\t\tinstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tuninstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = mouseEvent;\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis._animateItem(true);\n\t\t\t\t\t},\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis._animateItem(false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {}\n\t\t\t}\n\t\t);\n\t},\n\n\t_animateItem: function(animate) {\n\t\tthis.getView()._animateItem(this, animate);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments);\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n\n\tgetRegistration: '#getPivot',\n\tsetRegistration: '#setPivot'\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tvar cacheParent = this._parent || this._parentSymbol;\n\t\tif (cacheParent) {\n\t\t\tvar id = cacheItem._id,\n\t\t\t\tref = cacheParent._boundsCache = cacheParent._boundsCache || {\n\t\t\t\t\tids: {},\n\t\t\t\t\tlist: []\n\t\t\t\t};\n\t\t\tif (!ref.ids[id]) {\n\t\t\t\tref.list.push(cacheItem);\n\t\t\t\tref.ids[id] = cacheItem;\n\t\t\t}\n\t\t}\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++) {\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function(matrix) {\n\t\tthis._matrix.initialize(matrix);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert) {\n\t\tcopy.setStyle(this._style);\n\t\tif (this._children) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tcopy.addChild(this._children[i].clone(false), true);\n\t\t}\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide', '_applyMatrix'];\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tcopy.setSelected(this._selected);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(),\n\t\t\t\t_matrix || item._matrix).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 0.000001)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tif (typeof name === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param) {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect =\tbounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: rect,\n\t\t\t\t\toverlapping: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param.items,\n\t\t\t\tinside = param.inside,\n\t\t\t\toverlapping = param.overlapping;\n\t\t\tmatrix = inside && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (inside) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!inside.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(inside && inside.contains(bounds)) && !(overlapping\n\t\t\t\t\t\t\t&& overlapping.intersects(child, childMatrix)))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2;\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t});\n\t\tpath.setStyle(this._style);\n\t\tpath.transform(this._matrix);\n\t\tif (insert || insert === undefined)\n\t\t\tpath.insertAbove(this);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rect' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\t\timage = document.getElementById(src) || new Image();\n\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, {\n\t\t\t\tload: loaded\n\t\t\t});\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL() : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif (arg0.point) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.isLinear() ? this._point\n\t\t\t\t: [this._point, this._handleIn, this._handleOut],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._handleIn.isZero() && this._handleOut.isZero();\n\t},\n\n\tsetLinear: function(linear) {\n\t\tif (linear) {\n\t\t\tthis._handleIn.set(0, 0);\n\t\t\tthis._handleOut.set(0, 0);\n\t\t} else {\n\t\t}\n\t},\n\n\tisColinear: function(segment) {\n\t\tvar next1 = this.getNext(),\n\t\t\tnext2 = segment.getNext();\n\t\treturn this._handleOut.isZero() && next1._handleIn.isZero()\n\t\t\t\t&& segment._handleOut.isZero() && next2._handleIn.isZero()\n\t\t\t\t&& next1._point.subtract(this._point).isColinear(\n\t\t\t\t\tnext2._point.subtract(segment._point));\n\t},\n\n\tisOrthogonal: function() {\n\t\tvar prev = this.getPrevious(),\n\t\t\tnext = this.getNext();\n\t\treturn prev._handleOut.isZero() && this._handleIn.isZero()\n\t\t\t&& this._handleOut.isZero() && next._handleIn.isZero()\n\t\t\t&& this._point.subtract(prev._point).isOrthogonal(\n\t\t\t\t\tnext._point.subtract(this._point));\n\t},\n\n\tisArc: function() {\n\t\tvar next = this.getNext(),\n\t\t\thandle1 = this._handleOut,\n\t\t\thandle2 = next._handleIn,\n\t\t\tkappa = 0.5522847498307936;\n\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\tvar from = this._point,\n\t\t\t\tto = next._point,\n\t\t\t\tcorner = new Line(from, handle1, true).intersect(\n\t\t\t\t\t\tnew Line(to, handle2, true), true);\n\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\tcorner.subtract(from).getLength() - kappa)\n\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\tcorner.subtract(to).getLength() - kappa);\n\t\t}\n\t\treturn false;\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\treverse: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(segment0, segment1, coef) {\n\t\tvar dxPoint = segment1._point._x - segment0._point._x,\n\t\t\tdyPoint = segment1._point._y - segment0._point._y,\n\t\t\tdxHandleIn = segment1._handleIn._x - segment0._handleIn._x,\n\t\t\tdyHandleIn = segment1._handleIn._y - segment0._handleIn._y,\n\t\t\tdxHandleOut = segment1._handleOut._x - segment0._handleOut._x,\n\t\t\tdyHandleOut = segment1._handleOut._y - segment0._handleOut._y;\n\n\t\tthis._point._x = segment0._point._x + dxPoint * coef;\n\t\tthis._point._y = segment0._point._y + dyPoint * coef;\n\t\tthis._handleIn._x = segment0._handleIn._x + dxHandleIn * coef;\n\t\tthis._handleIn._y = segment0._handleIn._y + dyHandleIn * coef;\n\t\tthis._handleOut._x = segment0._handleOut._x + dxHandleOut * coef;\n\t\tthis._handleOut._y = segment0._handleOut._y + dyHandleOut * coef;\n\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tthis._segment1 = arg1;\n\t\t\tthis._segment2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tthis._segment1 = new Segment();\n\t\t\tthis._segment2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tthis._segment1 = new Segment(arg0.segment1);\n\t\t\tthis._segment2 = new Segment(arg0.segment2);\n\t\t} else if (count === 2) {\n\t\t\tthis._segment1 = new Segment(arg0);\n\t\t\tthis._segment2 = new Segment(arg1);\n\t\t} else {\n\t\t\tvar point1, handle1, handle2, point2;\n\t\t\tif (count === 4) {\n\t\t\t\tpoint1 = arg0;\n\t\t\t\thandle1 = arg1;\n\t\t\t\thandle2 = arg2;\n\t\t\t\tpoint2 = arg3;\n\t\t\t} else if (count === 8) {\n\t\t\t\tpoint1 = [arg0, arg1];\n\t\t\t\tpoint2 = [arg6, arg7];\n\t\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t\t}\n\t\t\tthis._segment1 = new Segment(point1, null, handle1);\n\t\t\tthis._segment2 = new Segment(point2, handle2, null);\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tthis._length = this.isLinear()\n\t\t\t\t? this._segment2._point.getDistance(this._segment1._point)\n\t\t\t\t: Curve.getLength(this.getValues(), 0, 1);\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._segment1._handleOut.isZero()\n\t\t\t\t&& this._segment2._handleIn.isZero();\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve.filterIntersections(Curve.getIntersections(\n\t\t\t\tthis.getValues(), curve.getValues(), this, curve, []));\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, ignoreLinear) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttolerance = 0.000001,\n\t\t\tres = null;\n\t\tif (parameter > tolerance && parameter < 1 - tolerance) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tisLinear = ignoreLinear ? false : this.isLinear(),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1];\n\n\t\t\tif (!isLinear) {\n\t\t\t\tthis._segment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tthis._segment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\t!isLinear && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\t!isLinear && new Point(right[2] - x, right[3] - y));\n\n\t\t\tif (this._path) {\n\t\t\t\tif (this._segment1._index > 0 && this._segment2._index === 0) {\n\t\t\t\t\tthis._path.add(segment);\n\t\t\t\t} else {\n\t\t\t\t\tthis._path.insert(this._segment2._index, segment);\n\t\t\t\t}\n\t\t\t\tres = this;\n\t\t\t} else {\n\t\t\t\tvar end = this._segment2;\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, end);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treverse: function() {\n\t\treturn new Curve(this._segment2.reverse(), this._segment1.reverse());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tevaluate: function(v, t, type) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tolerance || t > 1 - tolerance)) {\n\t\t\tvar isZero = t < tolerance;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tolerance && c1x === p1x && c1y === p1y\n\t\t\t\t\t\t|| t > 1 - tolerance && c2x === p2x && c2y === p2y) {\n\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t} else if (t < tolerance) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > 1 - tolerance) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by;\n\t\t\t\t\treturn (x * y2 - y * x2) / Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b,\n\t\t\tisZero = Numerical.isZero;\n\t\tif (isZero(a) && isZero(b))\n\t\t\ta = b = 0;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, x, y) {\n\t\tvar tolerance = 0.000001;\n\t\tif (Math.abs(v[0] - x) < tolerance && Math.abs(v[1] - y) < tolerance)\n\t\t\treturn 0;\n\t\tif (Math.abs(v[6] - x) < tolerance && Math.abs(v[7] - y) < tolerance)\n\t\t\treturn 1;\n\t\tvar txs = [],\n\t\t\ttys = [],\n\t\t\tsx = Curve.solveCubic(v, 0, x, txs, 0, 1),\n\t\t\tsy = Curve.solveCubic(v, 1, y, tys, 0, 1),\n\t\t\ttx, ty;\n\t\tfor (var cx = 0;  sx == -1 || cx < sx;) {\n\t\t\tif (sx == -1 || (tx = txs[cx++]) >= 0 && tx <= 1) {\n\t\t\t\tfor (var cy = 0; sy == -1 || cy < sy;) {\n\t\t\t\t\tif (sy == -1 || (ty = tys[cy++]) >= 0 && ty <= 1) {\n\t\t\t\t\t\tif (sx == -1) tx = ty;\n\t\t\t\t\t\telse if (sy == -1) ty = tx;\n\t\t\t\t\t\tif (Math.abs(tx - ty) < tolerance)\n\t\t\t\t\t\t\treturn (tx + ty) * 0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sx == -1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn v;\n\t},\n\n\tisLinear: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]);\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn (  3.0 * c1y * p1x - 1.5 * c1y * c2x\n\t\t\t\t- 1.5 * c1y * p2x - 3.0 * p1y * c1x\n\t\t\t\t- 1.5 * p1y * c2x - 0.5 * p1y * p2x\n\t\t\t\t+ 1.5 * c2y * p1x + 1.5 * c2y * c1x\n\t\t\t\t- 3.0 * c2y * p2x + 0.5 * p2y * p1x\n\t\t\t\t+ 1.5 * p2y * c1x + 3.0 * p2y * c2x) / 10;\n\t},\n\n\tgetEdgeSum: function(v) {\n\t\treturn\t  (v[0] - v[2]) * (v[3] + v[1])\n\t\t\t\t+ (v[2] - v[4]) * (v[5] + v[3])\n\t\t\t\t+ (v[4] - v[6]) * (v[7] + v[5]);\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name]([this._segment1,\n\t\t\t\t\t\tthis._segment2], false, this._path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve.evaluate(values, isParameter\n\t\t\t\t\t? offset : Curve.getParameterAt(values, offset, 0), index);\n\t\t};\n\t\tthis[name] = function(parameter) {\n\t\t\treturn Curve.evaluate(this.getValues(), parameter, index);\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Curve.getParameterOf(this.getValues(), point.x, point.y);\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tif (!isParameter)\n\t\t\toffset = this.getParameterAt(offset);\n\t\treturn offset >= 0 && offset <= 1 && new CurveLocation(this, offset);\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tcount = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(\n\t\t\t\t\t\tCurve.evaluate(values, t, 0), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 0.000001) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\tvar pt = Curve.evaluate(values, minT, 0);\n\t\treturn new CurveLocation(this, minT, pt, null, null, null,\n\t\t\t\tpoint.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n}),\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\treturn {\n\t\tstatics: true,\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tvar isZero = Numerical.isZero;\n\t\t\tif (a === 0 && b === 1\n\t\t\t\t\t&& isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t\t&& isZero(v[6] - v[4]) && isZero(v[7] - v[5])) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar forward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (Math.abs(offset) >= rangeLength)\n\t\t\t\treturn forward ? b : a;\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 16,\n\t\t\t\t\t0.000001);\n\t\t}\n\t};\n}, new function() {\n\tfunction addLocation(locations, include, curve1, t1, point1, curve2, t2,\n\t\t\tpoint2) {\n\t\tvar loc = new CurveLocation(curve1, t1, point1, curve2, t2, point2);\n\t\tif (!include || include(loc))\n\t\t\tlocations.push(loc);\n\t}\n\n\tfunction addCurveIntersections(v1, v2, curve1, curve2, locations, include,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (recursion > 32)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]) || 0,\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]) || 0,\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\ttMinNew, tMaxNew, tDiff;\n\t\tif (q0x === q3x && uMax - uMin <= tolerance && recursion > 3) {\n\t\t\ttMaxNew = tMinNew = (tMax + tMin) / 2;\n\t\t\ttDiff = 0;\n\t\t} else {\n\t\t\tvar hull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\t\ttop = hull[0],\n\t\t\t\tbottom = hull[1],\n\t\t\t\ttMinClip, tMaxClip;\n\t\t\ttMinClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\ttop.reverse();\n\t\t\tbottom.reverse();\n\t\t\ttMaxClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\tif (tMinClip == null || tMaxClip == null)\n\t\t\t\treturn;\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\ttDiff = tMaxClip - tMinClip;\n\t\t\ttMinNew = tMax * tMinClip + tMin * (1 - tMinClip);\n\t\t\ttMaxNew = tMax * tMaxClip + tMin * (1 - tMaxClip);\n\t\t}\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, curve2, curve1, locations, include,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew) < tolerance) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tif (reverse) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0),\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0));\n\t\t\t} else {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t} else if (tDiff > 0) {\n\t\t\taddCurveIntersections(v2, v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\tdist1 = getSignedDistance(0, dq0, 1, dq3, 1 / 3, dq1),\n\t\t\tdist2 = getSignedDistance(0, dq0, 1, dq3, 2 / 3, dq2),\n\t\t\tflip = false,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t\tflip = dist1 < 0;\n\t\t} else {\n\t\t\tvar pmax, cross = 0,\n\t\t\t\tdistZero = dist1 === 0 || dist2 === 0;\n\t\t\tif (Math.abs(dist1) > Math.abs(dist2)) {\n\t\t\t\tpmax = p1;\n\t\t\t\tcross = (dq3 - dq2 - (dq3 - dq0) / 3)\n\t\t\t\t\t\t* (2 * (dq3 - dq2) - dq3 + dq1) / 3;\n\t\t\t} else {\n\t\t\t\tpmax = p2;\n\t\t\t\tcross = (dq1 - dq0 + (dq0 - dq3) / 3)\n\t\t\t\t\t\t* (-2 * (dq0 - dq1) + dq0 - dq2) / 3;\n\t\t\t}\n\t\t\thull = cross < 0 || distZero\n\t\t\t\t\t? [[p0, pmax, p3], [p0, p3]]\n\t\t\t\t\t: [[p0, p1, p2, p3], [p0, p3]];\n\t\t\tflip = dist1 ? dist1 < 0 : dist2 < 0;\n\t\t}\n\t\treturn flip ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold)\n\t\t\t\treturn px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, curve1, curve2, locations,\n\t\t\tinclude) {\n\t\tvar flip = Curve.isLinear(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trlx2 = ldx * cos - ldy * sin,\n\t\t\trvl = [0, 0, 0, 0, rlx2, 0, rlx2, 0],\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\ty * cos + x * sin);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tx = Curve.evaluate(rvc, tc, 0).x;\n\t\t\tif (x >= 0 && x <= rlx2) {\n\t\t\t\tvar tl = Curve.getParameterOf(rvl, x, 0),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, curve1, curve2, locations, include) {\n\t\tvar point = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (point) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tcurve1, Curve.getParameterOf(v1, x, y), point,\n\t\t\t\t\tcurve2, Curve.getParameterOf(v2, x, y), point);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\tgetIntersections: function(v1, v2, c1, c2, locations, include) {\n\t\t\tvar linear1 = Curve.isLinear(v1),\n\t\t\t\tlinear2 = Curve.isLinear(v2),\n\t\t\t\tc1p1 = c1.getPoint1(),\n\t\t\t\tc1p2 = c1.getPoint2(),\n\t\t\t\tc2p1 = c2.getPoint1(),\n\t\t\t\tc2p2 = c2.getPoint2(),\n\t\t\t\ttolerance = 0.000001;\n\t\t\tif (c1p1.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 0, c1p1);\n\t\t\tif (c1p1.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 1, c1p1);\n\t\t\t(linear1 && linear2\n\t\t\t\t? addLineIntersection\n\t\t\t\t: linear1 || linear2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, include,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (c1p2.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 0, c1p2);\n\t\t\tif (c1p2.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 1, c1p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\tfilterIntersections: function(locations, _expand) {\n\t\t\tvar last = locations.length - 1,\n\t\t\t\ttMax = 1 - 0.000001;\n\t\t\tfor (var i = last; i >= 0; i--) {\n\t\t\t\tvar loc = locations[i],\n\t\t\t\t\tnext = loc._curve.getNext(),\n\t\t\t\t\tnext2 = loc._curve2.getNext();\n\t\t\t\tif (next && loc._parameter >= tMax) {\n\t\t\t\t\tloc._parameter = 0;\n\t\t\t\t\tloc._curve = next;\n\t\t\t\t}\n\t\t\t\tif (next2 && loc._parameter2 >= tMax) {\n\t\t\t\t\tloc._parameter2 = 0;\n\t\t\t\t\tloc._curve2 = next2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction compare(loc1, loc2) {\n\t\t\t\tvar path1 = loc1.getPath(),\n\t\t\t\t\tpath2 = loc2.getPath();\n\t\t\t\treturn path1 === path2\n\t\t\t\t\t\t? (loc1.getIndex() + loc1.getParameter())\n\t\t\t\t\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t\t\t: path1._id - path2._id;\n\t\t\t}\n\n\t\t\tif (last > 0) {\n\t\t\t\tlocations.sort(compare);\n\t\t\t\tfor (var i = last; i > 0; i--) {\n\t\t\t\t\tif (locations[i].equals(locations[i - 1])) {\n\t\t\t\t\t\tlocations.splice(i, 1);\n\t\t\t\t\t\tlast--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_expand) {\n\t\t\t\tfor (var i = last; i >= 0; i--)\n\t\t\t\t\tlocations.push(locations[i].getIntersection());\n\t\t\t\tlocations.sort(compare);\n\t\t\t}\n\t\t\treturn locations;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point, _curve2,\n\t\t\t_parameter2, _point2, _distance) {\n\t\tthis._id = CurveLocation._id = (CurveLocation._id || 0) + 1;\n\t\tthis._curve = curve;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t\tthis._parameter = parameter;\n\t\tthis._point = point;\n\t\tthis._curve2 = _curve2;\n\t\tthis._parameter2 = _parameter2;\n\t\tthis._point2 = _point2;\n\t\tthis._distance = _distance;\n\t},\n\n\tgetSegment: function(_preferFirst) {\n\t\tif (!this._segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this.getParameter();\n\t\t\tif (parameter === 1) {\n\t\t\t\tthis._segment = curve._segment2;\n\t\t\t} else if (parameter === 0 || _preferFirst) {\n\t\t\t\tthis._segment = curve._segment1;\n\t\t\t} else if (parameter == null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis._segment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t}\n\t\treturn this._segment;\n\t},\n\n\tgetCurve: function(_uncached) {\n\t\tif (!this._curve || _uncached) {\n\t\t\tthis._curve = this._segment1.getCurve();\n\t\t\tif (this._curve.getParameterOf(this._point) == null)\n\t\t\t\tthis._curve = this._segment2.getPrevious().getCurve();\n\t\t}\n\t\treturn this._curve;\n\t},\n\n\tgetIntersection: function() {\n\t\tvar intersection = this._intersection;\n\t\tif (!intersection && this._curve2) {\n\t\t\tvar param = this._parameter2;\n\t\t\tthis._intersection = intersection = new CurveLocation(\n\t\t\t\t\tthis._curve2, param, this._point2 || this._point, this);\n\t\t\tintersection._intersection = this;\n\t\t}\n\t\treturn intersection;\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetOffset: function() {\n\t\tvar path = this.getPath();\n\t\treturn path ? path._getOffset(this) : this.getCurveOffset();\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetParameter: function(_uncached) {\n\t\tif ((this._parameter == null || _uncached) && this._point) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._parameter = curve && curve.getParameterOf(this._point);\n\t\t}\n\t\treturn this._parameter;\n\t},\n\n\tgetPoint: function(_uncached) {\n\t\tif ((!this._point || _uncached) && this._parameter != null) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._point = curve && curve.getPointAt(this._parameter, true);\n\t\t}\n\t\treturn this._point;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.divide(this.getParameter(true), true);\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.split(this.getParameter(true), true);\n\t},\n\n\tequals: function(loc) {\n\t\tvar abs = Math.abs,\n\t\t\ttolerance = 0.000001;\n\t\treturn this === loc\n\t\t\t\t|| loc\n\t\t\t\t\t&& this._curve === loc._curve\n\t\t\t\t\t&& this._curve2 === loc._curve2\n\t\t\t\t\t&& abs(this._parameter - loc._parameter) <= tolerance\n\t\t\t\t\t&& abs(this._parameter2 - loc._parameter2) <= tolerance\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t}\n}, Base.each(['getTangent', 'getNormal', 'getCurvature'], function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {}));\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, _matrix, _expand) {\n\t\tif (this === path)\n\t\t\tpath = null;\n\t\tvar locations = [],\n\t\t\tcurves1 = this.getCurves(),\n\t\t\tcurves2 = path ? path.getCurves() : curves1,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = path ? (_matrix || path._matrix).orNullIfIdentity()\n\t\t\t\t: matrix1,\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = path ? curves2.length : length1,\n\t\t\tvalues2 = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tif (path && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = path ? curve1.getValues(matrix1) : values2[i];\n\t\t\tif (!path) {\n\t\t\t\tvar seg1 = curve1.getSegment1(),\n\t\t\t\t\tseg2 = curve1.getSegment2(),\n\t\t\t\t\th1 = seg1._handleOut,\n\t\t\t\t\th2 = seg2._handleIn;\n\t\t\t\tif (new Line(seg1._point.subtract(h1), h1.multiply(2), true)\n\t\t\t\t\t\t.intersect(new Line(seg2._point.subtract(h2),\n\t\t\t\t\t\th2.multiply(2), true), false)) {\n\t\t\t\t\tvar parts = Curve.subdivide(values1);\n\t\t\t\t\tCurve.getIntersections(\n\t\t\t\t\t\tparts[0], parts[1], curve1, curve1, locations,\n\t\t\t\t\t\tfunction(loc) {\n\t\t\t\t\t\t\tif (loc._parameter <= tMax) {\n\t\t\t\t\t\t\t\tloc._parameter /= 2;\n\t\t\t\t\t\t\t\tloc._parameter2 = 0.5 + loc._parameter2 / 2;\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var j = path ? 0 : i + 1; j < length2; j++) {\n\t\t\t\tCurve.getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curves2[j], locations,\n\t\t\t\t\t!path && (j === i + 1 || j === length2 - 1 && i === 0)\n\t\t\t\t\t\t&& function(loc) {\n\t\t\t\t\t\t\tvar t = loc._parameter;\n\t\t\t\t\t\t\treturn t >= tMin && t <= tMax;\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Curve.filterIntersections(locations, _expand);\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tif (move && previous && previous !== 'z')\n\t\t\t\t\tthis.closePath(true);\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._clockwise = undefined;\n\t\t\tif (this._curves && !(flags & 16)) {\n\t\t\t\tfor (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t\tthis._monoCurves = undefined;\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\tisPolygon: function() {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif (!this._segments[i].isLinear())\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves || segs._curves) {\n\t\t\tif (!curves)\n\t\t\t\tcurves = this._curves = [];\n\t\t\tvar from = index > 0 ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, this._countCurves());\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves();\n\t\t\tthis._length = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tthis._length += curves[i].getLength();\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar curves = this.getCurves();\n\t\tvar area = 0;\n\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\tarea += curves[i].getArea();\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.evaluate(pos, 0)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (curve.isLinear() && curve.getLength() === 0)\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tolerance = 0.000001;\n\t\tif (parameter >= 1 - tolerance) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter > tolerance) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = this._clone(new Path().insertAbove(this, true));\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn Path.isClockwise(this._segments);\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path.closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\tinterpolate: function(path0, path1, coef) {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif ( !path0._segments[i] || !path1._segments[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._segments[i].interpolate(\n\t\t\t\tpath0._segments[i],\n\t\t\t\tpath1._segments[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\n\t\tthis._changed(9);\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isColinear(i, j) {\n\t\t\treturn segments[i].isColinear(segments[j]);\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\treturn segments[i].isOrthogonal();\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\treturn segments[i].isArc();\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (this.isPolygon() && segments.length === 4\n\t\t\t\t&& isColinear(0, 2) && isColinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isColinear(1, 5) && isColinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t});\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\tshape.setStyle(this._style);\n\t\t\tif (insert || insert === undefined)\n\t\t\t\tshape.insertAbove(this);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\t_getOffset: function(location) {\n\t\tvar index = location && location.getIndex();\n\t\tif (index != null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\toffset = 0;\n\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\toffset += curves[i].getLength();\n\t\t\tvar curve = curves[index],\n\t\t\t\tparameter = location.getParameter();\n\t\t\tif (parameter > 0)\n\t\t\t\toffset += curve.getPartLength(0, parameter);\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset;\n\t\t\treturn curves[index].getLocationAt(offset - index, true);\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}), new function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n}, new function() {\n\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n}, new function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < epsilon)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tisClockwise: function(segments) {\n\t\tvar sum = 0;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsum += Curve.getEdgeSum(Curve.getValues(\n\t\t\t\t\tsegments[i], segments[i + 1 < l ? i + 1 : 0]));\n\t\treturn sum > 0;\n\t},\n\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isColinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().normalize(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tif (this._children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t} else {\n\t\t\treturn reduce.base.call(this);\n\t\t}\n\t},\n\n\tinterpolate: function(compoundpath0, compoundpath1, coef) {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\tif ( !compoundpath0._children[i] || !compoundpath1._children[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._children[i].interpolate(\n\t\t\t\tcompoundpath0._children[i],\n\t\t\t\tcompoundpath1._children[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : mx, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n}, new function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current : new Path();\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tvar operator = operators[operation];\n\t\tfunction preparePath(path) {\n\t\t\treturn path.clone(false).reduce().reorient().transform(null, true,\n\t\t\t\t\ttrue);\n\t\t}\n\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tsplitPath(_path1.getIntersections(_path2, null, true));\n\n\t\tvar chain = [],\n\t\t\tsegments = [],\n\t\t\tmonoCurves = [],\n\t\t\ttolerance = 0.000001;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tsegments.sort(function(a, b) {\n\t\t\tvar _a = a._intersection,\n\t\t\t\t_b = b._intersection;\n\t\t\treturn !_a && !_b || _a && _b ? 0 : _a ? -1 : 1;\n\t\t});\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding != null)\n\t\t\t\tcontinue;\n\t\t\tchain.length = 0;\n\t\t\tvar startSeg = segment,\n\t\t\t\ttotalLength = 0,\n\t\t\t\twindingSum = 0;\n\t\t\tdo {\n\t\t\t\tvar length = segment.getCurve().getLength();\n\t\t\t\tchain.push({ segment: segment, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t\tsegment = segment.getNext();\n\t\t\t} while (segment && !segment._intersection && segment !== startSeg);\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar length = totalLength * (j + 1) / 4;\n\t\t\t\tfor (k = 0, m = chain.length; k < m; k++) {\n\t\t\t\t\tvar node = chain[k],\n\t\t\t\t\t\tcurveLength = node.length;\n\t\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\t\tif (length <= tolerance\n\t\t\t\t\t\t\t\t|| curveLength - length <= tolerance)\n\t\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\t\tvar curve = node.segment.getCurve(),\n\t\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\t\thor = curve.isLinear() && Math.abs(curve\n\t\t\t\t\t\t\t\t\t.getTangentAt(0.5, true).y) <= tolerance,\n\t\t\t\t\t\t\tpath = curve._path;\n\t\t\t\t\t\tif (path._parent instanceof CompoundPath)\n\t\t\t\t\t\t\tpath = path._parent;\n\t\t\t\t\t\twindingSum += operation === 'subtract' && _path2\n\t\t\t\t\t\t\t&& (path === _path1 && _path2._getWinding(pt, hor)\n\t\t\t\t\t\t\t|| path === _path2 && !_path1._getWinding(pt, hor))\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlength -= curveLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar winding = Math.round(windingSum / 3);\n\t\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.insertAbove(path1);\n\t\tresult.addChildren(tracePaths(segments, operator), true);\n\t\tresult = result.reduce();\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction splitPath(intersections) {\n\t\tvar tMin = 0.000001,\n\t\t\ttMax = 1 - tMin,\n\t\t\tlinearHandles;\n\n\t\tfunction resetLinear() {\n\t\t\tfor (var i = 0, l = linearHandles.length; i < l; i++)\n\t\t\t\tlinearHandles[i].set(0, 0);\n\t\t}\n\n\t\tfor (var i = intersections.length - 1, curve, prev; i >= 0; i--) {\n\t\t\tvar loc = intersections[i],\n\t\t\t\tt = loc._parameter;\n\t\t\tif (prev && prev._curve === loc._curve && prev._parameter > 0) {\n\t\t\t\tt /= prev._parameter;\n\t\t\t} else {\n\t\t\t\tcurve = loc._curve;\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tresetLinear();\n\t\t\t\tlinearHandles = curve.isLinear() ? [\n\t\t\t\t\t\tcurve._segment1._handleOut,\n\t\t\t\t\t\tcurve._segment2._handleIn\n\t\t\t\t\t] : null;\n\t\t\t}\n\t\t\tvar newCurve,\n\t\t\t\tsegment;\n\t\t\tif (newCurve = curve.divide(t, true, true)) {\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tcurve = newCurve.getPrevious();\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tlinearHandles.push(segment._handleOut, segment._handleIn);\n\t\t\t} else {\n\t\t\t\tsegment = t < tMin\n\t\t\t\t\t? curve._segment1\n\t\t\t\t\t: t > tMax\n\t\t\t\t\t\t? curve._segment2\n\t\t\t\t\t\t: curve.getPartLength(0, t) < curve.getPartLength(t, 1)\n\t\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tsegment._intersection = loc.getIntersection();\n\t\t\tloc._segment = segment;\n\t\t\tprev = loc;\n\t\t}\n\t\tif (linearHandles)\n\t\t\tresetLinear();\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar tolerance = 0.000001,\n\t\t\ttMin = tolerance,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - tolerance,\n\t\t\t\tyAfter = py + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.evaluate(values, roots[j], 0).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves);\n\t\t} else {\n\t\t\tvar xBefore = px - tolerance,\n\t\t\t\txAfter = px + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding,\n\t\t\t\t\tprevT,\n\t\t\t\t\tprevX;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tx = Curve.evaluate(values, t, 0).x,\n\t\t\t\t\t\tslope = Curve.evaluate(values, t, 1).y;\n\t\t\t\t\tif (!(t > tMax\n\t\t\t\t\t\t\t&& (i === l - 1 || curve.next !== curves[i + 1])\n\t\t\t\t\t\t\t&& abs(Curve.evaluate(curve.next.values, 0, 0).x -x)\n\t\t\t\t\t\t\t\t<= tolerance\n\t\t\t\t\t\t|| i > 0 && curve.previous === curves[i - 1]\n\t\t\t\t\t\t\t&& abs(prevX - x) < tolerance\n\t\t\t\t\t\t\t&& prevT > tMax && t < tMin)) {\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isLinear(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0, 1).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprevT = t;\n\t\t\t\t\tprevX = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction tracePaths(segments, operator, selfOp) {\n\t\tvar paths = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0, seg, startSeg, l = segments.length; i < l; i++) {\n\t\t\tseg = startSeg = segments[i];\n\t\t\tif (seg._visited || !operator(seg._winding))\n\t\t\t\tcontinue;\n\t\t\tvar path = new Path(Item.NO_INSERT),\n\t\t\t\tinter = seg._intersection,\n\t\t\t\tstartInterSeg = inter && inter._segment,\n\t\t\t\tadded = false,\n\t\t\t\tdir = 1;\n\t\t\tdo {\n\t\t\t\tvar handleIn = dir > 0 ? seg._handleIn : seg._handleOut,\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn,\n\t\t\t\t\tinterSeg;\n\t\t\t\tif (added && (!operator(seg._winding) || selfOp)\n\t\t\t\t\t\t&& (inter = seg._intersection)\n\t\t\t\t\t\t&& (interSeg = inter._segment)\n\t\t\t\t\t\t&& interSeg !== startSeg) {\n\t\t\t\t\tif (selfOp) {\n\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar c1 = seg.getCurve();\n\t\t\t\t\t\tif (dir > 0)\n\t\t\t\t\t\t\tc1 = c1.getPrevious();\n\t\t\t\t\t\tvar t1 = c1.getTangentAt(dir < 1 ? tMin : tMax, true),\n\t\t\t\t\t\t\tc4 = interSeg.getCurve(),\n\t\t\t\t\t\t\tc3 = c4.getPrevious(),\n\t\t\t\t\t\t\tt3 = c3.getTangentAt(tMax, true),\n\t\t\t\t\t\t\tt4 = c4.getTangentAt(tMin, true),\n\t\t\t\t\t\t\tw3 = t1.cross(t3),\n\t\t\t\t\t\t\tw4 = t1.cross(t4);\n\t\t\t\t\t\tif (w3 * w4 !== 0) {\n\t\t\t\t\t\t\tvar curve = w3 < w4 ? c3 : c4,\n\t\t\t\t\t\t\t\tnextCurve = operator(curve._segment1._winding)\n\t\t\t\t\t\t\t\t\t? curve\n\t\t\t\t\t\t\t\t\t: w3 < w4 ? c4 : c3,\n\t\t\t\t\t\t\t\tnextSeg = nextCurve._segment1;\n\t\t\t\t\t\t\tdir = nextCurve === c3 ? -1 : 1;\n\t\t\t\t\t\t\tif (nextSeg._visited && seg._path !== nextSeg._path\n\t\t\t\t\t\t\t\t\t\t|| !operator(nextSeg._winding)) {\n\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\t\t\tif (nextSeg._visited)\n\t\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, added && handleIn, handleOut));\n\t\t\t\tadded = true;\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = dir > 0 ? seg.getNext() : seg. getPrevious();\n\t\t\t} while (seg && !seg._visited\n\t\t\t\t\t&& seg !== startSeg && seg !== startInterSeg\n\t\t\t\t\t&& (seg._intersection || operator(seg._winding)));\n\t\t\tif (seg && (seg === startSeg || seg === startInterSeg)) {\n\t\t\t\tpath.firstSegment.setHandleIn((seg === startInterSeg\n\t\t\t\t\t\t? startInterSeg : seg)._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else {\n\t\t\t\tpath.lastSegment._handleOut.set(0, 0);\n\t\t\t}\n\t\t\tif (path._segments.length >\n\t\t\t\t\t(path._closed ? path.isPolygon() ? 2 : 0 : 1))\n\t\t\t\tpaths.push(path);\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn new Group([this.subtract(path), this.intersect(path)]);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isLinear(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttolerance = 0.000001,\n\t\t\t\t\troots = [];\n\t\t\t\tvar count = Numerical.solveQuadratic(a, b, c, roots, tolerance,\n\t\t\t\t\t\t1 - tolerance);\n\t\t\t\tif (count === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.evaluate(values, roots[j], 0).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 0.000001) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tevaluate: function(offset, type) {\n\t\tvar param = this.getParameterAt(offset);\n\t\treturn Curve.evaluate(this.curves[param.index], param.value, type);\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\treturn this.evaluate(offset, index);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tthis.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1);\n\t\tepsilon *= segLength;\n\t\tif (alpha1 < epsilon || alpha2 < epsilon) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t}\n\n\t\treturn [pt1, pt1.add(tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 0.000001)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tvalue = parser.call(this, value);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tthis._components[index] = value;\n\t\t\t\t\tthis._changed();\n\t\t\t\t}\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type];\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tif (type === 'gradient')\n\t\t\t\tthis._id = Color._id = (Color._id || 0) + 1;\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n}, new function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nBase.each(Color._types, function(properties, type) {\n\tvar ctor = this[Base.capitalize(type) + 'Color'] = function(arg) {\n\t\t\tvar argType = arg != null && typeof arg,\n\t\t\t\tcomponents = argType === 'object' && arg.length != null\n\t\t\t\t\t? arg\n\t\t\t\t\t: argType === 'string'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: arguments;\n\t\t\treturn components\n\t\t\t\t\t? new Color(type, components)\n\t\t\t\t\t: new Color(arg);\n\t\t};\n\tif (type.length == 3) {\n\t\tvar acronym = type.toUpperCase();\n\t\tColor[acronym] = this[acronym + 'Color'] = ctor;\n\t}\n}, Base.exports);\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = Gradient._id = (Gradient._id || 0) + 1;\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = typeof window === 'object' &&\n\t\t\tDomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tif ( typeof window === 'object' ) {\n\t\tDomEvent.add(window, {\n\t\t\tfocus: function() {\n\t\t\t\tfocused = true;\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tfocused = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif ( !noCanvas ) {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchAction: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\tuserDrag: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\n\t\t\tfunction getSize(name) {\n\t\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t\t}\n\n\t\t\tfunction getCanvasSize() {\n\t\t\t\tvar size = DomElement.getSize(element);\n\t\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t\t: size;\n\t\t\t}\n\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._setViewSize(size = getCanvasSize());\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = 1;\n\t\t\tthis._id = 'view-' + View._id++;\n\t\t\tsize = new Size(element.width, element.height);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: {\n\t\tonFrame: {\n\t\t\tinstall: function() {\n\t\t\t\tthis.play();\n\t\t\t},\n\n\t\t\tuninstall: function() {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t},\n\n\t\tonResize: {}\n\t},\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n}, new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif ( !noCanvas ) {\n\t\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tif (size.isZero())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t\t}\n\t\t\tthis._context = canvas.getContext('2d');\n\t\t}\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!noCanvas && !/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font;\n\t\tctx.font = size + ' serif';\n\t\tsize = parseFloat(ctx.font);\n\t\tctx.font = prevFont;\n\t\treturn size;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function() {\n\t\tvar project = this._project;\n\t\tif (!project || !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n}, new function() {\n\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers)\n\t\t\tmodifiers[name] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = this._minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = distance;\n\t\tthis._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tvar maxDist = maxDistance != null ? maxDistance : 0;\n\t\t\t\tif (maxDist != 0) {\n\t\t\t\t\tif (distance > maxDist) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDist));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback) {\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, true);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif ( noCanvas ) {\n\t\t\treturn { getContext: function() {} };\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tif (options.matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (item.isPolygon()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (applyMatrix && item)\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n\n},{}],3:[function(require,module,exports){\nfunction Collection( args ) {\n\t// already a Collection? Job's done\n\tif ( arguments.length === 1 && args instanceof Collection ) {\n\t\treturn args;\n\n\t} else if ( arguments.length > 1 || !Array.isArray( args ) ) {\n\t\targs = [].slice.call( arguments, 0 );\n\t}\n\n\tthis.length = 0;\n\n\targs.forEach(function( arg ) {\n\t\t// unwrap any collection\n\t\tif ( arg instanceof Collection ) {\n\t\t\tfor ( var i = -1; ++i < arg.length; ) {\n\t\t\t\tthis[this.length++] = arg[i];\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis[this.length++] = arg;\n\t\t}\n\n\t}, this);\n\n\treturn this;\n}\n\nCollection.prototype.forEach = function(cb, scope) {\n\tfor ( var i = -1; ++i < this.length; ) {\n\t\tcb.call(scope || this[i], this[i], i, this);\n\t}\n\n\treturn this;\n};\n\nCollection.prototype.prop = function(name, val) {\n\tvar i;\n\n\t// object setter\n\tif ( typeof name === 'object' ) {\n\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\tthis[i].set( name );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// getter\n\tif ( val === undefined ) {\n\t\treturn this[0][name];\n\t}\n\n\t// simple setter\n\tfor ( i = -1; ++i < this.length; ) {\n\t\tthis[i][name] = val;\n\t}\n\n\treturn this;\n};\n\nfunction wrapConstructor( constructor, prototype, useConstructed ) {\n\treturn function wrapper() {\n\t\tvar c,\n\t\t\ttmp,\n\t\t\tarr = [];\n\n\t\t// constructor used with new\n\t\tif ( this instanceof wrapper ) {\n\t\t\t// proxy to paper native constructor\n\t\t\tc = Object.create(prototype);\n\t\t\ttmp = constructor.apply(c, arguments);\n\t\t\treturn useConstructed ?\n\t\t\t\ttmp : c;\n\n\t\t// without new, build a collection\n\t\t} else {\n\t\t\tif ( Array.isArray( arguments[0] ) ) {\n\t\t\t\targuments[0].forEach(function(params, i) {\n\t\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\t\tc = constructor.call( arr[i], params );\n\t\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\t\tarr[i] = c;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\tc = constructor.apply( arr[0], arguments );\n\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\tarr[0] = c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Collection( arr );\n\t\t}\n\t};\n}\n\nvar rconstructor = /(^|\\.)[A-Z][A-z]+$/;\nfunction constructorFilter( name ) {\n\treturn typeof this[name] === 'function' && rconstructor.test(name);\n}\n\n// unwrap a collection or array of collection\nfunction unwrapArg( arr, id, isPlural ) {\n\t// unwrap a single collection\n\tif ( arr && arr[id] instanceof Collection ) {\n\t\tarr[id] = isPlural ?\n\t\t\t[].slice.call( arr[id], 0 ) :\n\t\t\tarr[id][0];\n\n\t// unwrap an array of collection\n\t} else if ( arr && arr[id].length && arr[id][0] instanceof Collection ) {\n\t\tfor ( var i = -1; ++i < arr[id].length; ) {\n\t\t\tarr[id][i] = arr[id][i][0];\n\t\t}\n\t}\n}\n\nfunction unwrapArgs() {\n\tvar isPlural = this.isPlural,\n\t\targs = [].slice.call( arguments, 0 ),\n\t\tid,\n\t\ti;\n\n\t// first arg is an object and might have a collection or array of collection\n\t// Todo: objects should be unwrapped recursively\n\tif ( args[0] && args[0].constructor === Object ) {\n\t\tif ( 'children' in args[0] ) {\n\t\t\tid = 'children';\n\n\t\t} else if ( 'segments' in args[0] ) {\n\t\t\tid = 'segments';\n\n\t\t} else if ( 'nodes' in args[0] ) {\n\t\t\tid = 'nodes';\n\t\t}\n\n\t\tunwrapArg( args[0], id, true );\n\n\t// otherwise unwrap each arg\n\t} else {\n\t\tfor ( i = -1; ++i < args.length; ) {\n\t\t\t// if the method is plural (addChildren) and we're unwrapping\n\t\t\t// the last argument, we want to keep it in an array\n\t\t\tunwrapArg( args, i, i === args.length - 1 && isPlural );\n\t\t}\n\t}\n\n\treturn args;\n}\n\nCollection.proxy = function( paper ) {\n\tvar plumin = this;\n\n\tplumin.paper = paper;\n\n\tvar methodNames = {};\n\tObject.getOwnPropertyNames( paper.PaperScope.prototype )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype )\n\t\t.forEach(function(name) {\n\t\t\tplumin[name] = wrapConstructor( this[name], this[name].prototype );\n\n\t\t\t// we don't want to proxy methods of Collection\n\t\t\tif ( name === 'Collection' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tObject.getOwnPropertyNames( this[name].prototype )\n\t\t\t\t.forEach(function(_name) {\n\t\t\t\t\t// collect unique method names (first test avoids getters)\n\t\t\t\t\tif ( !Object.getOwnPropertyDescriptor(this, _name).get &&\n\t\t\t\t\t\t\ttypeof this[_name] === 'function' ) {\n\n\t\t\t\t\t\tmethodNames[_name] = true;\n\t\t\t\t\t}\n\n\t\t\t\t}, this[name].prototype);\n\n\t\t}, paper.PaperScope.prototype);\n\n\tObject.keys( paper.PaperScope.prototype.Path )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Path )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Path[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Path );\n\n\tObject.keys( paper.PaperScope.prototype.Shape )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Shape )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Shape[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Shape );\n\n\t// proxy the most commonly used method of paper\n\t// do it only after proxying constructors otherwise it's overwritten\n\tplumin.setup = paper.setup.bind(paper);\n\n\t// proxy all methods from every constructor\n\t// by default methods aren't chainable\n\tObject.keys( methodNames ).sort().forEach(function(name) {\n\t\t// please oh please, don't overwrite my constructor, I need it.\n\t\tif ( name === 'constructor' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(null, arguments),\n\t\t\t\ti,\n\t\t\t\tresult;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tresult = this[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// by default methods aren't chainable\n\t\t\t// return the last result\n\t\t\treturn result;\n\t\t};\n\t});\n\n\t\t// addChild( item ) and other methods with similar signatures\n\t\t// that we want to make chainable\n\tvar chain = [\n\t\t\t'set',\n\t\t\t'setX',\n\t\t\t'setY',\n\t\t\t'insertAbove',\n\t\t\t'insertBelow',\n\t\t\t'sendToBack',\n\t\t\t'bringToFront',\n\t\t\t'remove',\n\t\t\t'removeChildren',\n\t\t\t'reverseChildren',\n\n\t\t\t'translate',\n\t\t\t'rotate',\n\t\t\t'scale',\n\t\t\t'shear',\n\t\t\t'skew',\n\t\t\t'transform',\n\t\t\t'fitBounds',\n\t\t\t'emit',\n\n\t\t\t'activate',\n\n\t\t\t'setPixel',\n\n\t\t\t'smooth',\n\t\t\t'moveTo',\n\t\t\t'lineTo',\n\t\t\t'cubicCurveTo',\n\t\t\t'quadraticCurveTo',\n\t\t\t'curveTo',\n\t\t\t'arcTo',\n\t\t\t'closePath',\n\t\t\t'moveBy',\n\t\t\t'lineBy',\n\t\t\t'cubicCurveBy',\n\t\t\t'quadraticCurveBy',\n\t\t\t'curveBy',\n\t\t\t'arcBy',\n\n\t\t\t'removeSegments',\n\t\t\t'simplify',\n\t\t\t'reverse',\n\n\t\t\t// Rectangle\n\t\t\t'include',\n\t\t\t'expand',\n\t\t\t'scale',\n\t\t// ],\n\t\t// createAndChain = [\n\t\t\t'addChild',\n\t\t\t'insertChild',\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'replaceWith',\n\n\t\t\t'appendTop',\n\t\t\t'appendBottom',\n\n\t\t\t'add',\n\t\t\t'insert',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNode',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\n\t\t\t'addGlyph',\n\t\t\t'addGlyphs',\n\n\t\t\t'addContour',\n\t\t\t'insertContour',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addAnchor',\n\t\t\t'addAnchors',\n\t\t\t'addComponent',\n\t\t\t'addComponents',\n\n\t\t\t'addUnicode',\n\t\t\t'prepareOt',\n\t\t\t'addToFonts',\n\t\t\t'download'\n\t\t],\n\t\tplural = [\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\t\t\t'addGlyphs',\n\t\t\t'addAnchors',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addComponents'\n\t\t]/*,\n\t\tmathPoinFn = [\n\t\t\t'round',\n\t\t\t'ceil',\n\t\t\t'floor',\n\t\t\t'abs'\n\t\t],\n\t\tbooleanPathOp = [\n\t\t\t'unite',\n\t\t\t'intersect',\n\t\t\t'subtract',\n\t\t\t'exclude',\n\t\t\t'divide'\n\t\t]*/;\n\n\tchain.forEach(function(name) {\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(\n\t\t\t\t\t{ isPlural: plural.indexOf(name) !== -1 },\n\t\t\t\t\targuments\n\t\t\t\t),\n\t\t\t\ti;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tthis[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// make method chainable\n\t\t\treturn this;\n\t\t};\n\t});\n\n\t// singular chainable method\n};\n\nmodule.exports = Collection;\n\n},{}],4:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tGlyph = require('./Glyph.js');\n\nfunction Font( args ) {\n\tif ( !args ) {\n\t\targs = {};\n\t}\n\n\tif ( !args.styleName ) {\n\t\targs.styleName = 'Regular';\n\t}\n\n\tif ( !args.unitsPerEm ) {\n\t\targs.unitsPerEm = 1024;\n\t}\n\n\tthis.ot = new opentype.Font( args );\n\n\tthis.glyphs = [];\n\tthis.glyphMap = {};\n\tthis.charMap = {};\n\tthis.altMap = {};\n\tthis._subset = false;\n\n\tthis.addGlyph(new Glyph({\n\t\tname: '.notdef',\n\t\tunicode: 0\n\t}));\n\n\tif ( args && args.glyphs ) {\n\t\tthis.addGlyphs( args.glyphs );\n\t}\n\n\tif ( typeof window === 'object' && window.document ) {\n\t\t// work around https://bugzilla.mozilla.org/show_bug.cgi?id=1100005\n\t\t// by using fonts.delete in batch, every 1 second\n\t\tif ( document.fonts ) {\n\t\t\tthis.addedFonts = [];\n\n\t\t\tsetInterval(function() {\n\t\t\t\twhile ( this.addedFonts.length > 1 ) {\n\t\t\t\t\tdocument.fonts.delete( this.addedFonts.shift() );\n\t\t\t\t}\n\t\t\t}.bind(this), 1000);\n\n\t\t} else {\n\t\t\tdocument.head.appendChild(\n\t\t\t\tthis.styleElement = document.createElement('style')\n\t\t\t);\n\t\t\t// let's find the corresponding CSSStyleSheet\n\t\t\t// (would be much easier with Array#find)\n\t\t\tthis.styleSheet = document.styleSheets[\n\t\t\t\t[].map.call(document.styleSheets, function(ss) {\n\t\t\t\t\treturn ss.ownerNode;\n\t\t\t\t}).indexOf(this.styleElement)\n\t\t\t];\n\t\t}\n\t}\n}\n\nFont.prototype.addGlyph = function( glyph ) {\n\tthis.glyphs.push( glyph );\n\tthis.glyphMap[glyph.name] = glyph;\n\n\tif ( glyph.ot.unicode === undefined ) {\n\t\treturn glyph;\n\t}\n\n\t// build the default cmap\n\t// if multiple glyphs share the same unicode, use the glyph where unicode\n\t// and name are equal\n\tif ( !this.charMap[glyph.ot.unicode] ||\n\t\t\t( glyph.name.length === 1 &&\n\t\t\t\tglyph.name.charCodeAt(0) === glyph.ot.unicode ) ) {\n\n\t\tthis.charMap[glyph.ot.unicode] = glyph;\n\t}\n\n\t// build the alternates map\n\tif ( !this.altMap[glyph.ot.unicode] ) {\n\t\tthis.altMap[glyph.ot.unicode] = [];\n\t}\n\tthis.altMap[glyph.ot.unicode].push( glyph );\n\n\t// invalidate glyph subset cache\n\t// TODO: switch to immutable.js to avoid this maddness\n\tthis._lastSubset = undefined;\n\n\treturn glyph;\n};\n\nFont.prototype.addGlyphs = function( glyphs ) {\n\treturn glyphs.forEach(function( glyph ) {\n\t\tthis.addGlyph(glyph);\n\n\t}, this);\n};\n\nObject.defineProperty( Font.prototype, 'subset', {\n\tget: function() {\n\t\treturn this._subset;\n\t},\n\tset: function( set ) {\n\t\tthis._subset = set === false ?\n\t\t\tfalse : Font.normalizeSubset( set );\n\n\t\treturn this._subset;\n\t}\n});\n\nFont.prototype.getGlyphSubset = function( set ) {\n\tif ( set === true ) {\n\t\treturn this.glyphs;\n\t}\n\n\tset = set !== undefined ?\n\t\tFont.normalizeSubset( set ) :\n\t\tthis._subset;\n\n\t// reuse last subset if possible\n\t// TODO: implement caching using immutable.js\n\tif ( this._lastSubset &&\n\t\t\tthis._lastSubset[0] === ( this._subset || [] ).join() ) {\n\n\t\treturn this._lastSubset[1];\n\t}\n\n\t// memoize last subset\n\tthis._lastSubset = [\n\t\t( this._subset || [] ).join(),\n\t\tthis.glyphs.filter(function( glyph ) {\n\t\t\tif ( this._subset === false &&\n\t\t\t\t\t( glyph.ot.unicode !== undefined ||\n\t\t\t\t\t( glyph.ot.unicodes && glyph.ot.unicodes.length ) ) ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( this._subset &&\n\t\t\t\t\tthis._subset.indexOf( glyph.ot.unicode ) !== -1 ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// TODO: handle multiple unicodes\n\t\t\treturn false;\n\n\t\t}, this)\n\t];\n\n\treturn this._lastSubset[1];\n};\n\nFont.prototype.interpolate = function( font0, font1, coef, set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\tglyph.interpolate(\n\t\t\tfont0.glyphMap[glyph.name],\n\t\t\tfont1.glyphMap[glyph.name],\n\t\t\tcoef\n\t\t);\n\t});\n\n\t// TODO: evaluate if taking subsetting into account makes kerning\n\t// interpolation faster or slower.\n\tif ( this.ot.kerningPairs ) {\n\t\tfor ( var i in this.ot.kerningPairs ) {\n\t\t\tthis.ot.kerningPairs[i] =\n\t\t\t\tfont0.ot.kerningPairs[i] +\n\t\t\t\t( font1.ot.kerningPairs[i] - font0.ot.kerningPairs[i] ) * coef;\n\t\t}\n\t}\n\n\tthis.ot.ascender =\n\t\tfont0.ot.ascender + ( font1.ot.ascender - font0.ot.ascender ) * coef;\n\tthis.ot.descender =\n\t\tfont0.ot.descender + ( font1.ot.descender - font0.ot.descender ) * coef;\n\n\treturn this;\n};\n\nFont.prototype.updateSVGData = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateSVGData();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.updateOTCommands = function( set ) {\n\tthis.ot.glyphs = this.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateOTCommands();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.importOT = function( otFont ) {\n\tthis.ot = otFont;\n\n\totFont.glyphs.forEach(function( otGlyph ) {\n\t\tvar glyph = new Glyph({\n\t\t\t\tname: otGlyph.name,\n\t\t\t\tunicode: otGlyph.unicode\n\t\t\t});\n\n\t\tthis.addGlyph( glyph );\n\t\tglyph.importOT( otGlyph );\n\n\t}, this);\n\n\treturn this;\n};\n\nif ( typeof window === 'object' && window.document ) {\n\n\tvar _URL = window.URL || window.webkitURL;\n\tFont.prototype.addToFonts = document.fonts ?\n\t\t// CSS font loading, lightning fast\n\t\tfunction( buffer ) {\n\t\t\tvar fontface = new window.FontFace(\n\t\t\t\tthis.ot.familyName,\n\t\t\t\tbuffer || this.ot.toBuffer()\n\t\t\t);\n\n\t\t\tdocument.fonts.add( fontface );\n\t\t\tthis.addedFonts.push( fontface );\n\n\t\t\treturn this;\n\t\t} :\n\t\tfunction( buffer ) {\n\t\t\tvar url = _URL.createObjectURL(\n\t\t\t\t\tnew Blob(\n\t\t\t\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t\t\t\t{ type: 'font/opentype' }\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tif ( this.fontObjectURL ) {\n\t\t\t\t_URL.revokeObjectURL( this.fontObjectURL );\n\t\t\t\tthis.styleSheet.deleteRule(0);\n\t\t\t}\n\n\t\t\tthis.styleSheet.insertRule(\n\t\t\t\t'@font-face { font-family: \"' + this.ot.familyName + '\";' +\n\t\t\t\t'src: url(' + url + '); }',\n\t\t\t\t0\n\t\t\t);\n\t\t\tthis.fontObjectURL = url;\n\n\t\t\treturn this;\n\t\t};\n\n\tFont.prototype.download = function( buffer ) {\n\t\tvar reader = new FileReader();\n\n\t\treader.onloadend = function() {\n\t\t\twindow.location = reader.result;\n\t\t};\n\n\t\treader.readAsDataURL(new Blob(\n\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t{ type: 'font/opentype' }\n\t\t));\n\n\t\treturn this;\n\t};\n\n}\n\nFont.normalizeSubset = function( set ) {\n\treturn ( typeof set === 'string' ?\n\t\t\tset.split('').map(function(e) {\n\t\t\t\treturn e.charCodeAt(0);\n\t\t\t}) :\n\t\t\tset\n\t\t)\n\t\t.filter(function(e, i, arr) {\n\t\t\treturn arr.lastIndexOf(e) === i;\n\t\t})\n\t\t.sort();\n};\n\nmodule.exports = Font;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"./Glyph.js\":5}],5:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js');\n\nfunction Glyph( args ) {\n\tpaper.CompoundPath.prototype.constructor.apply( this );\n\n\tif ( args && typeof args.unicode === 'string' ) {\n\t\targs.unicode = args.unicode.charCodeAt(0);\n\t}\n\n\tthis.ot = new opentype.Glyph( args );\n\tthis.ot.path = new opentype.Path();\n\n\tthis.name = args.name;\n\t// workaround opentype 'unicode === 0' bug\n\tthis.ot.unicode = args.unicode;\n\n\t//this.contours = ( args && args.contours ) || [];\n\tthis.anchors = ( args && args.anchors ) || [];\n\tthis.components = ( args && args.components ) || [];\n\tthis.parentAnchors = ( args && args.parentAnchors ) || [];\n\n\t// default fill color needed to display the glyph in a canvas\n\tthis.fillColor = new paper.Color(0, 0, 0);\n\t// but each individual glyph must be explicitely made visible\n\tthis.visible = false;\n}\n\nGlyph.prototype = Object.create(paper.CompoundPath.prototype);\nGlyph.prototype.constructor = Glyph;\n\n// Todo: handle unicode updates\nObject.defineProperty(Glyph.prototype, 'unicode', {\n\tset: function( code ) {\n\t\tthis.ot.unicode = typeof code === 'string' ?\n\t\t\tcode.charCodeAt(0) :\n\t\t\tcode;\n\t},\n\tget: function() {\n\t\treturn this.ot.unicode;\n\t}\n});\n\n// proxy *Child/*Children methods to *Contour/*Contours\n// This has the added benefit of preventing CompoundPath#insertChildren\n// from arbitrarily changing the direction of paths\nObject.getOwnPropertyNames( paper.Item.prototype )\n\t.forEach(function(name) {\n\t\t// exclude getters and non-methods\n\t\tif ( Object.getOwnPropertyDescriptor(this, name).get ||\n\t\t\t\ttypeof this[name] !== 'function' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( name.indexOf('Children') !== -1 ) {\n\t\t\tthis[name.replace('Children', 'Contours')] = this[name];\n\n\t\t} else if ( name.indexOf('Child') !== -1 ) {\n\t\t\tthis[name.replace('Child', 'Contour')] = this[name];\n\t\t}\n\n\t}, paper.Item.prototype);\n\n// Fix two problems with CompoundPath#insertChildren:\n// - it arbitrarily changes the direction of paths\n// - it seems that it doesn't handle CompoundPath arguments\nGlyph.prototype.insertChildren = function(index, items, _preserve) {\n\tif ( Array.isArray( items ) ) {\n\t\t// flatten items to handle CompoundPath children\n\t\titems = [].concat.apply([], items.map(function(item) {\n\t\t\treturn item instanceof paper.Path ? item : item.children;\n\t\t}));\n\t}\n\n\treturn paper.Item.prototype.insertChildren.call(\n\t\tthis, index, items, _preserve, paper.Path\n\t);\n};\n\n// proxy .children to .contours\nObject.defineProperty(\n\tGlyph.prototype,\n\t'contours',\n\tObject.getOwnPropertyDescriptor( paper.Item.prototype, 'children' )\n);\n\nGlyph.prototype.addComponent = function( item ) {\n\tthis.components.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addComponents = function( components ) {\n\treturn components.forEach(function(component) {\n\t\tthis.addComponent(component);\n\t}, this);\n};\n\nGlyph.prototype.addAnchor = function( item ) {\n\tthis.anchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addAnchors = function( anchors ) {\n\treturn anchors.forEach(function(anchor) {\n\t\tthis.addAnchor(anchor);\n\t}, this);\n};\n\nGlyph.prototype.addParentAnchor = function( item ) {\n\tthis.parentAnchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addUnicode = function( code ) {\n\tthis.ot.addUnicode( code );\n\n\treturn this;\n};\n\nGlyph.prototype.interpolate = function( glyph0, glyph1, coef ) {\n\tfor (var i = 0, l = this.contours.length; i < l; i++) {\n\t\t// The number of children should be the same everywhere,\n\t\t// but we're going to try our best anyway\n\t\tif ( !glyph0.contours[i] || !glyph1.contours[i] ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.contours[i].interpolate(\n\t\t\tglyph0.contours[i],\n\t\t\tglyph1.contours[i],\n\t\t\tcoef\n\t\t);\n\n\t\tthis.components.forEach(function(component, j) {\n\t\t\tcomponent.interpolate(\n\t\t\t\tglyph0.components[j], glyph1.components[j], coef\n\t\t\t);\n\t\t});\n\n\t\tthis.ot.advanceWidth =\n\t\t\tglyph0.ot.advanceWidth +\n\t\t\t( glyph1.ot.advanceWidth - glyph0.ot.advanceWidth ) * coef;\n\t\tthis.ot.leftSideBearing =\n\t\t\tglyph0.ot.leftSideBearing +\n\t\t\t( glyph1.ot.leftSideBearing - glyph0.ot.leftSideBearing ) * coef;\n\t\tthis.ot.xMax =\n\t\t\tglyph0.ot.xMax + ( glyph1.ot.xMax - glyph0.ot.xMax ) * coef;\n\t\tthis.ot.xMin =\n\t\t\tglyph0.ot.xMin + ( glyph1.ot.xMin - glyph0.ot.xMin ) * coef;\n\t\tthis.ot.yMax =\n\t\t\tglyph0.ot.yMax + ( glyph1.ot.yMax - glyph0.ot.yMax ) * coef;\n\t\tthis.ot.yMin =\n\t\t\tglyph0.ot.yMin + ( glyph1.ot.yMin - glyph0.ot.yMin ) * coef;\n\t}\n\n\treturn this;\n};\n\nGlyph.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.contours.forEach(function( contour ) {\n\t\tcontour.updateSVGData( path );\n\t}, this);\n\n\tthis.components.forEach(function( component ) {\n\t\tcomponent.updateSVGData( path );\n\t});\n\n\treturn this.svgData;\n};\n\nGlyph.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.contours.forEach(function( contour ) {\n\t\tcontour.updateOTCommands( path );\n\t}, this);\n\n\tthis.components.forEach(function( component ) {\n\t\tcomponent.updateOTCommands( path );\n\t});\n\n\treturn this.ot;\n};\n\nGlyph.prototype.importOT = function( otGlyph ) {\n\tvar current;\n\tthis.ot = otGlyph;\n\n\tif ( !otGlyph.path || !otGlyph.path.commands ) {\n\t\treturn this;\n\t}\n\n\tthis.ot.path.commands.forEach(function(command) {\n\t\tswitch ( command.type ) {\n\t\t\tcase 'M':\n\t\t\t\tcurrent = new paper.Path();\n\t\t\t\tthis.addContour( current );\n\n\t\t\t\tcurrent.moveTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tcurrent.lineTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tcurrent.cubicCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\t[ command.x2, command.y2 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tcurrent.quadraticCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\t// When the glyph has no contour,\n\t\t\t\t// they contain a single Z command in\n\t\t\t\t// opentype.js.\n\t\t\t\t// TODO: see how we should handle that\n\t\t\t\tif ( current ) {\n\t\t\t\t\tcurrent.closePath();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}, this);\n\n\treturn this;\n};\n\nmodule.exports = Glyph;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2}],6:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nObject.defineProperty( paper.Segment.prototype, 'x', {\n\tget: function() {\n\t\treturn this.point.x;\n\t},\n\tset: function( value ) {\n\t\tthis.point.x = value;\n\t}\n});\n\nObject.defineProperty( paper.Segment.prototype, 'y', {\n\tget: function() {\n\t\treturn this.point.y;\n\t},\n\tset: function( value ) {\n\t\tthis.point.y = value;\n\t}\n});\n\nmodule.exports = paper.Segment;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],7:[function(require,module,exports){\n/* Extend the Path prototype to add OpenType conversion\n * and alias *segments methods and properties to *nodes\n */\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nvar proto = paper.PaperScope.prototype.Path.prototype;\n\n// alias *Segments methods to *Nodes equivalents\n[ 'add', 'insert', 'remove' ].forEach(function(name) {\n\tproto[name + 'Nodes'] =\n\t\tproto[name + 'Segments'];\n});\n\n// alias .segments to .nodes\nObject.defineProperties(proto, {\n\tnodes: Object.getOwnPropertyDescriptor( proto, 'segments' ),\n\tfirstNode: Object.getOwnPropertyDescriptor( proto, 'firstSegment' ),\n\tlastNode: Object.getOwnPropertyDescriptor( proto, 'lastSegment' )\n});\n\nproto.updateOTCommands = function( path ) {\n\tif ( this.visible === false ) {\n\t\treturn path;\n\t}\n\n\tpath.commands.push({\n\t\ttype: 'M',\n\t\tx: Math.round( this._segments[0].point.x ) || 0,\n\t\ty: Math.round( this._segments[0].point.y ) || 0\n\t});\n\n\tthis.curves.forEach(function( curve ) {\n\t\tif ( curve.isLinear() ) {\n\t\t\tpath.commands.push({\n\t\t\t\ttype: 'L',\n\t\t\t\tx: Math.round( curve.point2.x ) || 0,\n\t\t\t\ty: Math.round( curve.point2.y ) || 0\n\t\t\t});\n\n\t\t} else {\n\t\t\tpath.commands.push({\n\t\t\t\ttype: 'C',\n\t\t\t\tx1: Math.round( curve.point1.x + curve.handle1.x ) || 0,\n\t\t\t\ty1: Math.round( curve.point1.y + curve.handle1.y ) || 0,\n\t\t\t\tx2: Math.round( curve.point2.x + curve.handle2.x ) || 0,\n\t\t\t\ty2: Math.round( curve.point2.y + curve.handle2.y ) || 0,\n\t\t\t\tx: Math.round( curve.point2.x ) || 0,\n\t\t\t\ty: Math.round( curve.point2.y ) || 0\n\t\t\t});\n\t\t}\n\t});\n\n\treturn path;\n};\n\nproto.updateSVGData = function( path ) {\n\tif ( this.visible === false ) {\n\t\treturn path;\n\t}\n\n\tpath.push(\n\t\t'M',\n\t\tMath.round( this._segments[0].point.x ) || 0,\n\t\tMath.round( this._segments[0].point.y ) || 0\n\t);\n\n\tthis.curves.forEach(function( curve ) {\n\t\tif ( curve.isLinear() ) {\n\t\t\tpath.push(\n\t\t\t\t'L',\n\t\t\t\tMath.round( curve.point2.x ) || 0,\n\t\t\t\tMath.round( curve.point2.y ) || 0\n\t\t\t);\n\n\t\t} else {\n\t\t\tpath.push(\n\t\t\t\t'C',\n\t\t\t\tMath.round( curve.point1.x + curve.handle1.x ) || 0,\n\t\t\t\tMath.round( curve.point1.y + curve.handle1.y ) || 0,\n\t\t\t\tMath.round( curve.point2.x + curve.handle2.x ) || 0,\n\t\t\t\tMath.round( curve.point2.y + curve.handle2.y ) || 0,\n\t\t\t\tMath.round( curve.point2.x ) || 0,\n\t\t\t\tMath.round( curve.point2.y ) || 0\n\t\t\t);\n\t\t}\n\t});\n\n\treturn path;\n};\n\nmodule.exports = paper.Path;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],8:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tFont = require('./Font.js'),\n\tGlyph = require('./Glyph.js'),\n\tPath = require('./Path.js'),\n\tNode = require('./Node.js'),\n\tCollection = require('./Collection.js');\n\npaper.PaperScope.prototype.Font = Font;\npaper.PaperScope.prototype.Glyph = Glyph;\npaper.PaperScope.prototype.Path = Path;\npaper.PaperScope.prototype.Node = Node;\npaper.PaperScope.prototype.Collection = Collection;\n\nfunction plumin( arg ) {\n\tif ( arguments.length === 1 && arg instanceof Collection ) {\n\t\treturn arg;\n\t}\n\n\tvar c = Object.create( Collection.prototype );\n\tCollection.apply( c, arguments );\n\treturn c;\n}\n\nplumin.opentype = opentype;\n\nplumin.proxy = Collection.proxy.bind(plumin);\nplumin.proxy(paper);\n\nmodule.exports = plumin;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Collection.js\":3,\"./Font.js\":4,\"./Glyph.js\":5,\"./Node.js\":6,\"./Path.js\":7}]},{},[8])(8)\n});\n\n\n//# sourceMappingURL=plumin.js.map","var plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tDepTree = require('../node_modules/deptree/index.js');\n\nvar paper = plumin.paper,\n\tUtils = {};\n\n// create Glyph instance and all its child items: anchors, contours\n// and components\nUtils.glyphFromSrc = function( glyphSrc, fontSrc, embed ) {\n\tvar glyph = new paper.Glyph({\n\t\tname: glyphSrc.name,\n\t\tunicode: glyphSrc.unicode\n\t});\n\tglyph.src = glyphSrc;\n\tUtils.mergeStatic( glyph, glyphSrc );\n\n\t(glyphSrc.anchors || []).forEach(function(anchorSrc) {\n\t\tvar anchor = new paper.Node();\n\t\tanchor.src = anchorSrc;\n\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\tglyph.addAnchor( anchor );\n\t});\n\n\t(glyphSrc.contours || []).forEach(function(contourSrc) {\n\t\tvar contour = new paper.Path();\n\t\tcontour.src = contourSrc;\n\t\tUtils.mergeStatic( contour, contourSrc );\n\n\t\tglyph.addContour( contour );\n\n\t\t// TODO: handle oncurve/offcurve points\n\t\tcontourSrc.nodes.forEach(function(nodeSrc) {\n\t\t\tvar node = new paper.Node();\n\t\t\tnode.src = nodeSrc;\n\t\t\tUtils.mergeStatic( node, nodeSrc );\n\n\t\t\tcontour.add( node );\n\t\t});\n\t});\n\n\tif ( !glyphSrc.components ) {\n\t\treturn glyph;\n\t}\n\n\t// components can only be embedded once all glyphs have been generated\n\t// from source\n\tglyph.embedComponents = function() {\n\t\tglyphSrc.components.forEach(function(componentSrc) {\n\t\t\t// components are glyphs, quite simply\n\t\t\tvar component = Utils.glyphFromSrc(\n\t\t\t\t\tfontSrc.glyphs[componentSrc.base],\n\t\t\t\t\tfontSrc,\n\t\t\t\t\t// components' subcomponents can be embedded immediatly\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\tUtils.naive.expandSkeletons( component );\n\t\t\tglyph.addComponent( component );\n\n\t\t\t(componentSrc.parentAnchors || []).forEach(function(anchorSrc) {\n\t\t\t\tvar anchor = new paper.Node();\n\t\t\t\tanchor.src = anchorSrc;\n\t\t\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\t\t\tcomponent.addParentAnchor( anchor );\n\t\t\t});\n\t\t});\n\n\t\tdelete glyph.embedComponents;\n\t};\n\n\tif ( embed ) {\n\t\tglyph.embedComponents();\n\t}\n\n\treturn glyph;\n};\n\nUtils.propFromPath = function( path, length, context ) {\n\tfor ( var i = -1; ++i < length; ) {\n\t\tcontext = context[ path[i] ];\n\t}\n\n\treturn context;\n};\n\nUtils.mergeStatic = function( obj, src ) {\n\tfor ( var i in src ) {\n\t\tif ( typeof src[i] !== 'object' ) {\n\t\t\tobj[i] = src[i];\n\t\t}\n\t}\n};\n\nUtils.createUpdaters = function( leaf, path ) {\n\tif ( leaf.constructor === Object &&\n\t\t\t( typeof leaf._operation === 'string' ||\n\t\t\ttypeof leaf._operation === 'function' ) ) {\n\n\t\tvar args = [\n\t\t\t\t\t'propName', 'contours', 'anchors', 'parentAnchors', 'Utils'\n\t\t\t\t]\n\t\t\t\t.concat( leaf._parameters || [] )\n\t\t\t\t.concat(\n\t\t\t\t\t( typeof leaf._operation === 'string' ?\n\t\t\t\t\t\t'return ' + leaf._operation :\n\t\t\t\t\t\t// In which case is the operation a function?\n\t\t\t\t\t\t// I can't remember, maybe I thought it could be useful\n\t\t\t\t\t\t// someday...\n\t\t\t\t\t\tleaf._operation.toString()\n\t\t\t\t\t\t\t.replace(/function\\s*()\\s*\\{(.*?)\\}$/, '$1').trim()\n\t\t\t\t\t) +\n\t\t\t\t\t// add sourceURL pragma to help debugging\n\t\t\t\t\t'\\n\\n//# sourceURL=' + path\n\t\t\t\t);\n\n\t\tleaf._updater = Function.apply( null, args );\n\t\treturn leaf._updater;\n\t}\n\n\tif ( leaf.constructor === Object ) {\n\t\tfor ( var i in leaf ) {\n\t\t\tUtils.createUpdaters( leaf[i], path + '.' + i );\n\t\t}\n\t}\n\n\tif ( leaf.constructor === Array ) {\n\t\tleaf.forEach(function(child, j) {\n\t\t\tUtils.createUpdaters( child, path + '.' + j );\n\t\t});\n\t}\n};\n\n// convert the glyph source from the ufo object model to the paper object model\n// this is the inverse operation done by jsufonify\nUtils.ufoToPaper = function( src ) {\n\tif ( src.anchor ) {\n\t\tsrc.anchors = src.anchor;\n\t\tdelete src.anchor;\n\t}\n\n\tif ( src.outline && src.outline.contour ) {\n\t\tsrc.contours = src.outline.contour;\n\t\tdelete src.outline.contour;\n\t}\n\n\tsrc.contours.forEach(function(contour) {\n\t\tif ( contour.point ) {\n\t\t\tcontour.nodes = contour.point;\n\t\t\tdelete contour.point;\n\t\t}\n\t});\n\n\tif ( src.outline && src.outline.component ) {\n\t\tsrc.components = src.outline.component;\n\n\t\tsrc.components.forEach(function(component) {\n\t\t\tif ( component.anchor ) {\n\t\t\t\tcomponent.parentAnchors = component.anchor;\n\t\t\t\tdelete component.anchor;\n\t\t\t}\n\t\t});\n\n\t\tdelete src.outline.component;\n\t}\n\n\tdelete src.outline;\n\n\tif ( src.lib && src.lib.transformList ) {\n\t\tsrc.transformList = src.lib.transformList;\n\t\tdelete src.lib.transformList;\n\t}\n\n\treturn src;\n};\n\nUtils.solveDependencyTree = function( leafSrc, path, excludeList ) {\n\tif ( !excludeList ) {\n\t\texcludeList = [];\n\t}\n\n\tvar depTree = new DepTree();\n\n\tUtils.excludeList( leafSrc, null, excludeList );\n\n\tUtils.dependencyTree( leafSrc, null, excludeList, depTree );\n\n\treturn depTree.resolve();\n};\n\nUtils.excludeList = function( leafSrc, path, excludeList ) {\n\tfor ( var i in leafSrc ) {\n\t\tvar attr = leafSrc[i],\n\t\t\tcurrPath = path ? path + '.' + i : i;\n\n\t\tif ( typeof attr !== 'object' ) {\n\t\t\t// static props are immediatly available, exclude them from the tree\n\t\t\texcludeList.push( currPath );\n\n\t\t} else if ( attr._dependencies ) {\n\t\t\t// parentAnchors are always here when you need them, #parentingWin\n\t\t\tattr._dependencies.forEach(function(dep) {\n\t\t\t\tif ( /^parentAnchors/.test(dep) ) {\n\t\t\t\t\texcludeList.push( dep );\n\t\t\t\t}\n\t\t\t});\n\n\t\t// recurse\n\t\t} else {\n\t\t\tUtils.excludeList( attr, currPath, excludeList );\n\t\t}\n\t}\n};\n\nUtils.dependencyTree = function( leafSrc, path, excludeList, depTree ) {\n\tfor ( var i in leafSrc ) {\n\t\tvar attr = leafSrc[i],\n\t\t\tcurrPath = path ? path + '.' + i : i;\n\n\t\tif ( typeof attr === 'object' ) {\n\t\t\t// objects with updater functions have dependencies\n\t\t\tif ( attr._dependencies ) {\n\t\t\t\t// TODO: do we really need to filter the excluded list here and\n\t\t\t\t// in expandDependencies? Also, we don't remove duplicates, is\n\t\t\t\t// that a problem?\n\t\t\t\tvar deps = attr._dependencies.filter(function(dep) {\n\t\t\t\t\treturn excludeList.indexOf( dep ) === -1;\n\t\t\t\t});\n\t\t\t\t// TODO: we should add the .expand properties only when in\n\t\t\t\t// a skeleton\n\t\t\t\tdeps = Utils.expandDependencies( deps, excludeList );\n\t\t\t\tdepTree.add(currPath, deps);\n\t\t\t}\n\n\t\t\tif ( !attr._dependencies && !attr._operation ) {\n\t\t\t\tUtils.dependencyTree( attr, currPath, excludeList, depTree );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn depTree;\n};\n\nvar rpoint = /\\.point$/;\n// patterns that should be searched for in dependencies and expanded\n// This list is expandable by plugins, 'naive' uses this possibility\n// hashtag #expandableception\nUtils.expandables = [\n\t[ /\\.nodes\\.\\d+\\.point$/, function( dep ) {\n\t\tdep = dep.replace(rpoint, '');\n\n\t\treturn [\n\t\t\tdep + '.x',\n\t\t\tdep + '.y'\n\t\t];\n\t} ],\n\t[ /\\.nodes\\.\\d+$/, function( dep ) {\n\t\treturn [\n\t\t\tdep + '.x',\n\t\t\tdep + '.y',\n\t\t\tdep + '.expand'\n\t\t];\n\t} ]\n];\nUtils.expandDependencies = function( deps, excludeList ) {\n\tdeps = deps.map(function(dep) {\n\t\t// search for an expandable pattern and... expand the dependency\n\t\tfor ( var i = -1, l = Utils.expandables.length; ++i < l; ) {\n\t\t\tif ( Utils.expandables[i][0].test( dep ) ) {\n\t\t\t\treturn Utils.expandables[i][1]( dep );\n\t\t\t}\n\t\t}\n\n\t\treturn dep;\n\t});\n\n\t// flatten deps array and remove items from excludeList\n\treturn [].concat.apply([], deps).filter(function(dep) {\n\t\treturn excludeList.indexOf( dep ) === -1;\n\t});\n};\n\n// The following function should be useless, thanks to paper\nUtils.lineLineIntersection = function( p1, p2, p3, p4 ) {\n\tvar x1 = p1.x,\n\t\ty1 = p1.y,\n\t\tx2 = p2.x,\n\t\ty2 = p2.y,\n\t\tx3 = p3.x,\n\t\ty3 = p3.y,\n\t\tx4 = p4.x,\n\t\ty4 = p4.y,\n\t\td = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n\tif ( d === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn new Float32Array([\n\t\t( (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4) ) /\n\t\td,\n\t\t( (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4) ) /\n\t\td\n\t]);\n};\n\n// Find the intersection of two rays.\n// A ray is defined by a point and an angle.\nUtils.rayRayIntersection = function( p1, a1, p2, a2 ) {\n\t// line equations\n\tvar a = Math.tan(a1),\n\t\tb = Math.tan(a2),\n\t\tc = p1.y - a * p1.x,\n\t\td = p2.y - b * p2.x,\n\t\tx,\n\t\ty;\n\n\t// When searching for lines intersection,\n\t// angles can be normalized to 0 < a < PI\n\t// This will be helpful in detecting special cases below.\n\ta1 = a1 % Math.PI;\n\tif ( a1 < 0 ) {\n\t\ta1 += Math.PI;\n\t}\n\ta2 = a2 % Math.PI;\n\tif ( a2 < 0 ) {\n\t\ta2 += Math.PI;\n\t}\n\n\t// no intersection\n\tif ( a1 === a2 ) {\n\t\treturn null;\n\t}\n\n\t// Optimize frequent and easy special cases.\n\t// Without optimization, results would be incorrect when cos(a) === 0\n\tif ( a1 === 0 ) {\n\t\ty = p1.y;\n\t} else if ( a1 === Math.PI / 2 ) {\n\t\tx = p1.x;\n\t}\n\tif ( a2 === 0 ) {\n\t\ty = p2.y;\n\t} else if ( a2 === Math.PI / 2 ) {\n\t\tx = p2.x;\n\t}\n\n\t// easiest case\n\tif ( x !== undefined && y !== undefined ) {\n\t\treturn new Float32Array([ x, y ]);\n\t}\n\n\t// other cases that can be optimized\n\tif ( a1 === 0 ) {\n\t\treturn new Float32Array([ ( y - d ) / b, y ]);\n\t}\n\tif ( a1 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, b * x + d ]);\n\t}\n\tif ( a2 === 0 ) {\n\t\treturn new Float32Array([ ( y - c ) / a, y ]);\n\t}\n\tif ( a2 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, a * x + c ]);\n\t}\n\n\t// intersection from two line equations\n\t// algo: http://en.wikipedia.org/wiki/Line–line_intersection#Given_the_equations_of_the_lines\n\treturn new Float32Array([\n\t\tx = (d - c) / (a - b),\n\t\t// this should work equally well with ax+c or bx+d\n\t\ta * x + c\n\t]);\n};\n\n// return the angle between two points\nUtils.lineAngle = function( p0, p1 ) {\n\treturn Math.atan2( p1.y - p0.y, p1.x - p0.x );\n};\n\nUtils.onLine = function( params ) {\n\tvar origin = params.on[0],\n\t\tvector = [\n\t\t\tparams.on[1].x - params.on[0].x,\n\t\t\tparams.on[1].y - params.on[0].y\n\t\t];\n\n\treturn 'x' in params ?\n\t\t( params.x - origin.x ) / vector[0] * vector[1] + origin.y :\n\t\t( params.y - origin.y ) / vector[1] * vector[0] + origin.x;\n};\n\nvar rdeg = /deg$/;\nUtils.transformsToMatrix = function( transforms, origin ) {\n\tvar prev = new Float32Array(6),\n\t\tcurr = new Float32Array(6),\n\t\trslt = new Float32Array([ 1, 0, 0, 1, 0, 0 ]);\n\n\tif ( origin ) {\n\t\ttransforms.unshift([ 'translate', origin[0], origin[1] ]);\n\t\ttransforms.push([ 'translate', -origin[0], -origin[1] ]);\n\t}\n\n\ttransforms.forEach(function( transform ) {\n\t\tcurr[0] = curr[3] = 1;\n\t\tcurr[1] = curr[2] = curr[4] = curr[5] = 0;\n\n\t\t// convert degrees to radian\n\t\tfor ( var i = 1; i < transform.length; i++ ) {\n\t\t\tif ( transform[i] && typeof transform[i] === 'string' &&\n\t\t\t\t\trdeg.test(transform[i]) ) {\n\t\t\t\ttransform[i] = parseFloat(transform[i]) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\t\t}\n\n\t\tswitch ( transform[0] ) {\n\t\tcase 'translateX':\n\t\t\tcurr[4] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translateY':\n\t\t\tcurr[5] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translate':\n\t\t\tcurr[4] = transform[1];\n\t\t\tcurr[5] = transform[2] || 0;\n\t\t\tbreak;\n\n\t\tcase 'rotate':\n\t\t\tcurr[0] = Math.cos( transform[1] );\n\t\t\tcurr[1] = Math.sin( transform[1] );\n\t\t\tcurr[2] = -curr[1];\n\t\t\tcurr[3] = curr[0];\n\t\t\tbreak;\n\n\t\tcase 'scaleX':\n\t\t\tcurr[0] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scaleY':\n\t\t\tcurr[3] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scale':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[3] = transform.length > 2 ? transform[2] : transform[1];\n\t\t\tbreak;\n\n\t\tcase 'skewX':\n\t\t\t// stop parsing transform when encountering skewX(90)\n\t\t\t// see http://stackoverflow.com/questions/21094958/how-to-deal-with-infinity-in-a-2d-matrix\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[2] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'skewY':\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[1] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'matrix':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[1] = transform[2];\n\t\t\tcurr[2] = transform[3];\n\t\t\tcurr[3] = transform[4];\n\t\t\tcurr[4] = transform[5];\n\t\t\tcurr[5] = transform[6];\n\t\t\tbreak;\n\t\t}\n\n\t\tprev[0] = rslt[0];\n\t\tprev[1] = rslt[1];\n\t\tprev[2] = rslt[2];\n\t\tprev[3] = rslt[3];\n\t\tprev[4] = rslt[4];\n\t\tprev[5] = rslt[5];\n\n\t\trslt[0] = prev[0] * curr[0] + prev[2] * curr[1];\n\t\trslt[1] = prev[1] * curr[0] + prev[3] * curr[1];\n\t\trslt[2] = ( prev[0] * curr[2] || 0 ) + prev[2] * curr[3];\n\t\trslt[3] = ( prev[1] * curr[2] || 0 ) + prev[3] * curr[3];\n\t\trslt[4] = prev[0] * curr[4] + prev[2] * curr[5] + prev[4];\n\t\trslt[5] = prev[1] * curr[4] + prev[3] * curr[5] + prev[5];\n\t});\n\n\treturn new paper.Matrix(\n\t\trslt[0],\n\t\trslt[2],\n\t\trslt[1],\n\t\trslt[3],\n\t\trslt[4],\n\t\trslt[5]\n\t);\n};\n\nUtils.normalizeAngle = function( angle ) {\n\treturn angle % ( 2 * Math.PI ) + ( angle < 0 ? 2 * Math.PI : 0 );\n};\n\nmodule.exports = Utils;\n","var plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tUtils = require('./Utils.js');\n\nvar paper = plumin.paper,\n\tnaive = {};\n\n// default method to expand skeletons:\n// derives two additional node from every node with an .expand object\nnaive.expandSkeletons = function( glyph ) {\n\tvar additionalContours = [];\n\n\tglyph.contours.forEach(function( contour, i ) {\n\t\tif ( contour.skeleton !== true ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar leftContour,\n\t\t\trightContour,\n\t\t\tleftNodes = [],\n\t\t\trightNodes = [],\n\t\t\tfirstNode,\n\t\t\tlastNode;\n\n\t\t// skeletons should be hidden\n\t\tcontour.visible = false;\n\n\t\tcontour.nodes.forEach(function( node, j ) {\n\t\t\t// TODO: a node should be able to specify two arbitrary expanded\n\t\t\t// nodes\n\t\t\tvar left = new paper.Node(),\n\t\t\t\tright = new paper.Node();\n\n\t\t\tleftNodes.push(left);\n\t\t\trightNodes.unshift(right);\n\t\t\tnode.expandedTo = [ left, right ];\n\t\t\tleft.expandedFrom = right.expandedFrom = node;\n\n\t\t\tif ( !node.src.expandedTo ) {\n\t\t\t\tleft.src = {\n\t\t\t\t\t_dependencies: [ 'contours.' + i + '.nodes.' + j ],\n\t\t\t\t\t_parameters: [ 'width' ],\n\t\t\t\t\t_updater: naive.expandedNodeUpdater\n\t\t\t\t};\n\t\t\t\tright.src = {\n\t\t\t\t\t_dependencies: [ 'contours.' + i + '.nodes.' + j ],\n\t\t\t\t\t_parameters: [ 'width' ],\n\t\t\t\t\t_updater: naive.expandedNodeUpdater\n\t\t\t\t};\n\t\t\t\tnode.src.expandedTo = [ left.src, right.src ];\n\n\t\t\t// the expanded node might have been defined explicitely\n\t\t\t} else if ( node.src.expandedTo[0] &&\n\t\t\t\t\t!node.src.expandedTo[0]._updater ) {\n\t\t\t\tnode.src.expandedTo.forEach(function( src, k ) {\n\t\t\t\t\tUtils.mergeStatic( node.expandedTo[k], src );\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// This will copy properties such as types, directions and tensions\n\t\t\t// to the expanded node.\n\t\t\t// This should be the last updated property of this node.\n\t\t\t// We rely on the fact that javascript interpreters currently\n\t\t\t// enumerate properties in insertion order, but this behavior isn't\n\t\t\t// in the specs.\n\t\t\tnode.src.copier = {\n\t\t\t\t// We depend on .expand.angle, but we don't specify it,\n\t\t\t\t// otherwise copier would be executed right after .expand, but\n\t\t\t\t// before the other properties.\n\t\t\t\t_dependencies: [],\n\t\t\t\t_parameters: [],\n\t\t\t\t_updater: naive.skeletonCopier\n\t\t\t};\n\n\t\t});\n\n\t\tif ( !contour.expandedTo && !contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes.concat(rightNodes)\n\t\t\t});\n\t\t\tcontour.expandedTo = [ leftContour ];\n\t\t\tleftContour.expandedFrom = contour;\n\t\t\tadditionalContours.push( leftContour );\n\n\t\t\tfirstNode = contour.firstNode;\n\t\t\tlastNode = contour.lastNode;\n\n\t\t\tfirstNode.type = 'corner';\n\t\t\tlastNode.type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].type = 'corner';\n\t\t\tfirstNode.expandedTo[1].type = 'corner';\n\t\t\tlastNode.expandedTo[0].type = 'corner';\n\t\t\tlastNode.expandedTo[1].type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].typeIn = 'line';\n\t\t\tfirstNode.expandedTo[1].typeOut = 'line';\n\t\t\tlastNode.expandedTo[0].typeOut = 'line';\n\t\t\tlastNode.expandedTo[1].typeIn = 'line';\n\n\t\t} else if ( !contour.expandedTo && contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes\n\t\t\t});\n\t\t\tadditionalContours.push( leftContour );\n\t\t\trightContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: rightNodes\n\t\t\t});\n\t\t\tadditionalContours.push( rightContour );\n\n\t\t\tcontour.expandedTo = [\n\t\t\t\tleftContour,\n\t\t\t\trightContour\n\t\t\t];\n\t\t\tleftContour.expandedFrom = rightContour.expandedFrom = contour;\n\t\t}\n\t});\n\n\tglyph.addContours( additionalContours );\n};\n\n// Calculate expanded node position\nnaive.expandedNodeUpdater = function(\n\tpropName, contours, anchors, parentAnchors, _Utils, _width\n) {\n\tvar node = this[propName],\n\t\tisLeft = +propName === 0,\n\t\torigin = node.expandedFrom,\n\t\texpand = origin.expand,\n\t\twidth = expand && expand.width !== undefined ?\n\t\t\texpand.width : _width,\n\t\tcoef = expand && expand.distr !== undefined ?\n\t\t\t( isLeft ? expand.distr : 1 - expand.distr ) :\n\t\t\t0.5,\n\t\tangle = ( isLeft ? Math.PI : 0 ) +\n\t\t\t( expand && expand.angle !== undefined ?\n\t\t\t\texpand.angle :\n\t\t\t\t// TWe resort to using directions.\n\t\t\t\t// This is wrong, directions are not included in the\n\t\t\t\t// dependencies of the updater and might not be ready yet.\n\t\t\t\t// TODO: Fix this (always require angle to be specified?)\n\t\t\t\t( origin._dirOut !== undefined ?\n\t\t\t\t\torigin._dirOut - Math.PI / 2 :\n\t\t\t\t\torigin._dirIn + Math.PI / 2\n\t\t\t\t)\n\t\t\t);\n\n\t// position\n\tnode.point.x = origin.point.x + ( width * coef * Math.cos( angle ) );\n\tnode.point.y = origin.point.y + ( width * coef * Math.sin( angle ) );\n};\n\n// copy skeleton properties such as types, directions and tensions to expanded\n// nodes\nnaive.skeletonCopier = function() {\n\tvar node = this,\n\t\tangle = node.expand && node.expand.angle || 0,\n\t\tleft = node.expandedTo[0],\n\t\tright = node.expandedTo[1];\n\n\t// node type\n\tif ( node.type !== undefined ) {\n\t\tleft.type = right.type = node.type;\n\t}\n\n\t// direction type\n\tif ( node.typeIn !== undefined ) {\n\t\tleft.typeIn = right.typeOut = node.typeIn;\n\t}\n\tif ( node.typeOut !== undefined ) {\n\t\tleft.typeOut = right.typeIn = node.typeOut;\n\t}\n\n\t// direction\n\tif ( node._dirIn !== undefined ) {\n\t\tleft._dirIn = right._dirOut = node._dirIn;\n\n\t\tif ( node.type === 'smooth' && node._dirOut === undefined ) {\n\t\t\tleft._dirOut = right._dirIn = node._dirIn + Math.PI;\n\t\t}\n\t}\n\tif ( node._dirOut !== undefined ) {\n\t\tleft._dirOut = right._dirIn = node._dirOut;\n\n\t\tif ( node.type === 'smooth' && node._dirIn === undefined ) {\n\t\t\tleft._dirIn = right._dirOut = node._dirOut + Math.PI;\n\t\t}\n\t}\n\t// use angle if direction isn't already defined\n\tif ( left._dirIn === undefined ) { // implies right._dirOut === undefined\n\t\tleft._dirIn = angle - Math.PI / 2;\n\t\tright._dirOut = angle + Math.PI / 2;\n\t}\n\tif ( left._dirOut === undefined ) { // implies right._dirIn === undefined\n\t\tleft._dirOut = angle + Math.PI / 2;\n\t\tright._dirIn = angle - Math.PI / 2;\n\t}\n\n\t// tension\n\tleft.tensionIn = right.tensionOut = node.tensionIn !== undefined ?\n\t\tnode.tensionIn :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n\tleft.tensionOut = right.tensionIn = node.tensionOut !== undefined ?\n\t\tnode.tensionOut :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n};\n\n// Make sure 'line' types are set on both side of segments\n// and if a smooth node is used in a straight segment, update the directions\n// appropriately this can only be done once the types, directions and position\n// of all nodes have been updated can be renamed #prepareLines if no other\n// operation is added\n// TODO: try doing it at the same time as updateContour (once we have more\n// complex glyphs)\nnaive.prepareContour = function( path ) {\n\tpath.nodes.forEach(function(node) {\n\t\tif ( node.typeIn === 'line' && node.previous ) {\n\t\t\tnode.previous.typeOut = 'line';\n\n\t\t\tif ( node.type === 'smooth' ) {\n\t\t\t\tnode._dirIn = node.point.getAngleInRadians(\n\t\t\t\t\tnode.previous.point\n\t\t\t\t);\n\t\t\t\tnode._dirOut = node._dirIn + Math.PI;\n\t\t\t}\n\t\t}\n\n\t\tif ( node.typeOut === 'line' && node.next ) {\n\t\t\tnode.next.typeIn = 'line';\n\n\t\t\tif ( node.type === 'smooth' ) {\n\t\t\t\tnode._dirOut = node.point.getAngleInRadians( node.next.point );\n\t\t\t\tnode._dirIn = node._dirOut + Math.PI;\n\t\t\t}\n\t\t}\n\t});\n};\n\n// sets the position of control points\n// can be renamed #updateControls if no other operation is added\nnaive.updateContour = function( path, params ) {\n\tvar curviness = params.curviness !== undefined ? params.curviness : 2 / 3;\n\n\tpath.nodes.forEach(function(node) {\n\t\tvar start = node,\n\t\t\tend,\n\t\t\tstartCtrl,\n\t\t\tendCtrl,\n\t\t\tstartType,\n\t\t\tendType,\n\t\t\tstartTension,\n\t\t\tendTension,\n\t\t\tstartDir,\n\t\t\tendDir,\n\t\t\trri;\n\n\t\tif ( !node.next ) {\n\t\t\treturn;\n\t\t}\n\n\t\tend = node.next;\n\t\tstartCtrl = start.handleOut;\n\t\tendCtrl = end.handleIn;\n\n\t\tstartType = start.typeOut;\n\t\tendType = end.typeIn;\n\n\t\tif ( startType === 'line' || endType === 'line' ) {\n\t\t\tstartCtrl.x = 0;\n\t\t\tstartCtrl.y = 0;\n\t\t\tendCtrl.x = 0;\n\t\t\tendCtrl.y = 0;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartTension = start.tensionOut !== undefined ?\n\t\t\tstart.tensionOut :\n\t\t\t( start.tension !== undefined ? start.tension : 1 );\n\t\tendTension = end.tensionIn !== undefined ?\n\t\t\tend.tensionIn :\n\t\t\t( end.tension !== undefined ? end.tension : 1 );\n\n\t\tstartDir = start._dirOut !== undefined ?\n\t\t\tstart._dirOut :\n\t\t\tstart.type === 'smooth' ? start._dirIn + Math.PI : 0;\n\t\tendDir = end._dirIn !== undefined ?\n\t\t\tend._dirIn :\n\t\t\tend.type === 'smooth' ? end._dirOut - Math.PI : 0;\n\n\t\trri = Utils.rayRayIntersection(\n\t\t\tstart._point,\n\t\t\tstartDir,\n\t\t\tend._point,\n\t\t\tendDir\n\t\t);\n\n\t\t// direction of handles is parallel\n\t\tif ( rri === null ) {\n\t\t\t// startCtrl.x = 0;\n\t\t\t// startCtrl.y = 0;\n\t\t\t// endCtrl.x = 0;\n\t\t\t// endCtrl.y = 0;\n\t\t\tvar angle = Utils.lineAngle( start._point, end._point ),\n\t\t\t\tmiddle = {\n\t\t\t\t\tx: Math.abs( start._point.x - end._point.x ) / 2 +\n\t\t\t\t\t\tstart._point.x,\n\t\t\t\t\ty: Math.abs( start._point.y - end._point.y ) / 2 +\n\t\t\t\t\t\tstart._point.y\n\t\t\t\t},\n\t\t\t\tp0 = Utils.rayRayIntersection(\n\t\t\t\t\tstart._point, startDir, middle, angle - Math.PI / 2\n\t\t\t\t),\n\t\t\t\tp1 = Utils.rayRayIntersection(\n\t\t\t\t\tmiddle, angle + Math.PI / 2, end._point, endDir\n\t\t\t\t);\n\n\t\t\tstartCtrl.x = ( Math.round(p0[0]) - start._point.x ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tstartCtrl.y = ( Math.round(p0[1]) - start._point.y ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tendCtrl.x = ( Math.round(p1[0]) - end._point.x ) *\n\t\t\t\tcurviness * endTension;\n\t\t\tendCtrl.y = ( Math.round(p1[1]) - end._point.y ) *\n\t\t\t\tcurviness * endTension;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartCtrl.x = ( Math.round(rri[0]) - start.point.x ) *\n\t\t\tcurviness * startTension;\n\t\tstartCtrl.y = ( Math.round(rri[1]) - start.point.y ) *\n\t\t\tcurviness * startTension;\n\t\tendCtrl.x = ( Math.round(rri[0]) - end.point.x ) *\n\t\t\tcurviness * endTension;\n\t\tendCtrl.y = ( Math.round(rri[1]) - end.point.y ) *\n\t\t\tcurviness * endTension;\n\t});\n};\n\nvar rdeg = /deg$/;\nObject.defineProperties(paper.PaperScope.prototype.Segment.prototype, {\n\texpand: {\n\t\tget: function() {\n\t\t\treturn this._expand;\n\t\t},\n\t\tset: function( expand ) {\n\t\t\tif ( typeof expand.angle === 'string' && rdeg.test(expand.angle) ) {\n\t\t\t\texpand.angle = parseFloat(expand.angle) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\n\t\t\tthis._expand = expand;\n\t\t}\n\t},\n\tdirIn: {\n\t\tget: function() {\n\t\t\treturn this._dirIn;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirIn = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirIn = dir;\n\t\t\t}\n\t\t}\n\t},\n\tdirOut: {\n\t\tget: function() {\n\t\t\treturn this._dirOut;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirOut = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirOut = dir;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar rexpandedTo = /\\.expandedTo\\.\\d+(?:\\.point)?$/;\nUtils.expandables.push([ rexpandedTo, function( dep ) {\n\tdep = dep.replace(rexpandedTo, '');\n\n\treturn [\n\t\tdep + '.x',\n\t\tdep + '.y',\n\t\tdep + '.expand',\n\t\t// let's assume both expanded to will always be calculated toegether\n\t\tdep + '.expandedTo.0',\n\t\tdep + '.expandedTo.1'\n\t];\n} ]);\n\nmodule.exports = naive;\n","/*jshint -W098 */\nvar plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tUtils = require('./Utils.js'),\n\tnaive = require('./naive.js');\n\nvar paper = plumin.paper;\n\nfunction ParametricFont( src ) {\n\tvar font,\n\t\tname,\n\t\tglyphSrc,\n\t\tglyph;\n\n\t// TODO: this, block is only here for backward compat\n\t// and should be removed at some point in the future\n\tif ( !src.fontinfo ) {\n\t\tsrc.fontinfo = src.info;\n\t}\n\n\tfont = new paper.Font( src.fontinfo );\n\n\tfont.src = src;\n\n\tfor ( name in src.glyphs ) {\n\t\tglyphSrc = src.glyphs[name];\n\n\t\tUtils.ufoToPaper( glyphSrc );\n\n\t\tUtils.createUpdaters( glyphSrc, 'glyphs/glyph_' + name );\n\n\t\tglyph = Utils.glyphFromSrc( glyphSrc, src );\n\n\t\tfont.addGlyph( glyph );\n\n\t\tnaive.expandSkeletons( glyph );\n\n\t\tglyph.solvingOrder = Utils.solveDependencyTree( glyphSrc )\n\t\t\t.map(function(path) {\n\t\t\t\treturn path.split('.');\n\t\t\t});\n\t}\n\n\t// all glyphs are ready, embed components now\n\tfont.glyphs.forEach(function( _glyph ) {\n\t\tif ( _glyph.embedComponents ) {\n\t\t\t_glyph.embedComponents();\n\t\t}\n\t});\n\n\treturn font;\n}\n\nplumin.ParametricFont = ParametricFont;\nplumin.Utils = Utils;\nplumin.Utils.naive = naive;\n\npaper.PaperScope.prototype.Font.prototype.update = function( params, set ) {\n\treturn this.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.update( params, this );\n\t}, this);\n};\n\n/* Update the shape of the glyph, according to formula and parameters\n * 0. before running, nodes have already been created by ParametricFont\n *   (including expanded ones thanks to naive.expandSkeletons). And static\n *   properties have been copied over to those nodes\n * 1. We use the solving order to calculate all node properties except\n *    handle positions.\n * 2. We make sure 'line' types are set on both node of bezier curve,\n *    when present.\n *    And we make smooth nodes... smooth.\n * 3. Calculate the position of handles.\n * 4. transform contours\n * 5. Update components and transform them\n */\npaper.PaperScope.prototype.Glyph.prototype.update =\n\tfunction( params, font, solvingOrder ) {\n\t\t// 1. calculate node properties\n\t\t( solvingOrder || this.solvingOrder || [] ).forEach(function(path) {\n\t\t\tvar propName = path[path.length - 1],\n\t\t\t\tsrc = Utils.propFromPath( path, path.length, this.src ),\n\t\t\t\tobj = Utils.propFromPath( path, path.length - 1, this ),\n\t\t\t\tresult = src && src._updater.apply( obj,\n\t\t\t\t\t[\n\t\t\t\t\t\tpropName, this.contours, this.anchors,\n\t\t\t\t\t\tthis.parentAnchors, Utils\n\t\t\t\t\t].concat(\n\t\t\t\t\t\tsrc._parameters.map(function(name) {\n\t\t\t\t\t\t\treturn params[name];\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t// Assume that updaters returning undefined have their own\n\t\t\t// assignment logic\n\t\t\tif ( result !== undefined ) {\n\t\t\t\tobj[propName] = result;\n\t\t\t}\n\t\t}, this);\n\n\t\tthis.contours.forEach(function(contour) {\n\t\t\t// prepare and update outlines and expanded contours, but not\n\t\t\t// skeletons\n\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\t// Previously prepareContour was only executed on outlines and\n\t\t\t\t// skeletons but not on expanded contours.\n\t\t\t\t// I have no idea why but I might rediscover it later.\n\t\t\t\t// TODO: it might be possible to do 2. and 3. at the same time\n\n\t\t\t\t// 2. check 'line' curves and smooth nodes\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\t// 3. calculate the position of handles\n\t\t\t\tnaive.updateContour( contour, params );\n\t\t\t}\n\t\t});\n\n\t\t// 4. transform contours\n\t\tthis.contours.forEach(function(contour) {\n\t\t\t// a. transform the contour\n\t\t\t// prepare and update outlines and expanded contours, but not\n\t\t\t// skeletons\n\t\t\tif ( contour.transforms ) {\n\t\t\t\tvar matrix = Utils.transformsToMatrix(\n\t\t\t\t\t\t\tcontour.transforms, contour.transformOrigin\n\t\t\t\t\t\t);\n\n\t\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\t\tcontour.transform( matrix );\n\n\t\t\t\t// when dealing with a skeleton, apply transforms only to\n\t\t\t\t// expanded items\n\t\t\t\t} else {\n\t\t\t\t\tcontour.expandedTo.forEach(function( _contour ) {\n\t\t\t\t\t\t_contour.transform( matrix );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// b. transform the nodes\n\t\t\tcontour.nodes.forEach(function(node) {\n\t\t\t\tif ( node.transforms ) {\n\t\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\t\tnode.transforms, node.transformOrigin\n\t\t\t\t\t);\n\n\t\t\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\t\t\tnode.transform( matrix );\n\n\t\t\t\t\t// when dealing with a skeleton, apply transforms only to\n\t\t\t\t\t// expanded items\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.expandedTo.forEach(function( _node ) {\n\t\t\t\t\t\t\t_node.transform( matrix );\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// 5. TODO: update components and transform components\n\t\tthis.components.forEach(function(component) {\n\t\t\tcomponent.update(\n\t\t\t\tparams, font, font.glyphMap[component.name].solvingOrder\n\t\t\t);\n\t\t});\n\t};\n\nmodule.exports = plumin;\n"]}