{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/deptree/index.js","node_modules/es6-object-assign/src/index.js","node_modules/plumin.js/dist/plumin.js","src/Utils.js","src/naive.js","src/prototypo.js","src/updateUtils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","prototypo","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"DepTree","nodes","prototype","add","node","dependants","Array","resolveNode","resolved","processing","deps","forEach","dep","indexOf","push","resolve","assign","target","firstSource","undefined","TypeError","to","Object","arguments","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","polyfill","defineProperty","configurable","writable","value","plumin","opentype","argument","predicate","message","assert",2,"line","ctx","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke",3,"cffStandardStrings","cffStandardEncoding","cffExpertEncoding","standardNames","DefaultEncoding","font","charToGlyphIndex","c","charCodeAt","glyphs","glyph","j","unicodes","CmapEncoding","cmap","glyphIndexMap","CffEncoding","encoding","charset","charName","GlyphNames","post","version","names","slice","numberOfGlyphs","glyphNameIndex","nameToGlyphIndex","name","glyphIndexToName","gid","addGlyphNames","tables","charCodes","glyphIndex","addUnicode","parseInt","cffEncoding","glyphNames",4,"path","sfnt","Font","options","familyName","styleName","designer","designerURL","manufacturer","manufacturerURL","license","licenseURL","description","copyright","trademark","unitsPerEm","ascender","descender","supported","hasChar","charToGlyph","stringToGlyphs","nameToGlyph","nametoGlyphIndex","getKerningValue","leftGlyph","rightGlyph","index","gposKerning","getGposKerningValue","kerningPairs","forEachGlyph","text","x","y","fontSize","callback","kerning","fontScale","advanceWidth","kerningValue","getPath","fullPath","Path","gX","gY","gFontSize","glyphPath","extend","draw","drawPoints","drawMetrics","validate","warnings","_this","assertStringAttribute","attrName","trim","toTables","fontToTable","toBuffer","sfntTable","bytes","encode","buffer","ArrayBuffer","intArray","Uint8Array","download","fileName","replace","requestFileSystem","webkitRequestFileSystem","TEMPORARY","byteLength","fs","root","getFile","create","fileEntry","createWriter","writer","dataView","DataView","blob","Blob","type","write","addEventListener","location","href","toURL","err","./encoding","./path","./tables/sfnt",5,"check","Glyph","unicode","xMin","yMin","xMax","yMax","scale","p","commands","cmd","quadraticCurveTo","curveTo","closePath","getContours","points","contours","currentContour","pt","lastPointOfContour","getMetrics","xCoords","yCoords","metrics","Math","min","apply","max","leftSideBearing","rightSideBearing","drawCircles","PI_SQ","PI","arc","fill","blueCircles","redCircles","fillStyle","lineWidth","strokeStyle","./check","./draw",6,"_font","parse","cff","glyf","gpos","head","hhea","hmtx","kern","loca","maxp","_name","os2","toArrayBuffer","arrayBuffer","data","loadFromFile","readFile","loadFromUrl","url","request","XMLHttpRequest","open","responseType","onload","status","statusText","response","send","parseBuffer","indexToLocFormat","hmtxOffset","glyfOffset","locaOffset","cffOffset","kernOffset","gposOffset","getFixed","outlinesFormat","getTag","numTables","getUShort","tag","offset","getULong","numberOfHMetrics","numGlyphs","fontFamily","fontSubfamily","shortVersion","locaTable","load","isNode","loadFn","_parse","./font","./glyph","./parse","./tables/cff","./tables/cmap","./tables/glyf","./tables/gpos","./tables/head","./tables/hhea","./tables/hmtx","./tables/kern","./tables/loca","./tables/maxp","./tables/name","./tables/os2","./tables/post",7,"getByte","getUint8","getCard8","getUint16","getCard16","getShort","getInt16","getUint32","decimal","fraction","String","fromCharCode","getInt8","getOffset","offSize","v","getBytes","startOffset","endOffset","bytesToString","typeOffsets","byte","uShort","short","uLong","fixed","longDateTime","Parser","relativeOffset","parseByte","parseChar","parseCard8","parseUShort","parseCard16","parseSID","parseOffset16","parseShort","parseF2Dot14","parseULong","parseFixed","parseOffset16List","parseUShortList","count","offsets","parseString","string","parseTag","parseLongDateTime","parseVersion","major","minor","skip","amount",8,"strokeWidth","bezierCurveTo","quadTo","close","pathOrCommands","toPathData","decimalPlaces","floatToString","round","toFixed","packValues","d","toSVG","svg",9,"sizeOf","Table","tableName","fields","field","optionKeys","k","sizeOfFunction","TABLE","./types",10,"_glyph","table","equals","b","isArray","parseCFFIndex","start","conversionFn","objects","objectOffset","offsetSize","pos","parseFloatOperand","parser","eof","lookup","n1","n2","parseFloat","parseOperand","b0","b1","b2","b3","b4","entriesToObject","entries","key","values","hasOwnProperty","parseCFFDict","size","operands","op","getCFFString","strings","interpretDict","dict","meta","newDict","m","parseCFFHeader","header","formatMajor","formatMinor","TOP_DICT_META","PRIVATE_DICT_META","parseCFFTopDict","parseCFFPrivateDict","parseCFFCharset","nGlyphs","sid","format","parseCFFEncoding","enc","nCodes","nRanges","first","nLeft","parseCFFCharstring","c1x","c1y","c2x","c2y","stack","nStems","haveWidth","width","defaultWidthX","newContour","parseStems","hasWidthArg","shift","nominalWidthX","codeIndex","subrCode","jpx","jpy","c3x","c3y","c4x","c4y","pop","subrsBias","subrs","abs","console","log","gsubrsBias","gsubrs","calcCFFSubroutineBias","bias","parseCFFTable","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDictData","topDict","privateDictOffset","privateDict","subrOffset","subrIndex","charStringsIndex","charStrings","charString","encodeString","makeHeader","makeNameIndex","fontNames","makeDict","attrs","entry","makeTopDict","makeTopDictIndex","topDicts","makeStringIndex","makeGlobalSubrIndex","makeCharsets","glyphName","glyphSID","glyphToOps","ops","dx","dy","_13","_23","dx1","dy1","dx2","dy2","makeCharStringsIndex","makePrivateDict","makePrivateDictIndex","privateDicts","makeCFFTable","fullName","weight","weightName","private","privateAttrs","postScriptName","charsets","privateDictIndex","make","../encoding","../glyph","../parse","../path","../table",11,"parseCmapTable","platformId","encodingId","language","segCount","endCountParser","startCountParser","idDeltaParser","idRangeOffsetParser","glyphIndexOffset","endCount","startCount","idDelta","idRangeOffset","addSegment","segments","end","delta","addTerminatorSegment","makeCmapTable","sort","segCountX2","searchRange","pow","floor","entrySelector","rangeShift","endCounts","startCounts","idDeltas","idRangeOffsets","glyphIds","segment","concat","glyphId","../check",12,"parseGlyphCoordinate","flag","previousValue","shortVectorBitMask","sameBitMask","parseGlyph","numberOfContours","flags","endPointIndices","instructionLength","instructions","numberOfCoordinates","repeatCount","point","onCurve","px","py","isComposite","components","moreComponents","component","xScale","scale01","scale10","yScale","transformPoints","transform","newPoints","newPt","contour","firstPt","lastPt","curvePt","realFirstPoint","prevPt","midPt","parseGlyfTable","nextOffset","componentGlyph","transformedPoints",13,"parseTaggedListTable","list","parseCoverageTable","coverage","begin","parseClassDefTable","startGlyph","glyphCount","classes","glyphID","rangeCount","startGlyphs","endGlyphs","classValues","parsePairPosSubTable","coverageOffset","valueFormat1","valueFormat2","value1","value2","sharedPairSets","pairSetCount","pairSet","pairSetOffsets","firstGlyph","pairSetOffset","sharedPairSet","pairValueCount","secondGlyph","pairs","classDef1Offset","classDef2Offset","class1Count","class2Count","getClass1","getClass2","kerningMatrix","kerningRow","covered","class1","class2","parseLookupTable","lookupType","lookupFlag","useMarkFilteringSet","subTableCount","subTableOffsets","markFilteringSet","subtables","parseGposTable","tableVersion","lookupListOffset","lookupCount","lookupTableOffsets","lookupListAbsoluteOffset",14,"parseHeadTable","fontRevision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","glyphDataFormat","makeHeadTable",15,"parseHheaTable","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","makeHheaTable",16,"parseHmtxTable","numMetrics","makeHmtxTable",17,"parseKernTable","subTableVersion","nPairs","leftIndex","rightIndex",18,"parseLocaTable","parseFn","glyphOffsets","glyphOffset",19,"parseMaxpTable","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","makeMaxpTable",20,"nameTableNames","parseNameTable","stringOffset","unknownCount","platformID","encodingID","languageID","nameID","property","codePoints","str","langTagCount","makeNameRecord","addMacintoshNameRecord","recordID","stringBytes","STRING","records","addWindowsNameRecord","utf16Bytes","UTF16","makeNameTable","../types",21,"unicodeRanges","getUnicodeRange","range","parseOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContent","makeOS2Table",22,"parsePostTable","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","nameLength","makePostTable",23,"log2","computeCheckSum","sum","makeTableRecord","checkSum","makeSfntTable","highestPowerOf2","recordFields","tableFields","tableLength","tableRecord","isNaN","r1","r2","metricsForChar","chars","notFoundMetrics","average","vs","fontToSfntTable","xMins","yMins","xMaxs","yMaxs","advanceWidths","leftSideBearings","rightSideBearings","firstCharIndex","lastCharIndex","position","globals","advanceWidthAvg","maxLeftSideBearing","headTable","hheaTable","maxpTable","os2Table","hmtxTable","cmapTable","nameTable","uniqueID","preferredFamily","preferredSubfamily","postTable","cffTable","checkSumAdjusted","./cff","./cmap","./head","./hhea","./hmtx","./maxp","./name","./os2","./post",24,"LIMIT16","LIMIT32","decode","constant","BYTE","CHAR","CHARARRAY","USHORT","SHORT","UINT24","ULONG","LONG","FIXED","FWORD","UFWORD","LONGDATETIME","TAG","Card8","Card16","OffSize","SID","NUMBER","NUMBER16","NUMBER32","NAME","INDEX","dataSize","OBJECT","encodedOffsets","offsetEncoder","encodedOffset","DICT","OPERAND","OPERATOR","OP","wmm","WeakMap","CHARSTRING","has","get","set","encodingFunction","LITERAL","paper","noCanvas","process","browser","WorkerGlobalScope","Base","hidden","iter","bind","forIn","proto","__proto__","describe","obj","__lookupGetter__","__lookupSetter__","_define","__defineGetter__","__defineSetter__","inject","dest","src","beans","preserve","beansNames","val","substring","isFunc","res","prev","bean","base","match","toLowerCase","isPlainObject","test","part","each","getLength","props","exclude","statics","ctor","initialize","clone","constructor","pick","toString","_id","_class","Formatter","instance","number","join","getClassName","exportJSON","toJSON","serialize","_set","dontCheck","orig","_filtering","obj1","obj2","checkKeys","o1","o2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","formatter","precision","definitions","references","item","id","ref","unshift","_serialize","_compact","deserialize","json","_data","isRoot","isDictionary","args","JSON","stringify","importJSON","isTarget","Item","Layer","insert","splice","items","remove","append","_index","removed","capitalize","toUpperCase","camelize","all","chr","hyphenate","Emitter","on","func","_eventTypes","handlers","_callbacks","install","off","uninstall","once","emit","event","stop","responds","attach","detach","fire","_installEvents","events","_events","types","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","project","projects","tools","palettes","_scopes","support","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","navigator","userAgent","v1","v2","rv","chrome","versionNumber","webkit","atom","getView","getPaper","execute","PaperScript","View","updateFocus","scope","that","setup","element","Project","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","val1","val2","separator","height","rectangle","Numerical","abscissas","weights","sqrt","TOLERANCE","EPSILON","MACHINE_EPSILON","KAPPA","isZero","integrate","w","A","B","Ax","findRoot","df","tolerance","fx","nx","solveQuadratic","roots","Infinity","D","gmC","mult","LOG10E","isFinite","R","q","solveCubic","c2","ec","x0","qd","tmp","Point","arg0","arg1","hasY","angle","setAngle","setLength","_angle","cos","sin","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","atan2","div","NaN","dot","acos","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","current","rotate","center","subtract","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","contains","isClose","isColinear","isOrthogonal","point1","point2","random","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","next","rect","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","left","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","concatenate","a1","c1","d1","a2","d2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","bounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","apx","apy","avx","avy","bpx","bpy","bvx","bvy","ta","tb","vx","vy","v2x","v2y","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","_drawSelection","Symbol","dontCenter","setDefinition","_definition","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","PlacedSymbol","symbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","visible","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","parent","setParent","mouseFlags","mousedown","mousedrag","click","doubleclick","mouseup","mousemove","mouseenter","mouseleave","mouseEvent","counters","_eventCounters","onFrame","_animateItem","onLoad","animate","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","children","_children","namedChildren","_namedChildren","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getRegistration","setRegistration","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","child","setBounds","cache","_boundsCache","ids","cached","_internal","other","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","copy","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","ceil","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","getIntersections","guides","parentTotalMatrix","_totalMatrix","view","totalMatrix","tolerancePadding","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","class","checkBounds","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","matches","compare","matchObject","RegExp","firstOnly","overlapping","inside","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","reduce","namedArray","notifyParent","replaceWith","reverseChildren","reverse","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","toCanvasStyle","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","getViewMatrix","normalBlend","nativeBlend","direct","dontStart","clip","_canComposite","mainCtx","itemOffset","prevOffset","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","getWindingRule","getCornerCenter","halfSize","dir","corner","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","source","object","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","getElement","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","modify","setContext","context","toDataURL","loaded","update","document","getElementById","Image","setTimeout","DomEvent","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","isLinear","_point","_handleIn","_handleOut","_path","curves","_curves","curve","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","setLinear","linear","next1","getNext","next2","getPrevious","isArc","handle1","handle2","_selectionState","state","oldState","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","removeSegment","interpolate","segment0","segment1","coef","dxPoint","dyPoint","dxHandleIn","dyHandleIn","dxHandleOut","dyHandleOut","change","Curve","arg6","arg7","_segment2","segment2","_length","getPoint1","setPoint1","getPoint2","setPoint2","getHandle1","setHandle1","getHandle2","setHandle2","getSegment1","getSegment2","getPoints","getPart","getPartLength","filterIntersections","_getParameter","isParameter","parameter","getParameterAt","ignoreLinear","subdivide","split","p1","h1","h2","p2","evaluate","p1x","p1y","p2x","p2y","bx","ax","by","ay","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","txs","tys","sx","sy","isFlatEnough","ux","uy","getEdgeSum","_addBounds","v0","v3","padding","tMin","tMax","getLocationAt","getLocationOf","getOffsetOf","loc","getNearestLocation","minDist","minT","refine","dist","step","getNearestPoint","getLengthIntegrand","getIterations","ds","forward","rangeLength","guess","addLocation","locations","curve1","t1","curve2","t2","addCurveIntersections","uMin","uMax","oldTDiff","recursion","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","tMinNew","tMaxNew","tDiff","hull","getConvexHull","tMinClip","tMaxClip","clipConvexHull","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","flip","pmax","distZero","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rlx2","rvl","rvc","tc","tl","addLineIntersection","linear1","linear2","c1p1","c1p2","c2p1","c2p2","_expand","last","_curve","_curve2","_parameter","_parameter2","loc1","loc2","path1","path2","getParameter","getIntersection","_point2","_distance","getSegment","_preferFirst","_segment","_uncached","intersection","_intersection","_getOffset","getCurveOffset","getPointAt","curves1","curves2","matrix1","matrix2","length1","length2","values2","values1","seg1","seg2","setPathData","relative","previous","control","getCoord","command","lower","move","cubicCurveTo","arcTo","winding","_getWinding","closed","setSegments","_clockwise","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","curX","curY","prevX","prevY","inX","inY","outX","outY","skipLine","isPolygon","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","simplify","fitter","PathFitter","fit","isClockwise","setClockwise","clockwise","last1","last2","first2","first1","path0","toShape","topCenter","shape","numSegments","strokePadding","cap","hitStroke","hitFill","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","_addBevelJoin","_addSquareCap","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","overlap","knots","f1","f2","ie","je","getCurrentSegment","moveBy","through","extent","vector","middle","large","epsilon","rxSq","rySq","xSq","ySq","l1","l2","throughSide","centerSide","ext","inc","z","out","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","prevCoords","processSegment","joinBounds","addRound","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getNormal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","compoundpath0","compoundpath1","paths","getCurrentPath","operators","computeBoolean","operation","operator","preparePath","reorient","_path1","_path2","splitPath","monoCurves","collect","_getMonoCurves","_winding","startSeg","totalLength","windingSum","curveLength","getTangentAt","getWinding","result","tracePaths","intersections","linearHandles","resetLinear","newCurve","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","prevT","slope","selfOp","_visited","inter","startInterSeg","added","interSeg","c4","c3","t3","t4","w3","w4","nextCurve","nextSeg","firstSegment","lastSegment","prevCurve","insertCurve","y0","handleCurve","y3","getInteriorPoint","xIntercepts","maxRecursion","minDifference","addCurve","computeParts","maxT","halfT","prevVal","prevLen","error","fitCubic","tan1","tan2","pt1","pt2","uPrime","chordLengthParameterize","maxError","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","C","X","detC0C1","alpha1","alpha2","detC0X","detXC1","c0","segLength","diff","degree","maxDist","P","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","gray","rgb","hsb","hsl","gradient","componentParsers","colorCache","colorCtx","fromCSS","hsbIndices","converters","rgb-hsb","h","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","hasOverlap","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","_stops","origin","destination","canvasGradient","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","acronym","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","nativeRequest","requested","callbacks","focused","timer","focus","blur","handleCallbacks","setInterval","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","getCanvasSize","_windowEvents","resize","setViewSize","_setViewSize","Stats","_stats","stats","domElement","appendChild","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","onResize","_time","_count","_requestFrame","_requested","_handleFrame","now","Date","_before","_handlingFrame","time","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tool","prevFocus","tempFocus","dragging","handleMouseMove","_handleEvent","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","HTMLCanvasElement","deviceRatio","backingStoreRatio","prevFont","measureText","downPoint","lastPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","callEvent","MouseEvent","isStopped","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","specialKeys",27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","space","charCodeMap","keyMap","downCode","handleKey","keyCode","charCode","specialKey","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","method","xhr","ActiveXObject","overrideMimeType","onreadystatechange","readyState","responseText","canvases","createElement","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","attribute","fromSVG","exportFilter","SVGNamespaces","xlink","setAttributes","namespace","setAttributeNS","createElementNS","getTransform","coordinates","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","exporters","applyStyle","visibility","svgs","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","map","importGroup","childNodes","isClip","currentStyle","applyAttributes","importSVG","importPoly","importPath","pathData","importGradient","isRadial","importers","#document","nextSibling","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","applyTransform","transforms","applyOpacity","attributes","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","styles","group","parentNode","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","onImport","expandShapes","Collection","cb","wrapConstructor","useConstructed","wrapper","arr","params","rconstructor","constructorFilter","unwrapArg","isPlural","unwrapArgs","proxy","methodNames","getOwnPropertyNames","filter","plural","ot","glyphMap","charMap","altMap","_subset","addGlyph","addGlyphs","fonts","addedFonts","delete","styleElement","styleSheet","styleSheets","ss","ownerNode","_lastSubset","getGlyphSubset","normalizeSubset","font0","font1","updateSVGData","updateOTCommands","importOT","otFont","otGlyph","_URL","URL","webkitURL","addToFonts","fontface","FontFace","createObjectURL","fontObjectURL","revokeObjectURL","deleteRule","insertRule","onloadend","readAsDataURL","lastIndexOf","../node_modules/opentype.js/dist/opentype.js","../node_modules/paper/dist/paper-core.js","./Glyph.js","Outline","anchors","parentAnchors","addAnchor","addAnchors","addParentAnchor","glyph0","glyph1","svgData","addContour","./Outline.js","outline0","outline1","defineProperties","firstNode","lastNode","_updateData","pushSimple","pushBezier","export","ctrl1","ctrl2","Node","./Collection.js","./Font.js","./Node.js","./Outline","./Path.js","updateUtils","Utils","_","ufoToPaper","parameters","outline","parentParameters","lib","transformList","solvingOrder","fontFromSrc","fontinfo","filteredSrc","controls","presets","createUpdaters","mergeStatic","solveDependencyTree","glyphFromSrc","fontSrc","naive","embed","anchorSrc","contourSrc","nodeSrc","embedComponents","componentSrc","annotator","addComponent","cursor","propFromCursor","_dependencies","_parameters","_updaters","leaf","_operation","Function","depTree","dependencyTree","order","simplified","simplifyResolutionOrder","parentSrc","leafSrc","currCursor","rdeg","transformsToMatrix","Float32Array","curr","rslt","inSkeleton","autoExpandedNodeSrc","side","expandedNodeUpdater","expandedTo","skeletonCopier","explicitExpandedNodeSrc","expandedContourSrc","curviness","prepareContour","updateContour","additionalContours","skeleton","leftContour","rightContour","leftNodes","rightNodes","leftNodesSrc","rightNodesSrc","leftSrc","rightSrc","expandedFrom","typeIn","typeOut","addContours","isLeft","distr","_dirOut","_dirIn","tensionIn","tensionOut","tension","lineAngle","startCtrl","endCtrl","startType","endType","startTension","endTension","startDir","endDir","rri","rayRayIntersection","dirIn","dirOut","parametricFont","info","glyphSrc","_params","propName","transformOrigin","_node","_contour","prepareDataUpdate","isPrepared","lineLineIntersection","p4","x3","x4","y4","onLine"],"mappings":"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ACAkE,MAAA,IAAAlE,IAAA,MACAkE,MAAA,IAAAlE,IAAA,MACAkE,MAAA,IAAAlE,IAAA,MACAkE,MAAA,IAAAlE,IAAA,MACAkE,MAAA,IAAAlE,IAAA,MACAkE,MAAA,IAAAlE,IAAA,OACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,OACAkE,MAAA,KAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,QACAkE,MAAA,MAAAlE,IAAA,Q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":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var DepTree = function() {\n  this.nodes = {}; \n};\n\nDepTree.prototype.add = function(node, dependants) {\n  var self = this;\n\n  if (!dependants) {\n    dependants = [];\n  } else if (!(dependants instanceof Array)) {\n    dependants = [dependants];\n  }\n\n  this.nodes[node] = dependants;\n};\n\n\nDepTree.prototype.resolveNode = function(node, resolved, processing) {\n\n  var self = this;\n\n  resolved = resolved || [];\n  processing = processing || {};\n  var deps = this.nodes[node] || [];\n\n  processing[node] = true;\n\n  deps.forEach(function(dep) {\n    if (resolved.indexOf(dep) != -1) {\n      return;\n    }\n    if (processing[dep]) {\n      throw new Error('Circular dependency: '+dep);\n    }\n    self.resolveNode(dep, resolved, processing);\n  });\n\n  if (resolved.indexOf(node) == -1) {\n    processing[node] = false;\n    resolved.push(node);\n  }\n  return resolved;\n};\n\nDepTree.prototype.resolve = function() {\n\n  var resolved = [];\n  for (var node in this.nodes) {\n    this.resolveNode(node, resolved);\n  }\n\n  return resolved;\n\n};\n\n\nmodule.exports = DepTree;\n","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.plumin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.opentype = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// Run-time checking of preconditions.\n\n'use strict';\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nexports.argument = function(predicate, message) {\n    if (!predicate) {\n        throw new Error(message);\n    }\n};\n\n// Precondition function that checks if the given assertion is true.\n// If not, it will throw an error.\nexports.assert = exports.argument;\n\n},{}],2:[function(require,module,exports){\n// Drawing utility functions.\n\n'use strict';\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexports.line = line;\n\n},{}],3:[function(require,module,exports){\n// Glyph encoding\n\n'use strict';\n\nvar cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nvar cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n// This is the encoding used for fonts created from scratch.\n// It loops through all glyphs and finds the appropriate unicode value.\n// Since it's linear time, other encodings will be faster.\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    var code = c.charCodeAt(0);\n    var glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs[i];\n            for (var j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    } else {\n        return null;\n    }\n};\n\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n};\n\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    var code = s.charCodeAt(0);\n    var charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction GlyphNames(post) {\n    var i;\n    switch (post.version) {\n    case 1:\n        this.names = exports.standardNames.slice();\n        break;\n    case 2:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] < exports.standardNames.length) {\n                this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n            } else {\n                this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n            }\n        }\n\n        break;\n    case 2.5:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n        }\n\n        break;\n    case 3:\n        this.names = [];\n        break;\n    }\n}\n\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNames(font) {\n    var glyph;\n    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    var charCodes = Object.keys(glyphIndexMap);\n    for (var i = 0; i < charCodes.length; i += 1) {\n        var c = charCodes[i];\n        var glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs[glyphIndex];\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs[i];\n        if (font.cffEncoding) {\n            glyph.name = font.cffEncoding.charset[i];\n        } else {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexports.cffStandardStrings = cffStandardStrings;\nexports.cffStandardEncoding = cffStandardEncoding;\nexports.cffExpertEncoding = cffExpertEncoding;\nexports.standardNames = standardNames;\nexports.DefaultEncoding = DefaultEncoding;\nexports.CmapEncoding = CmapEncoding;\nexports.CffEncoding = CffEncoding;\nexports.GlyphNames = GlyphNames;\nexports.addGlyphNames = addGlyphNames;\n\n},{}],4:[function(require,module,exports){\n// The Font object\n\n'use strict';\n\nvar path = require('./path');\nvar sfnt = require('./tables/sfnt');\nvar encoding = require('./encoding');\n\n// A Font represents a loaded OpenType font file.\n// It contains a set of glyphs and methods to draw text on a drawing context,\n// or to get a path representing the text.\nfunction Font(options) {\n    options = options || {};\n\n    // OS X will complain if the names are empty, so we put a single space everywhere by default.\n    this.familyName = options.familyName || ' ';\n    this.styleName = options.styleName || ' ';\n    this.designer = options.designer || ' ';\n    this.designerURL = options.designerURL || ' ';\n    this.manufacturer = options.manufacturer || ' ';\n    this.manufacturerURL = options.manufacturerURL || ' ';\n    this.license = options.license || ' ';\n    this.licenseURL = options.licenseURL || ' ';\n    this.version = options.version || 'Version 0.1';\n    this.description = options.description || ' ';\n    this.copyright = options.copyright || ' ';\n    this.trademark = options.trademark || ' ';\n    this.unitsPerEm = options.unitsPerEm || 1000;\n    this.ascender = options.ascender;\n    this.descender = options.descender;\n    this.supported = true;\n    this.glyphs = options.glyphs || [];\n    this.encoding = new encoding.DefaultEncoding(this);\n    this.tables = {};\n}\n\n// Check if the font has a glyph for the given character.\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n// Convert the given character to a single glyph index.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n// Convert the given character to a single Glyph object.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyph = function(c) {\n    var glyphIndex = this.charToGlyphIndex(c);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\n// Convert the given text to a list of Glyph objects.\n// Note that there is no strict one-to-one mapping between characters and\n// glyphs, so the list of returned glyphs can be larger or smaller than the\n// length of the given string.\nFont.prototype.stringToGlyphs = function(s) {\n    var glyphs = [];\n    for (var i = 0; i < s.length; i += 1) {\n        var c = s[i];\n        glyphs.push(this.charToGlyph(c));\n    }\n\n    return glyphs;\n};\n\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\nFont.prototype.nameToGlyph = function(name) {\n    var glyphIndex = this.nametoGlyphIndex(name);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n// Retrieve the value of the kerning pair between the left glyph (or its index)\n// and the right glyph (or its index). If no kerning pair is found, return 0.\n// The kerning value gets added to the advance width when calculating the spacing\n// between glyphs.\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.getGposKerningValue;\n    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n};\n\n// Helper function that invokes the given callback for each glyph in the given text.\n// The callback gets `(glyph, x, y, fontSize, options)`.\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    if (!this.supported) {\n        return;\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || {};\n    var kerning = options.kerning === undefined ? true : options.kerning;\n    var fontScale = 1 / this.unitsPerEm * fontSize;\n    var glyphs = this.stringToGlyphs(text);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        callback(glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (kerning && i < glyphs.length - 1) {\n            var kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n    }\n};\n\n// Create a Path object that represents the given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns a Path object.\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    var fullPath = new path.Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        fullPath.extend(glyphPath);\n    });\n\n    return fullPath;\n};\n\n// Draw the text on the given drawing context.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n// Draw the points of all glyphs in the text.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Draw lines indicating important font measurements for all glyphs in the text.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Validate\nFont.prototype.validate = function() {\n    var warnings = [];\n    var _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertStringAttribute(attrName) {\n        assert(_this[attrName] && _this[attrName].trim().length > 0, 'No ' + attrName + ' specified.');\n    }\n\n    // Identification information\n    assertStringAttribute('familyName');\n    assertStringAttribute('weightName');\n    assertStringAttribute('manufacturer');\n    assertStringAttribute('copyright');\n    assertStringAttribute('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n\nFont.prototype.toBuffer = function() {\n    var sfntTable = this.toTables();\n    var bytes = sfntTable.encode();\n    var buffer = new ArrayBuffer(bytes.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n// Initiate a download of the OpenType font.\nFont.prototype.download = function() {\n    var fileName = this.familyName.replace(/\\s/g, '') + '-' + this.styleName + '.otf';\n    var buffer = this.toBuffer();\n\n    window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n    window.requestFileSystem(window.TEMPORARY, buffer.byteLength, function(fs) {\n        fs.root.getFile(fileName, {create: true}, function(fileEntry) {\n            fileEntry.createWriter(function(writer) {\n                var dataView = new DataView(buffer);\n                var blob = new Blob([dataView], {type: 'font/opentype'});\n                writer.write(blob);\n\n                writer.addEventListener('writeend', function() {\n                    // Navigating to the file will download it.\n                    location.href = fileEntry.toURL();\n                }, false);\n            });\n        });\n    },\n\n    function(err) {\n        throw err;\n    });\n};\n\nexports.Font = Font;\n\n},{\"./encoding\":3,\"./path\":8,\"./tables/sfnt\":23}],5:[function(require,module,exports){\n// The Glyph object\n\n'use strict';\n\nvar check = require('./check');\nvar draw = require('./draw');\nvar path = require('./path');\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\nfunction Glyph(options) {\n    this.font = options.font || null;\n    this.index = options.index || 0;\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n    this.xMin = options.xMin || 0;\n    this.yMin = options.yMin || 0;\n    this.xMax = options.xMax || 0;\n    this.yMax = options.yMax || 0;\n    this.advanceWidth = options.advanceWidth || 0;\n    this.path = options.path || null;\n}\n\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n// Convert the glyph to a Path we can draw on a drawing context.\n//\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.getPath = function(x, y, fontSize) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n    var p = new path.Path();\n    var commands = this.path.commands;\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                               x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                      x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n                      x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n// Split the glyph into contours.\n// This function is here for backwards compatibility, and to\n// provide raw access to the TrueType glyph outlines.\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < this.points.length; i += 1) {\n        var pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n// Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\nGlyph.prototype.getMetrics = function() {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: 0\n    };\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// Draw the glyph on the given context.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.draw = function(ctx, x, y, fontSize) {\n    this.getPath(x, y, fontSize).draw(ctx);\n};\n\n// Draw the points of the glyph.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n\n    function drawCircles(l, x, y, scale) {\n        var PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (var j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n\n    var blueCircles = [];\n    var redCircles = [];\n    var path = this.path;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n// Draw lines indicating important font measurements.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    var scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (this.xMin * scale), -10000, x + (this.xMin * scale), 10000);\n    draw.line(ctx, x + (this.xMax * scale), -10000, x + (this.xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-this.yMin * scale), 10000, y + (-this.yMin * scale));\n    draw.line(ctx, -10000, y + (-this.yMax * scale), 10000, y + (-this.yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (this.advanceWidth * scale), -10000, x + (this.advanceWidth * scale), 10000);\n};\n\nexports.Glyph = Glyph;\n\n},{\"./check\":1,\"./draw\":2,\"./path\":8}],6:[function(require,module,exports){\n// opentype.js\n// https://github.com/nodebox/opentype.js\n// (c) 2014 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global ArrayBuffer, DataView, Uint8Array, XMLHttpRequest  */\n\n'use strict';\n\nvar encoding = require('./encoding');\nvar _font = require('./font');\nvar glyph = require('./glyph');\nvar parse = require('./parse');\nvar path = require('./path');\n\nvar cmap = require('./tables/cmap');\nvar cff = require('./tables/cff');\nvar glyf = require('./tables/glyf');\nvar gpos = require('./tables/gpos');\nvar head = require('./tables/head');\nvar hhea = require('./tables/hhea');\nvar hmtx = require('./tables/hmtx');\nvar kern = require('./tables/kern');\nvar loca = require('./tables/loca');\nvar maxp = require('./tables/maxp');\nvar _name = require('./tables/name');\nvar os2 = require('./tables/os2');\nvar post = require('./tables/post');\n\n// File loaders /////////////////////////////////////////////////////////\n\n// Convert a Node.js Buffer to an ArrayBuffer\nfunction toArrayBuffer(buffer) {\n    var arrayBuffer = new ArrayBuffer(buffer.length);\n    var data = new Uint8Array(arrayBuffer);\n    for (var i = 0; i < buffer.length; i += 1) {\n        data[i] = buffer[i];\n    }\n\n    return arrayBuffer;\n}\n\nfunction loadFromFile(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, toArrayBuffer(buffer));\n    });\n}\n\nfunction loadFromUrl(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.status !== 200) {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n\n        return callback(null, request.response);\n    };\n\n    request.send();\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n// Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n// If the file could not be parsed (most likely because it contains Postscript outlines)\n// we return an empty Font object with the `supported` flag set to `false`.\nfunction parseBuffer(buffer) {\n    var indexToLocFormat;\n    var hmtxOffset;\n    var glyfOffset;\n    var locaOffset;\n    var cffOffset;\n    var kernOffset;\n    var gposOffset;\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n\n    var font = new _font.Font();\n    var data = new DataView(buffer, 0);\n\n    var version = parse.getFixed(data, 0);\n    if (version === 1.0) {\n        font.outlinesFormat = 'truetype';\n    } else {\n        version = parse.getTag(data, 0);\n        if (version === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType version ' + version);\n        }\n    }\n\n    var numTables = parse.getUShort(data, 4);\n\n    // Offset into the table records.\n    var p = 12;\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var offset = parse.getULong(data, p + 8);\n        switch (tag) {\n        case 'cmap':\n            font.tables.cmap = cmap.parse(data, offset);\n            font.encoding = new encoding.CmapEncoding(font.tables.cmap);\n            if (!font.encoding) {\n                font.supported = false;\n            }\n\n            break;\n        case 'head':\n            font.tables.head = head.parse(data, offset);\n            font.unitsPerEm = font.tables.head.unitsPerEm;\n            indexToLocFormat = font.tables.head.indexToLocFormat;\n            break;\n        case 'hhea':\n            font.tables.hhea = hhea.parse(data, offset);\n            font.ascender = font.tables.hhea.ascender;\n            font.descender = font.tables.hhea.descender;\n            font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n            break;\n        case 'hmtx':\n            hmtxOffset = offset;\n            break;\n        case 'maxp':\n            font.tables.maxp = maxp.parse(data, offset);\n            font.numGlyphs = font.tables.maxp.numGlyphs;\n            break;\n        case 'name':\n            font.tables.name = _name.parse(data, offset);\n            font.familyName = font.tables.name.fontFamily;\n            font.styleName = font.tables.name.fontSubfamily;\n            break;\n        case 'OS/2':\n            font.tables.os2 = os2.parse(data, offset);\n            break;\n        case 'post':\n            font.tables.post = post.parse(data, offset);\n            font.glyphNames = new encoding.GlyphNames(font.tables.post);\n            break;\n        case 'glyf':\n            glyfOffset = offset;\n            break;\n        case 'loca':\n            locaOffset = offset;\n            break;\n        case 'CFF ':\n            cffOffset = offset;\n            break;\n        case 'kern':\n            kernOffset = offset;\n            break;\n        case 'GPOS':\n            gposOffset = offset;\n            break;\n        }\n        p += 16;\n    }\n\n    if (glyfOffset && locaOffset) {\n        var shortVersion = indexToLocFormat === 0;\n        var locaTable = loca.parse(data, locaOffset, font.numGlyphs, shortVersion);\n        font.glyphs = glyf.parse(data, glyfOffset, locaTable, font);\n        hmtx.parse(data, hmtxOffset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n        encoding.addGlyphNames(font);\n    } else if (cffOffset) {\n        cff.parse(data, cffOffset, font);\n        encoding.addGlyphNames(font);\n    } else {\n        font.supported = false;\n    }\n\n    if (font.supported) {\n        if (kernOffset) {\n            font.kerningPairs = kern.parse(data, kernOffset);\n        } else {\n            font.kerningPairs = {};\n        }\n\n        if (gposOffset) {\n            gpos.parse(data, gposOffset, font);\n        }\n    }\n\n    return font;\n}\n\n// Asynchronously load the font from a URL or a filesystem. When done, call the callback\n// with two arguments `(err, font)`. The `err` will be null on success,\n// the `font` is a Font object.\n//\n// We use the node.js callback convention so that\n// opentype.js can integrate with frameworks like async.js.\nfunction load(url, callback) {\n    var isNode = typeof window === 'undefined';\n    var loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function(err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n\n        var font = parseBuffer(arrayBuffer);\n        if (!font.supported) {\n            return callback('Font is not supported (is this a Postscript font?)');\n        }\n\n        return callback(null, font);\n    });\n}\n\nexports._parse = parse;\nexports.Font = _font.Font;\nexports.Glyph = glyph.Glyph;\nexports.Path = path.Path;\nexports.parse = parseBuffer;\nexports.load = load;\n\n},{\"./encoding\":3,\"./font\":4,\"./glyph\":5,\"./parse\":7,\"./path\":8,\"./tables/cff\":10,\"./tables/cmap\":11,\"./tables/glyf\":12,\"./tables/gpos\":13,\"./tables/head\":14,\"./tables/hhea\":15,\"./tables/hmtx\":16,\"./tables/kern\":17,\"./tables/loca\":18,\"./tables/maxp\":19,\"./tables/name\":20,\"./tables/os2\":21,\"./tables/post\":22,\"fs\":undefined}],7:[function(require,module,exports){\n// Parsing utility functions\n\n'use strict';\n\n// Retrieve an unsigned byte from the DataView.\nexports.getByte = function getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n};\n\nexports.getCard8 = exports.getByte;\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getUShort = function(dataView, offset) {\n    return dataView.getUint16(offset, false);\n};\n\nexports.getCard16 = exports.getUShort;\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getShort = function(dataView, offset) {\n    return dataView.getInt16(offset, false);\n};\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nexports.getULong = function(dataView, offset) {\n    return dataView.getUint32(offset, false);\n};\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nexports.getFixed = function(dataView, offset) {\n    var decimal = dataView.getInt16(offset, false);\n    var fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n};\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nexports.getTag = function(dataView, offset) {\n    var tag = '';\n    for (var i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n};\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nexports.getOffset = function(dataView, offset, offSize) {\n    var v = 0;\n    for (var i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n};\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nexports.getBytes = function(dataView, startOffset, endOffset) {\n    var bytes = [];\n    for (var i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n};\n\n// Convert the list of bytes to a string.\nexports.bytesToString = function(bytes) {\n    var s = '';\n    for (var i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n};\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    var offsets = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = exports.getUShort(dataView, offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\nParser.prototype.parseString = function(length) {\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    var string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\nParser.prototype.parseLongDateTime = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v / 65536;\n};\n\nParser.prototype.parseVersion = function() {\n    var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // This returns the correct number if minor = 0xN000 where N is 0-9\n    var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    return major + minor / 0x1000 / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\nexports.Parser = Parser;\n\n},{}],8:[function(require,module,exports){\n// Geometric objects\n\n'use strict';\n\n// A bézier path containing a set of path commands similar to a SVG path.\n// Paths can be drawn on a context using `draw`.\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n// Add the given path or list of commands to the commands of this path.\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n// Draw the path to a 2D context.\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n// Convert the Path to a string of path data instructions\n// See http://www.w3.org/TR/SVG/paths.html#PathData\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n// Convert the path to a SVG <path> element, as a string.\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toSVG = function(decimalPlaces) {\n    var svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill & this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\nexports.Path = Path;\n\n},{}],9:[function(require,module,exports){\n// Table metadata\n\n'use strict';\n\nvar check = require('./check');\nvar encode = require('./types').encode;\nvar sizeOf = require('./types').sizeOf;\n\nfunction Table(tableName, fields, options) {\n    var i;\n    for (i = 0; i < fields.length; i += 1) {\n        var field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        var optionKeys = Object.keys(options);\n        for (i = 0; i < optionKeys.length; i += 1) {\n            var k = optionKeys[i];\n            var v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\nTable.prototype.sizeOf = function() {\n    var v = 0;\n    for (var i = 0; i < this.fields.length; i += 1) {\n        var field = this.fields[i];\n        var value = this[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        if (typeof value.sizeOf === 'function') {\n            v += value.sizeOf();\n        } else {\n            var sizeOfFunction = sizeOf[field.type];\n            check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n            v += sizeOfFunction(value);\n        }\n    }\n\n    return v;\n};\n\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\nexports.Table = Table;\n\n},{\"./check\":1,\"./types\":24}],10:[function(require,module,exports){\n// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\nvar table = require('../table');\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (var i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    //var i, objectOffset, endOffset;\n    var offsets = [];\n    var objects = [];\n    var count = parse.getCard16(data, start);\n    var i;\n    var objectOffset;\n    var endOffset;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        var pos = start + 3;\n        for (i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (i = 0; i < offsets.length - 1; i += 1) {\n        var value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s = '';\n    var eof = 15;\n    var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        var b = parser.parseByte();\n        var n1 = b >> 4;\n        var n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1;\n    var b2;\n    var b3;\n    var b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o = {};\n    for (var i = 0; i < entries.length; i += 1) {\n        var key = entries[i][0];\n        var values = entries[i][1];\n        var value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key)) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    var parser = new parse.Parser(data, start);\n    var entries = [];\n    var operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        var op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = encoding.cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var newDict = {};\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (var i = 0; i < meta.length; i += 1) {\n        var m = meta[i];\n        var value = dict[m.op];\n        if (value === undefined) {\n            value = m.value !== undefined ? m.value : null;\n        }\n\n        if (m.type === 'SID') {\n            value = getCFFString(strings, value);\n        }\n\n        newDict[m.name] = value;\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n];\n\nvar PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var i;\n    var sid;\n    var count;\n    var parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    var charset = ['.notdef'];\n\n    var format = parser.parseCard8();\n    if (format === 0) {\n        for (i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var i;\n    var code;\n    var enc = {};\n    var parser = new parse.Parser(data, start);\n    var format = parser.parseCard8();\n    if (format === 0) {\n        var nCodes = parser.parseCard8();\n        for (i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        var nRanges = parser.parseCard8();\n        code = 1;\n        for (i = 0; i < nRanges; i += 1) {\n            var first = parser.parseCard8();\n            var nLeft = parser.parseCard8();\n            for (var j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new encoding.CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(code, font, index) {\n    var c1x;\n    var c1y;\n    var c2x;\n    var c2y;\n    var p = new path.Path();\n    var stack = [];\n    var nStems = 0;\n    var haveWidth = false;\n    var width = font.defaultWidthX;\n    var open = false;\n    var x = 0;\n    var y = 0;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + font.nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var b1;\n        var b2;\n        var b3;\n        var b4;\n        var codeIndex;\n        var subrCode;\n        var jpx;\n        var jpy;\n        var c3x;\n        var c3y;\n        var c4x;\n        var c4y;\n\n        var i = 0;\n        while (i < code.length) {\n            var v = code[i];\n            i += 1;\n            switch (v) {\n            case 1: // hstem\n                parseStems();\n                break;\n            case 3: // vstem\n                parseStems();\n                break;\n            case 4: // vmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                newContour(x, y);\n                break;\n            case 5: // rlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 6: // hlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 7: // vlineto\n                while (stack.length > 0) {\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 8: // rrcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 10: // callsubr\n                codeIndex = stack.pop() + font.subrsBias;\n                subrCode = font.subrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 11: // return\n                return;\n            case 12: // flex operators\n                v = code[i];\n                i += 1;\n                switch (v) {\n                case 35: // flex\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    y = c4y + stack.shift();      // dy6\n                    stack.shift();                // flex depth\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 34: // hflex\n                    // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y;                      // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = y;                      // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 36: // hflex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 37: // flex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                        x = c4x + stack.shift();\n                    } else {\n                        y = c4y + stack.shift();\n                    }\n\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                default:\n                    console.log('Glyph ' + index + ': unknown operator ' + 1200 + v);\n                    stack.length = 0;\n                }\n                break;\n            case 14: // endchar\n                if (stack.length > 0 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                if (open) {\n                    p.closePath();\n                    open = false;\n                }\n\n                break;\n            case 18: // hstemhm\n                parseStems();\n                break;\n            case 19: // hintmask\n            case 20: // cntrmask\n                parseStems();\n                i += (nStems + 7) >> 3;\n                break;\n            case 21: // rmoveto\n                if (stack.length > 2 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 22: // hmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 23: // vstemhm\n                parseStems();\n                break;\n            case 24: // rcurveline\n                while (stack.length > 2) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                x += stack.shift();\n                y += stack.shift();\n                p.lineTo(x, y);\n                break;\n            case 25: // rlinecurve\n                while (stack.length > 6) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                break;\n            case 26: // vvcurveto\n                if (stack.length % 2) {\n                    x += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x;\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 27: // hhcurveto\n                if (stack.length % 2) {\n                    y += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y;\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 28: // shortint\n                b1 = code[i];\n                b2 = code[i + 1];\n                stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                i += 2;\n                break;\n            case 29: // callgsubr\n                codeIndex = stack.pop() + font.gsubrsBias;\n                subrCode = font.gsubrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 30: // vhcurveto\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 31: // hvcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            default:\n                if (v < 32) {\n                    console.log('Glyph ' + index + ': unknown operator ' + v);\n                } else if (v < 247) {\n                    stack.push(v - 139);\n                } else if (v < 251) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push((v - 247) * 256 + b1 + 108);\n                } else if (v < 255) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push(-(v - 251) * 256 - b1 - 108);\n                } else {\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    b3 = code[i + 2];\n                    b4 = code[i + 3];\n                    i += 4;\n                    stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                }\n            }\n        }\n    }\n\n    parse(code);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.path = p;\n    glyph.advanceWidth = width;\n    return glyph;\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    font.tables.cff = {};\n    var header = parseCFFHeader(data, start);\n    var nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    var stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n    var topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n    font.tables.cff.topDict = topDict;\n\n    var privateDictOffset = start + topDict['private'][1];\n    var privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        var subrOffset = privateDictOffset + privateDict.subrs;\n        var subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    var charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    var charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) { // Standard encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) { // Expert encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = [];\n    for (var i = 0; i < font.nGlyphs; i += 1) {\n        var charString = charStringsIndex.objects[i];\n        font.glyphs.push(parseCFFCharstring(charString, font, i));\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    var sid;\n\n    // Is the string in the CFF standard strings?\n    var i = encoding.cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + encoding.cffStandardStrings.length;\n    } else {\n        sid = encoding.cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Table('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    var t = new table.Table('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (var i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    var m = {};\n    for (var i = 0; i < meta.length; i += 1) {\n        var entry = meta[i];\n        var value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    var t = new table.Table('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    var t = new table.Table('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    var t = new table.Table('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (var i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Table('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    var t = new table.Table('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (var i = 0; i < glyphNames.length; i += 1) {\n        var glyphName = glyphNames[i];\n        var glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    var ops = [];\n    var path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    var x = 0;\n    var y = 0;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var dx;\n        var dy;\n        var cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            var _13 = 1 / 3;\n            var _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            var dx1 = Math.round(cmd.x1 - x);\n            var dy1 = Math.round(cmd.y1 - y);\n            var dx2 = Math.round(cmd.x2 - cmd.x1);\n            var dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    var t = new table.Table('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    var t = new table.Table('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makePrivateDictIndex(privateDict) {\n    var t = new table.Table('Private DICT INDEX', [\n        {name: 'privateDicts', type: 'INDEX', value: []}\n    ]);\n    t.privateDicts = [{name: 'privateDict_0', type: 'TABLE', value: privateDict}];\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    var t = new table.Table('CFF ', [\n        {name: 'header', type: 'TABLE'},\n        {name: 'nameIndex', type: 'TABLE'},\n        {name: 'topDictIndex', type: 'TABLE'},\n        {name: 'stringIndex', type: 'TABLE'},\n        {name: 'globalSubrIndex', type: 'TABLE'},\n        {name: 'charsets', type: 'TABLE'},\n        {name: 'charStringsIndex', type: 'TABLE'},\n        {name: 'privateDictIndex', type: 'TABLE'}\n    ]);\n\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    var attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    var privateAttrs = {};\n\n    var glyphNames = [];\n\n    // Skip first glyph (.notdef)\n    for (var i = 1; i < glyphs.length; i += 1) {\n        glyphNames.push(glyphs[i].name);\n    }\n\n    var strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    var topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    var privateDict = makePrivateDict(privateAttrs, strings);\n    t.privateDictIndex = makePrivateDictIndex(privateDict);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    var startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexports.parse = parseCFFTable;\nexports.make = makeCFFTable;\n\n},{\"../encoding\":3,\"../glyph\":5,\"../parse\":7,\"../path\":8,\"../table\":9}],11:[function(require,module,exports){\n// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var i;\n    var cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 3\" table. This is a Windows format.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    var offset = -1;\n    for (i = 0; i < cmap.numTables; i += 1) {\n        var platformId = parse.getUShort(data, start + 4 + (i * 8));\n        var encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support, so return null.\n        // This font will be marked as unsupported.\n        return null;\n    }\n\n    var p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n    check.argument(cmap.format === 4, 'Only format 4 cmap tables are supported.');\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    var segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n\n    var endCountParser = new parse.Parser(data, start + offset + 14);\n    var startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    var idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    var idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    var glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (i = 0; i < segCount - 1; i += 1) {\n        var glyphIndex;\n        var endCount = endCountParser.parseUShort();\n        var startCount = startCountParser.parseUShort();\n        var idDelta = idDeltaParser.parseShort();\n        var idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (var c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\nfunction makeCmapTable(glyphs) {\n    var i;\n    var t = new table.Table('cmap', [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: 1},\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: 12},\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        for (var j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function(a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    var segCount;\n    segCount = t.segments.length;\n    t.segCountX2 = segCount * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    // Set up parallel segment arrays.\n    var endCounts = [];\n    var startCounts = [];\n    var idDeltas = [];\n    var idRangeOffsets = [];\n    var glyphIds = [];\n\n    for (i = 0; i < segCount; i += 1) {\n        var segment = t.segments[i];\n        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n        if (segment.glyphId !== undefined) {\n            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n        }\n    }\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    return t;\n}\n\nexports.parse = parseCmapTable;\nexports.make = makeCmapTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],12:[function(require,module,exports){\n// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\n'use strict';\n\nvar check = require('../check');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(data, start, index, font) {\n    //var p, glyph, flag, i, j, flags,\n    //    endPointIndices, numberOfCoordinates, repeatCount, points, point, px, py,\n    //    component, moreComponents;\n    var p = new parse.Parser(data, start);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.numberOfContours = p.parseShort();\n    glyph.xMin = p.parseShort();\n    glyph.yMin = p.parseShort();\n    glyph.xMax = p.parseShort();\n    glyph.yMax = p.parseShort();\n    var flags;\n    var flag;\n    if (glyph.numberOfContours > 0) {\n        var i;\n        // This glyph is not a composite.\n        var endPointIndices = glyph.endPointIndices = [];\n        for (i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                var repeatCount = p.parseByte();\n                for (var j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            var points = [];\n            var point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                var px = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                var py = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        var moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            var component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                component.dx = p.parseShort();\n                component.dy = p.parseShort();\n            } else {\n                // The arguments are bytes\n                component.dx = p.parseChar();\n                component.dy = p.parseChar();\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n    }\n\n    return glyph;\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        var newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p = new path.Path();\n    if (!points) {\n        return p;\n    }\n\n    var contours = getContours(points);\n    for (var i = 0; i < contours.length; i += 1) {\n        var contour = contours[i];\n        var firstPt = contour[0];\n        var lastPt = contour[contour.length - 1];\n        var curvePt;\n        var realFirstPoint;\n        if (firstPt.onCurve) {\n            curvePt = null;\n            // The first point will be consumed by the moveTo command,\n            // so skip it in the loop.\n            realFirstPoint = true;\n        } else {\n            if (lastPt.onCurve) {\n                // If the first point is off-curve and the last point is on-curve,\n                // start at the last point.\n                firstPt = lastPt;\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n            }\n\n            curvePt = firstPt;\n            // The first point is synthesized, so don't skip the real first point.\n            realFirstPoint = false;\n        }\n\n        p.moveTo(firstPt.x, firstPt.y);\n\n        for (var j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n            var pt = contour[j];\n            var prevPt = j === 0 ? firstPt : contour[j - 1];\n            if (prevPt.onCurve && pt.onCurve) {\n                // This is a straight line.\n                p.lineTo(pt.x, pt.y);\n            } else if (prevPt.onCurve && !pt.onCurve) {\n                curvePt = pt;\n            } else if (!prevPt.onCurve && !pt.onCurve) {\n                var midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n                p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n                curvePt = pt;\n            } else if (!prevPt.onCurve && pt.onCurve) {\n                // Previous point off-curve, this point on-curve.\n                p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                curvePt = null;\n            } else {\n                throw new Error('Invalid state.');\n            }\n        }\n\n        if (firstPt !== lastPt) {\n            // Connect the last and first points\n            if (curvePt) {\n                p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            } else {\n                p.lineTo(firstPt.x, firstPt.y);\n            }\n        }\n    }\n\n    p.closePath();\n    return p;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    var glyphs = [];\n    var i;\n    // The last element of the loca table is invalid.\n    for (i = 0; i < loca.length - 1; i += 1) {\n        var offset = loca[i];\n        var nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(parseGlyph(data, start + offset, i, font));\n        } else {\n            glyphs.push(new _glyph.Glyph({font: font, index: i}));\n        }\n    }\n    // Go over the glyphs again, resolving the composite glyphs.\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        if (glyph.isComposite) {\n            for (var j = 0; j < glyph.components.length; j += 1) {\n                var component = glyph.components[j];\n                var componentGlyph = glyphs[component.glyphIndex];\n                if (componentGlyph.points) {\n                    var transformedPoints = transformPoints(componentGlyph.points, component);\n                    glyph.points = glyph.points.concat(transformedPoints);\n                }\n            }\n        }\n\n        glyph.path = getPath(glyph.points);\n    }\n\n    return glyphs;\n}\n\nexports.parse = parseGlyfTable;\n\n},{\"../check\":1,\"../glyph\":5,\"../parse\":7,\"../path\":8}],13:[function(require,module,exports){\n// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n// These lists are unused by now, this function is just the basis for a real parsing.\nfunction parseTaggedListTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var n = p.parseUShort();\n    var list = [];\n    for (var i = 0; i < n; i++) {\n        list[p.parseTag()] = { offset: p.parseUShort() };\n    }\n\n    return list;\n}\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// Format 1 is a simple list of glyph ids,\n// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\nfunction parseCoverageTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    var count =  p.parseUShort();\n    if (format === 1) {\n        return p.parseUShortList(count);\n    }\n    else if (format === 2) {\n        var coverage = [];\n        for (; count--;) {\n            var begin = p.parseUShort();\n            var end = p.parseUShort();\n            var index = p.parseUShort();\n            for (var i = begin; i <= end; i++) {\n                coverage[index++] = i;\n            }\n        }\n\n        return coverage;\n    }\n}\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// Returns a function that gets a class value from a glyph ID.\nfunction parseClassDefTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    if (format === 1) {\n        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n        var startGlyph = p.parseUShort();\n        var glyphCount = p.parseUShort();\n        var classes = p.parseUShortList(glyphCount);\n        return function(glyphID) {\n            return classes[glyphID - startGlyph] || 0;\n        };\n    }\n    else if (format === 2) {\n        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n        var rangeCount = p.parseUShort();\n        var startGlyphs = [];\n        var endGlyphs = [];\n        var classValues = [];\n        for (var i = 0; i < rangeCount; i++) {\n            startGlyphs[i] = p.parseUShort();\n            endGlyphs[i] = p.parseUShort();\n            classValues[i] = p.parseUShort();\n        }\n\n        return function(glyphID) {\n            var l = 0;\n            var r = startGlyphs.length - 1;\n            while (l < r) {\n                var c = (l + r + 1) >> 1;\n                if (glyphID < startGlyphs[c]) {\n                    r = c - 1;\n                } else {\n                    l = c;\n                }\n            }\n\n            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                return classValues[l] || 0;\n            }\n\n            return 0;\n        };\n    }\n}\n\n// Parse a pair adjustment positioning subtable, format 1 or format 2\n// The subtable is returned in the form of a lookup function.\nfunction parsePairPosSubTable(data, start) {\n    var p = new parse.Parser(data, start);\n    // This part is common to format 1 and format 2 subtables\n    var format = p.parseUShort();\n    var coverageOffset = p.parseUShort();\n    var coverage = parseCoverageTable(data, start + coverageOffset);\n    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n    // Only valueFormat1=4 and valueFormat2=0 is supported.\n    var valueFormat1 = p.parseUShort();\n    var valueFormat2 = p.parseUShort();\n    var value1;\n    var value2;\n    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n    var sharedPairSets = {};\n    if (format === 1) {\n        // Pair Positioning Adjustment: Format 1\n        var pairSetCount = p.parseUShort();\n        var pairSet = [];\n        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n        var pairSetOffsets = p.parseOffset16List(pairSetCount);\n        for (var firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n            var pairSetOffset = pairSetOffsets[firstGlyph];\n            var sharedPairSet = sharedPairSets[pairSetOffset];\n            if (!sharedPairSet) {\n                // Parse a pairset table in a pair adjustment subtable format 1\n                sharedPairSet = {};\n                p.relativeOffset = pairSetOffset;\n                var pairValueCount = p.parseUShort();\n                for (; pairValueCount--;) {\n                    var secondGlyph = p.parseUShort();\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) value2 = p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    sharedPairSet[secondGlyph] = value1;\n                }\n            }\n\n            pairSet[coverage[firstGlyph]] = sharedPairSet;\n        }\n\n        return function(leftGlyph, rightGlyph) {\n            var pairs = pairSet[leftGlyph];\n            if (pairs) return pairs[rightGlyph];\n        };\n    }\n    else if (format === 2) {\n        // Pair Positioning Adjustment: Format 2\n        var classDef1Offset = p.parseUShort();\n        var classDef2Offset = p.parseUShort();\n        var class1Count = p.parseUShort();\n        var class2Count = p.parseUShort();\n        var getClass1 = parseClassDefTable(data, start + classDef1Offset);\n        var getClass2 = parseClassDefTable(data, start + classDef2Offset);\n\n        // Parse kerning values by class pair.\n        var kerningMatrix = [];\n        for (var i = 0; i < class1Count; i++) {\n            var kerningRow = kerningMatrix[i] = [];\n            for (var j = 0; j < class2Count; j++) {\n                if (valueFormat1) value1 = p.parseShort();\n                if (valueFormat2) value2 = p.parseShort();\n                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                // so value1 is the XAdvance and value2 is empty.\n                kerningRow[j] = value1;\n            }\n        }\n\n        // Convert coverage list to a hash\n        var covered = {};\n        for (i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\n        // Get the kerning value for a specific glyph pair.\n        return function(leftGlyph, rightGlyph) {\n            if (!covered[leftGlyph]) return;\n            var class1 = getClass1(leftGlyph);\n            var class2 = getClass2(rightGlyph);\n            var kerningRow = kerningMatrix[class1];\n\n            if (kerningRow) {\n                return kerningRow[class2];\n            }\n        };\n    }\n}\n\n// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\nfunction parseLookupTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var lookupType = p.parseUShort();\n    var lookupFlag = p.parseUShort();\n    var useMarkFilteringSet = lookupFlag & 0x10;\n    var subTableCount = p.parseUShort();\n    var subTableOffsets = p.parseOffset16List(subTableCount);\n    var table = {\n        lookupType: lookupType,\n        lookupFlag: lookupFlag,\n        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n    };\n    // LookupType 2, Pair adjustment\n    if (lookupType === 2) {\n        var subtables = [];\n        for (var i = 0; i < subTableCount; i++) {\n            subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n        }\n        // Return a function which finds the kerning values in the subtables.\n        table.getKerningValue = function(leftGlyph, rightGlyph) {\n            for (var i = subtables.length; i--;) {\n                var value = subtables[i](leftGlyph, rightGlyph);\n                if (value !== undefined) return value;\n            }\n\n            return 0;\n        };\n    }\n\n    return table;\n}\n\n// Parse the `GPOS` table which contains, among other things, kerning pairs.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\nfunction parseGposTable(data, start, font) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseFixed();\n    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n    // ScriptList and FeatureList - ignored for now\n    parseTaggedListTable(data, start + p.parseUShort());\n    // 'kern' is the feature we are looking for.\n    parseTaggedListTable(data, start + p.parseUShort());\n\n    // LookupList\n    var lookupListOffset = p.parseUShort();\n    p.relativeOffset = lookupListOffset;\n    var lookupCount = p.parseUShort();\n    var lookupTableOffsets = p.parseOffset16List(lookupCount);\n    var lookupListAbsoluteOffset = start + lookupListOffset;\n    for (var i = 0; i < lookupCount; i++) {\n        var table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n    }\n}\n\nexports.parse = parseGposTable;\n\n},{\"../check\":1,\"../parse\":7}],14:[function(require,module,exports){\n// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {};\n    var p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();     // 50\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: 0},\n        {name: 'modified', type: 'LONGDATETIME', value: 0},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHeadTable;\nexports.make = makeHeadTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],15:[function(require,module,exports){\n// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {};\n    var p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHheaTable;\nexports.make = makeHheaTable;\n\n},{\"../parse\":7,\"../table\":9}],16:[function(require,module,exports){\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    var advanceWidth;\n    var leftSideBearing;\n    var p = new parse.Parser(data, start);\n    for (var i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        var glyph = glyphs[i];\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    var t = new table.Table('hmtx', []);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var advanceWidth = glyph.advanceWidth || 0;\n        var leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexports.parse = parseHmtxTable;\nexports.make = makeHmtxTable;\n\n},{\"../parse\":7,\"../table\":9}],17:[function(require,module,exports){\n// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var pairs = {};\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseUShort();\n    check.argument(tableVersion === 0, 'Unsupported kern table version.');\n    // Skip nTables.\n    p.skip('uShort', 1);\n    var subTableVersion = p.parseUShort();\n    check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subTableLength, subTableCoverage\n    p.skip('uShort', 2);\n    var nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (var i = 0; i < nPairs; i += 1) {\n        var leftIndex = p.parseUShort();\n        var rightIndex = p.parseUShort();\n        var value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n\n    return pairs;\n}\n\nexports.parse = parseKernTable;\n\n},{\"../check\":1,\"../parse\":7}],18:[function(require,module,exports){\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\n'use strict';\n\nvar parse = require('../parse');\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p = new parse.Parser(data, start);\n    var parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    var glyphOffsets = [];\n    for (var i = 0; i < numGlyphs + 1; i += 1) {\n        var glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexports.parse = parseLocaTable;\n\n},{\"../parse\":7}],19:[function(require,module,exports){\n// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {};\n    var p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexports.parse = parseMaxpTable;\nexports.make = makeMaxpTable;\n\n},{\"../parse\":7,\"../table\":9}],20:[function(require,module,exports){\n// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\n'use strict';\n\nvar encode = require('../types').encode;\nvar parse = require('../parse');\nvar table = require('../table');\n\n// NameIDs for the name table.\nvar nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'licence',                // 13\n    'licenceURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\n// Parse the naming `name` table\n// Only Windows Unicode English names are supported.\n// Format 1 additional fields are not supported\nfunction parseNameTable(data, start) {\n    var name = {};\n    var p = new parse.Parser(data, start);\n    name.format = p.parseUShort();\n    var count = p.parseUShort();\n    var stringOffset = p.offset + p.parseUShort();\n    var unknownCount = 0;\n    for (var i = 0; i < count; i++) {\n        var platformID = p.parseUShort();\n        var encodingID = p.parseUShort();\n        var languageID = p.parseUShort();\n        var nameID = p.parseUShort();\n        var property = nameTableNames[nameID];\n        var byteLength = p.parseUShort();\n        var offset = p.parseUShort();\n        // platformID - encodingID - languageID standard combinations :\n        // 1 - 0 - 0 : Macintosh, Roman, English\n        // 3 - 1 - 0x409 : Windows, Unicode BMP (UCS-2), en-US\n        if (platformID === 3 && encodingID === 1 && languageID === 0x409) {\n            var codePoints = [];\n            var length = byteLength / 2;\n            for (var j = 0; j < length; j++, offset += 2) {\n                codePoints[j] = parse.getShort(data, stringOffset + offset);\n            }\n\n            var str = String.fromCharCode.apply(null, codePoints);\n            if (property) {\n                name[property] = str;\n            }\n            else {\n                unknownCount++;\n                name['unknown' + unknownCount] = str;\n            }\n        }\n\n    }\n\n    if (name.format === 1) {\n        name.langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Table('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\nfunction addMacintoshNameRecord(t, recordID, s, offset) {\n    // Macintosh, Roman, English\n    var stringBytes = encode.STRING(s);\n    t.records.push(makeNameRecord(1, 0, 0, recordID, stringBytes.length, offset));\n    t.strings.push(stringBytes);\n    offset += stringBytes.length;\n    return offset;\n}\n\nfunction addWindowsNameRecord(t, recordID, s, offset) {\n    // Windows, Unicode BMP (UCS-2), US English\n    var utf16Bytes = encode.UTF16(s);\n    t.records.push(makeNameRecord(3, 1, 0x0409, recordID, utf16Bytes.length, offset));\n    t.strings.push(utf16Bytes);\n    offset += utf16Bytes.length;\n    return offset;\n}\n\nfunction makeNameTable(options) {\n    var t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: 0},\n        {name: 'stringOffset', type: 'USHORT', value: 0}\n    ]);\n    t.records = [];\n    t.strings = [];\n    var offset = 0;\n    var i;\n    var s;\n    // Add Macintosh records first\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addMacintoshNameRecord(t, i, s, offset);\n        }\n    }\n    // Then add Windows records\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addWindowsNameRecord(t, i, s, offset);\n        }\n    }\n\n    t.count = t.records.length;\n    t.stringOffset = 6 + t.count * 12;\n    for (i = 0; i < t.records.length; i += 1) {\n        t.fields.push({name: 'record_' + i, type: 'TABLE', value: t.records[i]});\n    }\n\n    for (i = 0; i < t.strings.length; i += 1) {\n        t.fields.push({name: 'string_' + i, type: 'LITERAL', value: t.strings[i]});\n    }\n\n    return t;\n}\n\nexports.parse = parseNameTable;\nexports.make = makeNameTable;\n\n},{\"../parse\":7,\"../table\":9,\"../types\":24}],21:[function(require,module,exports){\n// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\nvar unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (var i = 0; i < unicodeRanges.length; i += 1) {\n        var range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {};\n    var p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.unicodeRanges = unicodeRanges;\nexports.getUnicodeRange = getUnicodeRange;\nexports.parse = parseOS2Table;\nexports.make = makeOS2Table;\n\n},{\"../parse\":7,\"../table\":9}],22:[function(require,module,exports){\n// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {};\n    var p = new parse.Parser(data, start);\n    var i;\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n    case 1:\n        post.names = encoding.standardNames.slice();\n        break;\n    case 2:\n        post.numberOfGlyphs = p.parseUShort();\n        post.glyphNameIndex = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.glyphNameIndex[i] = p.parseUShort();\n        }\n\n        post.names = [];\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n                var nameLength = p.parseChar();\n                post.names.push(p.parseString(nameLength));\n            }\n        }\n\n        break;\n    case 2.5:\n        post.numberOfGlyphs = p.parseUShort();\n        post.offset = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.offset[i] = p.parseChar();\n        }\n\n        break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexports.parse = parsePostTable;\nexports.make = makePostTable;\n\n},{\"../encoding\":3,\"../parse\":7,\"../table\":9}],23:[function(require,module,exports){\n// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\n'use strict';\n\nvar check = require('../check');\nvar table = require('../table');\n\nvar cmap = require('./cmap');\nvar cff = require('./cff');\nvar head = require('./head');\nvar hhea = require('./hhea');\nvar hmtx = require('./hmtx');\nvar maxp = require('./maxp');\nvar _name = require('./name');\nvar os2 = require('./os2');\nvar post = require('./post');\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    var sum = 0;\n    for (var i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Table('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    var sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    var recordFields = [];\n    var tableFields = [];\n\n    var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (var i = 0; i < tables.length; i += 1) {\n        var t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        var tableLength = t.sizeOf();\n        var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (var i = 0; i < chars.length; i += 1) {\n        var glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            var glyph = font.glyphs[glyphIndex];\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    var sum = 0;\n    for (var i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    var xMins = [];\n    var yMins = [];\n    var xMaxs = [];\n    var yMaxs = [];\n    var advanceWidths = [];\n    var leftSideBearings = [];\n    var rightSideBearings = [];\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    for (var i = 0; i < font.glyphs.length; i += 1) {\n        var glyph = font.glyphs[i];\n        var unicode = glyph.unicode | 0;\n        if (firstCharIndex > unicode || firstCharIndex === null) {\n            firstCharIndex = unicode;\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        var position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        var metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    var globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n    globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\n    var headTable = head.make({\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax\n    });\n\n    var hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    var maxpTable = maxp.make(font.glyphs.length);\n\n    var os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: 500, // Medium FIXME Make this configurable\n        usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.ascender,\n        usWinDescent: -globals.descender,\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: 0}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n    var hmtxTable = hmtx.make(font.glyphs);\n    var cmapTable = cmap.make(font.glyphs);\n\n    var fullName = font.familyName + ' ' + font.styleName;\n    var postScriptName = font.familyName.replace(/\\s/g, '') + '-' + font.styleName;\n    var nameTable = _name.make({\n        copyright: font.copyright,\n        fontFamily: font.familyName,\n        fontSubfamily: font.styleName,\n        uniqueID: font.manufacturer + ':' + fullName,\n        fullName: fullName,\n        version: font.version,\n        postScriptName: postScriptName,\n        trademark: font.trademark,\n        manufacturer: font.manufacturer,\n        designer: font.designer,\n        description: font.description,\n        manufacturerURL: font.manufacturerURL,\n        designerURL: font.designerURL,\n        license: font.license,\n        licenseURL: font.licenseURL,\n        preferredFamily: font.familyName,\n        preferredSubfamily: font.styleName\n    });\n    var postTable = post.make();\n    var cffTable = cff.make(font.glyphs, {\n        version: font.version,\n        fullName: fullName,\n        familyName: font.familyName,\n        weightName: font.styleName,\n        postScriptName: postScriptName\n    });\n    // Order the tables according to the the OpenType specification 1.4.\n    var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n\n    var sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    var bytes = sfntTable.encode();\n    var checkSum = computeCheckSum(bytes);\n    var tableFields = sfntTable.fields;\n    var checkSumAdjusted = false;\n    for (i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexports.computeCheckSum = computeCheckSum;\nexports.make = makeSfntTable;\nexports.fontToTable = fontToSfntTable;\n\n},{\"../check\":1,\"../table\":9,\"./cff\":10,\"./cmap\":11,\"./head\":14,\"./hhea\":15,\"./hmtx\":16,\"./maxp\":19,\"./name\":20,\"./os2\":21,\"./post\":22}],24:[function(require,module,exports){\n// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = require('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\nvar decode = {};\nvar encode = {};\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n// Convert an 8-bit unsigned integer to a list of 1 byte.\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert a 8-bit signed integer to a list of 1 byte.\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert an ASCII string to a list of bytes.\nencode.CHARARRAY = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n// Convert a 16-bit unsigned integer to a list of 2 bytes.\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.USHORT = constant(2);\n\n// Convert a 16-bit signed integer to a list of 2 bytes.\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.SHORT = constant(2);\n\n// Convert a 24-bit unsigned integer to a list of 3 bytes.\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.UINT24 = constant(3);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.ULONG = constant(4);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n// FIXME Implement LONGDATETIME\nencode.LONGDATETIME = function() {\n    return [0, 0, 0, 0, 0, 0, 0, 0];\n};\n\nsizeOf.LONGDATETIME = constant(8);\n\n// Convert a 4-char tag to a list of 4 bytes.\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n// Convert a signed number between -32768 and +32767 to a three-byte value.\n// This ensures we always use three bytes, but is not the most compact format.\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER16 = constant(2);\n\n// Convert a signed number between -(2^31) and +(2^31-1) to a four-byte value.\n// This is useful if you want to be sure you always use four bytes,\n// at the expense of wasting a few bytes for smaller numbers.\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER32 = constant(4);\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n// Convert a ASCII string to a list of UTF16 bytes.\nencode.UTF16 = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(0);\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\nencode.INDEX = function(l) {\n    var i;\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    dataSize, i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    var offset = 1; // First offset is always 1.\n    var offsets = [offset];\n    var data = [];\n    var dataSize = 0;\n    for (i = 0; i < l.length; i += 1) {\n        var v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        dataSize += v.length;\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    var encodedOffsets = [];\n    var offSize = (1 + Math.floor(Math.log(dataSize) / Math.log(2)) / 8) | 0;\n    var offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        var encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n// Convert an object to a CFF DICT structure.\n// The keys should be numeric.\n// The values should be objects containing name / type / value.\nencode.DICT = function(m) {\n    var d = [];\n    var keys = Object.keys(m);\n    var length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\nencode.OPERAND = function(v, type) {\n    var d = [];\n    if (Array.isArray(type)) {\n        for (var i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else {\n            // FIXME Add support for booleans\n            d = d.concat(encode.NUMBER(v));\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n// Convert a list of CharString operations to bytes.\nencode.CHARSTRING = function(ops) {\n    if (wmm && wmm.has(ops)) {\n        return wmm.get(ops);\n    }\n\n    var d = [];\n    var length = ops.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n// Convert an object containing name / type / value to bytes.\nencode.OBJECT = function(v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n// Convert a table object to bytes.\n// A table contains a list of fields containing the metadata (name, type and default value).\n// The table itself has the field values set as attributes.\nencode.TABLE = function(table) {\n    var d = [];\n    var length = table.fields.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        var bytes = encodingFunction(value);\n        d = d.concat(bytes);\n    }\n\n    return d;\n};\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n\n},{\"./check\":1}]},{},[6])(6)\n});\n},{}],2:[function(require,module,exports){\n/*!\n * Paper.js v0.9.22 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Mon Mar 23 22:20:31 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\n\t\t  var noCanvas =\n\t\t\t  ( typeof process === 'object' && process.browser !== true ) ||\n\t\t\t  ( typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope );\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && (!exclude || !exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tctor.prototype = create(this.prototype);\n\t\t\tctor.base = base;\n\t\t\tdefine(ctor.prototype, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\treturn arguments.length ? this.inject.apply(ctor, arguments) : ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function() {\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\t\tif (arguments[i] !== undefined)\n\t\t\t\t\t\treturn arguments[i];\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar orig = props._filtering || props;\n\t\t\tfor (var key in orig) {\n\t\t\t\tif (orig.hasOwnProperty(key) && !(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tfunction checkKeys(o1, o2) {\n\t\t\t\tfor (var i in o1)\n\t\t\t\t\tif (o1.hasOwnProperty(i) && !o2.hasOwnProperty(i))\n\t\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\tif (obj1.length !== obj2.length)\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i = 0, l = obj1.length; i < l; i++) {\n\t\t\t\t\tif (!Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 && typeof obj1 === 'object'\n\t\t\t\t\t&& obj2 && typeof obj2 === 'object') {\n\t\t\t\tif (!checkKeys(obj1, obj2) || !checkKeys(obj2, obj1))\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i in obj1) {\n\t\t\t\t\tif (obj1.hasOwnProperty(i)\n\t\t\t\t\t\t\t&& !Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var i in obj)\n\t\t\t\t\tif (obj.hasOwnProperty(i))\n\t\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\t\tdictionary);\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (!isDictionary) {\n\t\t\t\t\tif (_data.dictionary && json.length == 1 && /^#/.test(type))\n\t\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\t\ttype = Base.exports[type];\n\t\t\t\t}\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data));\n\t\t\t\tif (isDictionary) {\n\t\t\t\t\t_data.dictionary = res[0];\n\t\t\t\t} else if (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar entry = this._eventTypes[type];\n\t\t\tif (entry) {\n\t\t\t\tvar handlers = this._callbacks = this._callbacks || {};\n\t\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\t\thandlers.push(func);\n\t\t\t\t\tif (entry.install && handlers.length == 1)\n\t\t\t\t\t\tentry.install.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar entry = this._eventTypes[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (entry && handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false\n\t\t\t\t\t&& event && event.stop) {\n\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar entry = this._eventTypes[type],\n\t\t\t\t\tfunc = entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif ( noCanvas ) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar browser = proto.browser = {};\n\t\t\tnavigator.userAgent.toLowerCase().replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: '0.9.22',\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tTOLERANCE = 1e-6,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\treturn {\n\t\tTOLERANCE: TOLERANCE,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn abs(val) <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= 2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar pow = Math.pow,\n\t\t\t\t\tgmC = pow(abs(a*b*c), 1/3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\t/*\n\t\t\t\t\t * we multiply with a factor to normalize the\n\t\t\t\t\t * coefficients. The factor is just the nearest exponent\n\t\t\t\t\t * of 10, big enough to raise all the coefficients to\n\t\t\t\t\t * nearly [-1, +1] range.\n\t\t\t\t\t */\n\t\t\t\t\tvar mult = pow(10, abs(\n\t\t\t\t\t\tMath.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < MACHINE_EPSILON) {\n\t\t\t\tif (abs(B) < MACHINE_EPSILON)\n\t\t\t\t\treturn abs(c) < MACHINE_EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else {\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tD = D < 0 ? 0 : D;\n\t\t\t\t\tvar R = sqrt(D);\n\t\t\t\t\tif (b >= MACHINE_EPSILON && b <= MACHINE_EPSILON) {\n\t\t\t\t\t\tx1 = abs(a) >= abs(c) ? R / a : -c / R;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar q = -(b + (b < 0 ? -1 : 1) * R);\n\t\t\t\t\t\tx1 = q / a;\n\t\t\t\t\t\tx2 = c / q;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 >= min && x1 <= max))\n\t\t\t\troots[count++] = x1;\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 >= min && x2 <= max))\n\t\t\t\troots[count++] = x2;\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar x, b1, c2, count = 0;\n\t\t\tif (a === 0) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (d === 0) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x >= min && x <= max))\n\t\t\t\troots[count++] = x;\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\ts = Math.sin(angle),\n\t\t\tc = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * c - point.y * s,\n\t\t\tpoint.x * s + point.y * c\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function(point, tolerance) {\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisColinear: function(point) {\n\t\treturn Math.abs(this.cross(point)) < 1e-12;\n\t},\n\n\tisOrthogonal: function(point) {\n\t\treturn Math.abs(this.dot(point)) < 1e-12;\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments);\n\t\tif (point.isZero()) {\n\t\t\treturn new Point(0, 0);\n\t\t} else {\n\t\t\tvar scale = this.dot(point) / point.dot(point);\n\t\t\treturn new Point(\n\t\t\t\tpoint.x * scale,\n\t\t\t\tpoint.y * scale\n\t\t\t);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n}, new function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = coords.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tstatics: {\n\t\tintersect: function(apx, apy, avx, avy, bpx, bpy, bvx, bvy, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tavx -= apx;\n\t\t\t\tavy -= apy;\n\t\t\t\tbvx -= bpx;\n\t\t\t\tbvy -= bpy;\n\t\t\t}\n\t\t\tvar cross = avx * bvy - avy * bvx;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = apx - bpx,\n\t\t\t\t\tdy = apy - bpy,\n\t\t\t\t\tta = (bvx * dy - bvy * dx) / cross,\n\t\t\t\t\ttb = (avx * dy - avy * dx) / cross;\n\t\t\t\tif (isInfinite || 0 <= ta && ta <= 1 && 0 <= tb && tb <= 1)\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\t\tapx + ta * avx,\n\t\t\t\t\t\t\t\tapy + ta * avy);\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0) {\n\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\tif (ccw > 0) {\n\t\t\t\t\tv2x -= vx;\n\t\t\t\t\tv2y -= vy;\n\t\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\t\tif (ccw < 0)\n\t\t\t\t\t\tccw = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn Numerical.isZero(vx)\n\t\t\t\t\t? vy >= 0 ? px - x : x - px\n\t\t\t\t\t: Numerical.isZero(vy)\n\t\t\t\t\t\t? vx >= 0 ? y - py : py - y\n\t\t\t\t\t\t: (vx * (y - py) - vy * (x - px)) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = Symbol._id = (Symbol._id || 0) + 1;\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = Item._id = (Item._id || 0) + 1;\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, parent: true }, true);\n\t\treturn hasProps;\n\t},\n\n\t_events: new function() {\n\n\t\tvar mouseFlags = {\n\t\t\tmousedown: {\n\t\t\t\tmousedown: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmouseup: {\n\t\t\t\tmouseup: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmousemove: {\n\t\t\t\tmousedrag: 1,\n\t\t\t\tmousemove: 1,\n\t\t\t\tmouseenter: 1,\n\t\t\t\tmouseleave: 1\n\t\t\t}\n\t\t};\n\n\t\tvar mouseEvent = {\n\t\t\tinstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tuninstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = mouseEvent;\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis._animateItem(true);\n\t\t\t\t\t},\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis._animateItem(false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {}\n\t\t\t}\n\t\t);\n\t},\n\n\t_animateItem: function(animate) {\n\t\tthis.getView()._animateItem(this, animate);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments);\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n\n\tgetRegistration: '#getPivot',\n\tsetRegistration: '#setPivot'\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tvar cacheParent = this._parent || this._parentSymbol;\n\t\tif (cacheParent) {\n\t\t\tvar id = cacheItem._id,\n\t\t\t\tref = cacheParent._boundsCache = cacheParent._boundsCache || {\n\t\t\t\t\tids: {},\n\t\t\t\t\tlist: []\n\t\t\t\t};\n\t\t\tif (!ref.ids[id]) {\n\t\t\t\tref.list.push(cacheItem);\n\t\t\t\tref.ids[id] = cacheItem;\n\t\t\t}\n\t\t}\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++) {\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function(matrix) {\n\t\tthis._matrix.initialize(matrix);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert) {\n\t\tcopy.setStyle(this._style);\n\t\tif (this._children) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tcopy.addChild(this._children[i].clone(false), true);\n\t\t}\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide', '_applyMatrix'];\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tcopy.setSelected(this._selected);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(),\n\t\t\t\t_matrix || item._matrix).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 0.000001)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tif (typeof name === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param) {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect =\tbounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: rect,\n\t\t\t\t\toverlapping: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param.items,\n\t\t\t\tinside = param.inside,\n\t\t\t\toverlapping = param.overlapping;\n\t\t\tmatrix = inside && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (inside) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!inside.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(inside && inside.contains(bounds)) && !(overlapping\n\t\t\t\t\t\t\t&& overlapping.intersects(child, childMatrix)))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2;\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t});\n\t\tpath.setStyle(this._style);\n\t\tpath.transform(this._matrix);\n\t\tif (insert || insert === undefined)\n\t\t\tpath.insertAbove(this);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rect' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\t\timage = document.getElementById(src) || new Image();\n\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, {\n\t\t\t\tload: loaded\n\t\t\t});\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL() : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif (arg0.point) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.isLinear() ? this._point\n\t\t\t\t: [this._point, this._handleIn, this._handleOut],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._handleIn.isZero() && this._handleOut.isZero();\n\t},\n\n\tsetLinear: function(linear) {\n\t\tif (linear) {\n\t\t\tthis._handleIn.set(0, 0);\n\t\t\tthis._handleOut.set(0, 0);\n\t\t} else {\n\t\t}\n\t},\n\n\tisColinear: function(segment) {\n\t\tvar next1 = this.getNext(),\n\t\t\tnext2 = segment.getNext();\n\t\treturn this._handleOut.isZero() && next1._handleIn.isZero()\n\t\t\t\t&& segment._handleOut.isZero() && next2._handleIn.isZero()\n\t\t\t\t&& next1._point.subtract(this._point).isColinear(\n\t\t\t\t\tnext2._point.subtract(segment._point));\n\t},\n\n\tisOrthogonal: function() {\n\t\tvar prev = this.getPrevious(),\n\t\t\tnext = this.getNext();\n\t\treturn prev._handleOut.isZero() && this._handleIn.isZero()\n\t\t\t&& this._handleOut.isZero() && next._handleIn.isZero()\n\t\t\t&& this._point.subtract(prev._point).isOrthogonal(\n\t\t\t\t\tnext._point.subtract(this._point));\n\t},\n\n\tisArc: function() {\n\t\tvar next = this.getNext(),\n\t\t\thandle1 = this._handleOut,\n\t\t\thandle2 = next._handleIn,\n\t\t\tkappa = 0.5522847498307936;\n\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\tvar from = this._point,\n\t\t\t\tto = next._point,\n\t\t\t\tcorner = new Line(from, handle1, true).intersect(\n\t\t\t\t\t\tnew Line(to, handle2, true), true);\n\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\tcorner.subtract(from).getLength() - kappa)\n\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\tcorner.subtract(to).getLength() - kappa);\n\t\t}\n\t\treturn false;\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\treverse: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(segment0, segment1, coef) {\n\t\tvar dxPoint = segment1._point._x - segment0._point._x,\n\t\t\tdyPoint = segment1._point._y - segment0._point._y,\n\t\t\tdxHandleIn = segment1._handleIn._x - segment0._handleIn._x,\n\t\t\tdyHandleIn = segment1._handleIn._y - segment0._handleIn._y,\n\t\t\tdxHandleOut = segment1._handleOut._x - segment0._handleOut._x,\n\t\t\tdyHandleOut = segment1._handleOut._y - segment0._handleOut._y;\n\n\t\tthis._point._x = segment0._point._x + dxPoint * coef;\n\t\tthis._point._y = segment0._point._y + dyPoint * coef;\n\t\tthis._handleIn._x = segment0._handleIn._x + dxHandleIn * coef;\n\t\tthis._handleIn._y = segment0._handleIn._y + dyHandleIn * coef;\n\t\tthis._handleOut._x = segment0._handleOut._x + dxHandleOut * coef;\n\t\tthis._handleOut._y = segment0._handleOut._y + dyHandleOut * coef;\n\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tthis._segment1 = arg1;\n\t\t\tthis._segment2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tthis._segment1 = new Segment();\n\t\t\tthis._segment2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tthis._segment1 = new Segment(arg0.segment1);\n\t\t\tthis._segment2 = new Segment(arg0.segment2);\n\t\t} else if (count === 2) {\n\t\t\tthis._segment1 = new Segment(arg0);\n\t\t\tthis._segment2 = new Segment(arg1);\n\t\t} else {\n\t\t\tvar point1, handle1, handle2, point2;\n\t\t\tif (count === 4) {\n\t\t\t\tpoint1 = arg0;\n\t\t\t\thandle1 = arg1;\n\t\t\t\thandle2 = arg2;\n\t\t\t\tpoint2 = arg3;\n\t\t\t} else if (count === 8) {\n\t\t\t\tpoint1 = [arg0, arg1];\n\t\t\t\tpoint2 = [arg6, arg7];\n\t\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t\t}\n\t\t\tthis._segment1 = new Segment(point1, null, handle1);\n\t\t\tthis._segment2 = new Segment(point2, handle2, null);\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tthis._length = this.isLinear()\n\t\t\t\t? this._segment2._point.getDistance(this._segment1._point)\n\t\t\t\t: Curve.getLength(this.getValues(), 0, 1);\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._segment1._handleOut.isZero()\n\t\t\t\t&& this._segment2._handleIn.isZero();\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve.filterIntersections(Curve.getIntersections(\n\t\t\t\tthis.getValues(), curve.getValues(), this, curve, []));\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, ignoreLinear) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttolerance = 0.000001,\n\t\t\tres = null;\n\t\tif (parameter > tolerance && parameter < 1 - tolerance) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tisLinear = ignoreLinear ? false : this.isLinear(),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1];\n\n\t\t\tif (!isLinear) {\n\t\t\t\tthis._segment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tthis._segment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\t!isLinear && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\t!isLinear && new Point(right[2] - x, right[3] - y));\n\n\t\t\tif (this._path) {\n\t\t\t\tif (this._segment1._index > 0 && this._segment2._index === 0) {\n\t\t\t\t\tthis._path.add(segment);\n\t\t\t\t} else {\n\t\t\t\t\tthis._path.insert(this._segment2._index, segment);\n\t\t\t\t}\n\t\t\t\tres = this;\n\t\t\t} else {\n\t\t\t\tvar end = this._segment2;\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, end);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treverse: function() {\n\t\treturn new Curve(this._segment2.reverse(), this._segment1.reverse());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tevaluate: function(v, t, type) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tolerance || t > 1 - tolerance)) {\n\t\t\tvar isZero = t < tolerance;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tolerance && c1x === p1x && c1y === p1y\n\t\t\t\t\t\t|| t > 1 - tolerance && c2x === p2x && c2y === p2y) {\n\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t} else if (t < tolerance) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > 1 - tolerance) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by;\n\t\t\t\t\treturn (x * y2 - y * x2) / Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b,\n\t\t\tisZero = Numerical.isZero;\n\t\tif (isZero(a) && isZero(b))\n\t\t\ta = b = 0;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, x, y) {\n\t\tvar tolerance = 0.000001;\n\t\tif (Math.abs(v[0] - x) < tolerance && Math.abs(v[1] - y) < tolerance)\n\t\t\treturn 0;\n\t\tif (Math.abs(v[6] - x) < tolerance && Math.abs(v[7] - y) < tolerance)\n\t\t\treturn 1;\n\t\tvar txs = [],\n\t\t\ttys = [],\n\t\t\tsx = Curve.solveCubic(v, 0, x, txs, 0, 1),\n\t\t\tsy = Curve.solveCubic(v, 1, y, tys, 0, 1),\n\t\t\ttx, ty;\n\t\tfor (var cx = 0;  sx == -1 || cx < sx;) {\n\t\t\tif (sx == -1 || (tx = txs[cx++]) >= 0 && tx <= 1) {\n\t\t\t\tfor (var cy = 0; sy == -1 || cy < sy;) {\n\t\t\t\t\tif (sy == -1 || (ty = tys[cy++]) >= 0 && ty <= 1) {\n\t\t\t\t\t\tif (sx == -1) tx = ty;\n\t\t\t\t\t\telse if (sy == -1) ty = tx;\n\t\t\t\t\t\tif (Math.abs(tx - ty) < tolerance)\n\t\t\t\t\t\t\treturn (tx + ty) * 0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sx == -1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn v;\n\t},\n\n\tisLinear: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]);\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn (  3.0 * c1y * p1x - 1.5 * c1y * c2x\n\t\t\t\t- 1.5 * c1y * p2x - 3.0 * p1y * c1x\n\t\t\t\t- 1.5 * p1y * c2x - 0.5 * p1y * p2x\n\t\t\t\t+ 1.5 * c2y * p1x + 1.5 * c2y * c1x\n\t\t\t\t- 3.0 * c2y * p2x + 0.5 * p2y * p1x\n\t\t\t\t+ 1.5 * p2y * c1x + 3.0 * p2y * c2x) / 10;\n\t},\n\n\tgetEdgeSum: function(v) {\n\t\treturn\t  (v[0] - v[2]) * (v[3] + v[1])\n\t\t\t\t+ (v[2] - v[4]) * (v[5] + v[3])\n\t\t\t\t+ (v[4] - v[6]) * (v[7] + v[5]);\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name]([this._segment1,\n\t\t\t\t\t\tthis._segment2], false, this._path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve.evaluate(values, isParameter\n\t\t\t\t\t? offset : Curve.getParameterAt(values, offset, 0), index);\n\t\t};\n\t\tthis[name] = function(parameter) {\n\t\t\treturn Curve.evaluate(this.getValues(), parameter, index);\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Curve.getParameterOf(this.getValues(), point.x, point.y);\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tif (!isParameter)\n\t\t\toffset = this.getParameterAt(offset);\n\t\treturn offset >= 0 && offset <= 1 && new CurveLocation(this, offset);\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tcount = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(\n\t\t\t\t\t\tCurve.evaluate(values, t, 0), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 0.000001) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\tvar pt = Curve.evaluate(values, minT, 0);\n\t\treturn new CurveLocation(this, minT, pt, null, null, null,\n\t\t\t\tpoint.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n}),\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\treturn {\n\t\tstatics: true,\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tvar isZero = Numerical.isZero;\n\t\t\tif (a === 0 && b === 1\n\t\t\t\t\t&& isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t\t&& isZero(v[6] - v[4]) && isZero(v[7] - v[5])) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar forward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (Math.abs(offset) >= rangeLength)\n\t\t\t\treturn forward ? b : a;\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 16,\n\t\t\t\t\t0.000001);\n\t\t}\n\t};\n}, new function() {\n\tfunction addLocation(locations, include, curve1, t1, point1, curve2, t2,\n\t\t\tpoint2) {\n\t\tvar loc = new CurveLocation(curve1, t1, point1, curve2, t2, point2);\n\t\tif (!include || include(loc))\n\t\t\tlocations.push(loc);\n\t}\n\n\tfunction addCurveIntersections(v1, v2, curve1, curve2, locations, include,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (recursion > 32)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]) || 0,\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]) || 0,\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\ttMinNew, tMaxNew, tDiff;\n\t\tif (q0x === q3x && uMax - uMin <= tolerance && recursion > 3) {\n\t\t\ttMaxNew = tMinNew = (tMax + tMin) / 2;\n\t\t\ttDiff = 0;\n\t\t} else {\n\t\t\tvar hull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\t\ttop = hull[0],\n\t\t\t\tbottom = hull[1],\n\t\t\t\ttMinClip, tMaxClip;\n\t\t\ttMinClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\ttop.reverse();\n\t\t\tbottom.reverse();\n\t\t\ttMaxClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\tif (tMinClip == null || tMaxClip == null)\n\t\t\t\treturn;\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\ttDiff = tMaxClip - tMinClip;\n\t\t\ttMinNew = tMax * tMinClip + tMin * (1 - tMinClip);\n\t\t\ttMaxNew = tMax * tMaxClip + tMin * (1 - tMaxClip);\n\t\t}\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, curve2, curve1, locations, include,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew) < tolerance) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tif (reverse) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0),\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0));\n\t\t\t} else {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t} else if (tDiff > 0) {\n\t\t\taddCurveIntersections(v2, v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\tdist1 = getSignedDistance(0, dq0, 1, dq3, 1 / 3, dq1),\n\t\t\tdist2 = getSignedDistance(0, dq0, 1, dq3, 2 / 3, dq2),\n\t\t\tflip = false,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t\tflip = dist1 < 0;\n\t\t} else {\n\t\t\tvar pmax, cross = 0,\n\t\t\t\tdistZero = dist1 === 0 || dist2 === 0;\n\t\t\tif (Math.abs(dist1) > Math.abs(dist2)) {\n\t\t\t\tpmax = p1;\n\t\t\t\tcross = (dq3 - dq2 - (dq3 - dq0) / 3)\n\t\t\t\t\t\t* (2 * (dq3 - dq2) - dq3 + dq1) / 3;\n\t\t\t} else {\n\t\t\t\tpmax = p2;\n\t\t\t\tcross = (dq1 - dq0 + (dq0 - dq3) / 3)\n\t\t\t\t\t\t* (-2 * (dq0 - dq1) + dq0 - dq2) / 3;\n\t\t\t}\n\t\t\thull = cross < 0 || distZero\n\t\t\t\t\t? [[p0, pmax, p3], [p0, p3]]\n\t\t\t\t\t: [[p0, p1, p2, p3], [p0, p3]];\n\t\t\tflip = dist1 ? dist1 < 0 : dist2 < 0;\n\t\t}\n\t\treturn flip ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold)\n\t\t\t\treturn px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, curve1, curve2, locations,\n\t\t\tinclude) {\n\t\tvar flip = Curve.isLinear(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trlx2 = ldx * cos - ldy * sin,\n\t\t\trvl = [0, 0, 0, 0, rlx2, 0, rlx2, 0],\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\ty * cos + x * sin);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tx = Curve.evaluate(rvc, tc, 0).x;\n\t\t\tif (x >= 0 && x <= rlx2) {\n\t\t\t\tvar tl = Curve.getParameterOf(rvl, x, 0),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, curve1, curve2, locations, include) {\n\t\tvar point = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (point) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tcurve1, Curve.getParameterOf(v1, x, y), point,\n\t\t\t\t\tcurve2, Curve.getParameterOf(v2, x, y), point);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\tgetIntersections: function(v1, v2, c1, c2, locations, include) {\n\t\t\tvar linear1 = Curve.isLinear(v1),\n\t\t\t\tlinear2 = Curve.isLinear(v2),\n\t\t\t\tc1p1 = c1.getPoint1(),\n\t\t\t\tc1p2 = c1.getPoint2(),\n\t\t\t\tc2p1 = c2.getPoint1(),\n\t\t\t\tc2p2 = c2.getPoint2(),\n\t\t\t\ttolerance = 0.000001;\n\t\t\tif (c1p1.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 0, c1p1);\n\t\t\tif (c1p1.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 1, c1p1);\n\t\t\t(linear1 && linear2\n\t\t\t\t? addLineIntersection\n\t\t\t\t: linear1 || linear2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, include,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (c1p2.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 0, c1p2);\n\t\t\tif (c1p2.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 1, c1p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\tfilterIntersections: function(locations, _expand) {\n\t\t\tvar last = locations.length - 1,\n\t\t\t\ttMax = 1 - 0.000001;\n\t\t\tfor (var i = last; i >= 0; i--) {\n\t\t\t\tvar loc = locations[i],\n\t\t\t\t\tnext = loc._curve.getNext(),\n\t\t\t\t\tnext2 = loc._curve2.getNext();\n\t\t\t\tif (next && loc._parameter >= tMax) {\n\t\t\t\t\tloc._parameter = 0;\n\t\t\t\t\tloc._curve = next;\n\t\t\t\t}\n\t\t\t\tif (next2 && loc._parameter2 >= tMax) {\n\t\t\t\t\tloc._parameter2 = 0;\n\t\t\t\t\tloc._curve2 = next2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction compare(loc1, loc2) {\n\t\t\t\tvar path1 = loc1.getPath(),\n\t\t\t\t\tpath2 = loc2.getPath();\n\t\t\t\treturn path1 === path2\n\t\t\t\t\t\t? (loc1.getIndex() + loc1.getParameter())\n\t\t\t\t\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t\t\t: path1._id - path2._id;\n\t\t\t}\n\n\t\t\tif (last > 0) {\n\t\t\t\tlocations.sort(compare);\n\t\t\t\tfor (var i = last; i > 0; i--) {\n\t\t\t\t\tif (locations[i].equals(locations[i - 1])) {\n\t\t\t\t\t\tlocations.splice(i, 1);\n\t\t\t\t\t\tlast--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_expand) {\n\t\t\t\tfor (var i = last; i >= 0; i--)\n\t\t\t\t\tlocations.push(locations[i].getIntersection());\n\t\t\t\tlocations.sort(compare);\n\t\t\t}\n\t\t\treturn locations;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point, _curve2,\n\t\t\t_parameter2, _point2, _distance) {\n\t\tthis._id = CurveLocation._id = (CurveLocation._id || 0) + 1;\n\t\tthis._curve = curve;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t\tthis._parameter = parameter;\n\t\tthis._point = point;\n\t\tthis._curve2 = _curve2;\n\t\tthis._parameter2 = _parameter2;\n\t\tthis._point2 = _point2;\n\t\tthis._distance = _distance;\n\t},\n\n\tgetSegment: function(_preferFirst) {\n\t\tif (!this._segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this.getParameter();\n\t\t\tif (parameter === 1) {\n\t\t\t\tthis._segment = curve._segment2;\n\t\t\t} else if (parameter === 0 || _preferFirst) {\n\t\t\t\tthis._segment = curve._segment1;\n\t\t\t} else if (parameter == null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis._segment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t}\n\t\treturn this._segment;\n\t},\n\n\tgetCurve: function(_uncached) {\n\t\tif (!this._curve || _uncached) {\n\t\t\tthis._curve = this._segment1.getCurve();\n\t\t\tif (this._curve.getParameterOf(this._point) == null)\n\t\t\t\tthis._curve = this._segment2.getPrevious().getCurve();\n\t\t}\n\t\treturn this._curve;\n\t},\n\n\tgetIntersection: function() {\n\t\tvar intersection = this._intersection;\n\t\tif (!intersection && this._curve2) {\n\t\t\tvar param = this._parameter2;\n\t\t\tthis._intersection = intersection = new CurveLocation(\n\t\t\t\t\tthis._curve2, param, this._point2 || this._point, this);\n\t\t\tintersection._intersection = this;\n\t\t}\n\t\treturn intersection;\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetOffset: function() {\n\t\tvar path = this.getPath();\n\t\treturn path ? path._getOffset(this) : this.getCurveOffset();\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetParameter: function(_uncached) {\n\t\tif ((this._parameter == null || _uncached) && this._point) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._parameter = curve && curve.getParameterOf(this._point);\n\t\t}\n\t\treturn this._parameter;\n\t},\n\n\tgetPoint: function(_uncached) {\n\t\tif ((!this._point || _uncached) && this._parameter != null) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._point = curve && curve.getPointAt(this._parameter, true);\n\t\t}\n\t\treturn this._point;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.divide(this.getParameter(true), true);\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.split(this.getParameter(true), true);\n\t},\n\n\tequals: function(loc) {\n\t\tvar abs = Math.abs,\n\t\t\ttolerance = 0.000001;\n\t\treturn this === loc\n\t\t\t\t|| loc\n\t\t\t\t\t&& this._curve === loc._curve\n\t\t\t\t\t&& this._curve2 === loc._curve2\n\t\t\t\t\t&& abs(this._parameter - loc._parameter) <= tolerance\n\t\t\t\t\t&& abs(this._parameter2 - loc._parameter2) <= tolerance\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t}\n}, Base.each(['getTangent', 'getNormal', 'getCurvature'], function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {}));\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, _matrix, _expand) {\n\t\tif (this === path)\n\t\t\tpath = null;\n\t\tvar locations = [],\n\t\t\tcurves1 = this.getCurves(),\n\t\t\tcurves2 = path ? path.getCurves() : curves1,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = path ? (_matrix || path._matrix).orNullIfIdentity()\n\t\t\t\t: matrix1,\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = path ? curves2.length : length1,\n\t\t\tvalues2 = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tif (path && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = path ? curve1.getValues(matrix1) : values2[i];\n\t\t\tif (!path) {\n\t\t\t\tvar seg1 = curve1.getSegment1(),\n\t\t\t\t\tseg2 = curve1.getSegment2(),\n\t\t\t\t\th1 = seg1._handleOut,\n\t\t\t\t\th2 = seg2._handleIn;\n\t\t\t\tif (new Line(seg1._point.subtract(h1), h1.multiply(2), true)\n\t\t\t\t\t\t.intersect(new Line(seg2._point.subtract(h2),\n\t\t\t\t\t\th2.multiply(2), true), false)) {\n\t\t\t\t\tvar parts = Curve.subdivide(values1);\n\t\t\t\t\tCurve.getIntersections(\n\t\t\t\t\t\tparts[0], parts[1], curve1, curve1, locations,\n\t\t\t\t\t\tfunction(loc) {\n\t\t\t\t\t\t\tif (loc._parameter <= tMax) {\n\t\t\t\t\t\t\t\tloc._parameter /= 2;\n\t\t\t\t\t\t\t\tloc._parameter2 = 0.5 + loc._parameter2 / 2;\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var j = path ? 0 : i + 1; j < length2; j++) {\n\t\t\t\tCurve.getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curves2[j], locations,\n\t\t\t\t\t!path && (j === i + 1 || j === length2 - 1 && i === 0)\n\t\t\t\t\t\t&& function(loc) {\n\t\t\t\t\t\t\tvar t = loc._parameter;\n\t\t\t\t\t\t\treturn t >= tMin && t <= tMax;\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Curve.filterIntersections(locations, _expand);\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tif (move && previous && previous !== 'z')\n\t\t\t\t\tthis.closePath(true);\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._clockwise = undefined;\n\t\t\tif (this._curves && !(flags & 16)) {\n\t\t\t\tfor (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t\tthis._monoCurves = undefined;\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\tisPolygon: function() {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif (!this._segments[i].isLinear())\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves || segs._curves) {\n\t\t\tif (!curves)\n\t\t\t\tcurves = this._curves = [];\n\t\t\tvar from = index > 0 ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, this._countCurves());\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves();\n\t\t\tthis._length = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tthis._length += curves[i].getLength();\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar curves = this.getCurves();\n\t\tvar area = 0;\n\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\tarea += curves[i].getArea();\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.evaluate(pos, 0)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (curve.isLinear() && curve.getLength() === 0)\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tolerance = 0.000001;\n\t\tif (parameter >= 1 - tolerance) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter > tolerance) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = this._clone(new Path().insertAbove(this, true));\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn Path.isClockwise(this._segments);\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path.closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\tinterpolate: function(path0, path1, coef) {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif ( !path0._segments[i] || !path1._segments[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._segments[i].interpolate(\n\t\t\t\tpath0._segments[i],\n\t\t\t\tpath1._segments[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\n\t\tthis._changed(9);\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isColinear(i, j) {\n\t\t\treturn segments[i].isColinear(segments[j]);\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\treturn segments[i].isOrthogonal();\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\treturn segments[i].isArc();\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (this.isPolygon() && segments.length === 4\n\t\t\t\t&& isColinear(0, 2) && isColinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isColinear(1, 5) && isColinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t});\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\tshape.setStyle(this._style);\n\t\t\tif (insert || insert === undefined)\n\t\t\t\tshape.insertAbove(this);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\t_getOffset: function(location) {\n\t\tvar index = location && location.getIndex();\n\t\tif (index != null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\toffset = 0;\n\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\toffset += curves[i].getLength();\n\t\t\tvar curve = curves[index],\n\t\t\t\tparameter = location.getParameter();\n\t\t\tif (parameter > 0)\n\t\t\t\toffset += curve.getPartLength(0, parameter);\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset;\n\t\t\treturn curves[index].getLocationAt(offset - index, true);\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}), new function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n}, new function() {\n\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n}, new function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < epsilon)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tisClockwise: function(segments) {\n\t\tvar sum = 0;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsum += Curve.getEdgeSum(Curve.getValues(\n\t\t\t\t\tsegments[i], segments[i + 1 < l ? i + 1 : 0]));\n\t\treturn sum > 0;\n\t},\n\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isColinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().normalize(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tif (this._children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t} else {\n\t\t\treturn reduce.base.call(this);\n\t\t}\n\t},\n\n\tinterpolate: function(compoundpath0, compoundpath1, coef) {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\tif ( !compoundpath0._children[i] || !compoundpath1._children[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._children[i].interpolate(\n\t\t\t\tcompoundpath0._children[i],\n\t\t\t\tcompoundpath1._children[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : mx, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n}, new function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current : new Path();\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tvar operator = operators[operation];\n\t\tfunction preparePath(path) {\n\t\t\treturn path.clone(false).reduce().reorient().transform(null, true,\n\t\t\t\t\ttrue);\n\t\t}\n\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tsplitPath(_path1.getIntersections(_path2, null, true));\n\n\t\tvar chain = [],\n\t\t\tsegments = [],\n\t\t\tmonoCurves = [],\n\t\t\ttolerance = 0.000001;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tsegments.sort(function(a, b) {\n\t\t\tvar _a = a._intersection,\n\t\t\t\t_b = b._intersection;\n\t\t\treturn !_a && !_b || _a && _b ? 0 : _a ? -1 : 1;\n\t\t});\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding != null)\n\t\t\t\tcontinue;\n\t\t\tchain.length = 0;\n\t\t\tvar startSeg = segment,\n\t\t\t\ttotalLength = 0,\n\t\t\t\twindingSum = 0;\n\t\t\tdo {\n\t\t\t\tvar length = segment.getCurve().getLength();\n\t\t\t\tchain.push({ segment: segment, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t\tsegment = segment.getNext();\n\t\t\t} while (segment && !segment._intersection && segment !== startSeg);\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar length = totalLength * (j + 1) / 4;\n\t\t\t\tfor (k = 0, m = chain.length; k < m; k++) {\n\t\t\t\t\tvar node = chain[k],\n\t\t\t\t\t\tcurveLength = node.length;\n\t\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\t\tif (length <= tolerance\n\t\t\t\t\t\t\t\t|| curveLength - length <= tolerance)\n\t\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\t\tvar curve = node.segment.getCurve(),\n\t\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\t\thor = curve.isLinear() && Math.abs(curve\n\t\t\t\t\t\t\t\t\t.getTangentAt(0.5, true).y) <= tolerance,\n\t\t\t\t\t\t\tpath = curve._path;\n\t\t\t\t\t\tif (path._parent instanceof CompoundPath)\n\t\t\t\t\t\t\tpath = path._parent;\n\t\t\t\t\t\twindingSum += operation === 'subtract' && _path2\n\t\t\t\t\t\t\t&& (path === _path1 && _path2._getWinding(pt, hor)\n\t\t\t\t\t\t\t|| path === _path2 && !_path1._getWinding(pt, hor))\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlength -= curveLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar winding = Math.round(windingSum / 3);\n\t\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.insertAbove(path1);\n\t\tresult.addChildren(tracePaths(segments, operator), true);\n\t\tresult = result.reduce();\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction splitPath(intersections) {\n\t\tvar tMin = 0.000001,\n\t\t\ttMax = 1 - tMin,\n\t\t\tlinearHandles;\n\n\t\tfunction resetLinear() {\n\t\t\tfor (var i = 0, l = linearHandles.length; i < l; i++)\n\t\t\t\tlinearHandles[i].set(0, 0);\n\t\t}\n\n\t\tfor (var i = intersections.length - 1, curve, prev; i >= 0; i--) {\n\t\t\tvar loc = intersections[i],\n\t\t\t\tt = loc._parameter;\n\t\t\tif (prev && prev._curve === loc._curve && prev._parameter > 0) {\n\t\t\t\tt /= prev._parameter;\n\t\t\t} else {\n\t\t\t\tcurve = loc._curve;\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tresetLinear();\n\t\t\t\tlinearHandles = curve.isLinear() ? [\n\t\t\t\t\t\tcurve._segment1._handleOut,\n\t\t\t\t\t\tcurve._segment2._handleIn\n\t\t\t\t\t] : null;\n\t\t\t}\n\t\t\tvar newCurve,\n\t\t\t\tsegment;\n\t\t\tif (newCurve = curve.divide(t, true, true)) {\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tcurve = newCurve.getPrevious();\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tlinearHandles.push(segment._handleOut, segment._handleIn);\n\t\t\t} else {\n\t\t\t\tsegment = t < tMin\n\t\t\t\t\t? curve._segment1\n\t\t\t\t\t: t > tMax\n\t\t\t\t\t\t? curve._segment2\n\t\t\t\t\t\t: curve.getPartLength(0, t) < curve.getPartLength(t, 1)\n\t\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tsegment._intersection = loc.getIntersection();\n\t\t\tloc._segment = segment;\n\t\t\tprev = loc;\n\t\t}\n\t\tif (linearHandles)\n\t\t\tresetLinear();\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar tolerance = 0.000001,\n\t\t\ttMin = tolerance,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - tolerance,\n\t\t\t\tyAfter = py + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.evaluate(values, roots[j], 0).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves);\n\t\t} else {\n\t\t\tvar xBefore = px - tolerance,\n\t\t\t\txAfter = px + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding,\n\t\t\t\t\tprevT,\n\t\t\t\t\tprevX;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tx = Curve.evaluate(values, t, 0).x,\n\t\t\t\t\t\tslope = Curve.evaluate(values, t, 1).y;\n\t\t\t\t\tif (!(t > tMax\n\t\t\t\t\t\t\t&& (i === l - 1 || curve.next !== curves[i + 1])\n\t\t\t\t\t\t\t&& abs(Curve.evaluate(curve.next.values, 0, 0).x -x)\n\t\t\t\t\t\t\t\t<= tolerance\n\t\t\t\t\t\t|| i > 0 && curve.previous === curves[i - 1]\n\t\t\t\t\t\t\t&& abs(prevX - x) < tolerance\n\t\t\t\t\t\t\t&& prevT > tMax && t < tMin)) {\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isLinear(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0, 1).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprevT = t;\n\t\t\t\t\tprevX = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction tracePaths(segments, operator, selfOp) {\n\t\tvar paths = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0, seg, startSeg, l = segments.length; i < l; i++) {\n\t\t\tseg = startSeg = segments[i];\n\t\t\tif (seg._visited || !operator(seg._winding))\n\t\t\t\tcontinue;\n\t\t\tvar path = new Path(Item.NO_INSERT),\n\t\t\t\tinter = seg._intersection,\n\t\t\t\tstartInterSeg = inter && inter._segment,\n\t\t\t\tadded = false,\n\t\t\t\tdir = 1;\n\t\t\tdo {\n\t\t\t\tvar handleIn = dir > 0 ? seg._handleIn : seg._handleOut,\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn,\n\t\t\t\t\tinterSeg;\n\t\t\t\tif (added && (!operator(seg._winding) || selfOp)\n\t\t\t\t\t\t&& (inter = seg._intersection)\n\t\t\t\t\t\t&& (interSeg = inter._segment)\n\t\t\t\t\t\t&& interSeg !== startSeg) {\n\t\t\t\t\tif (selfOp) {\n\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar c1 = seg.getCurve();\n\t\t\t\t\t\tif (dir > 0)\n\t\t\t\t\t\t\tc1 = c1.getPrevious();\n\t\t\t\t\t\tvar t1 = c1.getTangentAt(dir < 1 ? tMin : tMax, true),\n\t\t\t\t\t\t\tc4 = interSeg.getCurve(),\n\t\t\t\t\t\t\tc3 = c4.getPrevious(),\n\t\t\t\t\t\t\tt3 = c3.getTangentAt(tMax, true),\n\t\t\t\t\t\t\tt4 = c4.getTangentAt(tMin, true),\n\t\t\t\t\t\t\tw3 = t1.cross(t3),\n\t\t\t\t\t\t\tw4 = t1.cross(t4);\n\t\t\t\t\t\tif (w3 * w4 !== 0) {\n\t\t\t\t\t\t\tvar curve = w3 < w4 ? c3 : c4,\n\t\t\t\t\t\t\t\tnextCurve = operator(curve._segment1._winding)\n\t\t\t\t\t\t\t\t\t? curve\n\t\t\t\t\t\t\t\t\t: w3 < w4 ? c4 : c3,\n\t\t\t\t\t\t\t\tnextSeg = nextCurve._segment1;\n\t\t\t\t\t\t\tdir = nextCurve === c3 ? -1 : 1;\n\t\t\t\t\t\t\tif (nextSeg._visited && seg._path !== nextSeg._path\n\t\t\t\t\t\t\t\t\t\t|| !operator(nextSeg._winding)) {\n\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\t\t\tif (nextSeg._visited)\n\t\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, added && handleIn, handleOut));\n\t\t\t\tadded = true;\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = dir > 0 ? seg.getNext() : seg. getPrevious();\n\t\t\t} while (seg && !seg._visited\n\t\t\t\t\t&& seg !== startSeg && seg !== startInterSeg\n\t\t\t\t\t&& (seg._intersection || operator(seg._winding)));\n\t\t\tif (seg && (seg === startSeg || seg === startInterSeg)) {\n\t\t\t\tpath.firstSegment.setHandleIn((seg === startInterSeg\n\t\t\t\t\t\t? startInterSeg : seg)._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else {\n\t\t\t\tpath.lastSegment._handleOut.set(0, 0);\n\t\t\t}\n\t\t\tif (path._segments.length >\n\t\t\t\t\t(path._closed ? path.isPolygon() ? 2 : 0 : 1))\n\t\t\t\tpaths.push(path);\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn new Group([this.subtract(path), this.intersect(path)]);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isLinear(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttolerance = 0.000001,\n\t\t\t\t\troots = [];\n\t\t\t\tvar count = Numerical.solveQuadratic(a, b, c, roots, tolerance,\n\t\t\t\t\t\t1 - tolerance);\n\t\t\t\tif (count === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.evaluate(values, roots[j], 0).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 0.000001) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tevaluate: function(offset, type) {\n\t\tvar param = this.getParameterAt(offset);\n\t\treturn Curve.evaluate(this.curves[param.index], param.value, type);\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\treturn this.evaluate(offset, index);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tthis.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1);\n\t\tepsilon *= segLength;\n\t\tif (alpha1 < epsilon || alpha2 < epsilon) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t}\n\n\t\treturn [pt1, pt1.add(tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 0.000001)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tvalue = parser.call(this, value);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tthis._components[index] = value;\n\t\t\t\t\tthis._changed();\n\t\t\t\t}\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type];\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tif (type === 'gradient')\n\t\t\t\tthis._id = Color._id = (Color._id || 0) + 1;\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n}, new function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nBase.each(Color._types, function(properties, type) {\n\tvar ctor = this[Base.capitalize(type) + 'Color'] = function(arg) {\n\t\t\tvar argType = arg != null && typeof arg,\n\t\t\t\tcomponents = argType === 'object' && arg.length != null\n\t\t\t\t\t? arg\n\t\t\t\t\t: argType === 'string'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: arguments;\n\t\t\treturn components\n\t\t\t\t\t? new Color(type, components)\n\t\t\t\t\t: new Color(arg);\n\t\t};\n\tif (type.length == 3) {\n\t\tvar acronym = type.toUpperCase();\n\t\tColor[acronym] = this[acronym + 'Color'] = ctor;\n\t}\n}, Base.exports);\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = Gradient._id = (Gradient._id || 0) + 1;\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = typeof window === 'object' &&\n\t\t\tDomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tif ( typeof window === 'object' ) {\n\t\tDomEvent.add(window, {\n\t\t\tfocus: function() {\n\t\t\t\tfocused = true;\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tfocused = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif ( !noCanvas ) {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchAction: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\tuserDrag: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\n\t\t\tfunction getSize(name) {\n\t\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t\t}\n\n\t\t\tfunction getCanvasSize() {\n\t\t\t\tvar size = DomElement.getSize(element);\n\t\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t\t: size;\n\t\t\t}\n\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._setViewSize(size = getCanvasSize());\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = 1;\n\t\t\tthis._id = 'view-' + View._id++;\n\t\t\tsize = new Size(element.width, element.height);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: {\n\t\tonFrame: {\n\t\t\tinstall: function() {\n\t\t\t\tthis.play();\n\t\t\t},\n\n\t\t\tuninstall: function() {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t},\n\n\t\tonResize: {}\n\t},\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n}, new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif ( !noCanvas ) {\n\t\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tif (size.isZero())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t\t}\n\t\t\tthis._context = canvas.getContext('2d');\n\t\t}\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!noCanvas && !/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font;\n\t\tctx.font = size + ' serif';\n\t\tsize = parseFloat(ctx.font);\n\t\tctx.font = prevFont;\n\t\treturn size;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function() {\n\t\tvar project = this._project;\n\t\tif (!project || !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n}, new function() {\n\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers)\n\t\t\tmodifiers[name] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = this._minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = distance;\n\t\tthis._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tvar maxDist = maxDistance != null ? maxDistance : 0;\n\t\t\t\tif (maxDist != 0) {\n\t\t\t\t\tif (distance > maxDist) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDist));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback) {\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, true);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif ( noCanvas ) {\n\t\t\treturn { getContext: function() {} };\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tif (options.matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (item.isPolygon()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (applyMatrix && item)\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n\n},{}],3:[function(require,module,exports){\nfunction Collection( args ) {\n\t// already a Collection? Job's done\n\tif ( arguments.length === 1 && args instanceof Collection ) {\n\t\treturn args;\n\n\t} else if ( arguments.length > 1 || !Array.isArray( args ) ) {\n\t\targs = [].slice.call( arguments, 0 );\n\t}\n\n\tthis.length = 0;\n\n\targs.forEach(function( arg ) {\n\t\t// unwrap any collection\n\t\tif ( arg instanceof Collection ) {\n\t\t\tfor ( var i = -1; ++i < arg.length; ) {\n\t\t\t\tthis[this.length++] = arg[i];\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis[this.length++] = arg;\n\t\t}\n\n\t}, this);\n\n\treturn this;\n}\n\nCollection.prototype.forEach = function(cb, scope) {\n\tfor ( var i = -1; ++i < this.length; ) {\n\t\tcb.call(scope || this[i], this[i], i, this);\n\t}\n\n\treturn this;\n};\n\nCollection.prototype.prop = function(name, val) {\n\tvar i;\n\n\t// object setter\n\tif ( typeof name === 'object' ) {\n\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\tthis[i].set( name );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// getter\n\tif ( val === undefined ) {\n\t\treturn this[0][name];\n\t}\n\n\t// simple setter\n\tfor ( i = -1; ++i < this.length; ) {\n\t\tthis[i][name] = val;\n\t}\n\n\treturn this;\n};\n\nfunction wrapConstructor( constructor, prototype, useConstructed ) {\n\treturn function wrapper() {\n\t\tvar c,\n\t\t\ttmp,\n\t\t\tarr = [];\n\n\t\t// constructor used with new\n\t\tif ( this instanceof wrapper ) {\n\t\t\t// proxy to paper native constructor\n\t\t\tc = Object.create(prototype);\n\t\t\ttmp = constructor.apply(c, arguments);\n\t\t\treturn useConstructed ?\n\t\t\t\ttmp : c;\n\n\t\t// without new, build a collection\n\t\t} else {\n\t\t\tif ( Array.isArray( arguments[0] ) ) {\n\t\t\t\targuments[0].forEach(function(params, i) {\n\t\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\t\tc = constructor.call( arr[i], params );\n\t\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\t\tarr[i] = c;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\tc = constructor.apply( arr[0], arguments );\n\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\tarr[0] = c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Collection( arr );\n\t\t}\n\t};\n}\n\nvar rconstructor = /(^|\\.)[A-Z][A-z]+$/;\nfunction constructorFilter( name ) {\n\treturn typeof this[name] === 'function' && rconstructor.test(name);\n}\n\n// unwrap a collection or array of collection\nfunction unwrapArg( arr, id, isPlural ) {\n\t// unwrap a single collection\n\tif ( arr && arr[id] instanceof Collection ) {\n\t\tarr[id] = isPlural ?\n\t\t\t[].slice.call( arr[id], 0 ) :\n\t\t\tarr[id][0];\n\n\t// unwrap an array of collection\n\t} else if ( arr && arr[id].length && arr[id][0] instanceof Collection ) {\n\t\tfor ( var i = -1; ++i < arr[id].length; ) {\n\t\t\tarr[id][i] = arr[id][i][0];\n\t\t}\n\t}\n}\n\nfunction unwrapArgs() {\n\tvar isPlural = this.isPlural,\n\t\targs = [].slice.call( arguments, 0 ),\n\t\tid,\n\t\ti;\n\n\t// first arg is an object and might have a collection or array of collection\n\t// Todo: objects should be unwrapped recursively\n\tif ( args[0] && args[0].constructor === Object ) {\n\t\tif ( 'children' in args[0] ) {\n\t\t\tid = 'children';\n\n\t\t} else if ( 'segments' in args[0] ) {\n\t\t\tid = 'segments';\n\n\t\t} else if ( 'nodes' in args[0] ) {\n\t\t\tid = 'nodes';\n\t\t}\n\n\t\tunwrapArg( args[0], id, true );\n\n\t// otherwise unwrap each arg\n\t} else {\n\t\tfor ( i = -1; ++i < args.length; ) {\n\t\t\t// if the method is plural (addChildren) and we're unwrapping\n\t\t\t// the last argument, we want to keep it in an array\n\t\t\tunwrapArg( args, i, i === args.length - 1 && isPlural );\n\t\t}\n\t}\n\n\treturn args;\n}\n\nCollection.proxy = function( paper ) {\n\tvar plumin = this;\n\n\tplumin.paper = paper;\n\n\tvar methodNames = {};\n\tObject.getOwnPropertyNames( paper.PaperScope.prototype )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype )\n\t\t.forEach(function(name) {\n\t\t\tplumin[name] = wrapConstructor( this[name], this[name].prototype );\n\n\t\t\t// we don't want to proxy methods of Collection\n\t\t\tif ( name === 'Collection' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tObject.getOwnPropertyNames( this[name].prototype )\n\t\t\t\t.forEach(function(_name) {\n\t\t\t\t\t// collect unique method names (first test avoids getters)\n\t\t\t\t\tif ( !Object.getOwnPropertyDescriptor(this, _name).get &&\n\t\t\t\t\t\t\ttypeof this[_name] === 'function' ) {\n\n\t\t\t\t\t\tmethodNames[_name] = true;\n\t\t\t\t\t}\n\n\t\t\t\t}, this[name].prototype);\n\n\t\t}, paper.PaperScope.prototype);\n\n\tObject.keys( paper.PaperScope.prototype.Path )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Path )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Path[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Path );\n\n\tObject.keys( paper.PaperScope.prototype.Shape )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Shape )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Shape[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Shape );\n\n\t// proxy the most commonly used method of paper\n\t// do it only after proxying constructors otherwise it's overwritten\n\tplumin.setup = paper.setup.bind(paper);\n\n\t// proxy all methods from every constructor\n\t// by default methods aren't chainable\n\tObject.keys( methodNames ).sort().forEach(function(name) {\n\t\t// please oh please, don't overwrite my constructor, I need it.\n\t\tif ( name === 'constructor' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(null, arguments),\n\t\t\t\ti,\n\t\t\t\tresult;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tresult = this[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// by default methods aren't chainable\n\t\t\t// return the last result\n\t\t\treturn result;\n\t\t};\n\t});\n\n\t\t// addChild( item ) and other methods with similar signatures\n\t\t// that we want to make chainable\n\tvar chain = [\n\t\t\t'set',\n\t\t\t'setX',\n\t\t\t'setY',\n\t\t\t'insertAbove',\n\t\t\t'insertBelow',\n\t\t\t'sendToBack',\n\t\t\t'bringToFront',\n\t\t\t'remove',\n\t\t\t'removeChildren',\n\t\t\t'reverseChildren',\n\n\t\t\t'translate',\n\t\t\t'rotate',\n\t\t\t'scale',\n\t\t\t'shear',\n\t\t\t'skew',\n\t\t\t'transform',\n\t\t\t'fitBounds',\n\t\t\t'emit',\n\n\t\t\t'activate',\n\n\t\t\t'setPixel',\n\n\t\t\t'smooth',\n\t\t\t'moveTo',\n\t\t\t'lineTo',\n\t\t\t'cubicCurveTo',\n\t\t\t'quadraticCurveTo',\n\t\t\t'curveTo',\n\t\t\t'arcTo',\n\t\t\t'closePath',\n\t\t\t'moveBy',\n\t\t\t'lineBy',\n\t\t\t'cubicCurveBy',\n\t\t\t'quadraticCurveBy',\n\t\t\t'curveBy',\n\t\t\t'arcBy',\n\n\t\t\t'removeSegments',\n\t\t\t'simplify',\n\t\t\t'reverse',\n\n\t\t\t// Rectangle\n\t\t\t'include',\n\t\t\t'expand',\n\t\t\t'scale',\n\t\t// ],\n\t\t// createAndChain = [\n\t\t\t'addChild',\n\t\t\t'insertChild',\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'replaceWith',\n\n\t\t\t'appendTop',\n\t\t\t'appendBottom',\n\n\t\t\t'add',\n\t\t\t'insert',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNode',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\n\t\t\t'addGlyph',\n\t\t\t'addGlyphs',\n\n\t\t\t'addContour',\n\t\t\t'insertContour',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addAnchor',\n\t\t\t'addAnchors',\n\t\t\t'addComponent',\n\t\t\t'addComponents',\n\n\t\t\t'addUnicode',\n\t\t\t'prepareOt',\n\t\t\t'addToFonts',\n\t\t\t'download'\n\t\t],\n\t\tplural = [\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\t\t\t'addGlyphs',\n\t\t\t'addAnchors',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addComponents'\n\t\t]/*,\n\t\tmathPoinFn = [\n\t\t\t'round',\n\t\t\t'ceil',\n\t\t\t'floor',\n\t\t\t'abs'\n\t\t],\n\t\tbooleanPathOp = [\n\t\t\t'unite',\n\t\t\t'intersect',\n\t\t\t'subtract',\n\t\t\t'exclude',\n\t\t\t'divide'\n\t\t]*/;\n\n\tchain.forEach(function(name) {\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(\n\t\t\t\t\t{ isPlural: plural.indexOf(name) !== -1 },\n\t\t\t\t\targuments\n\t\t\t\t),\n\t\t\t\ti;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tthis[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// make method chainable\n\t\t\treturn this;\n\t\t};\n\t});\n\n\t// singular chainable method\n};\n\nmodule.exports = Collection;\n\n},{}],4:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tGlyph = require('./Glyph.js');\n\nfunction Font( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\tif ( !args ) {\n\t\targs = {};\n\t}\n\n\tif ( !args.styleName ) {\n\t\targs.styleName = 'Regular';\n\t}\n\n\tif ( !args.unitsPerEm ) {\n\t\targs.unitsPerEm = 1024;\n\t}\n\n\tthis.ot = new opentype.Font( args );\n\n\tthis.glyphMap = {};\n\tthis.charMap = {};\n\tthis.altMap = {};\n\tthis._subset = false;\n\n\tthis.addGlyph(new Glyph({\n\t\tname: '.notdef',\n\t\tunicode: 0\n\t}));\n\n\tif ( args && args.glyphs ) {\n\t\tthis.addGlyphs( args.glyphs );\n\t}\n\n\tif ( typeof window === 'object' && window.document ) {\n\t\t// work around https://bugzilla.mozilla.org/show_bug.cgi?id=1100005\n\t\t// by using fonts.delete in batch, every 1 second\n\t\tif ( document.fonts ) {\n\t\t\tthis.addedFonts = [];\n\n\t\t\tsetInterval(function() {\n\t\t\t\twhile ( this.addedFonts.length > 1 ) {\n\t\t\t\t\tdocument.fonts.delete( this.addedFonts.shift() );\n\t\t\t\t}\n\t\t\t}.bind(this), 1000);\n\n\t\t} else {\n\t\t\tdocument.head.appendChild(\n\t\t\t\tthis.styleElement = document.createElement('style')\n\t\t\t);\n\t\t\t// let's find the corresponding CSSStyleSheet\n\t\t\t// (would be much easier with Array#find)\n\t\t\tthis.styleSheet = document.styleSheets[\n\t\t\t\t[].map.call(document.styleSheets, function(ss) {\n\t\t\t\t\treturn ss.ownerNode;\n\t\t\t\t}).indexOf(this.styleElement)\n\t\t\t];\n\t\t}\n\t}\n}\n\nFont.prototype = Object.create(paper.Group.prototype);\nFont.prototype.constructor = Font;\n\n// proxy .glyphs to .children\n// Todo: handle unicode updates\nObject.defineProperty(\n\tFont.prototype,\n\t'glyphs',\n\tObject.getOwnPropertyDescriptor( paper.Item.prototype, 'children' )\n);\n\n// TODO: proper proxying of ...Glyph[s] methods to ...Child[ren] methods\n// see Glyph.js\nFont.prototype.addGlyph = function( glyph ) {\n\tthis.addChild( glyph );\n\tthis.glyphMap[glyph.name] = glyph;\n\n\tif ( glyph.ot.unicode === undefined ) {\n\t\treturn glyph;\n\t}\n\n\t// build the default cmap\n\t// if multiple glyphs share the same unicode, use the glyph where unicode\n\t// and name are equal\n\tif ( !this.charMap[glyph.ot.unicode] ||\n\t\t\t( glyph.name.length === 1 &&\n\t\t\t\tglyph.name.charCodeAt(0) === glyph.ot.unicode ) ) {\n\n\t\tthis.charMap[glyph.ot.unicode] = glyph;\n\t}\n\n\t// build the alternates map\n\tif ( !this.altMap[glyph.ot.unicode] ) {\n\t\tthis.altMap[glyph.ot.unicode] = [];\n\t}\n\tthis.altMap[glyph.ot.unicode].push( glyph );\n\n\t// invalidate glyph subset cache\n\t// TODO: switch to immutable.js to avoid this maddness\n\tthis._lastSubset = undefined;\n\n\treturn glyph;\n};\n\nFont.prototype.addGlyphs = function( glyphs ) {\n\treturn glyphs.forEach(function( glyph ) {\n\t\tthis.addGlyph(glyph);\n\n\t}, this);\n};\n\nObject.defineProperty( Font.prototype, 'subset', {\n\tget: function() {\n\t\treturn this.getGlyphSubset();\n\t},\n\tset: function( set ) {\n\t\tthis._subset =\n\t\t\ttypeof set === 'boolean' ? set :\n\t\t\tFont.normalizeSubset( set );\n\t}\n});\n\nFont.prototype.getGlyphSubset = function( _set ) {\n\tvar set =\n\t\t\t_set === undefined ? this._subset :\n\t\t\ttypeof _set === 'boolean' ? _set :\n\t\t\tFont.normalizeSubset( _set );\n\n\t// true returns all glyphs\n\tif ( set === true ) {\n\t\treturn this.children;\n\t}\n\n\t// reuse last subset if possible\n\t// TODO: implement caching using immutable.js\n\tif ( this._lastSubset &&\n\t\t\tthis._lastSubset[0] ===\n\t\t\t( typeof set === 'object' ? set.join() : set ) ) {\n\n\t\treturn this._lastSubset[1];\n\t}\n\n\t// memoize last subset\n\tthis._lastSubset = [\n\t\t// store the set serialized to make subsequent comparisons easier\n\t\ttypeof set === 'object' ? set.join() : set,\n\t\tthis.children.filter(function( glyph ) {\n\t\t\t// false will return all glyphs that have one or more unicodes\n\t\t\tif ( set === false &&\n\t\t\t\t\t( glyph.ot.unicode !== undefined ||\n\t\t\t\t\t( glyph.ot.unicodes && glyph.ot.unicodes.length ) ) ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( set &&\n\t\t\t\t\t( set.indexOf( glyph.ot.unicode ) !== -1 ) ||\n\t\t\t\t\t( glyph.ot.unicode === 0 ) ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// TODO: handle multiple unicodes\n\t\t\treturn false;\n\n\t\t}, this)\n\t];\n\n\treturn this._lastSubset[1];\n};\n\nFont.prototype.interpolate = function( font0, font1, coef, set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\tglyph.interpolate(\n\t\t\tfont0.glyphMap[glyph.name],\n\t\t\tfont1.glyphMap[glyph.name],\n\t\t\tcoef\n\t\t);\n\t});\n\n\t// TODO: evaluate if taking subsetting into account makes kerning\n\t// interpolation faster or slower.\n\tif ( this.ot.kerningPairs ) {\n\t\tfor ( var i in this.ot.kerningPairs ) {\n\t\t\tthis.ot.kerningPairs[i] =\n\t\t\t\tfont0.ot.kerningPairs[i] +\n\t\t\t\t( font1.ot.kerningPairs[i] - font0.ot.kerningPairs[i] ) * coef;\n\t\t}\n\t}\n\n\tthis.ot.ascender =\n\t\tfont0.ot.ascender + ( font1.ot.ascender - font0.ot.ascender ) * coef;\n\tthis.ot.descender =\n\t\tfont0.ot.descender + ( font1.ot.descender - font0.ot.descender ) * coef;\n\n\treturn this;\n};\n\nFont.prototype.updateSVGData = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateSVGData();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.updateOTCommands = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateOTCommands();\n\t});\n\n\tthis.ot.glyphs = this.getGlyphSubset().map(function( glyph ) {\n\t\treturn glyph.ot;\n\t});\n\n\treturn this;\n};\n\nFont.prototype.importOT = function( otFont ) {\n\tthis.ot = otFont;\n\n\totFont.glyphs.forEach(function( otGlyph ) {\n\t\tvar glyph = new Glyph({\n\t\t\t\tname: otGlyph.name,\n\t\t\t\tunicode: otGlyph.unicode\n\t\t\t});\n\n\t\tthis.addGlyph( glyph );\n\t\tglyph.importOT( otGlyph );\n\n\t}, this);\n\n\treturn this;\n};\n\nif ( typeof window === 'object' && window.document ) {\n\n\tvar _URL = window.URL || window.webkitURL;\n\tFont.prototype.addToFonts = document.fonts ?\n\t\t// CSS font loading, lightning fast\n\t\tfunction( buffer ) {\n\t\t\tvar fontface = new window.FontFace(\n\t\t\t\tthis.ot.familyName,\n\t\t\t\tbuffer || this.ot.toBuffer()\n\t\t\t);\n\n\t\t\tdocument.fonts.add( fontface );\n\t\t\tthis.addedFonts.push( fontface );\n\n\t\t\treturn this;\n\t\t} :\n\t\tfunction( buffer ) {\n\t\t\tvar url = _URL.createObjectURL(\n\t\t\t\t\tnew Blob(\n\t\t\t\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t\t\t\t{ type: 'font/opentype' }\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tif ( this.fontObjectURL ) {\n\t\t\t\t_URL.revokeObjectURL( this.fontObjectURL );\n\t\t\t\tthis.styleSheet.deleteRule(0);\n\t\t\t}\n\n\t\t\tthis.styleSheet.insertRule(\n\t\t\t\t'@font-face { font-family: \"' + this.ot.familyName + '\";' +\n\t\t\t\t'src: url(' + url + '); }',\n\t\t\t\t0\n\t\t\t);\n\t\t\tthis.fontObjectURL = url;\n\n\t\t\treturn this;\n\t\t};\n\n\tFont.prototype.download = function( buffer ) {\n\t\tvar reader = new FileReader();\n\n\t\treader.onloadend = function() {\n\t\t\twindow.location = reader.result;\n\t\t};\n\n\t\treader.readAsDataURL(new Blob(\n\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t{ type: 'font/opentype' }\n\t\t));\n\n\t\treturn this;\n\t};\n\n}\n\nFont.normalizeSubset = function( set ) {\n\treturn ( typeof set === 'string' ?\n\t\t\tset.split('').map(function(e) {\n\t\t\t\treturn e.charCodeAt(0);\n\t\t\t}) :\n\t\t\tset || []\n\t\t)\n\t\t.filter(function(e, i, arr) {\n\t\t\treturn arr.lastIndexOf(e) === i;\n\t\t})\n\t\t.sort();\n};\n\nmodule.exports = Font;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Glyph.js\":5}],5:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tOutline = require('./Outline.js');\n\nfunction Glyph( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\tif ( args && typeof args.unicode === 'string' ) {\n\t\targs.unicode = args.unicode.charCodeAt(0);\n\t}\n\n\tthis.ot = new opentype.Glyph( args );\n\tthis.ot.path = new opentype.Path();\n\n\tthis.name = args.name;\n\t// workaround opentype 'unicode === 0' bug\n\tthis.ot.unicode = args.unicode;\n\n\tthis.addChild( new Outline() );\n\t// the second child will hold all components\n\tthis.addChild( new paper.Group() );\n\t// Should all anchors and parentAnchors also leave in child groups?\n\tthis.anchors = ( args && args.anchors ) || [];\n\tthis.parentAnchors = ( args && args.parentAnchors ) || [];\n\n\t// each individual glyph must be explicitely made visible\n\tthis.visible = false;\n\t// default colors required to display the glyph in a canvas\n\tthis.fillColor = new paper.Color(0, 0, 0);\n\t// stroke won't be displayed unless strokeWidth is set to 1\n\tthis.strokeColor = new paper.Color(0, 0, 0);\n\tthis.strokeScaling = false;\n}\n\nGlyph.prototype = Object.create(paper.Group.prototype);\nGlyph.prototype.constructor = Glyph;\n\n// Todo: handle unicode updates\nObject.defineProperty(Glyph.prototype, 'unicode', {\n\tset: function( code ) {\n\t\tthis.ot.unicode = typeof code === 'string' ?\n\t\t\tcode.charCodeAt(0) :\n\t\t\tcode;\n\t},\n\tget: function() {\n\t\treturn this.ot.unicode;\n\t}\n});\n\n// proxy .contours to .children[0]\nObject.defineProperty( Glyph.prototype, 'contours', {\n\tget: function() {\n\t\treturn this.children[0].children;\n\t}\n});\n\n// proxy .components to .children[1]\nObject.defineProperty( Glyph.prototype, 'components', {\n\tget: function() {\n\t\treturn this.children[1].children;\n\t}\n});\n\n// proxy .visible to\n\n// proxy ...Contour[s] methods to children[0]...Child[ren] methods\n// and proxy ...Component[s] methods to children[1]...Child[ren] methods\nObject.getOwnPropertyNames( paper.Item.prototype ).forEach(function(name) {\n\tvar proto = this;\n\n\t// exclude getters and non-methods\n\tif ( Object.getOwnPropertyDescriptor(proto, name).get ||\n\t\t\ttypeof proto[name] !== 'function' ) {\n\t\treturn;\n\t}\n\n\tif ( name.indexOf('Children') !== -1 ) {\n\t\tproto[name.replace('Children', 'Contours')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Children', 'Components')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\n\t} else if ( name.indexOf('Child') !== -1 ) {\n\t\tproto[name.replace('Child', 'Contour')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Child', 'Component')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\t}\n\n}, paper.Item.prototype);\n\nGlyph.prototype.addAnchor = function( item ) {\n\tthis.anchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addAnchors = function( anchors ) {\n\treturn anchors.forEach(function(anchor) {\n\t\tthis.addAnchor(anchor);\n\t}, this);\n};\n\nGlyph.prototype.addParentAnchor = function( item ) {\n\tthis.parentAnchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addUnicode = function( code ) {\n\tthis.ot.addUnicode( code );\n\n\treturn this;\n};\n\nGlyph.prototype.interpolate = function( glyph0, glyph1, coef ) {\n\t// If we added an interpolate method to Group, we'd be able to just\n\t// interpolate all this.children directly.\n\t// instead we interpolate the outline first\n\tthis.children[0].interpolate( glyph0.children[0], glyph1.children[0] );\n\t// and then the components\n\tthis.children[1].children.forEach(function(component, j) {\n\t\tcomponent.interpolate(\n\t\t\tglyph0.children[1].children[j], glyph1.children[1].children[j], coef\n\t\t);\n\t});\n\n\tthis.ot.advanceWidth =\n\t\tglyph0.ot.advanceWidth +\n\t\t( glyph1.ot.advanceWidth - glyph0.ot.advanceWidth ) * coef;\n\tthis.ot.leftSideBearing =\n\t\tglyph0.ot.leftSideBearing +\n\t\t( glyph1.ot.leftSideBearing - glyph0.ot.leftSideBearing ) * coef;\n\tthis.ot.xMax =\n\t\tglyph0.ot.xMax + ( glyph1.ot.xMax - glyph0.ot.xMax ) * coef;\n\tthis.ot.xMin =\n\t\tglyph0.ot.xMin + ( glyph1.ot.xMin - glyph0.ot.xMin ) * coef;\n\tthis.ot.yMax =\n\t\tglyph0.ot.yMax + ( glyph1.ot.yMax - glyph0.ot.yMax ) * coef;\n\tthis.ot.yMin =\n\t\tglyph0.ot.yMin + ( glyph1.ot.yMin - glyph0.ot.yMin ) * coef;\n\n\treturn this;\n};\n\nGlyph.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children[0].updateSVGData( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateSVGData( path );\n\t});\n\n\treturn this.svgData;\n};\n\nGlyph.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.children[0].updateOTCommands( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateOTCommands( path );\n\t});\n\n\treturn this.ot;\n};\n\nGlyph.prototype.importOT = function( otGlyph ) {\n\tvar current;\n\tthis.ot = otGlyph;\n\n\tif ( !otGlyph.path || !otGlyph.path.commands ) {\n\t\treturn this;\n\t}\n\n\tthis.ot.path.commands.forEach(function(command) {\n\t\tswitch ( command.type ) {\n\t\t\tcase 'M':\n\t\t\t\tcurrent = new paper.Path();\n\t\t\t\tthis.addContour( current );\n\n\t\t\t\tcurrent.moveTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tcurrent.lineTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tcurrent.cubicCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\t[ command.x2, command.y2 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tcurrent.quadraticCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\t// When the glyph has no contour,\n\t\t\t\t// they contain a single Z command in\n\t\t\t\t// opentype.js.\n\t\t\t\t// TODO: see how we should handle that\n\t\t\t\tif ( current ) {\n\t\t\t\t\tcurrent.closePath();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}, this);\n\n\treturn this;\n};\n\nmodule.exports = Glyph;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Outline.js\":7}],6:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nObject.defineProperty( paper.Segment.prototype, 'x', {\n\tget: function() {\n\t\treturn this.point.x;\n\t},\n\tset: function( value ) {\n\t\tthis.point.x = value;\n\t}\n});\n\nObject.defineProperty( paper.Segment.prototype, 'y', {\n\tget: function() {\n\t\treturn this.point.y;\n\t},\n\tset: function( value ) {\n\t\tthis.point.y = value;\n\t}\n});\n\nmodule.exports = paper.Segment;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],7:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nfunction Outline() {\n\tpaper.CompoundPath.prototype.constructor.apply( this );\n}\n\n// inehrit CompoundPath\nOutline.prototype = Object.create(paper.CompoundPath.prototype);\nOutline.prototype.constructor = Outline;\n\n// Fix two problems with CompoundPath#insertChildren:\n// - it arbitrarily changes the direction of paths\n// - it seems that it doesn't handle CompoundPath arguments\nOutline.prototype.insertChildren = function(index, items, _preserve) {\n\tif ( Array.isArray( items ) ) {\n\t\t// flatten items to handle CompoundPath children\n\t\titems = [].concat.apply([], items.map(function(item) {\n\t\t\treturn item instanceof paper.Path ? item : item.children;\n\t\t}));\n\t}\n\n\treturn paper.Item.prototype.insertChildren.call(\n\t\tthis, index, items, _preserve, paper.Path\n\t);\n};\n\nOutline.prototype.interpolate = function( outline0, outline1, coef ) {\n\tfor (var i = 0, l = this.contours.length; i < l; i++) {\n\t\t// The number of children should be the same everywhere,\n\t\t// but we're going to try our best anyway\n\t\tif ( !outline0.children[i] || !outline1.children[i] ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.children[i].interpolate(\n\t\t\toutline0.children[i],\n\t\t\toutline1.children[i],\n\t\t\tcoef\n\t\t);\n\t}\n\n\treturn this;\n};\n\nOutline.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateSVGData( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.svgData;\n};\n\nOutline.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateOTCommands( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.ot;\n};\n\nmodule.exports = Outline;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],8:[function(require,module,exports){\n/* Extend the Path prototype to add OpenType conversion\n * and alias *segments methods and properties to *nodes\n */\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nvar proto = paper.PaperScope.prototype.Path.prototype;\n\n// alias *Segments methods to *Nodes equivalents\n[ 'add', 'insert', 'remove' ].forEach(function(name) {\n\tproto[name + 'Nodes'] =\n\t\tproto[name + 'Segments'];\n});\n\n// alias .segments to .nodes\nObject.defineProperties(proto, {\n\tnodes: Object.getOwnPropertyDescriptor( proto, 'segments' ),\n\tfirstNode: Object.getOwnPropertyDescriptor( proto, 'firstSegment' ),\n\tlastNode: Object.getOwnPropertyDescriptor( proto, 'lastSegment' )\n});\n\nproto._updateData = function( data, matrix, pushSimple, pushBezier ) {\n\tif ( this.visible === false ) {\n\t\treturn data;\n\t}\n\n\t// prototypo needs to be able to change the direction of the updated data.\n\tvar reverse = ( this.export === 'clockwise' && !this.clockwise ) ||\n\t\t\t( this.export === 'anticlockwise' && this.clockwise ),\n\t\tcurves = this.curves,\n\t\tstart = curves[ reverse ? curves.length - 1 : 0 ]\n\t\t\t[ 'point' + ( reverse ? 2 : 1 ) ]\n\t\t\t.transform( matrix );\n\n\tpushSimple(\n\t\t'M',\n\t\tMath.round( start.x ) || 0,\n\t\tMath.round( start.y ) || 0\n\t);\n\n\tfor ( var i = -1, l = curves.length; ++i < l; ) {\n\t\tvar curve = curves[ reverse ? l - 1 - i : i ],\n\t\t\tend = curve['point' + ( reverse ? 1 : 2 ) ].transform( matrix );\n\n\t\tif ( curve.isLinear() ) {\n\t\t\tpushSimple(\n\t\t\t\t'L',\n\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\tMath.round( end.y ) || 0\n\t\t\t);\n\n\t\t} else {\n\t\t\tvar ctrl1 = new paper.Point(\n\t\t\t\t\tcurve.point1.x + curve.handle1.x,\n\t\t\t\t\tcurve.point1.y + curve.handle1.y\n\t\t\t\t).transform( matrix ),\n\t\t\t\tctrl2 = new paper.Point(\n\t\t\t\t\tcurve.point2.x + curve.handle2.x,\n\t\t\t\t\tcurve.point2.y + curve.handle2.y\n\t\t\t\t).transform( matrix );\n\n\t\t\tif ( reverse ) {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( this.closed ) {\n\t\tpushSimple('Z');\n\t}\n\n\treturn data;\n};\n\nproto.updateOTCommands = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx: arguments[1],\n\t\t\t\ty: arguments[2]\n\t\t\t});\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx1: arguments[1],\n\t\t\t\ty1: arguments[2],\n\t\t\t\tx2: arguments[3],\n\t\t\t\ty2: arguments[4],\n\t\t\t\tx: arguments[5],\n\t\t\t\ty: arguments[6]\n\t\t\t});\n\t\t}\n\t);\n};\n\nproto.updateSVGData = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t}\n\t);\n};\n\nmodule.exports = paper.Path;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],9:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tFont = require('./Font.js'),\n\tGlyph = require('./Glyph.js'),\n\tOutline = require('./Outline'),\n\tPath = require('./Path.js'),\n\tNode = require('./Node.js'),\n\tCollection = require('./Collection.js');\n\npaper.PaperScope.prototype.Font = Font;\npaper.PaperScope.prototype.Glyph = Glyph;\npaper.PaperScope.prototype.Outline = Outline;\npaper.PaperScope.prototype.Path = Path;\npaper.PaperScope.prototype.Node = Node;\npaper.PaperScope.prototype.Collection = Collection;\n\nfunction plumin( arg ) {\n\tif ( arguments.length === 1 && arg instanceof Collection ) {\n\t\treturn arg;\n\t}\n\n\tvar c = Object.create( Collection.prototype );\n\tCollection.apply( c, arguments );\n\treturn c;\n}\n\nplumin.opentype = opentype;\n\nplumin.proxy = Collection.proxy.bind(plumin);\nplumin.proxy(paper);\n\nmodule.exports = plumin;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Collection.js\":3,\"./Font.js\":4,\"./Glyph.js\":5,\"./Node.js\":6,\"./Outline\":7,\"./Path.js\":8}]},{},[9,2])(9)\n});\n\n\n//# sourceMappingURL=plumin.js.map","var plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tDepTree = require('../node_modules/deptree/index.js'),\n\tassign = require('es6-object-assign').assign,\n\tupdateUtils = require('./updateUtils.js');\n\nvar paper = plumin.paper,\n\tUtils = updateUtils,\n\t_ = { assign: assign };\n\n// convert the glyph source from the ufo object model to the paper object model\n// this is the inverse operation done by jsufonify\nUtils.ufoToPaper = function( src ) {\n\tif ( src.parameter ) {\n\t\tsrc.parameters = src.parameter;\n\t\tdelete src.parameter;\n\t}\n\n\tif ( src.anchor ) {\n\t\tsrc.anchors = src.anchor;\n\t\tdelete src.anchor;\n\t}\n\n\tif ( src.outline && src.outline.contour ) {\n\t\tsrc.contours = src.outline.contour;\n\t\tdelete src.outline.contour;\n\t}\n\n\tsrc.contours.forEach(function(contour) {\n\t\tif ( contour.point ) {\n\t\t\tcontour.nodes = contour.point;\n\t\t\tdelete contour.point;\n\t\t}\n\t});\n\n\tif ( src.outline && src.outline.component ) {\n\t\tsrc.components = src.outline.component;\n\n\t\tsrc.components.forEach(function(component) {\n\t\t\tif ( component.anchor ) {\n\t\t\t\tcomponent.parentAnchors = component.anchor;\n\t\t\t\tdelete component.anchor;\n\t\t\t}\n\n\t\t\tif ( component.parameter ) {\n\t\t\t\tcomponent.parentParameters = component.parameter;\n\t\t\t\tdelete component.parameter;\n\t\t\t}\n\t\t});\n\n\t\tdelete src.outline.component;\n\t}\n\n\tdelete src.outline;\n\n\tif ( src.lib && src.lib.transformList ) {\n\t\tsrc.transformList = src.lib.transformList;\n\t\tdelete src.lib.transformList;\n\t}\n\n\tif ( src.lib && src.lib.solvingOrder ) {\n\t\tsrc.solvingOrder = src.lib.solvingOrder;\n\t\tdelete src.lib.solvingOrder;\n\t}\n\n\treturn src;\n};\n\nUtils.fontFromSrc = function( src ) {\n\tvar font = new paper.Font( src.fontinfo );\n\n\tfont.src = src;\n\n\tvar filteredSrc = _.assign( {}, src );\n\tdelete filteredSrc.controls;\n\tdelete filteredSrc.presets;\n\tdelete filteredSrc.glyphs;\n\n\tUtils.createUpdaters( filteredSrc, 'font_' + src.fontinfo.familyName );\n\n\tfont.parameters = {};\n\tUtils.mergeStatic( font.parameters, font.src.parameters );\n\n\t// solvingOrder might be already available (if this is a subcomponent,\n\t// or precomputed in a worker)\n\tfont.solvingOrder = font.src.solvingOrder;\n\n\tif ( !font.solvingOrder ) {\n\t\tfont.solvingOrder = filteredSrc.solvingOrder =\n\t\t\tUtils.solveDependencyTree( font );\n\t}\n\n\treturn font;\n};\n\n// create Glyph instance and all its child items: anchors, contours\n// and components\nUtils.glyphFromSrc = function( src, fontSrc, naive, embed ) {\n\tvar glyph = new paper.Glyph({\n\t\tname: src.name,\n\t\tunicode: src.unicode\n\t});\n\n\t// Clone glyph src to allow altering it without impacting components srcs.\n\tglyph.src = JSON.parse( JSON.stringify( src ) );\n\tUtils.mergeStatic( glyph, glyph.src );\n\n\t// this will be used to hold local parameters that will be merged with\n\t// the font parameters\n\tglyph.parameters = {};\n\tUtils.mergeStatic( glyph.parameters, glyph.src.parameters );\n\n\t// solvingOrder might be already available (if this is a subcomponent,\n\t// or precomputed in a worker)\n\tglyph.solvingOrder = glyph.src.solvingOrder;\n\n\t(glyph.src.anchors || []).forEach(function(anchorSrc) {\n\t\tvar anchor = new paper.Node();\n\t\tanchor.src = anchorSrc;\n\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\tglyph.addAnchor( anchor );\n\t});\n\n\t(glyph.src.contours || []).forEach(function(contourSrc) {\n\t\tvar contour = new paper.Path();\n\t\tcontour.src = contourSrc;\n\t\tUtils.mergeStatic( contour, contourSrc );\n\n\t\tglyph.addContour( contour );\n\n\t\t// TODO: handle oncurve/offcurve points\n\t\tcontourSrc.nodes.forEach(function(nodeSrc) {\n\t\t\tvar node = new paper.Node();\n\t\t\tnode.src = nodeSrc;\n\t\t\tUtils.mergeStatic( node, nodeSrc );\n\n\t\t\tcontour.add( node );\n\t\t});\n\t});\n\n\tif ( !glyph.src.components ) {\n\t\treturn glyph;\n\t}\n\n\t// components can only be embedded once all glyphs have been generated\n\t// from source\n\tglyph.embedComponents = function() {\n\t\tglyph.src.components.forEach(function(componentSrc) {\n\t\t\t// components are glyphs, quite simply\n\t\t\tvar component = Utils.glyphFromSrc(\n\t\t\t\t\tfontSrc.glyphs[componentSrc.base],\n\t\t\t\t\tfontSrc,\n\t\t\t\t\tnaive,\n\t\t\t\t\t// components' subcomponents can be embedded immediatly\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\tcomponent.parentParameters = {};\n\t\t\tUtils.mergeStatic(\n\t\t\t\tcomponent.parentParameters,\n\t\t\t\tcomponentSrc.parentParameters\n\t\t\t);\n\n\t\t\tnaive.annotator( component );\n\t\t\tglyph.addComponent( component );\n\n\t\t\t(componentSrc.parentAnchors || []).forEach(function(anchorSrc) {\n\t\t\t\tvar anchor = new paper.Node();\n\t\t\t\tanchor.src = anchorSrc;\n\t\t\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\t\t\tcomponent.addParentAnchor( anchor );\n\t\t\t});\n\t\t});\n\n\t\tdelete glyph.embedComponents;\n\t};\n\n\tif ( embed ) {\n\t\tglyph.embedComponents();\n\t}\n\n\treturn glyph;\n};\n\n// build a full cursor from arguments\n// adds 'contours' and 'nodes' automagically when arguments start with a number\nUtils.cursor = function() {\n\tvar cursor = [];\n\n\tfor ( var i = -1; ++i < arguments.length; ) {\n\t\tif ( i === 0 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'contours' );\n\t\t}\n\t\tif ( i === 1 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'nodes' );\n\t\t}\n\t\tcursor.push( arguments[i] );\n\t}\n\n\treturn cursor.join('.');\n};\n\nUtils.propFromCursor = function( cursor, context, length ) {\n\tif ( length === undefined ) {\n\t\tlength = cursor.length;\n\t}\n\n\tfor ( var i = -1; ++i < length; ) {\n\t\tcontext = context[ cursor[i] ];\n\t}\n\n\treturn context;\n};\n\nUtils.mergeStatic = function( obj, src ) {\n\tfor ( var i in src ) {\n\t\tif ( typeof src[i] !== 'object' ) {\n\t\t\tobj[i] = src[i];\n\n\t\t// props that have empty dependencies and params are static\n\t\t} else if ( src[i]._dependencies && src[i]._dependencies.length === 0 &&\n\t\t\t\tsrc[i]._parameters.length === 0 ) {\n\n\t\t\tobj[i] = src[i]._updaters[0].apply(\n\t\t\t\tobj,\n\t\t\t\t[ null, null, null, null, Utils ]\n\t\t\t);\n\n\t\t\tdelete src[i];\n\t\t}\n\t}\n};\n\nUtils.createUpdaters = function( leaf, path ) {\n\tif ( leaf.constructor === Object &&\n\t\t\t( typeof leaf._operation === 'string' ||\n\t\t\ttypeof leaf._operation === 'function' ) ) {\n\n\t\tvar args = [\n\t\t\t\t\t'propName', 'contours', 'anchors', 'parentAnchors', 'Utils'\n\t\t\t\t]\n\t\t\t\t.concat( leaf._parameters || [] )\n\t\t\t\t.concat(\n\t\t\t\t\t( typeof leaf._operation === 'string' &&\n\t\t\t\t\t\t\tleaf._operation.indexOf('return ') === -1 ?\n\t\t\t\t\t\t'return ' : ''\n\t\t\t\t\t) +\n\t\t\t\t\t// The operation might be wrapped in a function (e.g. multi-\n\t\t\t\t\t// line code for debugging purpose). In this case, return\n\t\t\t\t\t// must be explicit\n\t\t\t\t\tleaf._operation.toString()\n\t\t\t\t\t\t// [\\s\\S] need to be used instead of . because\n\t\t\t\t\t\t// javascript doesn't have a dotall flag (s)\n\t\t\t\t\t\t.replace(/function\\s*\\(\\)\\s*\\{([\\s\\S]*?)\\}$/, '$1')\n\t\t\t\t\t\t.trim() +\n\t\t\t\t\t// add sourceURL pragma to help debugging\n\t\t\t\t\t'\\n\\n//# sourceURL=' + path\n\t\t\t\t);\n\n\t\tleaf._updaters = [ Function.apply( null, args ) ];\n\t\treturn leaf._updaters;\n\t}\n\n\tif ( leaf.constructor === Object ) {\n\t\tfor ( var i in leaf ) {\n\t\t\tUtils.createUpdaters( leaf[i], path + '.' + i );\n\t\t}\n\t}\n\n\tif ( leaf.constructor === Array ) {\n\t\tleaf.forEach(function(child, j) {\n\t\t\tUtils.createUpdaters( child, path + '.' + j );\n\t\t});\n\t}\n};\n\nUtils.solveDependencyTree = function( leaf, src ) {\n\tvar depTree = Utils.dependencyTree( src || leaf.src, null ),\n\t\torder = depTree.resolve().map(function( cursor ) {\n\t\t\treturn cursor.split('.');\n\t\t}),\n\t\tsimplified = Utils.simplifyResolutionOrder( leaf, order );\n\n\treturn simplified;\n};\n\nUtils.dependencyTree = function( parentSrc, cursor, depTree ) {\n\tif ( !depTree ) {\n\t\tdepTree = new DepTree();\n\t}\n\n\tObject.keys( parentSrc ).forEach(function( i ) {\n\t\t// don't inspect local parameters, private properties and non-object\n\t\tif ( i === 'parameters' || i.indexOf('_') === 0 ||\n\t\t\t\ttypeof parentSrc[i] !== 'object' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar leafSrc = parentSrc[i],\n\t\t\tcurrCursor = cursor ? cursor + '.' + i : i;\n\n\t\tif ( ( leafSrc._updaters && leafSrc._updaters.length ) ||\n\t\t\t\t( leafSrc._dependencies && leafSrc._dependencies.length ) ) {\n\n\t\t\tdepTree.add( currCursor,\n\t\t\t\tleafSrc._dependencies.filter(function(dep) {\n\t\t\t\t\t// parentAnchors are always here when you need them\n\t\t\t\t\treturn !/^parentAnchors/.test(dep);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif ( !leafSrc._operation ) {\n\t\t\tUtils.dependencyTree( leafSrc, currCursor, depTree );\n\t\t}\n\t});\n\n\treturn depTree;\n};\n\n// Simplify resolution order by removing cursors that don't point to objects\n// with updater functions\nUtils.simplifyResolutionOrder = function( leaf, depTree ) {\n\treturn depTree.filter(function( cursor ) {\n\t\tvar src = Utils.propFromCursor( cursor, leaf.src );\n\t\treturn src && src._updaters;\n\t});\n};\n\nvar rdeg = /deg$/;\nUtils.transformsToMatrix = function( transforms, origin ) {\n\tvar prev = new Float32Array(6),\n\t\tcurr = new Float32Array(6),\n\t\trslt = new Float32Array([ 1, 0, 0, 1, 0, 0 ]);\n\n\tif ( origin && Array.isArray( origin ) ) {\n\t\ttransforms.unshift([ 'translate', origin[0], origin[1] ]);\n\t\ttransforms.push([ 'translate', -origin[0], -origin[1] ]);\n\n\t} else if ( origin ) {\n\t\ttransforms.unshift([ 'translate', origin.x, origin.y ]);\n\t\ttransforms.push([ 'translate', -origin.x, -origin.y ]);\n\t}\n\n\ttransforms.forEach(function( transform ) {\n\t\tcurr[0] = curr[3] = 1;\n\t\tcurr[1] = curr[2] = curr[4] = curr[5] = 0;\n\n\t\t// convert degrees to radian\n\t\tfor ( var i = 1; i < transform.length; i++ ) {\n\t\t\tif ( transform[i] && typeof transform[i] === 'string' &&\n\t\t\t\t\trdeg.test(transform[i]) ) {\n\t\t\t\ttransform[i] = parseFloat(transform[i]) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\t\t}\n\n\t\tswitch ( transform[0] ) {\n\t\tcase 'translateX':\n\t\t\tcurr[4] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translateY':\n\t\t\tcurr[5] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translate':\n\t\t\tcurr[4] = transform[1];\n\t\t\tcurr[5] = transform[2] || 0;\n\t\t\tbreak;\n\n\t\tcase 'rotate':\n\t\t\tcurr[0] = Math.cos( transform[1] );\n\t\t\tcurr[1] = Math.sin( transform[1] );\n\t\t\tcurr[2] = -curr[1];\n\t\t\tcurr[3] = curr[0];\n\t\t\tbreak;\n\n\t\tcase 'scaleX':\n\t\t\tcurr[0] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scaleY':\n\t\t\tcurr[3] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scale':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[3] = transform.length > 2 ? transform[2] : transform[1];\n\t\t\tbreak;\n\n\t\tcase 'skewX':\n\t\t\t// stop parsing transform when encountering skewX(90)\n\t\t\t// see http://stackoverflow.com/questions/21094958/how-to-deal-with-infinity-in-a-2d-matrix\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[2] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'skewY':\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[1] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'matrix':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[1] = transform[2];\n\t\t\tcurr[2] = transform[3];\n\t\t\tcurr[3] = transform[4];\n\t\t\tcurr[4] = transform[5];\n\t\t\tcurr[5] = transform[6];\n\t\t\tbreak;\n\t\t}\n\n\t\tprev[0] = rslt[0];\n\t\tprev[1] = rslt[1];\n\t\tprev[2] = rslt[2];\n\t\tprev[3] = rslt[3];\n\t\tprev[4] = rslt[4];\n\t\tprev[5] = rslt[5];\n\n\t\trslt[0] = prev[0] * curr[0] + prev[2] * curr[1];\n\t\trslt[1] = prev[1] * curr[0] + prev[3] * curr[1];\n\t\trslt[2] = ( prev[0] * curr[2] || 0 ) + prev[2] * curr[3];\n\t\trslt[3] = ( prev[1] * curr[2] || 0 ) + prev[3] * curr[3];\n\t\trslt[4] = prev[0] * curr[4] + prev[2] * curr[5] + prev[4];\n\t\trslt[5] = prev[1] * curr[4] + prev[3] * curr[5] + prev[5];\n\t});\n\n\treturn new paper.Matrix(\n\t\trslt[0],\n\t\trslt[1],\n\t\trslt[2],\n\t\trslt[3],\n\t\trslt[4],\n\t\trslt[5]\n\t);\n};\n\n// Utils.normalizeAngle = function( angle ) {\n// \treturn angle % ( 2 * Math.PI ) + ( angle < 0 ? 2 * Math.PI : 0 );\n// };\n\n// Utils.findUpdater = function( glyph, cursor ) {\n// \tvar steps = [ 'glyph' ].concat( cursor.split('.') ),\n// \t\tcontext = { glyph: glyph };\n//\n// \tfor ( var i = -1; ++i < steps.length; ) {\n// \t\tcontext = context[ steps[i] ];\n//\n// \t\tif ()\n// \t}\n// };\n\n// patterns that should be searched for in dependencies and expanded\n// This list is expandable by plugins, 'naive' uses this possibility\n// hashtag #expandableception\n// Utils.expandables = [\n// \t[ /\\.nodes\\.\\d+\\.point$/, function( dep ) {\n// \t\tdep = dep.replace(/\\.point$/, '');\n//\n// \t\treturn [\n// \t\t\tdep + '.x',\n// \t\t\tdep + '.y'\n// \t\t];\n// \t} ],\n// \t[ /\\.nodes\\.\\d+$/, function( dep ) {\n// \t\treturn [\n// \t\t\tdep + '.x',\n// \t\t\tdep + '.y',\n// \t\t\tdep + '.handleIn.point',\n// \t\t\tdep + '.handleOut.point'\n// \t\t];\n// \t} ]\n// ];\n// Utils.expandDependencies = function( glyphSrc, deps, excludeList ) {\n// \tdeps = deps.map(function(dep) {\n// \t\t// search for an expandable pattern and... expand the dependency\n// \t\tfor ( var i = -1, l = Utils.expandables.length; ++i < l; ) {\n// \t\t\tif ( Utils.expandables[i][0].test( dep ) ) {\n// \t\t\t\treturn Utils.expandables[i][1]( dep, glyphSrc );\n// \t\t\t}\n// \t\t}\n//\n// \t\treturn dep;\n// \t});\n//\n// \t// flatten deps array and remove items from excludeList\n// \treturn [].concat.apply([], deps).filter(function(dep) {\n// \t\treturn excludeList.indexOf( dep ) === -1;\n// \t});\n// };\n\nmodule.exports = Utils;\n","var plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tassign = require('es6-object-assign').assign,\n\tUtils = require('./Utils.js');\n\nvar paper = plumin.paper,\n\tnaive = {},\n\t_ = { assign: assign };\n\nfunction nodeSrc( node, i, j, inSkeleton ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\tUtils.cursor( i, j, 'y' )\n\t\t] },\n\t\tall: { _dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\treturn Utils.cursor( i, j, key );\n\t\t}) },\n\t\t_dependencies: inSkeleton ?\n\t\t\t// nodes in skeleton are never fully calculated (we don't calculate\n\t\t\t// the position of handles because we never draw their contour).\n\t\t\t// So we don't care about their dependencies.\n\t\t\t[] :\n\t\t\t[ Utils.cursor( 'contours', i, 'all' ) ]\n\t};\n}\n\nfunction autoExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tx: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\ty: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\tpoint: {\n\t\t\t_dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'y' ),\n\t\t\t\tUtils.cursor( i, j, 'expand' )\n\t\t\t],\n\t\t\t_parameters: [ 'width' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar width = arguments[\n\t\t\t\t\t\targuments.length - 1\n\t\t\t\t\t];\n\n\t\t\t\tnaive.expandedNodeUpdater(\n\t\t\t\t\tnode.expandedTo[side], side === 0, width\n\t\t\t\t);\n\t\t\t} ]\n\t\t},\n\t\tall: {\n\t\t\t_dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\t\treturn Utils.cursor( i, j, key );\n\t\t\t}).concat([\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t\t]),\n\t\t\t_updaters: [ function() {\n\t\t\t\tnaive.skeletonCopier( node );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'all' )\n\t\t]\n\t};\n}\n\nfunction explicitExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'y' )\n\t\t] },\n\t\tall: { _dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\treturn Utils.cursor( i, j, 'expandedTo', side, key );\n\t\t}) },\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'points' )\n\t\t]\n\t};\n}\n\n//function expandedContourSrc( contour, i, side, nodesSrc ) {\nfunction expandedContourSrc( contour, i, side ) {\n\tvar half = contour.nodes.length / 2;\n\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function(node, j) {\n\t\t\t\treturn side !== undefined ?\n\t\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'all' ) :\n\t\t\t\t\tUtils.cursor(\n\t\t\t\t\t\ti, j % half, 'expandedTo', ( j < half ? 0 : 1 ), 'all'\n\t\t\t\t\t);\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t// nodes: nodesSrc,\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo', side || 0, 'all' )\n\t\t]\n\t};\n}\n\nfunction contourSrc( contour, i ) {\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\t\treturn Utils.cursor( i, j, 'all' );\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\treturn Utils.cursor( i, j );\n\t\t})\n\t};\n}\n\n// default method to expand skeletons:\n// derives two additional node from every node with an .expand object\nnaive.annotator = function( glyph ) {\n\tvar additionalContours = [];\n\n\tglyph.contours.forEach(function( contour, i ) {\n\t\tif ( contour.skeleton !== true ) {\n\t\t\t// annotate nodes+points that aren't in a skeleton\n\t\t\tcontour.nodes.forEach(function( node, j ) {\n\t\t\t\t_.assign( node.src, nodeSrc( node, i, j ) );\n\t\t\t});\n\n\t\t\t_.assign( contour.src, contourSrc( contour, i ) );\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar leftContour,\n\t\t\trightContour,\n\t\t\tleftNodes = [],\n\t\t\trightNodes = [],\n\t\t\tleftNodesSrc = [],\n\t\t\trightNodesSrc = [],\n\t\t\tfirstNode,\n\t\t\tlastNode;\n\n\t\t// skeletons should be hidden\n\t\tcontour.visible = false;\n\n\t\tcontour.nodes.forEach(function( node, j ) {\n\n\t\t\tvar left = new paper.Node(),\n\t\t\t\tright = new paper.Node(),\n\t\t\t\tleftSrc,\n\t\t\t\trightSrc;\n\n\t\t\tleftNodes.push(left);\n\t\t\trightNodes.unshift(right);\n\t\t\tnode.expandedTo = [ left, right ];\n\t\t\tleft.expandedFrom = right.expandedFrom = node;\n\n\t\t\tif ( !node.src.expandedTo ) {\n\t\t\t\t// annotate nodes+points that are automatically expanded\n\t\t\t\tleftSrc = autoExpandedNodeSrc( node, i, j, 0, contour.closed );\n\t\t\t\trightSrc = autoExpandedNodeSrc( node, i, j, 1, contour.closed );\n\t\t\t\tnode.src.expandedTo = [ leftSrc, rightSrc ];\n\t\t\t\t_.assign( node.src, nodeSrc( node, i, j, !!'inSkeleton' ) );\n\n\t\t\t// the expanded node might have been defined explicitely\n\t\t\t} else if ( node.src.expandedTo[0] &&\n\t\t\t\t\t!node.src.expandedTo[0]._updaters ) {\n\t\t\t\tnode.src.expandedTo.forEach(function( src, k ) {\n\t\t\t\t\tUtils.mergeStatic( node.expandedTo[k], src );\n\t\t\t\t});\n\n\t\t\t\t// annotate nodes+points that are explicitely expanded\n\t\t\t\tleftSrc = _.assign( node.src.expandedTo[0],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 0, contour.closed )\n\t\t\t\t);\n\t\t\t\trightSrc = _.assign( node.src.expandedTo[1],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 1, contour.closed )\n\t\t\t\t);\n\n\t\t\t\t// A leaf shouldn't appear twice during the recursive\n\t\t\t\t// dependency-tree building. Make the expanded nodes accessible\n\t\t\t\t// from expanded contours, and provide accessors on the\n\t\t\t\t// .expandedFrom node.\n\t\t\t\t// leftNodesSrc.push( leftSrc );\n\t\t\t\t// rightNodesSrc.push( rightSrc );\n\t\t\t}\n\n\t\t\t// if ( leftSrc && rightSrc ) {\n\t\t\t// \tObject.defineProperties( node.src.expandedTo = {}, {\n\t\t\t// \t\t0: { get: function() {\n\t\t\t// \t\t\treturn leftSrc;\n\t\t\t// \t\t}},\n\t\t\t// \t\t1: { get: function() {\n\t\t\t// \t\t\t\treturn rightSrc;\n\t\t\t// \t\t}}\n\t\t\t// \t});\n\t\t\t// }\n\t\t});\n\n\t\tif ( !contour.expandedTo && !contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes.concat(rightNodes)\n\t\t\t});\n\t\t\tcontour.expandedTo = [ leftContour ];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i\n\t\t\t\t\t//, 0, leftNodesSrc.concat( rightNodesSrc )\n\t\t\t\t)\n\t\t\t];\n\t\t\tleftContour.expandedFrom = contour;\n\t\t\tadditionalContours.push( leftContour );\n\n\t\t\tfirstNode = contour.firstNode;\n\t\t\tlastNode = contour.lastNode;\n\n\t\t\tfirstNode.type = 'corner';\n\t\t\tlastNode.type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].type = 'corner';\n\t\t\tfirstNode.expandedTo[1].type = 'corner';\n\t\t\tlastNode.expandedTo[0].type = 'corner';\n\t\t\tlastNode.expandedTo[1].type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].typeIn = 'line';\n\t\t\tfirstNode.expandedTo[1].typeOut = 'line';\n\t\t\tlastNode.expandedTo[0].typeOut = 'line';\n\t\t\tlastNode.expandedTo[1].typeIn = 'line';\n\n\t\t} else if ( !contour.expandedTo && contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes\n\t\t\t});\n\t\t\tadditionalContours.push( leftContour );\n\t\t\trightContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: rightNodes\n\t\t\t});\n\t\t\tadditionalContours.push( rightContour );\n\n\t\t\tcontour.expandedTo = [\n\t\t\t\tleftContour,\n\t\t\t\trightContour\n\t\t\t];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i, 0, leftNodesSrc ),\n\t\t\t\texpandedContourSrc( rightContour, i, 1, rightNodesSrc )\n\t\t\t];\n\t\t\tleftContour.expandedFrom = rightContour.expandedFrom = contour;\n\t\t}\n\t});\n\n\tglyph.addContours( additionalContours );\n};\n\n// Calculate expanded node position\nnaive.expandedNodeUpdater = function( node, isLeft, _width ) {\n\tvar origin = node.expandedFrom,\n\t\texpand = origin.expand,\n\t\twidth = expand && expand.width !== undefined ?\n\t\t\texpand.width : _width,\n\t\tcoef = expand && expand.distr !== undefined ?\n\t\t\t( isLeft ? expand.distr : 1 - expand.distr ) :\n\t\t\t0.5,\n\t\tangle = ( isLeft ? Math.PI : 0 ) +\n\t\t\t( expand && expand.angle !== undefined ?\n\t\t\t\texpand.angle :\n\t\t\t\t// We resort to using directions.\n\t\t\t\t// This is wrong, directions are not included in the\n\t\t\t\t// dependencies of the updater and might not be ready yet.\n\t\t\t\t// TODO: Fix this (always require angle to be specified?)\n\t\t\t\t( origin._dirOut !== undefined ?\n\t\t\t\t\torigin._dirOut - Math.PI / 2 :\n\t\t\t\t\torigin._dirIn + Math.PI / 2\n\t\t\t\t)\n\t\t\t);\n\n\t// position\n\tnode.point.x = origin.point.x + ( width * coef * Math.cos( angle ) );\n\tnode.point.y = origin.point.y + ( width * coef * Math.sin( angle ) );\n};\n\n// copy skeleton properties such as types, directions and tensions to expanded\n// nodes\nnaive.skeletonCopier = function( node ) {\n\tvar angle = node.expand && node.expand.angle || 0,\n\t\tleft = node.expandedTo[0],\n\t\tright = node.expandedTo[1];\n\n\t// node type\n\tif ( node.type !== undefined ) {\n\t\tleft.type = right.type = node.type;\n\t}\n\n\t// direction type\n\tif ( node.typeIn !== undefined ) {\n\t\tleft.typeIn = right.typeOut = node.typeIn;\n\t}\n\tif ( node.typeOut !== undefined ) {\n\t\tleft.typeOut = right.typeIn = node.typeOut;\n\t}\n\n\t// direction\n\tif ( node._dirIn !== undefined ) {\n\t\tleft._dirIn = right._dirOut = node._dirIn;\n\n\t\tif ( node.type === 'smooth' && node._dirOut === undefined ) {\n\t\t\tleft._dirOut = right._dirIn = node._dirIn + Math.PI;\n\t\t}\n\t}\n\tif ( node._dirOut !== undefined ) {\n\t\tleft._dirOut = right._dirIn = node._dirOut;\n\n\t\tif ( node.type === 'smooth' && node._dirIn === undefined ) {\n\t\t\tleft._dirIn = right._dirOut = node._dirOut + Math.PI;\n\t\t}\n\t}\n\t// use angle if direction isn't already defined\n\tif ( left._dirIn === undefined ) { // implies right._dirOut === undefined\n\t\tleft._dirIn = angle - Math.PI / 2;\n\t\tright._dirOut = angle + Math.PI / 2;\n\t}\n\tif ( left._dirOut === undefined ) { // implies right._dirIn === undefined\n\t\tleft._dirOut = angle + Math.PI / 2;\n\t\tright._dirIn = angle - Math.PI / 2;\n\t}\n\n\t// tension\n\tleft.tensionIn = right.tensionOut = node.tensionIn !== undefined ?\n\t\tnode.tensionIn :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n\tleft.tensionOut = right.tensionIn = node.tensionOut !== undefined ?\n\t\tnode.tensionOut :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n};\n\n// Make sure 'line' types are set on both side of segments\n// and if a smooth node is used in a straight segment, update the directions\n// appropriately this can only be done once the types, directions and position\n// of all nodes have been updated can be renamed #prepareLines if no other\n// operation is added\n// TODO: try doing it at the same time as updateContour (once we have more\n// complex glyphs)\nnaive.prepareContour = function( path ) {\n\tpath.nodes.forEach(function(node) {\n\t\tif ( node.typeIn === 'line' && node.previous ) {\n\t\t\tnode.previous.typeOut = 'line';\n\n\t\t\tif ( node.type === 'smooth' ) {\n\t\t\t\tnode._dirIn = Utils.lineAngle(\n\t\t\t\t\tnode.point, node.previous.point\n\t\t\t\t);\n\t\t\t\tnode._dirOut = node._dirIn + Math.PI;\n\t\t\t}\n\t\t}\n\n\t\tif ( node.typeOut === 'line' && node.next ) {\n\t\t\tnode.next.typeIn = 'line';\n\n\t\t\tif ( node.type === 'smooth' ) {\n\t\t\t\tnode._dirOut = Utils.lineAngle(\n\t\t\t\t\tnode.point, node.next.point\n\t\t\t\t);\n\t\t\t\tnode._dirIn = node._dirOut + Math.PI;\n\t\t\t}\n\t\t}\n\t});\n};\n\n// sets the position of control points\n// can be renamed #updateControls if no other operation is added\nnaive.updateContour = function( path, curviness ) {\n\tif ( curviness === undefined ) {\n\t\tcurviness = 2 / 3;\n\t}\n\n\tpath.nodes.forEach(function(node) {\n\t\tvar start = node,\n\t\t\tend,\n\t\t\tstartCtrl,\n\t\t\tendCtrl,\n\t\t\tstartType,\n\t\t\tendType,\n\t\t\tstartTension,\n\t\t\tendTension,\n\t\t\tstartDir,\n\t\t\tendDir,\n\t\t\trri;\n\n\t\tif ( !node.next ) {\n\t\t\treturn;\n\t\t}\n\n\t\tend = node.next;\n\t\tstartCtrl = start.handleOut;\n\t\tendCtrl = end.handleIn;\n\n\t\tstartType = start.typeOut;\n\t\tendType = end.typeIn;\n\n\t\tif ( startType === 'line' || endType === 'line' ) {\n\t\t\tstartCtrl.x = 0;\n\t\t\tstartCtrl.y = 0;\n\t\t\tendCtrl.x = 0;\n\t\t\tendCtrl.y = 0;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartTension = start.tensionOut !== undefined ?\n\t\t\tstart.tensionOut :\n\t\t\t( start.tension !== undefined ? start.tension : 1 );\n\t\tendTension = end.tensionIn !== undefined ?\n\t\t\tend.tensionIn :\n\t\t\t( end.tension !== undefined ? end.tension : 1 );\n\n\t\tstartDir = start._dirOut !== undefined ?\n\t\t\tstart._dirOut :\n\t\t\tstart.type === 'smooth' ? start._dirIn + Math.PI : 0;\n\t\tendDir = end._dirIn !== undefined ?\n\t\t\tend._dirIn :\n\t\t\tend.type === 'smooth' ? end._dirOut - Math.PI : 0;\n\n\t\trri = Utils.rayRayIntersection(\n\t\t\tstart._point,\n\t\t\tstartDir,\n\t\t\tend._point,\n\t\t\tendDir\n\t\t);\n\n\t\t// direction of handles is parallel\n\t\tif ( rri === null ) {\n\t\t\tvar angle = Utils.lineAngle( start._point, end._point ),\n\t\t\t\tmiddle = {\n\t\t\t\t\tx: ( end._point.x - start._point.x ) / 2 + start._point.x,\n\t\t\t\t\ty: ( end._point.y - start._point.y ) / 2 + start._point.y\n\t\t\t\t},\n\t\t\t\tp0 = Utils.rayRayIntersection(\n\t\t\t\t\tstart._point, startDir, middle, angle - Math.PI / 2\n\t\t\t\t),\n\t\t\t\tp1 = Utils.rayRayIntersection(\n\t\t\t\t\tmiddle, angle + Math.PI / 2, end._point, endDir\n\t\t\t\t);\n\n\t\t\tstartCtrl.x = ( Math.round(p0[0]) - start._point.x ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tstartCtrl.y = ( Math.round(p0[1]) - start._point.y ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tendCtrl.x = ( Math.round(p1[0]) - end._point.x ) *\n\t\t\t\tcurviness * endTension;\n\t\t\tendCtrl.y = ( Math.round(p1[1]) - end._point.y ) *\n\t\t\t\tcurviness * endTension;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartCtrl.x = ( Math.round(rri[0]) - start.point.x ) *\n\t\t\tcurviness * startTension;\n\t\tstartCtrl.y = ( Math.round(rri[1]) - start.point.y ) *\n\t\t\tcurviness * startTension;\n\t\tendCtrl.x = ( Math.round(rri[0]) - end.point.x ) *\n\t\t\tcurviness * endTension;\n\t\tendCtrl.y = ( Math.round(rri[1]) - end.point.y ) *\n\t\t\tcurviness * endTension;\n\t});\n};\n\nvar rdeg = /deg$/;\nObject.defineProperties(paper.PaperScope.prototype.Segment.prototype, {\n\texpand: {\n\t\tget: function() {\n\t\t\treturn this._expand;\n\t\t},\n\t\tset: function( expand ) {\n\t\t\tif ( typeof expand.angle === 'string' && rdeg.test(expand.angle) ) {\n\t\t\t\texpand.angle = parseFloat(expand.angle) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\n\t\t\tthis._expand = expand;\n\t\t}\n\t},\n\tdirIn: {\n\t\tget: function() {\n\t\t\treturn this._dirIn;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirIn = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirIn = dir;\n\t\t\t}\n\t\t}\n\t},\n\tdirOut: {\n\t\tget: function() {\n\t\t\treturn this._dirOut;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirOut = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirOut = dir;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = naive;\n","/*jshint -W098 */\nvar plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tassign = require('es6-object-assign').assign,\n\tUtils = require('./Utils.js'),\n\tnaive = require('./naive.js');\n\nvar paper = plumin.paper,\n\t_ = { assign: assign };\n\nfunction parametricFont( src ) {\n\t// TODO: this, block is only here for backward compat\n\t// and should be removed at some point in the future\n\tif ( !src.fontinfo ) {\n\t\tsrc.fontinfo = src.info;\n\t}\n\n\tvar font = Utils.fontFromSrc( src );\n\n\tObject.keys( src.glyphs ).forEach(function( name ) {\n\t\tvar glyphSrc = src.glyphs[name];\n\n\t\tUtils.ufoToPaper( glyphSrc );\n\n\t\t// turn ._operation strings to ._updaters functions\n\t\tUtils.createUpdaters( glyphSrc, 'glyphs/glyph_' + name );\n\n\t\tvar glyph = Utils.glyphFromSrc( glyphSrc, src, naive );\n\n\t\tfont.addGlyph( glyph );\n\n\t\t// Create additional paths for skeletons and set ._dependencies\n\t\t// appropriately\n\t\tnaive.annotator( glyph );\n\n\t\t// solvingOrder might be already available (if this is a subcomponent,\n\t\t// or precomputed in a worker)\n\t\tif ( !glyph.solvingOrder ) {\n\t\t\tglyph.solvingOrder = glyphSrc.solvingOrder =\n\t\t\t\tUtils.solveDependencyTree( glyph );\n\t\t}\n\t});\n\n\t// all glyphs are ready, embed components now\n\tfont.glyphs.forEach(function( _glyph ) {\n\t\tif ( _glyph.embedComponents ) {\n\t\t\t_glyph.embedComponents();\n\t\t}\n\t});\n\n\treturn font;\n}\n\nplumin.parametricFont = parametricFont;\nplumin.Utils = Utils;\nplumin.Utils.naive = naive;\n\npaper.PaperScope.prototype.Font.prototype.update = function( params, set ) {\n\treturn this.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.update( params );\n\t}, this);\n};\n\n/* Update the shape of the glyph, according to formula and parameters\n * 0. before running, nodes have already been created by ParametricFont\n *   (including expanded ones thanks to naive.expandSkeletons). And static\n *   properties have been copied over to those nodes\n * 1. We use the solving order to calculate all node properties\n * 2. transform contours\n * 3. Update components and transform them\n */\npaper.PaperScope.prototype.Glyph.prototype.update = function( _params ) {\n\tvar glyph = this,\n\t\tfont = glyph.parent,\n\t\tmatrix,\n\t\tparams;\n\n\t// 0. calculate local parameters\n\tparams = _.assign( {}, _params, glyph.parentParameters );\n\n\tObject.keys( ( glyph.src && glyph.src.parameters ) || [] )\n\t\t.forEach(function( name ) {\n\t\t\tvar src = glyph.src.parameters[name];\n\n\t\t\tif ( src._updaters ) {\n\t\t\t\tparams[name] = src._updaters[0].apply( null, [\n\t\t\t\t\tname, [], [], glyph.parentAnchors, Utils\n\t\t\t\t].concat(\n\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\treturn params[_name];\n\t\t\t\t\t})\n\t\t\t\t));\n\t\t\t}\n\t\t});\n\n\t// 1. calculate node properties\n\t( glyph.solvingOrder || [] ).forEach(function(cursor) {\n\t\tvar propName = cursor[ cursor.length - 1 ],\n\t\t\tsrc = Utils.propFromCursor( cursor, glyph.src ),\n\t\t\tobj = Utils.propFromCursor( cursor, glyph, cursor.length - 1 ),\n\t\t\t// TODO: one day we could allow multiple _updaters\n\t\t\tresult = src && src._updaters && src._updaters[0].apply( obj, [\n\t\t\t\t\tpropName, glyph.contours, glyph.anchors,\n\t\t\t\t\tglyph.parentAnchors, Utils\n\t\t\t\t].concat(\n\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\treturn params[_name];\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\n\t\t// Assume that updaters returning undefined have their own\n\t\t// assignment logic\n\t\tif ( result !== undefined ) {\n\t\t\tobj[propName] = result;\n\t\t}\n\t}, this);\n\n\t// 2. transform contours\n\tthis.contours.forEach(function(contour) {\n\t\t// a. transform the nodes\n\t\tcontour.nodes.forEach(function(node) {\n\t\t\tif ( node.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tnode.transforms.slice(0), node.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\t\t// We don't want to apply the transforms immediatly,\n\t\t\t\t\t// otherwise the transformation will add-up on each\n\t\t\t\t\t// update.\n\t\t\t\t\tnode.applyMatrix = false;\n\t\t\t\t\tnode.matrix = matrix;\n\n\t\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t\t// expanded items\n\t\t\t\t} else {\n\t\t\t\t\tnode.expandedTo.forEach(function( _node ) {\n\t\t\t\t\t\t_node.applyMatrix = false;\n\t\t\t\t\t\t_node.matrix = matrix;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// b. transform the contour\n\t\t// prepare and update outlines and expanded contours, but not\n\t\t// skeletons\n\t\tif ( contour.transforms ) {\n\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\tcontour.transforms.slice(0), contour.transformOrigin\n\t\t\t);\n\n\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\tcontour.applyMatrix = false;\n\t\t\t\tcontour.matrix = matrix;\n\n\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t// expanded items\n\t\t\t} else {\n\t\t\t\tcontour.expandedTo.forEach(function( _contour ) {\n\t\t\t\t\t_contour.applyMatrix = false;\n\t\t\t\t\t_contour.matrix = matrix;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, this);\n\n\t// 3. update components and transform components\n\tif ( this.components.length && font ) {\n\t\t// subcomponents have the parent component as their parent\n\t\t// so search for the font\n\t\twhile ( !('glyphs' in font) ) {\n\t\t\tfont = font.parent;\n\t\t}\n\n\t\tthis.components.forEach(function(component) {\n\t\t\tcomponent.update( params );\n\n\t\t\tif ( component.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tcomponent.transforms.slice(0), component.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tcomponent.applyMatrix = false;\n\t\t\t\tcomponent.matrix = matrix;\n\t\t\t}\n\t\t}, this);\n\t}\n\n\t// 4. transform whole glyph\n\tif ( glyph.transforms ) {\n\t\tmatrix = Utils.transformsToMatrix(\n\t\t\tglyph.transforms.slice(0), glyph.transformOrigin\n\t\t);\n\n\t\tglyph.applyMatrix = false;\n\t\tglyph.matrix = matrix;\n\t}\n\n\treturn this;\n};\n\n// Before updating SVG or OpenType data, we must determine paths exports\n// directions. Basically, everything needs to be clockwise.\n// this method needs to be called only after the first update\npaper.PaperScope.prototype.Outline.prototype.prepareDataUpdate = function() {\n\tthis.children.forEach(function(contour) {\n\t\t// expanded contours are handled from their skeleton\n\t\tif ( contour.expandedFrom ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( contour.skeleton !== true ) {\n\t\t\tcontour.export = 'clockwise';\n\n\t\t} else {\n\t\t\tcontour.expandedTo[0].export = 'clockwise';\n\n\t\t\tif ( contour.expandedTo[1] ) {\n\t\t\t\tcontour.expandedTo[0].export = contour.clockwise ?\n\t\t\t\t\t'clockwise' :\n\t\t\t\t\t'anticlockwise';\n\n\t\t\t\tcontour.expandedTo[1].export = contour.clockwise ?\n\t\t\t\t\t'anticlockwise' :\n\t\t\t\t\t'clockwise';\n\t\t\t}\n\t\t}\n\t});\n};\n\nvar updateSVGData =\n\t\tpaper.PaperScope.prototype.Outline.prototype.updateSVGData,\n\tupdateOTCommands =\n\t\tpaper.PaperScope.prototype.Outline.prototype.updateOTCommands;\n\npaper.PaperScope.prototype.Outline.prototype.updateSVGData = function() {\n\tif ( !this.isPrepared ) {\n\t\tthis.prepareDataUpdate();\n\t\tthis.isPrepared = true;\n\t}\n\n\tupdateSVGData.apply( this, arguments );\n};\n\npaper.PaperScope.prototype.Outline.prototype.updateOTCommands = function() {\n\tif ( !this.isPrepared ) {\n\t\tthis.prepareDataUpdate();\n\t\tthis.isPrepared = true;\n\t}\n\n\tupdateOTCommands.apply( this, arguments );\n};\n\nmodule.exports = plumin;\n","var Utils = {};\n\n// The following function should be useless, thanks to paper\nUtils.lineLineIntersection = function( p1, p2, p3, p4 ) {\n\tvar x1 = p1.x,\n\t\ty1 = p1.y,\n\t\tx2 = p2.x,\n\t\ty2 = p2.y,\n\t\tx3 = p3.x,\n\t\ty3 = p3.y,\n\t\tx4 = p4.x,\n\t\ty4 = p4.y,\n\t\td = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n\tif ( d === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn new Float32Array([\n\t\t( (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4) ) /\n\t\td,\n\t\t( (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4) ) /\n\t\td\n\t]);\n};\n\n// Find the intersection of two rays.\n// A ray is defined by a point and an angle.\nUtils.rayRayIntersection = function( p1, a1, p2, a2 ) {\n\t// line equations\n\tvar a = Math.tan(a1),\n\t\tb = Math.tan(a2),\n\t\tc = p1.y - a * p1.x,\n\t\td = p2.y - b * p2.x,\n\t\tx,\n\t\ty;\n\n\t// When searching for lines intersection,\n\t// angles can be normalized to 0 < a < PI\n\t// This will be helpful in detecting special cases below.\n\ta1 = a1 % Math.PI;\n\tif ( a1 < 0 ) {\n\t\ta1 += Math.PI;\n\t}\n\ta2 = a2 % Math.PI;\n\tif ( a2 < 0 ) {\n\t\ta2 += Math.PI;\n\t}\n\n\t// no intersection\n\tif ( a1 === a2 ) {\n\t\treturn null;\n\t}\n\n\t// Optimize frequent and easy special cases.\n\t// Without optimization, results would be incorrect when cos(a) === 0\n\tif ( a1 === 0 ) {\n\t\ty = p1.y;\n\t} else if ( a1 === Math.PI / 2 ) {\n\t\tx = p1.x;\n\t}\n\tif ( a2 === 0 ) {\n\t\ty = p2.y;\n\t} else if ( a2 === Math.PI / 2 ) {\n\t\tx = p2.x;\n\t}\n\n\t// easiest case\n\tif ( x !== undefined && y !== undefined ) {\n\t\treturn new Float32Array([ x, y ]);\n\t}\n\n\t// other cases that can be optimized\n\tif ( a1 === 0 ) {\n\t\treturn new Float32Array([ ( y - d ) / b, y ]);\n\t}\n\tif ( a1 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, b * x + d ]);\n\t}\n\tif ( a2 === 0 ) {\n\t\treturn new Float32Array([ ( y - c ) / a, y ]);\n\t}\n\tif ( a2 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, a * x + c ]);\n\t}\n\n\t// intersection from two line equations\n\t// algo: http://en.wikipedia.org/wiki/Line–line_intersection#Given_the_equations_of_the_lines\n\treturn new Float32Array([\n\t\tx = (d - c) / (a - b),\n\t\t// this should work equally well with ax+c or bx+d\n\t\ta * x + c\n\t]);\n};\n\n// return the angle between two points\nUtils.lineAngle = function( p0, p1 ) {\n\treturn Math.atan2( p1.y - p0.y, p1.x - p0.x );\n};\n\nUtils.onLine = function( params ) {\n\tvar origin = params.on[0],\n\t\tvector = [\n\t\t\tparams.on[1].x - params.on[0].x,\n\t\t\tparams.on[1].y - params.on[0].y\n\t\t];\n\n\treturn 'x' in params ?\n\t\t( params.x - origin.x ) / vector[0] * vector[1] + origin.y :\n\t\t( params.y - origin.y ) / vector[1] * vector[0] + origin.x;\n};\n\nUtils.log = function() {\n\tconsole.log.apply( console, arguments );\n\treturn arguments[0];\n};\n\nmodule.exports = Utils;\n"]}