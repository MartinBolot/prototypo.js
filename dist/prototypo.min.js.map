{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/deptree/index.js","node_modules/es6-object-assign/src/index.js","node_modules/lodash/index.js","node_modules/lodash/internal/arrayCopy.js","node_modules/lodash/internal/arrayEach.js","node_modules/lodash/internal/baseAssign.js","node_modules/lodash/internal/baseClone.js","node_modules/lodash/internal/baseCopy.js","node_modules/lodash/internal/baseFor.js","node_modules/lodash/internal/baseForOwn.js","node_modules/lodash/internal/baseProperty.js","node_modules/lodash/internal/bindCallback.js","node_modules/lodash/internal/bufferClone.js","node_modules/lodash/internal/createBaseFor.js","node_modules/lodash/internal/getLength.js","node_modules/lodash/internal/getNative.js","node_modules/lodash/internal/initCloneArray.js","node_modules/lodash/internal/initCloneByTag.js","node_modules/lodash/internal/initCloneObject.js","node_modules/lodash/internal/isArrayLike.js","node_modules/lodash/internal/isIndex.js","node_modules/lodash/internal/isIterateeCall.js","node_modules/lodash/internal/isLength.js","node_modules/lodash/internal/isObjectLike.js","node_modules/lodash/internal/shimKeys.js","node_modules/lodash/internal/toObject.js","node_modules/lodash/lang/clone.js","node_modules/lodash/lang/isArguments.js","node_modules/lodash/lang/isArray.js","node_modules/lodash/lang/isFunction.js","node_modules/lodash/lang/isNative.js","node_modules/lodash/lang/isObject.js","node_modules/lodash/object/keys.js","node_modules/lodash/object/keysIn.js","node_modules/lodash/utility/identity.js","node_modules/plumin.js/dist/plumin.js","src/Utils.js","src/naive.js","src/prototypo.js","src/updateUtils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","prototypo","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"DepTree","nodes","prototype","add","node","dependants","Array","resolveNode","resolved","processing","deps","forEach","dep","indexOf","push","resolve","assign","target","firstSource","undefined","TypeError","to","Object","arguments","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","polyfill","defineProperty","configurable","writable","value","VERSION","BIND_FLAG","BIND_KEY_FLAG","CURRY_BOUND_FLAG","CURRY_FLAG","CURRY_RIGHT_FLAG","PARTIAL_FLAG","PARTIAL_RIGHT_FLAG","ARY_FLAG","REARG_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LARGE_ARRAY_SIZE","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","FUNC_ERROR_TEXT","PLACEHOLDER","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChars","reHasRegExpChars","reComboMark","reEscapeChar","reEsTemplate","reFlags","reHasHexPrefix","reIsHostCtor","reIsUint","reLatin1","reNoMatch","reUnescapedString","reWords","upper","lower","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","htmlEscapes","&","<",">","\"","'","`","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","object","regexpEscapes","0","2","3","4","5","6","7","8","9","A","B","C","D","E","F","b","c","d","v","x","stringEscapes","\\","\n","\r"," "," ","freeExports","nodeType","freeModule","freeGlobal","freeSelf","freeWindow","moduleExports","root","baseCompareAscending","other","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","charAt","charsRightIndex","compareAscending","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","result","order","deburrLetter","letter","escapeHtmlChar","chr","escapeRegExpChar","leadingChar","whitespaceChar","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","runInContext","context","_","defaults","pick","Date","Function","Math","Number","String","arrayProto","objectProto","stringProto","fnToString","toString","hasOwnProperty","idCounter","objToString","oldDash","reIsNative","replace","ArrayBuffer","clearTimeout","parseFloat","pow","propertyIsEnumerable","Set","getNative","setTimeout","splice","Uint8Array","WeakMap","nativeCeil","ceil","nativeCreate","nativeFloor","floor","nativeIsArray","nativeIsFinite","isFinite","nativeKeys","nativeMax","max","nativeMin","min","nativeNow","nativeParseInt","parseInt","nativeRandom","random","NEGATIVE_INFINITY","POSITIVE_INFINITY","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","MAX_SAFE_INTEGER","metaMap","realNames","lodash","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","actions","__wrapped__","__actions__","__chain__","support","templateSettings","escape","evaluate","interpolate","variable","imports","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","arrayCopy","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","baseWrapperValue","reverse","outer","iterIndex","data","type","MapCache","__data__","mapDelete","key","has","mapGet","mapHas","mapSet","SetCache","values","hash","set","cacheIndexOf","cache","isObject","cachePush","arrayConcat","othIndex","othLength","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","props","baseAssign","baseCopy","baseAt","collection","isNil","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","isFunc","initCloneObject","initCloneByTag","baseForOwn","subValue","baseCreate","baseDelay","wait","args","apply","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEach","createBaseEach","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseFor","createBaseFor","baseForRight","baseForIn","keysIn","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","baseRandom","baseReduce","initFromCollection","baseSetData","baseSome","baseSortBy","comparer","sort","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","low","high","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","bufferClone","buffer","byteLength","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","getLength","isLength","iterable","keysFunc","createBindWrapper","Ctor","createCtorWrapper","wrapper","fn","createCompounder","words","deburr","thisBinding","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isAry","isBind","isBindKey","isCurry","isCurryBound","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","newData","setData","reorder","strLength","padLength","repeat","slice","createPartialWrapper","createRound","methodName","number","precision","createSortedIndex","mergeData","arrValue","othValue","name","message","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","noop","get","otherFunc","pairs","isNative","transforms","size","input","byteOffset","exec","lastIndex","invokePath","test","srcBitmask","newBitmask","isCombo","mergeDefaults","merge","pickByArray","pickByCallback","oldArray","count","lastCalled","stamp","now","remaining","shimKeys","allowIndexes","match","quote","chunk","compact","difference","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","first","flatten","flattenDeep","initial","intersection","arrays","caches","lastIndexOf","pull","pullAt","remove","rest","sortedIndex","sortedLastIndex","take","takeRight","takeRightWhile","takeWhile","union","uniq","isSorted","unzip","group","unzipWith","without","xor","zip","zipObject","zipWith","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperConcat","wrapperPlant","parent","wrapperReverse","wrapped","wrapperToString","wrapperValue","at","countBy","every","filter","find","findLast","findWhere","forEachRight","groupBy","includes","isString","indexBy","invoke","isProp","map","partition","pluck","reduce","reduceRight","reject","sample","toArray","rand","shuffle","some","sortBy","sortByAll","sortByOrder","where","getTime","after","temp","before","bind","bindAll","methodNames","functions","bindKey","curry","curryRight","debounce","options","maxTimeoutId","timeoutId","trailingCall","maxWait","trailing","leading","cancel","complete","isCalled","id","delayed","maxDelayed","debounced","leadingCall","defer","delay","flow","flowRight","memoize","resolver","memoized","Cache","modArgs","negate","once","partial","partialRight","rearg","otherArgs","spread","throttle","wrap","cloneDeep","gt","gte","isBoolean","isDate","isElement","isEmpty","isEqual","isError","isMatch","isNaN","isNumber","isNull","isRegExp","isUndefined","lt","lte","create","properties","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","defaultValue","invert","multiValue","isProto","skipIndexes","mapKeys","mapValues","omit","nested","transform","valuesIn","inRange","floating","noMin","noMax","camelCase","word","toLowerCase","toUpperCase","capitalize","endsWith","position","escapeRegExp","kebabCase","pad","padLeft","padRight","radix","trim","snakeCase","startCase","startsWith","template","otherOptions","settings","importsKeys","importsValues","isEscaping","isEvaluating","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","attempt","trimLeft","trimRight","trunc","omission","separator","search","newEnd","substring","unescape","pattern","matches","constant","matchesProperty","method","methodOf","mixin","isObj","noConflict","propertyOf","range","step","times","uniqueId","prefix","augend","addend","round","sum","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","all","any","contains","eq","detect","foldl","foldr","head","include","inject","filtered","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","concat","run","toJSON","valueOf","plumin","opentype","argument","assert","line","ctx","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","cffStandardStrings","cffStandardEncoding","cffExpertEncoding","standardNames","DefaultEncoding","font","charToGlyphIndex","glyphs","glyph","j","unicodes","CmapEncoding","cmap","glyphIndexMap","CffEncoding","encoding","charset","charName","GlyphNames","post","version","numberOfGlyphs","glyphNameIndex","nameToGlyphIndex","glyphIndexToName","gid","addGlyphNames","tables","charCodes","glyphIndex","addUnicode","cffEncoding","glyphNames","sfnt","Font","familyName","styleName","designer","designerURL","manufacturer","manufacturerURL","license","licenseURL","description","copyright","trademark","unitsPerEm","ascender","descender","supported","hasChar","charToGlyph","stringToGlyphs","nameToGlyph","nametoGlyphIndex","getKerningValue","leftGlyph","rightGlyph","gposKerning","getGposKerningValue","kerningPairs","forEachGlyph","text","y","fontSize","kerning","fontScale","advanceWidth","kerningValue","getPath","fullPath","Path","gX","gY","gFontSize","glyphPath","draw","drawPoints","drawMetrics","validate","warnings","_this","assertStringAttribute","attrName","toTables","fontToTable","toBuffer","sfntTable","bytes","encode","intArray","download","fileName","requestFileSystem","webkitRequestFileSystem","TEMPORARY","fs","getFile","fileEntry","createWriter","writer","dataView","DataView","blob","Blob","write","addEventListener","location","href","toURL","err","./encoding","./path","./tables/sfnt","check","Glyph","unicode","xMin","yMin","xMax","yMax","scale","p","commands","cmd","quadraticCurveTo","curveTo","closePath","getContours","points","contours","currentContour","pt","lastPointOfContour","getMetrics","xCoords","yCoords","metrics","leftSideBearing","rightSideBearing","drawCircles","PI_SQ","PI","arc","blueCircles","redCircles","fillStyle","lineWidth","strokeStyle","./check","./draw","_font","parse","cff","glyf","gpos","hhea","hmtx","kern","loca","maxp","_name","os2","toArrayBuffer","arrayBuffer","loadFromFile","readFile","loadFromUrl","url","request","XMLHttpRequest","open","responseType","onload","status","statusText","response","send","parseBuffer","indexToLocFormat","hmtxOffset","glyfOffset","locaOffset","cffOffset","kernOffset","gposOffset","getFixed","outlinesFormat","getTag","numTables","getUShort","getULong","numberOfHMetrics","numGlyphs","fontFamily","fontSubfamily","shortVersion","locaTable","load","isNode","loadFn","_parse","./font","./glyph","./parse","./tables/cff","./tables/cmap","./tables/glyf","./tables/gpos","./tables/head","./tables/hhea","./tables/hmtx","./tables/kern","./tables/loca","./tables/maxp","./tables/name","./tables/os2","./tables/post","getByte","getUint8","getCard8","getUint16","getCard16","getShort","getInt16","getUint32","decimal","fraction","fromCharCode","getInt8","getOffset","offSize","getBytes","startOffset","endOffset","bytesToString","typeOffsets","byte","uShort","short","uLong","fixed","longDateTime","Parser","relativeOffset","parseByte","parseChar","parseCard8","parseUShort","parseCard16","parseSID","parseOffset16","parseShort","parseF2Dot14","parseULong","parseFixed","parseOffset16List","parseUShortList","offsets","parseString","parseTag","parseLongDateTime","parseVersion","major","minor","skip","amount","strokeWidth","bezierCurveTo","quadTo","close","pathOrCommands","toPathData","decimalPlaces","floatToString","toFixed","packValues","toSVG","svg","sizeOf","Table","tableName","fields","field","optionKeys","k","sizeOfFunction","TABLE","./types",10,"_glyph","table","equals","parseCFFIndex","conversionFn","objects","objectOffset","offsetSize","pos","parseFloatOperand","parser","eof","lookup","n1","n2","parseOperand","b0","b1","b2","b3","b4","entriesToObject","entries","parseCFFDict","operands","op","getCFFString","strings","interpretDict","dict","meta","newDict","m","parseCFFHeader","header","formatMajor","formatMinor","TOP_DICT_META","PRIVATE_DICT_META","parseCFFTopDict","parseCFFPrivateDict","parseCFFCharset","nGlyphs","sid","format","parseCFFEncoding","enc","nCodes","nRanges","nLeft","parseCFFCharstring","c1x","c1y","c2x","c2y","stack","nStems","haveWidth","width","defaultWidthX","newContour","parseStems","hasWidthArg","shift","nominalWidthX","codeIndex","subrCode","jpx","jpy","c3x","c3y","c4x","c4y","subrsBias","subrs","abs","console","log","gsubrsBias","gsubrs","calcCFFSubroutineBias","bias","parseCFFTable","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDictData","topDict","privateDictOffset","privateDict","subrOffset","subrIndex","charStringsIndex","charStrings","charString","encodeString","makeHeader","makeNameIndex","fontNames","makeDict","attrs","entry","makeTopDict","makeTopDictIndex","topDicts","makeStringIndex","makeGlobalSubrIndex","makeCharsets","glyphName","glyphSID","glyphToOps","ops","dx","dy","_13","_23","dx1","dy1","dx2","dy2","makeCharStringsIndex","makePrivateDict","makePrivateDictIndex","privateDicts","makeCFFTable","fullName","weight","weightName","private","privateAttrs","postScriptName","charsets","privateDictIndex","make","../encoding","../glyph","../parse","../path","../table",11,"parseCmapTable","platformId","encodingId","language","segCount","endCountParser","startCountParser","idDeltaParser","idRangeOffsetParser","glyphIndexOffset","endCount","startCount","idDelta","idRangeOffset","addSegment","segments","delta","addTerminatorSegment","makeCmapTable","segCountX2","searchRange","entrySelector","rangeShift","endCounts","startCounts","idDeltas","idRangeOffsets","glyphIds","segment","glyphId","../check",12,"parseGlyphCoordinate","previousValue","shortVectorBitMask","sameBitMask","parseGlyph","numberOfContours","flags","endPointIndices","instructionLength","instructions","numberOfCoordinates","repeatCount","point","onCurve","px","py","isComposite","components","moreComponents","component","xScale","scale01","scale10","yScale","transformPoints","newPoints","newPt","contour","firstPt","lastPt","curvePt","realFirstPoint","prevPt","midPt","parseGlyfTable","nextOffset","componentGlyph","transformedPoints",13,"parseTaggedListTable","list","parseCoverageTable","coverage","begin","parseClassDefTable","startGlyph","glyphCount","classes","glyphID","rangeCount","startGlyphs","endGlyphs","classValues","parsePairPosSubTable","coverageOffset","valueFormat1","valueFormat2","value1","value2","sharedPairSets","pairSetCount","pairSet","pairSetOffsets","firstGlyph","pairSetOffset","sharedPairSet","pairValueCount","secondGlyph","classDef1Offset","classDef2Offset","class1Count","class2Count","getClass1","getClass2","kerningMatrix","kerningRow","covered","class1","class2","parseLookupTable","lookupType","lookupFlag","useMarkFilteringSet","subTableCount","subTableOffsets","markFilteringSet","subtables","parseGposTable","tableVersion","lookupListOffset","lookupCount","lookupTableOffsets","lookupListAbsoluteOffset",14,"parseHeadTable","fontRevision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","glyphDataFormat","makeHeadTable",15,"parseHheaTable","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","makeHheaTable",16,"parseHmtxTable","numMetrics","makeHmtxTable",17,"parseKernTable","subTableVersion","nPairs",18,"parseLocaTable","parseFn","glyphOffsets","glyphOffset",19,"parseMaxpTable","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","makeMaxpTable",20,"nameTableNames","parseNameTable","stringOffset","unknownCount","platformID","encodingID","languageID","nameID","codePoints","str","langTagCount","makeNameRecord","addMacintoshNameRecord","recordID","stringBytes","STRING","records","addWindowsNameRecord","utf16Bytes","UTF16","makeNameTable","../types",21,"unicodeRanges","getUnicodeRange","parseOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContent","makeOS2Table",22,"parsePostTable","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","nameLength","makePostTable",23,"log2","computeCheckSum","makeTableRecord","checkSum","makeSfntTable","highestPowerOf2","recordFields","tableFields","tableLength","tableRecord","r1","r2","metricsForChar","notFoundMetrics","average","vs","fontToSfntTable","xMins","yMins","xMaxs","yMaxs","advanceWidths","leftSideBearings","rightSideBearings","firstCharIndex","lastCharIndex","globals","advanceWidthAvg","maxLeftSideBearing","headTable","hheaTable","maxpTable","os2Table","hmtxTable","cmapTable","nameTable","uniqueID","preferredFamily","preferredSubfamily","postTable","cffTable","checkSumAdjusted","./cff","./cmap","./head","./hhea","./hmtx","./maxp","./name","./os2","./post",24,"LIMIT16","LIMIT32","decode","BYTE","CHAR","CHARARRAY","USHORT","SHORT","UINT24","ULONG","LONG","FIXED","FWORD","UFWORD","LONGDATETIME","TAG","Card8","Card16","OffSize","SID","NUMBER","NUMBER16","NUMBER32","NAME","INDEX","dataSize","OBJECT","encodedOffsets","offsetEncoder","encodedOffset","DICT","OPERAND","OPERATOR","OP","wmm","CHARSTRING","encodingFunction","LITERAL","paper","noCanvas","process","browser","WorkerGlobalScope","Base","hidden","iter","proto","__proto__","describe","obj","__lookupGetter__","__lookupSetter__","_define","__defineGetter__","__defineSetter__","dest","src","beans","preserve","beansNames","val","res","prev","bean","base","part","exclude","statics","ctor","initialize","_id","_class","Formatter","instance","join","getClassName","exportJSON","serialize","_set","dontCheck","orig","_filtering","obj1","obj2","checkKeys","o1","o2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","dictionary","formatter","definitions","references","item","ref","unshift","_serialize","_compact","deserialize","json","_data","isRoot","isDictionary","JSON","stringify","importJSON","isTarget","Item","Layer","insert","items","append","_index","removed","camelize","hyphenate","Emitter","on","_eventTypes","handlers","_callbacks","install","off","uninstall","emit","event","stop","responds","attach","detach","fire","_installEvents","events","_events","types","PaperScope","applyMatrix","handleSize","hitTolerance","project","projects","tools","palettes","_scopes","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","navigator","userAgent","v1","v2","rv","chrome","versionNumber","webkit","atom","getPaper","execute","PaperScript","View","updateFocus","scope","that","setup","element","Project","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","val1","val2","height","rectangle","Numerical","abscissas","weights","sqrt","TOLERANCE","EPSILON","MACHINE_EPSILON","KAPPA","isZero","integrate","w","Ax","findRoot","df","tolerance","fx","nx","solveQuadratic","roots","Infinity","gmC","mult","LOG10E","R","q","solveCubic","c2","ec","x0","qd","tmp","Point","arg0","arg1","hasY","angle","setAngle","setLength","_angle","cos","sin","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","atan2","div","NaN","dot","acos","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","rotate","center","subtract","matrix","_transformPoint","multiply","divide","modulo","isInside","Rectangle","isClose","isColinear","isOrthogonal","point1","point2","LinkedPoint","owner","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","next","rect","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","left","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","concatenate","a1","c1","d1","a2","d2","tx2","ty2","preConcatenate","tx1","ty1","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","bounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","apx","apy","avx","avy","bpx","bpy","bvx","bvy","ta","tb","vx","vy","v2x","v2y","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","_drawSelection","Symbol","dontCenter","setDefinition","_definition","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","PlacedSymbol","symbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","visible","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","setParent","mouseFlags","mousedown","mousedrag","click","doubleclick","mouseup","mousemove","mouseenter","mouseleave","mouseEvent","counters","_eventCounters","onFrame","_animateItem","onLoad","animate","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","_removeNamed","children","_children","namedChildren","_namedChildren","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getPosition","_pivot","getBounds","getPivot","setPivot","getRegistration","setRegistration","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","child","setBounds","_boundsCache","ids","cached","_internal","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","copy","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","getIntersections","guides","parentTotalMatrix","_totalMatrix","totalMatrix","tolerancePadding","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","class","checkBounds","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","compare","matchObject","firstOnly","overlapping","inside","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","namedArray","notifyParent","replaceWith","reverseChildren","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","toCanvasStyle","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","getViewMatrix","normalBlend","nativeBlend","direct","dontStart","clip","_canComposite","mainCtx","itemOffset","prevOffset","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","fillRect","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","getWindingRule","getCornerCenter","halfSize","corner","getEllipseRadius","hit","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","getElement","getPpi","getImage","naturalWidth","naturalHeight","_context","modify","setContext","toDataURL","loaded","update","document","getElementById","Image","DomEvent","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","isLinear","_point","_handleIn","_handleOut","_path","curves","_curves","curve","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","setLinear","linear","next1","getNext","next2","getPrevious","isArc","handle1","handle2","_selectionState","state","oldState","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","removeSegment","segment0","segment1","coef","dxPoint","dyPoint","dxHandleIn","dyHandleIn","dxHandleOut","dyHandleOut","change","Curve","arg6","arg7","_segment2","segment2","_length","getPoint1","setPoint1","getPoint2","setPoint2","getHandle1","setHandle1","getHandle2","setHandle2","getSegment1","getSegment2","getPoints","getPart","getPartLength","filterIntersections","_getParameter","isParameter","parameter","getParameterAt","ignoreLinear","subdivide","split","p1","h1","h2","p2","p1x","p1y","p2x","p2y","bx","ax","by","ay","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","txs","tys","sx","sy","isFlatEnough","ux","uy","getEdgeSum","_addBounds","v0","v3","padding","tMin","tMax","getLocationAt","getLocationOf","getOffsetOf","loc","getNearestLocation","minDist","minT","refine","dist","getNearestPoint","getLengthIntegrand","getIterations","ds","forward","rangeLength","guess","addLocation","locations","curve1","t1","curve2","t2","addCurveIntersections","uMin","uMax","oldTDiff","recursion","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","tMinNew","tMaxNew","tDiff","hull","getConvexHull","tMinClip","tMaxClip","clipConvexHull","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","flip","pmax","distZero","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rlx2","rvl","rvc","tc","tl","addLineIntersection","linear1","linear2","c1p1","c1p2","c2p1","c2p2","_expand","_curve","_curve2","_parameter","_parameter2","loc1","loc2","path1","path2","getParameter","getIntersection","_point2","_distance","getSegment","_preferFirst","_segment","_uncached","_intersection","_getOffset","getCurveOffset","getPointAt","curves1","curves2","matrix1","matrix2","length1","length2","values2","values1","seg1","seg2","setPathData","relative","control","getCoord","command","move","cubicCurveTo","arcTo","winding","_getWinding","closed","setSegments","_clockwise","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","curX","curY","prevX","prevY","inX","inY","outX","outY","skipLine","isPolygon","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","_selectSegments","newState","maxDistance","iterator","PathIterator","simplify","fitter","PathFitter","fit","isClockwise","setClockwise","clockwise","last1","last2","first2","first1","path0","toShape","topCenter","shape","numSegments","strokePadding","cap","hitStroke","hitFill","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","_addBevelJoin","_addSquareCap","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","overlap","knots","f1","f2","ie","je","getCurrentSegment","moveBy","through","extent","vector","middle","large","epsilon","rxSq","rySq","xSq","ySq","l1","l2","throughSide","centerSide","ext","inc","z","out","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","prevCoords","processSegment","joinBounds","addRound","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getNormal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","compoundpath0","compoundpath1","paths","getCurrentPath","operators","computeBoolean","operation","operator","preparePath","reorient","_path1","_path2","splitPath","monoCurves","_getMonoCurves","_winding","startSeg","totalLength","windingSum","curveLength","getTangentAt","getWinding","tracePaths","intersections","linearHandles","resetLinear","newCurve","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","prevT","slope","selfOp","_visited","inter","startInterSeg","added","interSeg","c4","c3","t3","t4","w3","w4","nextCurve","nextSeg","firstSegment","lastSegment","prevCurve","insertCurve","y0","handleCurve","y3","getInteriorPoint","xIntercepts","maxRecursion","minDifference","addCurve","computeParts","maxT","halfT","prevVal","prevLen","error","fitCubic","tan1","tan2","pt1","pt2","uPrime","chordLengthParameterize","maxError","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","X","detC0C1","alpha1","alpha2","detC0X","detXC1","c0","segLength","diff","degree","maxDist","P","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","getLeading","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","gray","rgb","hsb","hsl","gradient","componentParsers","colorCache","colorCtx","fromCSS","hsbIndices","converters","rgb-hsb","h","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","hasOverlap","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","_stops","origin","destination","canvasGradient","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","acronym","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","strokeScaling","windingRule","shadowOffset","selectedColor","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","getStyles","doc","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","nativeRequest","requested","callbacks","focused","timer","focus","blur","handleCallbacks","setInterval","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","getCanvasSize","_windowEvents","resize","setViewSize","_setViewSize","Stats","_stats","stats","domElement","appendChild","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","onResize","_time","_count","_requestFrame","_requested","_handleFrame","_before","_handlingFrame","time","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tool","prevFocus","tempFocus","dragging","handleMouseMove","_handleEvent","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","HTMLCanvasElement","deviceRatio","backingStoreRatio","prevFont","measureText","downPoint","lastPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","callEvent","MouseEvent","isStopped","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","specialKeys",27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","space","charCodeMap","keyMap","downCode","handleKey","keyCode","specialKey","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","xhr","ActiveXObject","overrideMimeType","onreadystatechange","readyState","responseText","canvases","createElement","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","exclusion","hue","saturation","luminosity","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","attribute","fromSVG","exportFilter","SVGNamespaces","xlink","setAttributes","namespace","setAttributeNS","createElementNS","getTransform","coordinates","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","exporters","applyStyle","visibility","svgs","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","importGroup","childNodes","isClip","currentStyle","applyAttributes","importSVG","importPoly","importPath","pathData","importGradient","isRadial","importers","#document","nextSibling","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","applyTransform","applyOpacity","attributes","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","styles","parentNode","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","onImport","expandShapes","Collection","cb","wrapConstructor","useConstructed","arr","params","rconstructor","constructorFilter","unwrapArg","isPlural","unwrapArgs","proxy","getOwnPropertyNames","plural","fontinfo","ot","glyphMap","charMap","altMap","_subset","addGlyph","addGlyphs","fonts","addedFonts","delete","styleElement","styleSheet","styleSheets","ss","ownerNode","_lastSubset","normalizeSubset","getGlyphSubset","subset","setAlternateFor","font0","font1","updateSVGData","updateOTCommands","united","importOT","otFont","otGlyph","_URL","URL","webkitURL","addToFonts","fontface","FontFace","createObjectURL","fontObjectURL","revokeObjectURL","deleteRule","insertRule","downloadFromLink","onloadend","dispatchEvent","readAsDataURL","merged","user","headers","Headers","fetch","then","bufferToDownload","catch","../node_modules/opentype.js/dist/opentype.js","../node_modules/paper/dist/paper-core.js","./Glyph.js","Outline","anchors","parentAnchors","addAnchor","addAnchors","addParentAnchor","glyph0","glyph1","svgData","addContour","./Outline.js","fromPath","outline0","outline1","defineProperties","firstNode","lastNode","_updateData","pushSimple","pushBezier","exportReversed","ctrl1","ctrl2","Node","./Collection.js","./Font.js","./Node.js","./Outline","./Path.js","updateUtils","Utils","ufoToPaper","parameters","outline","parentParameters","lib","transformOrigin","solvingOrder","fontFromSrc","info","filteredSrc","controls","presets","createUpdaters","mergeStatic","solveDependencyTree","glyphFromSrc","fontSrc","naive","embed","anchorSrc","contourSrc","nodeSrc","embedComponents","componentSrc","annotator","addComponent","cursor","propFromCursor","_dependencies","_parameters","_updaters","leaf","_operation","createUpdater","updaterCache","sOperation","cacheKey","depTree","dependencyTree","simplified","simplifyResolutionOrder","parentSrc","leafSrc","currCursor","rdeg","transformsToMatrix","Float32Array","curr","rslt","updateParameters","indiv_group_param","groupName","needed","handleGroup","updateProperties","_cursor","propName","autoExpandableNodeSrc","inSkeleton","autoExpandedNodeSrc","side","expandedNodeUpdater","expandedTo","skeletonCopier","explicitExpandableNodeSrc","explicitExpandedNodeSrc","expandedContourSrc","curviness","prepareContour","updateContour","additionalContours","skeleton","leftContour","rightContour","leftNodes","rightNodes","leftNodesSrc","rightNodesSrc","leftSrc","rightSrc","expandedFrom","typeIn","typeOut","addContours","isLeft","distr","_dirOut","_dirIn","tensionIn","tensionOut","tension","lineAngle","startCtrl","endCtrl","startType","endType","startTension","endTension","startDir","endDir","rri","rayRayIntersection","dirIn","dirOut","parametricFont","glyphSrc","groupedProperties","sign","_params","indiv_glyphs","indivParam","groups","_node","_contour","prepareDataUpdate","isPrepared","lineLineIntersection","p4","x3","x4","y4","onLine","pointOnCurve","pointHandleOut","pointHandleIn","distanceFromOut","inverseOrientation","linePrecision","previousPoint","deCasteljau"],"mappings":"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lC,MAAA,MAAA3lC,IAAA,QACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,MAAA3lC,IAAA,QACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,OACA2lC,MAAA,KAAA3lC,IAAA,QACA2lC,MAAA,MAAA3lC,IAAA,QACA2lC,MAAA,MAAA3lC,IAAA,QACA2lC,MAAA,MAAA3lC,IAAA,QACA2lC,MAAA,MAAA3lC,IAAA,QACA2lC,MAAA,MAAA3lC,IAAA,QACA2lC,MAAA,MAAA3lC,IAAA,QACA2lC,M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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChhEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACptwkkisourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var DepTree = function() {\n  this.nodes = {}; \n};\n\nDepTree.prototype.add = function(node, dependants) {\n  var self = this;\n\n  if (!dependants) {\n    dependants = [];\n  } else if (!(dependants instanceof Array)) {\n    dependants = [dependants];\n  }\n\n  this.nodes[node] = dependants;\n};\n\n\nDepTree.prototype.resolveNode = function(node, resolved, processing) {\n\n  var self = this;\n\n  resolved = resolved || [];\n  processing = processing || {};\n  var deps = this.nodes[node] || [];\n\n  processing[node] = true;\n\n  deps.forEach(function(dep) {\n    if (resolved.indexOf(dep) != -1) {\n      return;\n    }\n    if (processing[dep]) {\n      throw new Error('Circular dependency: '+dep);\n    }\n    self.resolveNode(dep, resolved, processing);\n  });\n\n  if (resolved.indexOf(node) == -1) {\n    processing[node] = false;\n    resolved.push(node);\n  }\n  return resolved;\n};\n\nDepTree.prototype.resolve = function() {\n\n  var resolved = [];\n  for (var node in this.nodes) {\n    this.resolveNode(node, resolved);\n  }\n\n  return resolved;\n\n};\n\n\nmodule.exports = DepTree;\n","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","(function (global){\n/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction arrayCopy(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayCopy;\n","/**\n * A specialized version of `_.forEach` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var baseCopy = require('./baseCopy'),\n    keys = require('../object/keys');\n\n/**\n * The base implementation of `_.assign` without support for argument juggling,\n * multiple sources, and `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return source == null\n    ? object\n    : baseCopy(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var arrayCopy = require('./arrayCopy'),\n    arrayEach = require('./arrayEach'),\n    baseAssign = require('./baseAssign'),\n    baseForOwn = require('./baseForOwn'),\n    initCloneArray = require('./initCloneArray'),\n    initCloneByTag = require('./initCloneByTag'),\n    initCloneObject = require('./initCloneObject'),\n    isArray = require('../lang/isArray'),\n    isObject = require('../lang/isObject');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\ncloneableTags[dateTag] = cloneableTags[float32Tag] =\ncloneableTags[float64Tag] = cloneableTags[int8Tag] =\ncloneableTags[int16Tag] = cloneableTags[int32Tag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[stringTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[mapTag] = cloneableTags[setTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * The base implementation of `_.clone` without support for argument juggling\n * and `this` binding `customizer` functions.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The object `value` belongs to.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates clones with source counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return arrayCopy(value, result);\n    }\n  } else {\n    var tag = objToString.call(value),\n        isFunc = tag == funcTag;\n\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return baseAssign(result, value);\n      }\n    } else {\n      return cloneableTags[tag]\n        ? initCloneByTag(value, tag, isDeep)\n        : (object ? value : {});\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == value) {\n      return stackB[length];\n    }\n  }\n  // Add the source value to the stack of traversed objects and associate it with its clone.\n  stackA.push(value);\n  stackB.push(result);\n\n  // Recursively populate clone (susceptible to call stack limits).\n  (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n    result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @returns {Object} Returns `object`.\n */\nfunction baseCopy(source, props, object) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    object[key] = source[key];\n  }\n  return object;\n}\n\nmodule.exports = baseCopy;\n","var createBaseFor = require('./createBaseFor');\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./baseFor'),\n    keys = require('../object/keys');\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var identity = require('../utility/identity');\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\nmodule.exports = bindCallback;\n","(function (global){\n/** Native method references. */\nvar ArrayBuffer = global.ArrayBuffer,\n    Uint8Array = global.Uint8Array;\n\n/**\n * Creates a clone of the given array buffer.\n *\n * @private\n * @param {ArrayBuffer} buffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction bufferClone(buffer) {\n  var result = new ArrayBuffer(buffer.byteLength),\n      view = new Uint8Array(result);\n\n  view.set(new Uint8Array(buffer));\n  return result;\n}\n\nmodule.exports = bufferClone;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9sb2Rhc2gvaW50ZXJuYWwvYnVmZmVyQ2xvbmUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIE5hdGl2ZSBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBBcnJheUJ1ZmZlciA9IGdsb2JhbC5BcnJheUJ1ZmZlcixcbiAgICBVaW50OEFycmF5ID0gZ2xvYmFsLlVpbnQ4QXJyYXk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGNsb25lIG9mIHRoZSBnaXZlbiBhcnJheSBidWZmZXIuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXlCdWZmZXJ9IGJ1ZmZlciBUaGUgYXJyYXkgYnVmZmVyIHRvIGNsb25lLlxuICogQHJldHVybnMge0FycmF5QnVmZmVyfSBSZXR1cm5zIHRoZSBjbG9uZWQgYXJyYXkgYnVmZmVyLlxuICovXG5mdW5jdGlvbiBidWZmZXJDbG9uZShidWZmZXIpIHtcbiAgdmFyIHJlc3VsdCA9IG5ldyBBcnJheUJ1ZmZlcihidWZmZXIuYnl0ZUxlbmd0aCksXG4gICAgICB2aWV3ID0gbmV3IFVpbnQ4QXJyYXkocmVzdWx0KTtcblxuICB2aWV3LnNldChuZXcgVWludDhBcnJheShidWZmZXIpKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBidWZmZXJDbG9uZTtcbiJdfQ==","var toObject = require('./toObject');\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var baseProperty = require('./baseProperty');\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n","var isNative = require('../lang/isNative');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add array properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var bufferClone = require('./bufferClone');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    stringTag = '[object String]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return bufferClone(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      var buffer = object.buffer;\n      return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      var result = new Ctor(object.source, reFlags.exec(object));\n      result.lastIndex = object.lastIndex;\n  }\n  return result;\n}\n\nmodule.exports = initCloneByTag;\n","/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  var Ctor = object.constructor;\n  if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n    Ctor = Object;\n  }\n  return new Ctor;\n}\n\nmodule.exports = initCloneObject;\n","var getLength = require('./getLength'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\nmodule.exports = isArrayLike;\n","/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n","var isArrayLike = require('./isArrayLike'),\n    isIndex = require('./isIndex'),\n    isObject = require('../lang/isObject');\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('./isIndex'),\n    isLength = require('./isLength'),\n    keysIn = require('../object/keysIn');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = !!length && isLength(length) &&\n    (isArray(object) || isArguments(object));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = shimKeys;\n","var isObject = require('../lang/isObject');\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\nmodule.exports = toObject;\n","var baseClone = require('../internal/baseClone'),\n    bindCallback = require('../internal/bindCallback'),\n    isIterateeCall = require('../internal/isIterateeCall');\n\n/**\n * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n * otherwise they are assigned by reference. If `customizer` is provided it's\n * invoked to produce the cloned values. If `customizer` returns `undefined`\n * cloning is handled by the method instead. The `customizer` is bound to\n * `thisArg` and invoked with up to three argument; (value [, index|key, object]).\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n * The enumerable properties of `arguments` objects and objects created by\n * constructors other than `Object` are cloned to plain `Object` objects. An\n * empty object is returned for uncloneable values such as functions, DOM nodes,\n * Maps, Sets, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {*} Returns the cloned value.\n * @example\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * var shallow = _.clone(users);\n * shallow[0] === users[0];\n * // => true\n *\n * var deep = _.clone(users, true);\n * deep[0] === users[0];\n * // => false\n *\n * // using a customizer callback\n * var el = _.clone(document.body, function(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(false);\n *   }\n * });\n *\n * el === document.body\n * // => false\n * el.nodeName\n * // => BODY\n * el.childNodes.length;\n * // => 0\n */\nfunction clone(value, isDeep, customizer, thisArg) {\n  if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n    isDeep = false;\n  }\n  else if (typeof isDeep == 'function') {\n    thisArg = customizer;\n    customizer = isDeep;\n    isDeep = false;\n  }\n  return typeof customizer == 'function'\n    ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 3))\n    : baseClone(value, isDeep);\n}\n\nmodule.exports = clone;\n","var isArrayLike = require('../internal/isArrayLike'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && isArrayLike(value) &&\n    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n}\n\nmodule.exports = isArguments;\n","var getNative = require('../internal/getNative'),\n    isLength = require('../internal/isLength'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\nmodule.exports = isArray;\n","var isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 which returns 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\nmodule.exports = isFunction;\n","var isFunction = require('./isFunction'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = isNative;\n","/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var getNative = require('../internal/getNative'),\n    isArrayLike = require('../internal/isArrayLike'),\n    isObject = require('../lang/isObject'),\n    shimKeys = require('../internal/shimKeys');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = getNative(Object, 'keys');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  var Ctor = object == null ? undefined : object.constructor;\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && isArrayLike(object))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\nmodule.exports = keys;\n","var isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('../internal/isIndex'),\n    isLength = require('../internal/isLength'),\n    isObject = require('../lang/isObject');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keysIn;\n","/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.plumin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.opentype = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// Run-time checking of preconditions.\n\n'use strict';\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nexports.argument = function(predicate, message) {\n    if (!predicate) {\n        throw new Error(message);\n    }\n};\n\n// Precondition function that checks if the given assertion is true.\n// If not, it will throw an error.\nexports.assert = exports.argument;\n\n},{}],2:[function(require,module,exports){\n// Drawing utility functions.\n\n'use strict';\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexports.line = line;\n\n},{}],3:[function(require,module,exports){\n// Glyph encoding\n\n'use strict';\n\nvar cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nvar cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n// This is the encoding used for fonts created from scratch.\n// It loops through all glyphs and finds the appropriate unicode value.\n// Since it's linear time, other encodings will be faster.\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    var code = c.charCodeAt(0);\n    var glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs[i];\n            for (var j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    } else {\n        return null;\n    }\n};\n\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n};\n\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    var code = s.charCodeAt(0);\n    var charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction GlyphNames(post) {\n    var i;\n    switch (post.version) {\n    case 1:\n        this.names = exports.standardNames.slice();\n        break;\n    case 2:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] < exports.standardNames.length) {\n                this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n            } else {\n                this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n            }\n        }\n\n        break;\n    case 2.5:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n        }\n\n        break;\n    case 3:\n        this.names = [];\n        break;\n    }\n}\n\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNames(font) {\n    var glyph;\n    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    var charCodes = Object.keys(glyphIndexMap);\n    for (var i = 0; i < charCodes.length; i += 1) {\n        var c = charCodes[i];\n        var glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs[glyphIndex];\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs[i];\n        if (font.cffEncoding) {\n            glyph.name = font.cffEncoding.charset[i];\n        } else {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexports.cffStandardStrings = cffStandardStrings;\nexports.cffStandardEncoding = cffStandardEncoding;\nexports.cffExpertEncoding = cffExpertEncoding;\nexports.standardNames = standardNames;\nexports.DefaultEncoding = DefaultEncoding;\nexports.CmapEncoding = CmapEncoding;\nexports.CffEncoding = CffEncoding;\nexports.GlyphNames = GlyphNames;\nexports.addGlyphNames = addGlyphNames;\n\n},{}],4:[function(require,module,exports){\n// The Font object\n\n'use strict';\n\nvar path = require('./path');\nvar sfnt = require('./tables/sfnt');\nvar encoding = require('./encoding');\n\n// A Font represents a loaded OpenType font file.\n// It contains a set of glyphs and methods to draw text on a drawing context,\n// or to get a path representing the text.\nfunction Font(options) {\n    options = options || {};\n\n    // OS X will complain if the names are empty, so we put a single space everywhere by default.\n    this.familyName = options.familyName || ' ';\n    this.styleName = options.styleName || ' ';\n    this.designer = options.designer || ' ';\n    this.designerURL = options.designerURL || ' ';\n    this.manufacturer = options.manufacturer || ' ';\n    this.manufacturerURL = options.manufacturerURL || ' ';\n    this.license = options.license || ' ';\n    this.licenseURL = options.licenseURL || ' ';\n    this.version = options.version || 'Version 0.1';\n    this.description = options.description || ' ';\n    this.copyright = options.copyright || ' ';\n    this.trademark = options.trademark || ' ';\n    this.unitsPerEm = options.unitsPerEm || 1000;\n    this.ascender = options.ascender;\n    this.descender = options.descender;\n    this.supported = true;\n    this.glyphs = options.glyphs || [];\n    this.encoding = new encoding.DefaultEncoding(this);\n    this.tables = {};\n}\n\n// Check if the font has a glyph for the given character.\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n// Convert the given character to a single glyph index.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n// Convert the given character to a single Glyph object.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyph = function(c) {\n    var glyphIndex = this.charToGlyphIndex(c);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\n// Convert the given text to a list of Glyph objects.\n// Note that there is no strict one-to-one mapping between characters and\n// glyphs, so the list of returned glyphs can be larger or smaller than the\n// length of the given string.\nFont.prototype.stringToGlyphs = function(s) {\n    var glyphs = [];\n    for (var i = 0; i < s.length; i += 1) {\n        var c = s[i];\n        glyphs.push(this.charToGlyph(c));\n    }\n\n    return glyphs;\n};\n\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\nFont.prototype.nameToGlyph = function(name) {\n    var glyphIndex = this.nametoGlyphIndex(name);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n// Retrieve the value of the kerning pair between the left glyph (or its index)\n// and the right glyph (or its index). If no kerning pair is found, return 0.\n// The kerning value gets added to the advance width when calculating the spacing\n// between glyphs.\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.getGposKerningValue;\n    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n};\n\n// Helper function that invokes the given callback for each glyph in the given text.\n// The callback gets `(glyph, x, y, fontSize, options)`.\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    if (!this.supported) {\n        return;\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || {};\n    var kerning = options.kerning === undefined ? true : options.kerning;\n    var fontScale = 1 / this.unitsPerEm * fontSize;\n    var glyphs = this.stringToGlyphs(text);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        callback(glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (kerning && i < glyphs.length - 1) {\n            var kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n    }\n};\n\n// Create a Path object that represents the given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns a Path object.\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    var fullPath = new path.Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        fullPath.extend(glyphPath);\n    });\n\n    return fullPath;\n};\n\n// Draw the text on the given drawing context.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n// Draw the points of all glyphs in the text.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Draw lines indicating important font measurements for all glyphs in the text.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Validate\nFont.prototype.validate = function() {\n    var warnings = [];\n    var _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertStringAttribute(attrName) {\n        assert(_this[attrName] && _this[attrName].trim().length > 0, 'No ' + attrName + ' specified.');\n    }\n\n    // Identification information\n    assertStringAttribute('familyName');\n    assertStringAttribute('weightName');\n    assertStringAttribute('manufacturer');\n    assertStringAttribute('copyright');\n    assertStringAttribute('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n\nFont.prototype.toBuffer = function() {\n    var sfntTable = this.toTables();\n    var bytes = sfntTable.encode();\n    var buffer = new ArrayBuffer(bytes.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n// Initiate a download of the OpenType font.\nFont.prototype.download = function() {\n    var fileName = this.familyName.replace(/\\s/g, '') + '-' + this.styleName + '.otf';\n    var buffer = this.toBuffer();\n\n    window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n    window.requestFileSystem(window.TEMPORARY, buffer.byteLength, function(fs) {\n        fs.root.getFile(fileName, {create: true}, function(fileEntry) {\n            fileEntry.createWriter(function(writer) {\n                var dataView = new DataView(buffer);\n                var blob = new Blob([dataView], {type: 'font/opentype'});\n                writer.write(blob);\n\n                writer.addEventListener('writeend', function() {\n                    // Navigating to the file will download it.\n                    location.href = fileEntry.toURL();\n                }, false);\n            });\n        });\n    },\n\n    function(err) {\n        throw err;\n    });\n};\n\nexports.Font = Font;\n\n},{\"./encoding\":3,\"./path\":8,\"./tables/sfnt\":23}],5:[function(require,module,exports){\n// The Glyph object\n\n'use strict';\n\nvar check = require('./check');\nvar draw = require('./draw');\nvar path = require('./path');\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\nfunction Glyph(options) {\n    this.font = options.font || null;\n    this.index = options.index || 0;\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n    this.xMin = options.xMin || 0;\n    this.yMin = options.yMin || 0;\n    this.xMax = options.xMax || 0;\n    this.yMax = options.yMax || 0;\n    this.advanceWidth = options.advanceWidth || 0;\n    this.path = options.path || null;\n}\n\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n// Convert the glyph to a Path we can draw on a drawing context.\n//\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.getPath = function(x, y, fontSize) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n    var p = new path.Path();\n    var commands = this.path.commands;\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                               x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                      x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n                      x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n// Split the glyph into contours.\n// This function is here for backwards compatibility, and to\n// provide raw access to the TrueType glyph outlines.\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < this.points.length; i += 1) {\n        var pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n// Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\nGlyph.prototype.getMetrics = function() {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: 0\n    };\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// Draw the glyph on the given context.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.draw = function(ctx, x, y, fontSize) {\n    this.getPath(x, y, fontSize).draw(ctx);\n};\n\n// Draw the points of the glyph.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n\n    function drawCircles(l, x, y, scale) {\n        var PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (var j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n\n    var blueCircles = [];\n    var redCircles = [];\n    var path = this.path;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n// Draw lines indicating important font measurements.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    var scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (this.xMin * scale), -10000, x + (this.xMin * scale), 10000);\n    draw.line(ctx, x + (this.xMax * scale), -10000, x + (this.xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-this.yMin * scale), 10000, y + (-this.yMin * scale));\n    draw.line(ctx, -10000, y + (-this.yMax * scale), 10000, y + (-this.yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (this.advanceWidth * scale), -10000, x + (this.advanceWidth * scale), 10000);\n};\n\nexports.Glyph = Glyph;\n\n},{\"./check\":1,\"./draw\":2,\"./path\":8}],6:[function(require,module,exports){\n// opentype.js\n// https://github.com/nodebox/opentype.js\n// (c) 2014 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global ArrayBuffer, DataView, Uint8Array, XMLHttpRequest  */\n\n'use strict';\n\nvar encoding = require('./encoding');\nvar _font = require('./font');\nvar glyph = require('./glyph');\nvar parse = require('./parse');\nvar path = require('./path');\n\nvar cmap = require('./tables/cmap');\nvar cff = require('./tables/cff');\nvar glyf = require('./tables/glyf');\nvar gpos = require('./tables/gpos');\nvar head = require('./tables/head');\nvar hhea = require('./tables/hhea');\nvar hmtx = require('./tables/hmtx');\nvar kern = require('./tables/kern');\nvar loca = require('./tables/loca');\nvar maxp = require('./tables/maxp');\nvar _name = require('./tables/name');\nvar os2 = require('./tables/os2');\nvar post = require('./tables/post');\n\n// File loaders /////////////////////////////////////////////////////////\n\n// Convert a Node.js Buffer to an ArrayBuffer\nfunction toArrayBuffer(buffer) {\n    var arrayBuffer = new ArrayBuffer(buffer.length);\n    var data = new Uint8Array(arrayBuffer);\n    for (var i = 0; i < buffer.length; i += 1) {\n        data[i] = buffer[i];\n    }\n\n    return arrayBuffer;\n}\n\nfunction loadFromFile(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, toArrayBuffer(buffer));\n    });\n}\n\nfunction loadFromUrl(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.status !== 200) {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n\n        return callback(null, request.response);\n    };\n\n    request.send();\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n// Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n// If the file could not be parsed (most likely because it contains Postscript outlines)\n// we return an empty Font object with the `supported` flag set to `false`.\nfunction parseBuffer(buffer) {\n    var indexToLocFormat;\n    var hmtxOffset;\n    var glyfOffset;\n    var locaOffset;\n    var cffOffset;\n    var kernOffset;\n    var gposOffset;\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n\n    var font = new _font.Font();\n    var data = new DataView(buffer, 0);\n\n    var version = parse.getFixed(data, 0);\n    if (version === 1.0) {\n        font.outlinesFormat = 'truetype';\n    } else {\n        version = parse.getTag(data, 0);\n        if (version === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType version ' + version);\n        }\n    }\n\n    var numTables = parse.getUShort(data, 4);\n\n    // Offset into the table records.\n    var p = 12;\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var offset = parse.getULong(data, p + 8);\n        switch (tag) {\n        case 'cmap':\n            font.tables.cmap = cmap.parse(data, offset);\n            font.encoding = new encoding.CmapEncoding(font.tables.cmap);\n            if (!font.encoding) {\n                font.supported = false;\n            }\n\n            break;\n        case 'head':\n            font.tables.head = head.parse(data, offset);\n            font.unitsPerEm = font.tables.head.unitsPerEm;\n            indexToLocFormat = font.tables.head.indexToLocFormat;\n            break;\n        case 'hhea':\n            font.tables.hhea = hhea.parse(data, offset);\n            font.ascender = font.tables.hhea.ascender;\n            font.descender = font.tables.hhea.descender;\n            font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n            break;\n        case 'hmtx':\n            hmtxOffset = offset;\n            break;\n        case 'maxp':\n            font.tables.maxp = maxp.parse(data, offset);\n            font.numGlyphs = font.tables.maxp.numGlyphs;\n            break;\n        case 'name':\n            font.tables.name = _name.parse(data, offset);\n            font.familyName = font.tables.name.fontFamily;\n            font.styleName = font.tables.name.fontSubfamily;\n            break;\n        case 'OS/2':\n            font.tables.os2 = os2.parse(data, offset);\n            break;\n        case 'post':\n            font.tables.post = post.parse(data, offset);\n            font.glyphNames = new encoding.GlyphNames(font.tables.post);\n            break;\n        case 'glyf':\n            glyfOffset = offset;\n            break;\n        case 'loca':\n            locaOffset = offset;\n            break;\n        case 'CFF ':\n            cffOffset = offset;\n            break;\n        case 'kern':\n            kernOffset = offset;\n            break;\n        case 'GPOS':\n            gposOffset = offset;\n            break;\n        }\n        p += 16;\n    }\n\n    if (glyfOffset && locaOffset) {\n        var shortVersion = indexToLocFormat === 0;\n        var locaTable = loca.parse(data, locaOffset, font.numGlyphs, shortVersion);\n        font.glyphs = glyf.parse(data, glyfOffset, locaTable, font);\n        hmtx.parse(data, hmtxOffset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n        encoding.addGlyphNames(font);\n    } else if (cffOffset) {\n        cff.parse(data, cffOffset, font);\n        encoding.addGlyphNames(font);\n    } else {\n        font.supported = false;\n    }\n\n    if (font.supported) {\n        if (kernOffset) {\n            font.kerningPairs = kern.parse(data, kernOffset);\n        } else {\n            font.kerningPairs = {};\n        }\n\n        if (gposOffset) {\n            gpos.parse(data, gposOffset, font);\n        }\n    }\n\n    return font;\n}\n\n// Asynchronously load the font from a URL or a filesystem. When done, call the callback\n// with two arguments `(err, font)`. The `err` will be null on success,\n// the `font` is a Font object.\n//\n// We use the node.js callback convention so that\n// opentype.js can integrate with frameworks like async.js.\nfunction load(url, callback) {\n    var isNode = typeof window === 'undefined';\n    var loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function(err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n\n        var font = parseBuffer(arrayBuffer);\n        if (!font.supported) {\n            return callback('Font is not supported (is this a Postscript font?)');\n        }\n\n        return callback(null, font);\n    });\n}\n\nexports._parse = parse;\nexports.Font = _font.Font;\nexports.Glyph = glyph.Glyph;\nexports.Path = path.Path;\nexports.parse = parseBuffer;\nexports.load = load;\n\n},{\"./encoding\":3,\"./font\":4,\"./glyph\":5,\"./parse\":7,\"./path\":8,\"./tables/cff\":10,\"./tables/cmap\":11,\"./tables/glyf\":12,\"./tables/gpos\":13,\"./tables/head\":14,\"./tables/hhea\":15,\"./tables/hmtx\":16,\"./tables/kern\":17,\"./tables/loca\":18,\"./tables/maxp\":19,\"./tables/name\":20,\"./tables/os2\":21,\"./tables/post\":22,\"fs\":undefined}],7:[function(require,module,exports){\n// Parsing utility functions\n\n'use strict';\n\n// Retrieve an unsigned byte from the DataView.\nexports.getByte = function getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n};\n\nexports.getCard8 = exports.getByte;\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getUShort = function(dataView, offset) {\n    return dataView.getUint16(offset, false);\n};\n\nexports.getCard16 = exports.getUShort;\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getShort = function(dataView, offset) {\n    return dataView.getInt16(offset, false);\n};\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nexports.getULong = function(dataView, offset) {\n    return dataView.getUint32(offset, false);\n};\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nexports.getFixed = function(dataView, offset) {\n    var decimal = dataView.getInt16(offset, false);\n    var fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n};\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nexports.getTag = function(dataView, offset) {\n    var tag = '';\n    for (var i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n};\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nexports.getOffset = function(dataView, offset, offSize) {\n    var v = 0;\n    for (var i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n};\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nexports.getBytes = function(dataView, startOffset, endOffset) {\n    var bytes = [];\n    for (var i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n};\n\n// Convert the list of bytes to a string.\nexports.bytesToString = function(bytes) {\n    var s = '';\n    for (var i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n};\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    var offsets = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = exports.getUShort(dataView, offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\nParser.prototype.parseString = function(length) {\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    var string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\nParser.prototype.parseLongDateTime = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v / 65536;\n};\n\nParser.prototype.parseVersion = function() {\n    var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // This returns the correct number if minor = 0xN000 where N is 0-9\n    var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    return major + minor / 0x1000 / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\nexports.Parser = Parser;\n\n},{}],8:[function(require,module,exports){\n// Geometric objects\n\n'use strict';\n\n// A bézier path containing a set of path commands similar to a SVG path.\n// Paths can be drawn on a context using `draw`.\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n// Add the given path or list of commands to the commands of this path.\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n// Draw the path to a 2D context.\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n// Convert the Path to a string of path data instructions\n// See http://www.w3.org/TR/SVG/paths.html#PathData\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n// Convert the path to a SVG <path> element, as a string.\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toSVG = function(decimalPlaces) {\n    var svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill & this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\nexports.Path = Path;\n\n},{}],9:[function(require,module,exports){\n// Table metadata\n\n'use strict';\n\nvar check = require('./check');\nvar encode = require('./types').encode;\nvar sizeOf = require('./types').sizeOf;\n\nfunction Table(tableName, fields, options) {\n    var i;\n    for (i = 0; i < fields.length; i += 1) {\n        var field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        var optionKeys = Object.keys(options);\n        for (i = 0; i < optionKeys.length; i += 1) {\n            var k = optionKeys[i];\n            var v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\nTable.prototype.sizeOf = function() {\n    var v = 0;\n    for (var i = 0; i < this.fields.length; i += 1) {\n        var field = this.fields[i];\n        var value = this[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        if (typeof value.sizeOf === 'function') {\n            v += value.sizeOf();\n        } else {\n            var sizeOfFunction = sizeOf[field.type];\n            check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n            v += sizeOfFunction(value);\n        }\n    }\n\n    return v;\n};\n\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\nexports.Table = Table;\n\n},{\"./check\":1,\"./types\":24}],10:[function(require,module,exports){\n// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\nvar table = require('../table');\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (var i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    //var i, objectOffset, endOffset;\n    var offsets = [];\n    var objects = [];\n    var count = parse.getCard16(data, start);\n    var i;\n    var objectOffset;\n    var endOffset;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        var pos = start + 3;\n        for (i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (i = 0; i < offsets.length - 1; i += 1) {\n        var value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s = '';\n    var eof = 15;\n    var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        var b = parser.parseByte();\n        var n1 = b >> 4;\n        var n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1;\n    var b2;\n    var b3;\n    var b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o = {};\n    for (var i = 0; i < entries.length; i += 1) {\n        var key = entries[i][0];\n        var values = entries[i][1];\n        var value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key)) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    var parser = new parse.Parser(data, start);\n    var entries = [];\n    var operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        var op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = encoding.cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var newDict = {};\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (var i = 0; i < meta.length; i += 1) {\n        var m = meta[i];\n        var value = dict[m.op];\n        if (value === undefined) {\n            value = m.value !== undefined ? m.value : null;\n        }\n\n        if (m.type === 'SID') {\n            value = getCFFString(strings, value);\n        }\n\n        newDict[m.name] = value;\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n];\n\nvar PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var i;\n    var sid;\n    var count;\n    var parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    var charset = ['.notdef'];\n\n    var format = parser.parseCard8();\n    if (format === 0) {\n        for (i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var i;\n    var code;\n    var enc = {};\n    var parser = new parse.Parser(data, start);\n    var format = parser.parseCard8();\n    if (format === 0) {\n        var nCodes = parser.parseCard8();\n        for (i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        var nRanges = parser.parseCard8();\n        code = 1;\n        for (i = 0; i < nRanges; i += 1) {\n            var first = parser.parseCard8();\n            var nLeft = parser.parseCard8();\n            for (var j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new encoding.CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(code, font, index) {\n    var c1x;\n    var c1y;\n    var c2x;\n    var c2y;\n    var p = new path.Path();\n    var stack = [];\n    var nStems = 0;\n    var haveWidth = false;\n    var width = font.defaultWidthX;\n    var open = false;\n    var x = 0;\n    var y = 0;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + font.nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var b1;\n        var b2;\n        var b3;\n        var b4;\n        var codeIndex;\n        var subrCode;\n        var jpx;\n        var jpy;\n        var c3x;\n        var c3y;\n        var c4x;\n        var c4y;\n\n        var i = 0;\n        while (i < code.length) {\n            var v = code[i];\n            i += 1;\n            switch (v) {\n            case 1: // hstem\n                parseStems();\n                break;\n            case 3: // vstem\n                parseStems();\n                break;\n            case 4: // vmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                newContour(x, y);\n                break;\n            case 5: // rlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 6: // hlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 7: // vlineto\n                while (stack.length > 0) {\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 8: // rrcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 10: // callsubr\n                codeIndex = stack.pop() + font.subrsBias;\n                subrCode = font.subrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 11: // return\n                return;\n            case 12: // flex operators\n                v = code[i];\n                i += 1;\n                switch (v) {\n                case 35: // flex\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    y = c4y + stack.shift();      // dy6\n                    stack.shift();                // flex depth\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 34: // hflex\n                    // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y;                      // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = y;                      // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 36: // hflex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 37: // flex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                        x = c4x + stack.shift();\n                    } else {\n                        y = c4y + stack.shift();\n                    }\n\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                default:\n                    console.log('Glyph ' + index + ': unknown operator ' + 1200 + v);\n                    stack.length = 0;\n                }\n                break;\n            case 14: // endchar\n                if (stack.length > 0 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                if (open) {\n                    p.closePath();\n                    open = false;\n                }\n\n                break;\n            case 18: // hstemhm\n                parseStems();\n                break;\n            case 19: // hintmask\n            case 20: // cntrmask\n                parseStems();\n                i += (nStems + 7) >> 3;\n                break;\n            case 21: // rmoveto\n                if (stack.length > 2 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 22: // hmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 23: // vstemhm\n                parseStems();\n                break;\n            case 24: // rcurveline\n                while (stack.length > 2) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                x += stack.shift();\n                y += stack.shift();\n                p.lineTo(x, y);\n                break;\n            case 25: // rlinecurve\n                while (stack.length > 6) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                break;\n            case 26: // vvcurveto\n                if (stack.length % 2) {\n                    x += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x;\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 27: // hhcurveto\n                if (stack.length % 2) {\n                    y += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y;\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 28: // shortint\n                b1 = code[i];\n                b2 = code[i + 1];\n                stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                i += 2;\n                break;\n            case 29: // callgsubr\n                codeIndex = stack.pop() + font.gsubrsBias;\n                subrCode = font.gsubrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 30: // vhcurveto\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 31: // hvcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            default:\n                if (v < 32) {\n                    console.log('Glyph ' + index + ': unknown operator ' + v);\n                } else if (v < 247) {\n                    stack.push(v - 139);\n                } else if (v < 251) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push((v - 247) * 256 + b1 + 108);\n                } else if (v < 255) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push(-(v - 251) * 256 - b1 - 108);\n                } else {\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    b3 = code[i + 2];\n                    b4 = code[i + 3];\n                    i += 4;\n                    stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                }\n            }\n        }\n    }\n\n    parse(code);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.path = p;\n    glyph.advanceWidth = width;\n    return glyph;\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    font.tables.cff = {};\n    var header = parseCFFHeader(data, start);\n    var nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    var stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n    var topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n    font.tables.cff.topDict = topDict;\n\n    var privateDictOffset = start + topDict['private'][1];\n    var privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        var subrOffset = privateDictOffset + privateDict.subrs;\n        var subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    var charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    var charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) { // Standard encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) { // Expert encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = [];\n    for (var i = 0; i < font.nGlyphs; i += 1) {\n        var charString = charStringsIndex.objects[i];\n        font.glyphs.push(parseCFFCharstring(charString, font, i));\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    var sid;\n\n    // Is the string in the CFF standard strings?\n    var i = encoding.cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + encoding.cffStandardStrings.length;\n    } else {\n        sid = encoding.cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Table('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    var t = new table.Table('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (var i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    var m = {};\n    for (var i = 0; i < meta.length; i += 1) {\n        var entry = meta[i];\n        var value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    var t = new table.Table('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    var t = new table.Table('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    var t = new table.Table('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (var i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Table('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    var t = new table.Table('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (var i = 0; i < glyphNames.length; i += 1) {\n        var glyphName = glyphNames[i];\n        var glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    var ops = [];\n    var path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    var x = 0;\n    var y = 0;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var dx;\n        var dy;\n        var cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            var _13 = 1 / 3;\n            var _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            var dx1 = Math.round(cmd.x1 - x);\n            var dy1 = Math.round(cmd.y1 - y);\n            var dx2 = Math.round(cmd.x2 - cmd.x1);\n            var dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    var t = new table.Table('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    var t = new table.Table('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makePrivateDictIndex(privateDict) {\n    var t = new table.Table('Private DICT INDEX', [\n        {name: 'privateDicts', type: 'INDEX', value: []}\n    ]);\n    t.privateDicts = [{name: 'privateDict_0', type: 'TABLE', value: privateDict}];\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    var t = new table.Table('CFF ', [\n        {name: 'header', type: 'TABLE'},\n        {name: 'nameIndex', type: 'TABLE'},\n        {name: 'topDictIndex', type: 'TABLE'},\n        {name: 'stringIndex', type: 'TABLE'},\n        {name: 'globalSubrIndex', type: 'TABLE'},\n        {name: 'charsets', type: 'TABLE'},\n        {name: 'charStringsIndex', type: 'TABLE'},\n        {name: 'privateDictIndex', type: 'TABLE'}\n    ]);\n\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    var attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    var privateAttrs = {};\n\n    var glyphNames = [];\n\n    // Skip first glyph (.notdef)\n    for (var i = 1; i < glyphs.length; i += 1) {\n        glyphNames.push(glyphs[i].name);\n    }\n\n    var strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    var topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    var privateDict = makePrivateDict(privateAttrs, strings);\n    t.privateDictIndex = makePrivateDictIndex(privateDict);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    var startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexports.parse = parseCFFTable;\nexports.make = makeCFFTable;\n\n},{\"../encoding\":3,\"../glyph\":5,\"../parse\":7,\"../path\":8,\"../table\":9}],11:[function(require,module,exports){\n// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var i;\n    var cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 3\" table. This is a Windows format.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    var offset = -1;\n    for (i = 0; i < cmap.numTables; i += 1) {\n        var platformId = parse.getUShort(data, start + 4 + (i * 8));\n        var encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support, so return null.\n        // This font will be marked as unsupported.\n        return null;\n    }\n\n    var p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n    check.argument(cmap.format === 4, 'Only format 4 cmap tables are supported.');\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    var segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n\n    var endCountParser = new parse.Parser(data, start + offset + 14);\n    var startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    var idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    var idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    var glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (i = 0; i < segCount - 1; i += 1) {\n        var glyphIndex;\n        var endCount = endCountParser.parseUShort();\n        var startCount = startCountParser.parseUShort();\n        var idDelta = idDeltaParser.parseShort();\n        var idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (var c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\nfunction makeCmapTable(glyphs) {\n    var i;\n    var t = new table.Table('cmap', [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: 1},\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: 12},\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        for (var j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function(a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    var segCount;\n    segCount = t.segments.length;\n    t.segCountX2 = segCount * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    // Set up parallel segment arrays.\n    var endCounts = [];\n    var startCounts = [];\n    var idDeltas = [];\n    var idRangeOffsets = [];\n    var glyphIds = [];\n\n    for (i = 0; i < segCount; i += 1) {\n        var segment = t.segments[i];\n        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n        if (segment.glyphId !== undefined) {\n            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n        }\n    }\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    return t;\n}\n\nexports.parse = parseCmapTable;\nexports.make = makeCmapTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],12:[function(require,module,exports){\n// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\n'use strict';\n\nvar check = require('../check');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(data, start, index, font) {\n    //var p, glyph, flag, i, j, flags,\n    //    endPointIndices, numberOfCoordinates, repeatCount, points, point, px, py,\n    //    component, moreComponents;\n    var p = new parse.Parser(data, start);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.numberOfContours = p.parseShort();\n    glyph.xMin = p.parseShort();\n    glyph.yMin = p.parseShort();\n    glyph.xMax = p.parseShort();\n    glyph.yMax = p.parseShort();\n    var flags;\n    var flag;\n    if (glyph.numberOfContours > 0) {\n        var i;\n        // This glyph is not a composite.\n        var endPointIndices = glyph.endPointIndices = [];\n        for (i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                var repeatCount = p.parseByte();\n                for (var j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            var points = [];\n            var point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                var px = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                var py = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        var moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            var component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                component.dx = p.parseShort();\n                component.dy = p.parseShort();\n            } else {\n                // The arguments are bytes\n                component.dx = p.parseChar();\n                component.dy = p.parseChar();\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n    }\n\n    return glyph;\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        var newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p = new path.Path();\n    if (!points) {\n        return p;\n    }\n\n    var contours = getContours(points);\n    for (var i = 0; i < contours.length; i += 1) {\n        var contour = contours[i];\n        var firstPt = contour[0];\n        var lastPt = contour[contour.length - 1];\n        var curvePt;\n        var realFirstPoint;\n        if (firstPt.onCurve) {\n            curvePt = null;\n            // The first point will be consumed by the moveTo command,\n            // so skip it in the loop.\n            realFirstPoint = true;\n        } else {\n            if (lastPt.onCurve) {\n                // If the first point is off-curve and the last point is on-curve,\n                // start at the last point.\n                firstPt = lastPt;\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n            }\n\n            curvePt = firstPt;\n            // The first point is synthesized, so don't skip the real first point.\n            realFirstPoint = false;\n        }\n\n        p.moveTo(firstPt.x, firstPt.y);\n\n        for (var j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n            var pt = contour[j];\n            var prevPt = j === 0 ? firstPt : contour[j - 1];\n            if (prevPt.onCurve && pt.onCurve) {\n                // This is a straight line.\n                p.lineTo(pt.x, pt.y);\n            } else if (prevPt.onCurve && !pt.onCurve) {\n                curvePt = pt;\n            } else if (!prevPt.onCurve && !pt.onCurve) {\n                var midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n                p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n                curvePt = pt;\n            } else if (!prevPt.onCurve && pt.onCurve) {\n                // Previous point off-curve, this point on-curve.\n                p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                curvePt = null;\n            } else {\n                throw new Error('Invalid state.');\n            }\n        }\n\n        if (firstPt !== lastPt) {\n            // Connect the last and first points\n            if (curvePt) {\n                p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            } else {\n                p.lineTo(firstPt.x, firstPt.y);\n            }\n        }\n    }\n\n    p.closePath();\n    return p;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    var glyphs = [];\n    var i;\n    // The last element of the loca table is invalid.\n    for (i = 0; i < loca.length - 1; i += 1) {\n        var offset = loca[i];\n        var nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(parseGlyph(data, start + offset, i, font));\n        } else {\n            glyphs.push(new _glyph.Glyph({font: font, index: i}));\n        }\n    }\n    // Go over the glyphs again, resolving the composite glyphs.\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        if (glyph.isComposite) {\n            for (var j = 0; j < glyph.components.length; j += 1) {\n                var component = glyph.components[j];\n                var componentGlyph = glyphs[component.glyphIndex];\n                if (componentGlyph.points) {\n                    var transformedPoints = transformPoints(componentGlyph.points, component);\n                    glyph.points = glyph.points.concat(transformedPoints);\n                }\n            }\n        }\n\n        glyph.path = getPath(glyph.points);\n    }\n\n    return glyphs;\n}\n\nexports.parse = parseGlyfTable;\n\n},{\"../check\":1,\"../glyph\":5,\"../parse\":7,\"../path\":8}],13:[function(require,module,exports){\n// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n// These lists are unused by now, this function is just the basis for a real parsing.\nfunction parseTaggedListTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var n = p.parseUShort();\n    var list = [];\n    for (var i = 0; i < n; i++) {\n        list[p.parseTag()] = { offset: p.parseUShort() };\n    }\n\n    return list;\n}\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// Format 1 is a simple list of glyph ids,\n// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\nfunction parseCoverageTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    var count =  p.parseUShort();\n    if (format === 1) {\n        return p.parseUShortList(count);\n    }\n    else if (format === 2) {\n        var coverage = [];\n        for (; count--;) {\n            var begin = p.parseUShort();\n            var end = p.parseUShort();\n            var index = p.parseUShort();\n            for (var i = begin; i <= end; i++) {\n                coverage[index++] = i;\n            }\n        }\n\n        return coverage;\n    }\n}\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// Returns a function that gets a class value from a glyph ID.\nfunction parseClassDefTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    if (format === 1) {\n        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n        var startGlyph = p.parseUShort();\n        var glyphCount = p.parseUShort();\n        var classes = p.parseUShortList(glyphCount);\n        return function(glyphID) {\n            return classes[glyphID - startGlyph] || 0;\n        };\n    }\n    else if (format === 2) {\n        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n        var rangeCount = p.parseUShort();\n        var startGlyphs = [];\n        var endGlyphs = [];\n        var classValues = [];\n        for (var i = 0; i < rangeCount; i++) {\n            startGlyphs[i] = p.parseUShort();\n            endGlyphs[i] = p.parseUShort();\n            classValues[i] = p.parseUShort();\n        }\n\n        return function(glyphID) {\n            var l = 0;\n            var r = startGlyphs.length - 1;\n            while (l < r) {\n                var c = (l + r + 1) >> 1;\n                if (glyphID < startGlyphs[c]) {\n                    r = c - 1;\n                } else {\n                    l = c;\n                }\n            }\n\n            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                return classValues[l] || 0;\n            }\n\n            return 0;\n        };\n    }\n}\n\n// Parse a pair adjustment positioning subtable, format 1 or format 2\n// The subtable is returned in the form of a lookup function.\nfunction parsePairPosSubTable(data, start) {\n    var p = new parse.Parser(data, start);\n    // This part is common to format 1 and format 2 subtables\n    var format = p.parseUShort();\n    var coverageOffset = p.parseUShort();\n    var coverage = parseCoverageTable(data, start + coverageOffset);\n    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n    // Only valueFormat1=4 and valueFormat2=0 is supported.\n    var valueFormat1 = p.parseUShort();\n    var valueFormat2 = p.parseUShort();\n    var value1;\n    var value2;\n    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n    var sharedPairSets = {};\n    if (format === 1) {\n        // Pair Positioning Adjustment: Format 1\n        var pairSetCount = p.parseUShort();\n        var pairSet = [];\n        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n        var pairSetOffsets = p.parseOffset16List(pairSetCount);\n        for (var firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n            var pairSetOffset = pairSetOffsets[firstGlyph];\n            var sharedPairSet = sharedPairSets[pairSetOffset];\n            if (!sharedPairSet) {\n                // Parse a pairset table in a pair adjustment subtable format 1\n                sharedPairSet = {};\n                p.relativeOffset = pairSetOffset;\n                var pairValueCount = p.parseUShort();\n                for (; pairValueCount--;) {\n                    var secondGlyph = p.parseUShort();\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) value2 = p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    sharedPairSet[secondGlyph] = value1;\n                }\n            }\n\n            pairSet[coverage[firstGlyph]] = sharedPairSet;\n        }\n\n        return function(leftGlyph, rightGlyph) {\n            var pairs = pairSet[leftGlyph];\n            if (pairs) return pairs[rightGlyph];\n        };\n    }\n    else if (format === 2) {\n        // Pair Positioning Adjustment: Format 2\n        var classDef1Offset = p.parseUShort();\n        var classDef2Offset = p.parseUShort();\n        var class1Count = p.parseUShort();\n        var class2Count = p.parseUShort();\n        var getClass1 = parseClassDefTable(data, start + classDef1Offset);\n        var getClass2 = parseClassDefTable(data, start + classDef2Offset);\n\n        // Parse kerning values by class pair.\n        var kerningMatrix = [];\n        for (var i = 0; i < class1Count; i++) {\n            var kerningRow = kerningMatrix[i] = [];\n            for (var j = 0; j < class2Count; j++) {\n                if (valueFormat1) value1 = p.parseShort();\n                if (valueFormat2) value2 = p.parseShort();\n                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                // so value1 is the XAdvance and value2 is empty.\n                kerningRow[j] = value1;\n            }\n        }\n\n        // Convert coverage list to a hash\n        var covered = {};\n        for (i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\n        // Get the kerning value for a specific glyph pair.\n        return function(leftGlyph, rightGlyph) {\n            if (!covered[leftGlyph]) return;\n            var class1 = getClass1(leftGlyph);\n            var class2 = getClass2(rightGlyph);\n            var kerningRow = kerningMatrix[class1];\n\n            if (kerningRow) {\n                return kerningRow[class2];\n            }\n        };\n    }\n}\n\n// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\nfunction parseLookupTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var lookupType = p.parseUShort();\n    var lookupFlag = p.parseUShort();\n    var useMarkFilteringSet = lookupFlag & 0x10;\n    var subTableCount = p.parseUShort();\n    var subTableOffsets = p.parseOffset16List(subTableCount);\n    var table = {\n        lookupType: lookupType,\n        lookupFlag: lookupFlag,\n        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n    };\n    // LookupType 2, Pair adjustment\n    if (lookupType === 2) {\n        var subtables = [];\n        for (var i = 0; i < subTableCount; i++) {\n            subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n        }\n        // Return a function which finds the kerning values in the subtables.\n        table.getKerningValue = function(leftGlyph, rightGlyph) {\n            for (var i = subtables.length; i--;) {\n                var value = subtables[i](leftGlyph, rightGlyph);\n                if (value !== undefined) return value;\n            }\n\n            return 0;\n        };\n    }\n\n    return table;\n}\n\n// Parse the `GPOS` table which contains, among other things, kerning pairs.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\nfunction parseGposTable(data, start, font) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseFixed();\n    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n    // ScriptList and FeatureList - ignored for now\n    parseTaggedListTable(data, start + p.parseUShort());\n    // 'kern' is the feature we are looking for.\n    parseTaggedListTable(data, start + p.parseUShort());\n\n    // LookupList\n    var lookupListOffset = p.parseUShort();\n    p.relativeOffset = lookupListOffset;\n    var lookupCount = p.parseUShort();\n    var lookupTableOffsets = p.parseOffset16List(lookupCount);\n    var lookupListAbsoluteOffset = start + lookupListOffset;\n    for (var i = 0; i < lookupCount; i++) {\n        var table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n    }\n}\n\nexports.parse = parseGposTable;\n\n},{\"../check\":1,\"../parse\":7}],14:[function(require,module,exports){\n// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {};\n    var p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();     // 50\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: 0},\n        {name: 'modified', type: 'LONGDATETIME', value: 0},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHeadTable;\nexports.make = makeHeadTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],15:[function(require,module,exports){\n// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {};\n    var p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHheaTable;\nexports.make = makeHheaTable;\n\n},{\"../parse\":7,\"../table\":9}],16:[function(require,module,exports){\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    var advanceWidth;\n    var leftSideBearing;\n    var p = new parse.Parser(data, start);\n    for (var i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        var glyph = glyphs[i];\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    var t = new table.Table('hmtx', []);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var advanceWidth = glyph.advanceWidth || 0;\n        var leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexports.parse = parseHmtxTable;\nexports.make = makeHmtxTable;\n\n},{\"../parse\":7,\"../table\":9}],17:[function(require,module,exports){\n// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var pairs = {};\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseUShort();\n    check.argument(tableVersion === 0, 'Unsupported kern table version.');\n    // Skip nTables.\n    p.skip('uShort', 1);\n    var subTableVersion = p.parseUShort();\n    check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subTableLength, subTableCoverage\n    p.skip('uShort', 2);\n    var nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (var i = 0; i < nPairs; i += 1) {\n        var leftIndex = p.parseUShort();\n        var rightIndex = p.parseUShort();\n        var value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n\n    return pairs;\n}\n\nexports.parse = parseKernTable;\n\n},{\"../check\":1,\"../parse\":7}],18:[function(require,module,exports){\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\n'use strict';\n\nvar parse = require('../parse');\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p = new parse.Parser(data, start);\n    var parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    var glyphOffsets = [];\n    for (var i = 0; i < numGlyphs + 1; i += 1) {\n        var glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexports.parse = parseLocaTable;\n\n},{\"../parse\":7}],19:[function(require,module,exports){\n// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {};\n    var p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexports.parse = parseMaxpTable;\nexports.make = makeMaxpTable;\n\n},{\"../parse\":7,\"../table\":9}],20:[function(require,module,exports){\n// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\n'use strict';\n\nvar encode = require('../types').encode;\nvar parse = require('../parse');\nvar table = require('../table');\n\n// NameIDs for the name table.\nvar nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'licence',                // 13\n    'licenceURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\n// Parse the naming `name` table\n// Only Windows Unicode English names are supported.\n// Format 1 additional fields are not supported\nfunction parseNameTable(data, start) {\n    var name = {};\n    var p = new parse.Parser(data, start);\n    name.format = p.parseUShort();\n    var count = p.parseUShort();\n    var stringOffset = p.offset + p.parseUShort();\n    var unknownCount = 0;\n    for (var i = 0; i < count; i++) {\n        var platformID = p.parseUShort();\n        var encodingID = p.parseUShort();\n        var languageID = p.parseUShort();\n        var nameID = p.parseUShort();\n        var property = nameTableNames[nameID];\n        var byteLength = p.parseUShort();\n        var offset = p.parseUShort();\n        // platformID - encodingID - languageID standard combinations :\n        // 1 - 0 - 0 : Macintosh, Roman, English\n        // 3 - 1 - 0x409 : Windows, Unicode BMP (UCS-2), en-US\n        if (platformID === 3 && encodingID === 1 && languageID === 0x409) {\n            var codePoints = [];\n            var length = byteLength / 2;\n            for (var j = 0; j < length; j++, offset += 2) {\n                codePoints[j] = parse.getShort(data, stringOffset + offset);\n            }\n\n            var str = String.fromCharCode.apply(null, codePoints);\n            if (property) {\n                name[property] = str;\n            }\n            else {\n                unknownCount++;\n                name['unknown' + unknownCount] = str;\n            }\n        }\n\n    }\n\n    if (name.format === 1) {\n        name.langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Table('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\nfunction addMacintoshNameRecord(t, recordID, s, offset) {\n    // Macintosh, Roman, English\n    var stringBytes = encode.STRING(s);\n    t.records.push(makeNameRecord(1, 0, 0, recordID, stringBytes.length, offset));\n    t.strings.push(stringBytes);\n    offset += stringBytes.length;\n    return offset;\n}\n\nfunction addWindowsNameRecord(t, recordID, s, offset) {\n    // Windows, Unicode BMP (UCS-2), US English\n    var utf16Bytes = encode.UTF16(s);\n    t.records.push(makeNameRecord(3, 1, 0x0409, recordID, utf16Bytes.length, offset));\n    t.strings.push(utf16Bytes);\n    offset += utf16Bytes.length;\n    return offset;\n}\n\nfunction makeNameTable(options) {\n    var t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: 0},\n        {name: 'stringOffset', type: 'USHORT', value: 0}\n    ]);\n    t.records = [];\n    t.strings = [];\n    var offset = 0;\n    var i;\n    var s;\n    // Add Macintosh records first\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addMacintoshNameRecord(t, i, s, offset);\n        }\n    }\n    // Then add Windows records\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addWindowsNameRecord(t, i, s, offset);\n        }\n    }\n\n    t.count = t.records.length;\n    t.stringOffset = 6 + t.count * 12;\n    for (i = 0; i < t.records.length; i += 1) {\n        t.fields.push({name: 'record_' + i, type: 'TABLE', value: t.records[i]});\n    }\n\n    for (i = 0; i < t.strings.length; i += 1) {\n        t.fields.push({name: 'string_' + i, type: 'LITERAL', value: t.strings[i]});\n    }\n\n    return t;\n}\n\nexports.parse = parseNameTable;\nexports.make = makeNameTable;\n\n},{\"../parse\":7,\"../table\":9,\"../types\":24}],21:[function(require,module,exports){\n// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\nvar unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (var i = 0; i < unicodeRanges.length; i += 1) {\n        var range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {};\n    var p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.unicodeRanges = unicodeRanges;\nexports.getUnicodeRange = getUnicodeRange;\nexports.parse = parseOS2Table;\nexports.make = makeOS2Table;\n\n},{\"../parse\":7,\"../table\":9}],22:[function(require,module,exports){\n// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {};\n    var p = new parse.Parser(data, start);\n    var i;\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n    case 1:\n        post.names = encoding.standardNames.slice();\n        break;\n    case 2:\n        post.numberOfGlyphs = p.parseUShort();\n        post.glyphNameIndex = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.glyphNameIndex[i] = p.parseUShort();\n        }\n\n        post.names = [];\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n                var nameLength = p.parseChar();\n                post.names.push(p.parseString(nameLength));\n            }\n        }\n\n        break;\n    case 2.5:\n        post.numberOfGlyphs = p.parseUShort();\n        post.offset = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.offset[i] = p.parseChar();\n        }\n\n        break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexports.parse = parsePostTable;\nexports.make = makePostTable;\n\n},{\"../encoding\":3,\"../parse\":7,\"../table\":9}],23:[function(require,module,exports){\n// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\n'use strict';\n\nvar check = require('../check');\nvar table = require('../table');\n\nvar cmap = require('./cmap');\nvar cff = require('./cff');\nvar head = require('./head');\nvar hhea = require('./hhea');\nvar hmtx = require('./hmtx');\nvar maxp = require('./maxp');\nvar _name = require('./name');\nvar os2 = require('./os2');\nvar post = require('./post');\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    var sum = 0;\n    for (var i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Table('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    var sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    var recordFields = [];\n    var tableFields = [];\n\n    var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (var i = 0; i < tables.length; i += 1) {\n        var t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        var tableLength = t.sizeOf();\n        var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (var i = 0; i < chars.length; i += 1) {\n        var glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            var glyph = font.glyphs[glyphIndex];\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    var sum = 0;\n    for (var i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    var xMins = [];\n    var yMins = [];\n    var xMaxs = [];\n    var yMaxs = [];\n    var advanceWidths = [];\n    var leftSideBearings = [];\n    var rightSideBearings = [];\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    for (var i = 0; i < font.glyphs.length; i += 1) {\n        var glyph = font.glyphs[i];\n        var unicode = glyph.unicode | 0;\n        if (firstCharIndex > unicode || firstCharIndex === null) {\n            firstCharIndex = unicode;\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        var position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        var metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    var globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n    globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\n    var headTable = head.make({\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax\n    });\n\n    var hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    var maxpTable = maxp.make(font.glyphs.length);\n\n    var os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: 500, // Medium FIXME Make this configurable\n        usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.ascender,\n        usWinDescent: -globals.descender,\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: 0}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n    var hmtxTable = hmtx.make(font.glyphs);\n    var cmapTable = cmap.make(font.glyphs);\n\n    var fullName = font.familyName + ' ' + font.styleName;\n    var postScriptName = font.familyName.replace(/\\s/g, '') + '-' + font.styleName;\n    var nameTable = _name.make({\n        copyright: font.copyright,\n        fontFamily: font.familyName,\n        fontSubfamily: font.styleName,\n        uniqueID: font.manufacturer + ':' + fullName,\n        fullName: fullName,\n        version: font.version,\n        postScriptName: postScriptName,\n        trademark: font.trademark,\n        manufacturer: font.manufacturer,\n        designer: font.designer,\n        description: font.description,\n        manufacturerURL: font.manufacturerURL,\n        designerURL: font.designerURL,\n        license: font.license,\n        licenseURL: font.licenseURL,\n        preferredFamily: font.familyName,\n        preferredSubfamily: font.styleName\n    });\n    var postTable = post.make();\n    var cffTable = cff.make(font.glyphs, {\n        version: font.version,\n        fullName: fullName,\n        familyName: font.familyName,\n        weightName: font.styleName,\n        postScriptName: postScriptName\n    });\n    // Order the tables according to the the OpenType specification 1.4.\n    var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n\n    var sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    var bytes = sfntTable.encode();\n    var checkSum = computeCheckSum(bytes);\n    var tableFields = sfntTable.fields;\n    var checkSumAdjusted = false;\n    for (i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexports.computeCheckSum = computeCheckSum;\nexports.make = makeSfntTable;\nexports.fontToTable = fontToSfntTable;\n\n},{\"../check\":1,\"../table\":9,\"./cff\":10,\"./cmap\":11,\"./head\":14,\"./hhea\":15,\"./hmtx\":16,\"./maxp\":19,\"./name\":20,\"./os2\":21,\"./post\":22}],24:[function(require,module,exports){\n// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = require('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\nvar decode = {};\nvar encode = {};\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n// Convert an 8-bit unsigned integer to a list of 1 byte.\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert a 8-bit signed integer to a list of 1 byte.\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert an ASCII string to a list of bytes.\nencode.CHARARRAY = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n// Convert a 16-bit unsigned integer to a list of 2 bytes.\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.USHORT = constant(2);\n\n// Convert a 16-bit signed integer to a list of 2 bytes.\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.SHORT = constant(2);\n\n// Convert a 24-bit unsigned integer to a list of 3 bytes.\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.UINT24 = constant(3);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.ULONG = constant(4);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n// FIXME Implement LONGDATETIME\nencode.LONGDATETIME = function() {\n    return [0, 0, 0, 0, 0, 0, 0, 0];\n};\n\nsizeOf.LONGDATETIME = constant(8);\n\n// Convert a 4-char tag to a list of 4 bytes.\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n// Convert a signed number between -32768 and +32767 to a three-byte value.\n// This ensures we always use three bytes, but is not the most compact format.\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER16 = constant(2);\n\n// Convert a signed number between -(2^31) and +(2^31-1) to a four-byte value.\n// This is useful if you want to be sure you always use four bytes,\n// at the expense of wasting a few bytes for smaller numbers.\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER32 = constant(4);\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n// Convert a ASCII string to a list of UTF16 bytes.\nencode.UTF16 = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(0);\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\nencode.INDEX = function(l) {\n    var i;\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    dataSize, i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    var offset = 1; // First offset is always 1.\n    var offsets = [offset];\n    var data = [];\n    var dataSize = 0;\n    for (i = 0; i < l.length; i += 1) {\n        var v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        dataSize += v.length;\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    var encodedOffsets = [];\n    var offSize = (1 + Math.floor(Math.log(dataSize) / Math.log(2)) / 8) | 0;\n    var offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        var encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n// Convert an object to a CFF DICT structure.\n// The keys should be numeric.\n// The values should be objects containing name / type / value.\nencode.DICT = function(m) {\n    var d = [];\n    var keys = Object.keys(m);\n    var length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\nencode.OPERAND = function(v, type) {\n    var d = [];\n    if (Array.isArray(type)) {\n        for (var i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else {\n            // FIXME Add support for booleans\n            d = d.concat(encode.NUMBER(v));\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n// Convert a list of CharString operations to bytes.\nencode.CHARSTRING = function(ops) {\n    if (wmm && wmm.has(ops)) {\n        return wmm.get(ops);\n    }\n\n    var d = [];\n    var length = ops.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n// Convert an object containing name / type / value to bytes.\nencode.OBJECT = function(v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n// Convert a table object to bytes.\n// A table contains a list of fields containing the metadata (name, type and default value).\n// The table itself has the field values set as attributes.\nencode.TABLE = function(table) {\n    var d = [];\n    var length = table.fields.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        var bytes = encodingFunction(value);\n        d = d.concat(bytes);\n    }\n\n    return d;\n};\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n\n},{\"./check\":1}]},{},[6])(6)\n});\n},{}],2:[function(require,module,exports){\n/*!\n * Paper.js v0.9.22 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Wed Mar 18 10:25:56 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\n\t\t  var noCanvas =\n\t\t\t  ( typeof process === 'object' && process.browser !== true ) ||\n\t\t\t  ( typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope );\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && (!exclude || !exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tctor.prototype = create(this.prototype);\n\t\t\tctor.base = base;\n\t\t\tdefine(ctor.prototype, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\treturn arguments.length ? this.inject.apply(ctor, arguments) : ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function() {\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\t\tif (arguments[i] !== undefined)\n\t\t\t\t\t\treturn arguments[i];\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar orig = props._filtering || props;\n\t\t\tfor (var key in orig) {\n\t\t\t\tif (orig.hasOwnProperty(key) && !(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tfunction checkKeys(o1, o2) {\n\t\t\t\tfor (var i in o1)\n\t\t\t\t\tif (o1.hasOwnProperty(i) && !o2.hasOwnProperty(i))\n\t\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\tif (obj1.length !== obj2.length)\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i = 0, l = obj1.length; i < l; i++) {\n\t\t\t\t\tif (!Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 && typeof obj1 === 'object'\n\t\t\t\t\t&& obj2 && typeof obj2 === 'object') {\n\t\t\t\tif (!checkKeys(obj1, obj2) || !checkKeys(obj2, obj1))\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i in obj1) {\n\t\t\t\t\tif (obj1.hasOwnProperty(i)\n\t\t\t\t\t\t\t&& !Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var i in obj)\n\t\t\t\t\tif (obj.hasOwnProperty(i))\n\t\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\t\tdictionary);\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (!isDictionary) {\n\t\t\t\t\tif (_data.dictionary && json.length == 1 && /^#/.test(type))\n\t\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\t\ttype = Base.exports[type];\n\t\t\t\t}\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data));\n\t\t\t\tif (isDictionary) {\n\t\t\t\t\t_data.dictionary = res[0];\n\t\t\t\t} else if (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar entry = this._eventTypes[type];\n\t\t\tif (entry) {\n\t\t\t\tvar handlers = this._callbacks = this._callbacks || {};\n\t\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\t\thandlers.push(func);\n\t\t\t\t\tif (entry.install && handlers.length == 1)\n\t\t\t\t\t\tentry.install.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar entry = this._eventTypes[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (entry && handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false\n\t\t\t\t\t&& event && event.stop) {\n\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar entry = this._eventTypes[type],\n\t\t\t\t\tfunc = entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif ( noCanvas ) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar browser = proto.browser = {};\n\t\t\tnavigator.userAgent.toLowerCase().replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: '0.9.22',\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tTOLERANCE = 1e-6,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\treturn {\n\t\tTOLERANCE: TOLERANCE,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn abs(val) <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= 2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar pow = Math.pow,\n\t\t\t\t\tgmC = pow(abs(a*b*c), 1/3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\t/*\n\t\t\t\t\t * we multiply with a factor to normalize the\n\t\t\t\t\t * coefficients. The factor is just the nearest exponent\n\t\t\t\t\t * of 10, big enough to raise all the coefficients to\n\t\t\t\t\t * nearly [-1, +1] range.\n\t\t\t\t\t */\n\t\t\t\t\tvar mult = pow(10, abs(\n\t\t\t\t\t\tMath.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < MACHINE_EPSILON) {\n\t\t\t\tif (abs(B) < MACHINE_EPSILON)\n\t\t\t\t\treturn abs(c) < MACHINE_EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else {\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tD = D < 0 ? 0 : D;\n\t\t\t\t\tvar R = sqrt(D);\n\t\t\t\t\tif (b >= MACHINE_EPSILON && b <= MACHINE_EPSILON) {\n\t\t\t\t\t\tx1 = abs(a) >= abs(c) ? R / a : -c / R;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar q = -(b + (b < 0 ? -1 : 1) * R);\n\t\t\t\t\t\tx1 = q / a;\n\t\t\t\t\t\tx2 = c / q;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 >= min && x1 <= max))\n\t\t\t\troots[count++] = x1;\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 >= min && x2 <= max))\n\t\t\t\troots[count++] = x2;\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar x, b1, c2, count = 0;\n\t\t\tif (a === 0) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (d === 0) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x >= min && x <= max))\n\t\t\t\troots[count++] = x;\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\ts = Math.sin(angle),\n\t\t\tc = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * c - point.y * s,\n\t\t\tpoint.x * s + point.y * c\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function(point, tolerance) {\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisColinear: function(point) {\n\t\treturn Math.abs(this.cross(point)) < 1e-12;\n\t},\n\n\tisOrthogonal: function(point) {\n\t\treturn Math.abs(this.dot(point)) < 1e-12;\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments);\n\t\tif (point.isZero()) {\n\t\t\treturn new Point(0, 0);\n\t\t} else {\n\t\t\tvar scale = this.dot(point) / point.dot(point);\n\t\t\treturn new Point(\n\t\t\t\tpoint.x * scale,\n\t\t\t\tpoint.y * scale\n\t\t\t);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n}, new function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = coords.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tstatics: {\n\t\tintersect: function(apx, apy, avx, avy, bpx, bpy, bvx, bvy, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tavx -= apx;\n\t\t\t\tavy -= apy;\n\t\t\t\tbvx -= bpx;\n\t\t\t\tbvy -= bpy;\n\t\t\t}\n\t\t\tvar cross = avx * bvy - avy * bvx;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = apx - bpx,\n\t\t\t\t\tdy = apy - bpy,\n\t\t\t\t\tta = (bvx * dy - bvy * dx) / cross,\n\t\t\t\t\ttb = (avx * dy - avy * dx) / cross;\n\t\t\t\tif (isInfinite || 0 <= ta && ta <= 1 && 0 <= tb && tb <= 1)\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\t\tapx + ta * avx,\n\t\t\t\t\t\t\t\tapy + ta * avy);\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0) {\n\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\tif (ccw > 0) {\n\t\t\t\t\tv2x -= vx;\n\t\t\t\t\tv2y -= vy;\n\t\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\t\tif (ccw < 0)\n\t\t\t\t\t\tccw = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn Numerical.isZero(vx)\n\t\t\t\t\t? vy >= 0 ? px - x : x - px\n\t\t\t\t\t: Numerical.isZero(vy)\n\t\t\t\t\t\t? vx >= 0 ? y - py : py - y\n\t\t\t\t\t\t: (vx * (y - py) - vy * (x - px)) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = Symbol._id = (Symbol._id || 0) + 1;\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = Item._id = (Item._id || 0) + 1;\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, parent: true }, true);\n\t\treturn hasProps;\n\t},\n\n\t_events: new function() {\n\n\t\tvar mouseFlags = {\n\t\t\tmousedown: {\n\t\t\t\tmousedown: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmouseup: {\n\t\t\t\tmouseup: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmousemove: {\n\t\t\t\tmousedrag: 1,\n\t\t\t\tmousemove: 1,\n\t\t\t\tmouseenter: 1,\n\t\t\t\tmouseleave: 1\n\t\t\t}\n\t\t};\n\n\t\tvar mouseEvent = {\n\t\t\tinstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tuninstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = mouseEvent;\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis._animateItem(true);\n\t\t\t\t\t},\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis._animateItem(false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {}\n\t\t\t}\n\t\t);\n\t},\n\n\t_animateItem: function(animate) {\n\t\tthis.getView()._animateItem(this, animate);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments);\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n\n\tgetRegistration: '#getPivot',\n\tsetRegistration: '#setPivot'\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tvar cacheParent = this._parent || this._parentSymbol;\n\t\tif (cacheParent) {\n\t\t\tvar id = cacheItem._id,\n\t\t\t\tref = cacheParent._boundsCache = cacheParent._boundsCache || {\n\t\t\t\t\tids: {},\n\t\t\t\t\tlist: []\n\t\t\t\t};\n\t\t\tif (!ref.ids[id]) {\n\t\t\t\tref.list.push(cacheItem);\n\t\t\t\tref.ids[id] = cacheItem;\n\t\t\t}\n\t\t}\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++) {\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function(matrix) {\n\t\tthis._matrix.initialize(matrix);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert) {\n\t\tcopy.setStyle(this._style);\n\t\tif (this._children) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tcopy.addChild(this._children[i].clone(false), true);\n\t\t}\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide', '_applyMatrix'];\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tcopy.setSelected(this._selected);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(),\n\t\t\t\t_matrix || item._matrix).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 0.000001)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tif (typeof name === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param) {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect =\tbounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: rect,\n\t\t\t\t\toverlapping: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param.items,\n\t\t\t\tinside = param.inside,\n\t\t\t\toverlapping = param.overlapping;\n\t\t\tmatrix = inside && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (inside) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!inside.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(inside && inside.contains(bounds)) && !(overlapping\n\t\t\t\t\t\t\t&& overlapping.intersects(child, childMatrix)))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2;\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t});\n\t\tpath.setStyle(this._style);\n\t\tpath.transform(this._matrix);\n\t\tif (insert || insert === undefined)\n\t\t\tpath.insertAbove(this);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rect' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\t\timage = document.getElementById(src) || new Image();\n\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, {\n\t\t\t\tload: loaded\n\t\t\t});\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL() : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif (arg0.point) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.isLinear() ? this._point\n\t\t\t\t: [this._point, this._handleIn, this._handleOut],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._handleIn.isZero() && this._handleOut.isZero();\n\t},\n\n\tsetLinear: function(linear) {\n\t\tif (linear) {\n\t\t\tthis._handleIn.set(0, 0);\n\t\t\tthis._handleOut.set(0, 0);\n\t\t} else {\n\t\t}\n\t},\n\n\tisColinear: function(segment) {\n\t\tvar next1 = this.getNext(),\n\t\t\tnext2 = segment.getNext();\n\t\treturn this._handleOut.isZero() && next1._handleIn.isZero()\n\t\t\t\t&& segment._handleOut.isZero() && next2._handleIn.isZero()\n\t\t\t\t&& next1._point.subtract(this._point).isColinear(\n\t\t\t\t\tnext2._point.subtract(segment._point));\n\t},\n\n\tisOrthogonal: function() {\n\t\tvar prev = this.getPrevious(),\n\t\t\tnext = this.getNext();\n\t\treturn prev._handleOut.isZero() && this._handleIn.isZero()\n\t\t\t&& this._handleOut.isZero() && next._handleIn.isZero()\n\t\t\t&& this._point.subtract(prev._point).isOrthogonal(\n\t\t\t\t\tnext._point.subtract(this._point));\n\t},\n\n\tisArc: function() {\n\t\tvar next = this.getNext(),\n\t\t\thandle1 = this._handleOut,\n\t\t\thandle2 = next._handleIn,\n\t\t\tkappa = 0.5522847498307936;\n\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\tvar from = this._point,\n\t\t\t\tto = next._point,\n\t\t\t\tcorner = new Line(from, handle1, true).intersect(\n\t\t\t\t\t\tnew Line(to, handle2, true), true);\n\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\tcorner.subtract(from).getLength() - kappa)\n\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\tcorner.subtract(to).getLength() - kappa);\n\t\t}\n\t\treturn false;\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\treverse: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(segment0, segment1, coef) {\n\t\tvar dxPoint = segment1._point._x - segment0._point._x,\n\t\t\tdyPoint = segment1._point._y - segment0._point._y,\n\t\t\tdxHandleIn = segment1._handleIn._x - segment0._handleIn._x,\n\t\t\tdyHandleIn = segment1._handleIn._y - segment0._handleIn._y,\n\t\t\tdxHandleOut = segment1._handleOut._x - segment0._handleOut._x,\n\t\t\tdyHandleOut = segment1._handleOut._y - segment0._handleOut._y;\n\n\t\tthis._point._x = segment0._point._x + dxPoint * coef;\n\t\tthis._point._y = segment0._point._y + dyPoint * coef;\n\t\tthis._handleIn._x = segment0._handleIn._x + dxHandleIn * coef;\n\t\tthis._handleIn._y = segment0._handleIn._y + dyHandleIn * coef;\n\t\tthis._handleOut._x = segment0._handleOut._x + dxHandleOut * coef;\n\t\tthis._handleOut._y = segment0._handleOut._y + dyHandleOut * coef;\n\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tthis._segment1 = arg1;\n\t\t\tthis._segment2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tthis._segment1 = new Segment();\n\t\t\tthis._segment2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tthis._segment1 = new Segment(arg0.segment1);\n\t\t\tthis._segment2 = new Segment(arg0.segment2);\n\t\t} else if (count === 2) {\n\t\t\tthis._segment1 = new Segment(arg0);\n\t\t\tthis._segment2 = new Segment(arg1);\n\t\t} else {\n\t\t\tvar point1, handle1, handle2, point2;\n\t\t\tif (count === 4) {\n\t\t\t\tpoint1 = arg0;\n\t\t\t\thandle1 = arg1;\n\t\t\t\thandle2 = arg2;\n\t\t\t\tpoint2 = arg3;\n\t\t\t} else if (count === 8) {\n\t\t\t\tpoint1 = [arg0, arg1];\n\t\t\t\tpoint2 = [arg6, arg7];\n\t\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t\t}\n\t\t\tthis._segment1 = new Segment(point1, null, handle1);\n\t\t\tthis._segment2 = new Segment(point2, handle2, null);\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tthis._length = this.isLinear()\n\t\t\t\t? this._segment2._point.getDistance(this._segment1._point)\n\t\t\t\t: Curve.getLength(this.getValues(), 0, 1);\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._segment1._handleOut.isZero()\n\t\t\t\t&& this._segment2._handleIn.isZero();\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve.filterIntersections(Curve.getIntersections(\n\t\t\t\tthis.getValues(), curve.getValues(), this, curve, []));\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, ignoreLinear) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttolerance = 0.000001,\n\t\t\tres = null;\n\t\tif (parameter > tolerance && parameter < 1 - tolerance) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tisLinear = ignoreLinear ? false : this.isLinear(),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1];\n\n\t\t\tif (!isLinear) {\n\t\t\t\tthis._segment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tthis._segment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\t!isLinear && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\t!isLinear && new Point(right[2] - x, right[3] - y));\n\n\t\t\tif (this._path) {\n\t\t\t\tif (this._segment1._index > 0 && this._segment2._index === 0) {\n\t\t\t\t\tthis._path.add(segment);\n\t\t\t\t} else {\n\t\t\t\t\tthis._path.insert(this._segment2._index, segment);\n\t\t\t\t}\n\t\t\t\tres = this;\n\t\t\t} else {\n\t\t\t\tvar end = this._segment2;\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, end);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treverse: function() {\n\t\treturn new Curve(this._segment2.reverse(), this._segment1.reverse());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tevaluate: function(v, t, type) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tolerance || t > 1 - tolerance)) {\n\t\t\tvar isZero = t < tolerance;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tolerance && c1x === p1x && c1y === p1y\n\t\t\t\t\t\t|| t > 1 - tolerance && c2x === p2x && c2y === p2y) {\n\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t} else if (t < tolerance) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > 1 - tolerance) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by;\n\t\t\t\t\treturn (x * y2 - y * x2) / Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b,\n\t\t\tisZero = Numerical.isZero;\n\t\tif (isZero(a) && isZero(b))\n\t\t\ta = b = 0;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, x, y) {\n\t\tvar tolerance = 0.000001;\n\t\tif (Math.abs(v[0] - x) < tolerance && Math.abs(v[1] - y) < tolerance)\n\t\t\treturn 0;\n\t\tif (Math.abs(v[6] - x) < tolerance && Math.abs(v[7] - y) < tolerance)\n\t\t\treturn 1;\n\t\tvar txs = [],\n\t\t\ttys = [],\n\t\t\tsx = Curve.solveCubic(v, 0, x, txs, 0, 1),\n\t\t\tsy = Curve.solveCubic(v, 1, y, tys, 0, 1),\n\t\t\ttx, ty;\n\t\tfor (var cx = 0;  sx == -1 || cx < sx;) {\n\t\t\tif (sx == -1 || (tx = txs[cx++]) >= 0 && tx <= 1) {\n\t\t\t\tfor (var cy = 0; sy == -1 || cy < sy;) {\n\t\t\t\t\tif (sy == -1 || (ty = tys[cy++]) >= 0 && ty <= 1) {\n\t\t\t\t\t\tif (sx == -1) tx = ty;\n\t\t\t\t\t\telse if (sy == -1) ty = tx;\n\t\t\t\t\t\tif (Math.abs(tx - ty) < tolerance)\n\t\t\t\t\t\t\treturn (tx + ty) * 0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sx == -1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn v;\n\t},\n\n\tisLinear: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]);\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn (  3.0 * c1y * p1x - 1.5 * c1y * c2x\n\t\t\t\t- 1.5 * c1y * p2x - 3.0 * p1y * c1x\n\t\t\t\t- 1.5 * p1y * c2x - 0.5 * p1y * p2x\n\t\t\t\t+ 1.5 * c2y * p1x + 1.5 * c2y * c1x\n\t\t\t\t- 3.0 * c2y * p2x + 0.5 * p2y * p1x\n\t\t\t\t+ 1.5 * p2y * c1x + 3.0 * p2y * c2x) / 10;\n\t},\n\n\tgetEdgeSum: function(v) {\n\t\treturn\t  (v[0] - v[2]) * (v[3] + v[1])\n\t\t\t\t+ (v[2] - v[4]) * (v[5] + v[3])\n\t\t\t\t+ (v[4] - v[6]) * (v[7] + v[5]);\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name]([this._segment1,\n\t\t\t\t\t\tthis._segment2], false, this._path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve.evaluate(values, isParameter\n\t\t\t\t\t? offset : Curve.getParameterAt(values, offset, 0), index);\n\t\t};\n\t\tthis[name] = function(parameter) {\n\t\t\treturn Curve.evaluate(this.getValues(), parameter, index);\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Curve.getParameterOf(this.getValues(), point.x, point.y);\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tif (!isParameter)\n\t\t\toffset = this.getParameterAt(offset);\n\t\treturn offset >= 0 && offset <= 1 && new CurveLocation(this, offset);\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tcount = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(\n\t\t\t\t\t\tCurve.evaluate(values, t, 0), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 0.000001) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\tvar pt = Curve.evaluate(values, minT, 0);\n\t\treturn new CurveLocation(this, minT, pt, null, null, null,\n\t\t\t\tpoint.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n}),\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\treturn {\n\t\tstatics: true,\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tvar isZero = Numerical.isZero;\n\t\t\tif (a === 0 && b === 1\n\t\t\t\t\t&& isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t\t&& isZero(v[6] - v[4]) && isZero(v[7] - v[5])) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar forward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (Math.abs(offset) >= rangeLength)\n\t\t\t\treturn forward ? b : a;\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 16,\n\t\t\t\t\t0.000001);\n\t\t}\n\t};\n}, new function() {\n\tfunction addLocation(locations, include, curve1, t1, point1, curve2, t2,\n\t\t\tpoint2) {\n\t\tvar loc = new CurveLocation(curve1, t1, point1, curve2, t2, point2);\n\t\tif (!include || include(loc))\n\t\t\tlocations.push(loc);\n\t}\n\n\tfunction addCurveIntersections(v1, v2, curve1, curve2, locations, include,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (recursion > 32)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]) || 0,\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]) || 0,\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\ttMinNew, tMaxNew, tDiff;\n\t\tif (q0x === q3x && uMax - uMin <= tolerance && recursion > 3) {\n\t\t\ttMaxNew = tMinNew = (tMax + tMin) / 2;\n\t\t\ttDiff = 0;\n\t\t} else {\n\t\t\tvar hull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\t\ttop = hull[0],\n\t\t\t\tbottom = hull[1],\n\t\t\t\ttMinClip, tMaxClip;\n\t\t\ttMinClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\ttop.reverse();\n\t\t\tbottom.reverse();\n\t\t\ttMaxClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\tif (tMinClip == null || tMaxClip == null)\n\t\t\t\treturn;\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\ttDiff = tMaxClip - tMinClip;\n\t\t\ttMinNew = tMax * tMinClip + tMin * (1 - tMinClip);\n\t\t\ttMaxNew = tMax * tMaxClip + tMin * (1 - tMaxClip);\n\t\t}\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, curve2, curve1, locations, include,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew) < tolerance) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tif (reverse) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0),\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0));\n\t\t\t} else {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t} else if (tDiff > 0) {\n\t\t\taddCurveIntersections(v2, v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\tdist1 = getSignedDistance(0, dq0, 1, dq3, 1 / 3, dq1),\n\t\t\tdist2 = getSignedDistance(0, dq0, 1, dq3, 2 / 3, dq2),\n\t\t\tflip = false,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t\tflip = dist1 < 0;\n\t\t} else {\n\t\t\tvar pmax, cross = 0,\n\t\t\t\tdistZero = dist1 === 0 || dist2 === 0;\n\t\t\tif (Math.abs(dist1) > Math.abs(dist2)) {\n\t\t\t\tpmax = p1;\n\t\t\t\tcross = (dq3 - dq2 - (dq3 - dq0) / 3)\n\t\t\t\t\t\t* (2 * (dq3 - dq2) - dq3 + dq1) / 3;\n\t\t\t} else {\n\t\t\t\tpmax = p2;\n\t\t\t\tcross = (dq1 - dq0 + (dq0 - dq3) / 3)\n\t\t\t\t\t\t* (-2 * (dq0 - dq1) + dq0 - dq2) / 3;\n\t\t\t}\n\t\t\thull = cross < 0 || distZero\n\t\t\t\t\t? [[p0, pmax, p3], [p0, p3]]\n\t\t\t\t\t: [[p0, p1, p2, p3], [p0, p3]];\n\t\t\tflip = dist1 ? dist1 < 0 : dist2 < 0;\n\t\t}\n\t\treturn flip ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold)\n\t\t\t\treturn px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, curve1, curve2, locations,\n\t\t\tinclude) {\n\t\tvar flip = Curve.isLinear(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trlx2 = ldx * cos - ldy * sin,\n\t\t\trvl = [0, 0, 0, 0, rlx2, 0, rlx2, 0],\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\ty * cos + x * sin);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tx = Curve.evaluate(rvc, tc, 0).x;\n\t\t\tif (x >= 0 && x <= rlx2) {\n\t\t\t\tvar tl = Curve.getParameterOf(rvl, x, 0),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, curve1, curve2, locations, include) {\n\t\tvar point = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (point) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tcurve1, Curve.getParameterOf(v1, x, y), point,\n\t\t\t\t\tcurve2, Curve.getParameterOf(v2, x, y), point);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\tgetIntersections: function(v1, v2, c1, c2, locations, include) {\n\t\t\tvar linear1 = Curve.isLinear(v1),\n\t\t\t\tlinear2 = Curve.isLinear(v2),\n\t\t\t\tc1p1 = c1.getPoint1(),\n\t\t\t\tc1p2 = c1.getPoint2(),\n\t\t\t\tc2p1 = c2.getPoint1(),\n\t\t\t\tc2p2 = c2.getPoint2(),\n\t\t\t\ttolerance = 0.000001;\n\t\t\tif (c1p1.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 0, c1p1);\n\t\t\tif (c1p1.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 1, c1p1);\n\t\t\t(linear1 && linear2\n\t\t\t\t? addLineIntersection\n\t\t\t\t: linear1 || linear2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, include,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (c1p2.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 0, c1p2);\n\t\t\tif (c1p2.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 1, c1p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\tfilterIntersections: function(locations, _expand) {\n\t\t\tvar last = locations.length - 1,\n\t\t\t\ttMax = 1 - 0.000001;\n\t\t\tfor (var i = last; i >= 0; i--) {\n\t\t\t\tvar loc = locations[i],\n\t\t\t\t\tnext = loc._curve.getNext(),\n\t\t\t\t\tnext2 = loc._curve2.getNext();\n\t\t\t\tif (next && loc._parameter >= tMax) {\n\t\t\t\t\tloc._parameter = 0;\n\t\t\t\t\tloc._curve = next;\n\t\t\t\t}\n\t\t\t\tif (next2 && loc._parameter2 >= tMax) {\n\t\t\t\t\tloc._parameter2 = 0;\n\t\t\t\t\tloc._curve2 = next2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction compare(loc1, loc2) {\n\t\t\t\tvar path1 = loc1.getPath(),\n\t\t\t\t\tpath2 = loc2.getPath();\n\t\t\t\treturn path1 === path2\n\t\t\t\t\t\t? (loc1.getIndex() + loc1.getParameter())\n\t\t\t\t\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t\t\t: path1._id - path2._id;\n\t\t\t}\n\n\t\t\tif (last > 0) {\n\t\t\t\tlocations.sort(compare);\n\t\t\t\tfor (var i = last; i > 0; i--) {\n\t\t\t\t\tif (locations[i].equals(locations[i - 1])) {\n\t\t\t\t\t\tlocations.splice(i, 1);\n\t\t\t\t\t\tlast--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_expand) {\n\t\t\t\tfor (var i = last; i >= 0; i--)\n\t\t\t\t\tlocations.push(locations[i].getIntersection());\n\t\t\t\tlocations.sort(compare);\n\t\t\t}\n\t\t\treturn locations;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point, _curve2,\n\t\t\t_parameter2, _point2, _distance) {\n\t\tthis._id = CurveLocation._id = (CurveLocation._id || 0) + 1;\n\t\tthis._curve = curve;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t\tthis._parameter = parameter;\n\t\tthis._point = point;\n\t\tthis._curve2 = _curve2;\n\t\tthis._parameter2 = _parameter2;\n\t\tthis._point2 = _point2;\n\t\tthis._distance = _distance;\n\t},\n\n\tgetSegment: function(_preferFirst) {\n\t\tif (!this._segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this.getParameter();\n\t\t\tif (parameter === 1) {\n\t\t\t\tthis._segment = curve._segment2;\n\t\t\t} else if (parameter === 0 || _preferFirst) {\n\t\t\t\tthis._segment = curve._segment1;\n\t\t\t} else if (parameter == null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis._segment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t}\n\t\treturn this._segment;\n\t},\n\n\tgetCurve: function(_uncached) {\n\t\tif (!this._curve || _uncached) {\n\t\t\tthis._curve = this._segment1.getCurve();\n\t\t\tif (this._curve.getParameterOf(this._point) == null)\n\t\t\t\tthis._curve = this._segment2.getPrevious().getCurve();\n\t\t}\n\t\treturn this._curve;\n\t},\n\n\tgetIntersection: function() {\n\t\tvar intersection = this._intersection;\n\t\tif (!intersection && this._curve2) {\n\t\t\tvar param = this._parameter2;\n\t\t\tthis._intersection = intersection = new CurveLocation(\n\t\t\t\t\tthis._curve2, param, this._point2 || this._point, this);\n\t\t\tintersection._intersection = this;\n\t\t}\n\t\treturn intersection;\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetOffset: function() {\n\t\tvar path = this.getPath();\n\t\treturn path ? path._getOffset(this) : this.getCurveOffset();\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetParameter: function(_uncached) {\n\t\tif ((this._parameter == null || _uncached) && this._point) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._parameter = curve && curve.getParameterOf(this._point);\n\t\t}\n\t\treturn this._parameter;\n\t},\n\n\tgetPoint: function(_uncached) {\n\t\tif ((!this._point || _uncached) && this._parameter != null) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._point = curve && curve.getPointAt(this._parameter, true);\n\t\t}\n\t\treturn this._point;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.divide(this.getParameter(true), true);\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.split(this.getParameter(true), true);\n\t},\n\n\tequals: function(loc) {\n\t\tvar abs = Math.abs,\n\t\t\ttolerance = 0.000001;\n\t\treturn this === loc\n\t\t\t\t|| loc\n\t\t\t\t\t&& this._curve === loc._curve\n\t\t\t\t\t&& this._curve2 === loc._curve2\n\t\t\t\t\t&& abs(this._parameter - loc._parameter) <= tolerance\n\t\t\t\t\t&& abs(this._parameter2 - loc._parameter2) <= tolerance\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t}\n}, Base.each(['getTangent', 'getNormal', 'getCurvature'], function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {}));\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, _matrix, _expand) {\n\t\tif (this === path)\n\t\t\tpath = null;\n\t\tvar locations = [],\n\t\t\tcurves1 = this.getCurves(),\n\t\t\tcurves2 = path ? path.getCurves() : curves1,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = path ? (_matrix || path._matrix).orNullIfIdentity()\n\t\t\t\t: matrix1,\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = path ? curves2.length : length1,\n\t\t\tvalues2 = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tif (path && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = path ? curve1.getValues(matrix1) : values2[i];\n\t\t\tif (!path) {\n\t\t\t\tvar seg1 = curve1.getSegment1(),\n\t\t\t\t\tseg2 = curve1.getSegment2(),\n\t\t\t\t\th1 = seg1._handleOut,\n\t\t\t\t\th2 = seg2._handleIn;\n\t\t\t\tif (new Line(seg1._point.subtract(h1), h1.multiply(2), true)\n\t\t\t\t\t\t.intersect(new Line(seg2._point.subtract(h2),\n\t\t\t\t\t\th2.multiply(2), true), false)) {\n\t\t\t\t\tvar parts = Curve.subdivide(values1);\n\t\t\t\t\tCurve.getIntersections(\n\t\t\t\t\t\tparts[0], parts[1], curve1, curve1, locations,\n\t\t\t\t\t\tfunction(loc) {\n\t\t\t\t\t\t\tif (loc._parameter <= tMax) {\n\t\t\t\t\t\t\t\tloc._parameter /= 2;\n\t\t\t\t\t\t\t\tloc._parameter2 = 0.5 + loc._parameter2 / 2;\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var j = path ? 0 : i + 1; j < length2; j++) {\n\t\t\t\tCurve.getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curves2[j], locations,\n\t\t\t\t\t!path && (j === i + 1 || j === length2 - 1 && i === 0)\n\t\t\t\t\t\t&& function(loc) {\n\t\t\t\t\t\t\tvar t = loc._parameter;\n\t\t\t\t\t\t\treturn t >= tMin && t <= tMax;\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Curve.filterIntersections(locations, _expand);\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tif (move && previous && previous !== 'z')\n\t\t\t\t\tthis.closePath(true);\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._clockwise = undefined;\n\t\t\tif (this._curves && !(flags & 16)) {\n\t\t\t\tfor (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t\tthis._monoCurves = undefined;\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\tisPolygon: function() {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif (!this._segments[i].isLinear())\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves || segs._curves) {\n\t\t\tif (!curves)\n\t\t\t\tcurves = this._curves = [];\n\t\t\tvar from = index > 0 ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, this._countCurves());\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves();\n\t\t\tthis._length = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tthis._length += curves[i].getLength();\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar curves = this.getCurves();\n\t\tvar area = 0;\n\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\tarea += curves[i].getArea();\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.evaluate(pos, 0)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (curve.isLinear() && curve.getLength() === 0)\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tolerance = 0.000001;\n\t\tif (parameter >= 1 - tolerance) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter > tolerance) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = this._clone(new Path().insertAbove(this, true));\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn Path.isClockwise(this._segments);\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path.closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\tinterpolate: function(path0, path1, coef) {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif ( !path0._segments[i] || !path1._segments[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._segments[i].interpolate(\n\t\t\t\tpath0._segments[i],\n\t\t\t\tpath1._segments[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\n\t\tthis._changed(9);\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isColinear(i, j) {\n\t\t\treturn segments[i].isColinear(segments[j]);\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\treturn segments[i].isOrthogonal();\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\treturn segments[i].isArc();\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (this.isPolygon() && segments.length === 4\n\t\t\t\t&& isColinear(0, 2) && isColinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isColinear(1, 5) && isColinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t});\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\tshape.setStyle(this._style);\n\t\t\tif (insert || insert === undefined)\n\t\t\t\tshape.insertAbove(this);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\t_getOffset: function(location) {\n\t\tvar index = location && location.getIndex();\n\t\tif (index != null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\toffset = 0;\n\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\toffset += curves[i].getLength();\n\t\t\tvar curve = curves[index],\n\t\t\t\tparameter = location.getParameter();\n\t\t\tif (parameter > 0)\n\t\t\t\toffset += curve.getPartLength(0, parameter);\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset;\n\t\t\treturn curves[index].getLocationAt(offset - index, true);\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}), new function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n}, new function() {\n\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n}, new function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < epsilon)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tisClockwise: function(segments) {\n\t\tvar sum = 0;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsum += Curve.getEdgeSum(Curve.getValues(\n\t\t\t\t\tsegments[i], segments[i + 1 < l ? i + 1 : 0]));\n\t\treturn sum > 0;\n\t},\n\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isColinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().normalize(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tif (this._children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t} else {\n\t\t\treturn reduce.base.call(this);\n\t\t}\n\t},\n\n\tinterpolate: function(compoundpath0, compoundpath1, coef) {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\tif ( !compoundpath0._children[i] || !compoundpath1._children[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._children[i].interpolate(\n\t\t\t\tcompoundpath0._children[i],\n\t\t\t\tcompoundpath1._children[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : mx, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n}, new function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current : new Path();\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tvar operator = operators[operation];\n\t\tfunction preparePath(path) {\n\t\t\treturn path.clone(false).reduce().reorient().transform(null, true,\n\t\t\t\t\ttrue);\n\t\t}\n\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tsplitPath(_path1.getIntersections(_path2, null, true));\n\n\t\tvar chain = [],\n\t\t\tsegments = [],\n\t\t\tmonoCurves = [],\n\t\t\ttolerance = 0.000001;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tsegments.sort(function(a, b) {\n\t\t\tvar _a = a._intersection,\n\t\t\t\t_b = b._intersection;\n\t\t\treturn !_a && !_b || _a && _b ? 0 : _a ? -1 : 1;\n\t\t});\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding != null)\n\t\t\t\tcontinue;\n\t\t\tchain.length = 0;\n\t\t\tvar startSeg = segment,\n\t\t\t\ttotalLength = 0,\n\t\t\t\twindingSum = 0;\n\t\t\tdo {\n\t\t\t\tvar length = segment.getCurve().getLength();\n\t\t\t\tchain.push({ segment: segment, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t\tsegment = segment.getNext();\n\t\t\t} while (segment && !segment._intersection && segment !== startSeg);\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar length = totalLength * (j + 1) / 4;\n\t\t\t\tfor (k = 0, m = chain.length; k < m; k++) {\n\t\t\t\t\tvar node = chain[k],\n\t\t\t\t\t\tcurveLength = node.length;\n\t\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\t\tif (length <= tolerance\n\t\t\t\t\t\t\t\t|| curveLength - length <= tolerance)\n\t\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\t\tvar curve = node.segment.getCurve(),\n\t\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\t\thor = curve.isLinear() && Math.abs(curve\n\t\t\t\t\t\t\t\t\t.getTangentAt(0.5, true).y) <= tolerance,\n\t\t\t\t\t\t\tpath = curve._path;\n\t\t\t\t\t\tif (path._parent instanceof CompoundPath)\n\t\t\t\t\t\t\tpath = path._parent;\n\t\t\t\t\t\twindingSum += operation === 'subtract' && _path2\n\t\t\t\t\t\t\t&& (path === _path1 && _path2._getWinding(pt, hor)\n\t\t\t\t\t\t\t|| path === _path2 && !_path1._getWinding(pt, hor))\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlength -= curveLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar winding = Math.round(windingSum / 3);\n\t\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.insertAbove(path1);\n\t\tresult.addChildren(tracePaths(segments, operator), true);\n\t\tresult = result.reduce();\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction splitPath(intersections) {\n\t\tvar tMin = 0.000001,\n\t\t\ttMax = 1 - tMin,\n\t\t\tlinearHandles;\n\n\t\tfunction resetLinear() {\n\t\t\tfor (var i = 0, l = linearHandles.length; i < l; i++)\n\t\t\t\tlinearHandles[i].set(0, 0);\n\t\t}\n\n\t\tfor (var i = intersections.length - 1, curve, prev; i >= 0; i--) {\n\t\t\tvar loc = intersections[i],\n\t\t\t\tt = loc._parameter;\n\t\t\tif (prev && prev._curve === loc._curve && prev._parameter > 0) {\n\t\t\t\tt /= prev._parameter;\n\t\t\t} else {\n\t\t\t\tcurve = loc._curve;\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tresetLinear();\n\t\t\t\tlinearHandles = curve.isLinear() ? [\n\t\t\t\t\t\tcurve._segment1._handleOut,\n\t\t\t\t\t\tcurve._segment2._handleIn\n\t\t\t\t\t] : null;\n\t\t\t}\n\t\t\tvar newCurve,\n\t\t\t\tsegment;\n\t\t\tif (newCurve = curve.divide(t, true, true)) {\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tcurve = newCurve.getPrevious();\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tlinearHandles.push(segment._handleOut, segment._handleIn);\n\t\t\t} else {\n\t\t\t\tsegment = t < tMin\n\t\t\t\t\t? curve._segment1\n\t\t\t\t\t: t > tMax\n\t\t\t\t\t\t? curve._segment2\n\t\t\t\t\t\t: curve.getPartLength(0, t) < curve.getPartLength(t, 1)\n\t\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tsegment._intersection = loc.getIntersection();\n\t\t\tloc._segment = segment;\n\t\t\tprev = loc;\n\t\t}\n\t\tif (linearHandles)\n\t\t\tresetLinear();\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar tolerance = 0.000001,\n\t\t\ttMin = tolerance,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - tolerance,\n\t\t\t\tyAfter = py + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.evaluate(values, roots[j], 0).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves);\n\t\t} else {\n\t\t\tvar xBefore = px - tolerance,\n\t\t\t\txAfter = px + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding,\n\t\t\t\t\tprevT,\n\t\t\t\t\tprevX;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tx = Curve.evaluate(values, t, 0).x,\n\t\t\t\t\t\tslope = Curve.evaluate(values, t, 1).y;\n\t\t\t\t\tif (!(t > tMax\n\t\t\t\t\t\t\t&& (i === l - 1 || curve.next !== curves[i + 1])\n\t\t\t\t\t\t\t&& abs(Curve.evaluate(curve.next.values, 0, 0).x -x)\n\t\t\t\t\t\t\t\t<= tolerance\n\t\t\t\t\t\t|| i > 0 && curve.previous === curves[i - 1]\n\t\t\t\t\t\t\t&& abs(prevX - x) < tolerance\n\t\t\t\t\t\t\t&& prevT > tMax && t < tMin)) {\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isLinear(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0, 1).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprevT = t;\n\t\t\t\t\tprevX = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction tracePaths(segments, operator, selfOp) {\n\t\tvar paths = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0, seg, startSeg, l = segments.length; i < l; i++) {\n\t\t\tseg = startSeg = segments[i];\n\t\t\tif (seg._visited || !operator(seg._winding))\n\t\t\t\tcontinue;\n\t\t\tvar path = new Path(Item.NO_INSERT),\n\t\t\t\tinter = seg._intersection,\n\t\t\t\tstartInterSeg = inter && inter._segment,\n\t\t\t\tadded = false,\n\t\t\t\tdir = 1;\n\t\t\tdo {\n\t\t\t\tvar handleIn = dir > 0 ? seg._handleIn : seg._handleOut,\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn,\n\t\t\t\t\tinterSeg;\n\t\t\t\tif (added && (!operator(seg._winding) || selfOp)\n\t\t\t\t\t\t&& (inter = seg._intersection)\n\t\t\t\t\t\t&& (interSeg = inter._segment)\n\t\t\t\t\t\t&& interSeg !== startSeg) {\n\t\t\t\t\tif (selfOp) {\n\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar c1 = seg.getCurve();\n\t\t\t\t\t\tif (dir > 0)\n\t\t\t\t\t\t\tc1 = c1.getPrevious();\n\t\t\t\t\t\tvar t1 = c1.getTangentAt(dir < 1 ? tMin : tMax, true),\n\t\t\t\t\t\t\tc4 = interSeg.getCurve(),\n\t\t\t\t\t\t\tc3 = c4.getPrevious(),\n\t\t\t\t\t\t\tt3 = c3.getTangentAt(tMax, true),\n\t\t\t\t\t\t\tt4 = c4.getTangentAt(tMin, true),\n\t\t\t\t\t\t\tw3 = t1.cross(t3),\n\t\t\t\t\t\t\tw4 = t1.cross(t4);\n\t\t\t\t\t\tif (w3 * w4 !== 0) {\n\t\t\t\t\t\t\tvar curve = w3 < w4 ? c3 : c4,\n\t\t\t\t\t\t\t\tnextCurve = operator(curve._segment1._winding)\n\t\t\t\t\t\t\t\t\t? curve\n\t\t\t\t\t\t\t\t\t: w3 < w4 ? c4 : c3,\n\t\t\t\t\t\t\t\tnextSeg = nextCurve._segment1;\n\t\t\t\t\t\t\tdir = nextCurve === c3 ? -1 : 1;\n\t\t\t\t\t\t\tif (nextSeg._visited && seg._path !== nextSeg._path\n\t\t\t\t\t\t\t\t\t\t|| !operator(nextSeg._winding)) {\n\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\t\t\tif (nextSeg._visited)\n\t\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, added && handleIn, handleOut));\n\t\t\t\tadded = true;\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = dir > 0 ? seg.getNext() : seg. getPrevious();\n\t\t\t} while (seg && !seg._visited\n\t\t\t\t\t&& seg !== startSeg && seg !== startInterSeg\n\t\t\t\t\t&& (seg._intersection || operator(seg._winding)));\n\t\t\tif (seg && (seg === startSeg || seg === startInterSeg)) {\n\t\t\t\tpath.firstSegment.setHandleIn((seg === startInterSeg\n\t\t\t\t\t\t? startInterSeg : seg)._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else {\n\t\t\t\tpath.lastSegment._handleOut.set(0, 0);\n\t\t\t}\n\t\t\tif (path._segments.length >\n\t\t\t\t\t(path._closed ? path.isPolygon() ? 2 : 0 : 1))\n\t\t\t\tpaths.push(path);\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn new Group([this.subtract(path), this.intersect(path)]);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isLinear(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttolerance = 0.000001,\n\t\t\t\t\troots = [];\n\t\t\t\tvar count = Numerical.solveQuadratic(a, b, c, roots, tolerance,\n\t\t\t\t\t\t1 - tolerance);\n\t\t\t\tif (count === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.evaluate(values, roots[j], 0).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 0.000001) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tevaluate: function(offset, type) {\n\t\tvar param = this.getParameterAt(offset);\n\t\treturn Curve.evaluate(this.curves[param.index], param.value, type);\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\treturn this.evaluate(offset, index);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tthis.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1);\n\t\tepsilon *= segLength;\n\t\tif (alpha1 < epsilon || alpha2 < epsilon) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t}\n\n\t\treturn [pt1, pt1.add(tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 0.000001)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tvalue = parser.call(this, value);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tthis._components[index] = value;\n\t\t\t\t\tthis._changed();\n\t\t\t\t}\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type];\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tif (type === 'gradient')\n\t\t\t\tthis._id = Color._id = (Color._id || 0) + 1;\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n}, new function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nBase.each(Color._types, function(properties, type) {\n\tvar ctor = this[Base.capitalize(type) + 'Color'] = function(arg) {\n\t\t\tvar argType = arg != null && typeof arg,\n\t\t\t\tcomponents = argType === 'object' && arg.length != null\n\t\t\t\t\t? arg\n\t\t\t\t\t: argType === 'string'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: arguments;\n\t\t\treturn components\n\t\t\t\t\t? new Color(type, components)\n\t\t\t\t\t: new Color(arg);\n\t\t};\n\tif (type.length == 3) {\n\t\tvar acronym = type.toUpperCase();\n\t\tColor[acronym] = this[acronym + 'Color'] = ctor;\n\t}\n}, Base.exports);\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = Gradient._id = (Gradient._id || 0) + 1;\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = typeof window === 'object' &&\n\t\t\tDomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tif ( typeof window === 'object' ) {\n\t\tDomEvent.add(window, {\n\t\t\tfocus: function() {\n\t\t\t\tfocused = true;\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tfocused = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif ( !noCanvas ) {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchAction: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\tuserDrag: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\n\t\t\tfunction getSize(name) {\n\t\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t\t}\n\n\t\t\tfunction getCanvasSize() {\n\t\t\t\tvar size = DomElement.getSize(element);\n\t\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t\t: size;\n\t\t\t}\n\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._setViewSize(size = getCanvasSize());\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = 1;\n\t\t\tthis._id = 'view-' + View._id++;\n\t\t\tsize = new Size(element.width, element.height);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: {\n\t\tonFrame: {\n\t\t\tinstall: function() {\n\t\t\t\tthis.play();\n\t\t\t},\n\n\t\t\tuninstall: function() {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t},\n\n\t\tonResize: {}\n\t},\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n}, new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif ( !noCanvas ) {\n\t\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tif (size.isZero())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t\t}\n\t\t\tthis._context = canvas.getContext('2d');\n\t\t}\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!noCanvas && !/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font;\n\t\tctx.font = size + ' serif';\n\t\tsize = parseFloat(ctx.font);\n\t\tctx.font = prevFont;\n\t\treturn size;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function() {\n\t\tvar project = this._project;\n\t\tif (!project || !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n}, new function() {\n\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers)\n\t\t\tmodifiers[name] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = this._minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = distance;\n\t\tthis._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tvar maxDist = maxDistance != null ? maxDistance : 0;\n\t\t\t\tif (maxDist != 0) {\n\t\t\t\t\tif (distance > maxDist) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDist));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback) {\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, true);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif ( noCanvas ) {\n\t\t\treturn { getContext: function() {} };\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tif (options.matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (item.isPolygon()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (applyMatrix && item)\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n\n},{}],3:[function(require,module,exports){\nfunction Collection( args ) {\n\t// already a Collection? Job's done\n\tif ( arguments.length === 1 && args instanceof Collection ) {\n\t\treturn args;\n\n\t} else if ( arguments.length > 1 || !Array.isArray( args ) ) {\n\t\targs = [].slice.call( arguments, 0 );\n\t}\n\n\tthis.length = 0;\n\n\targs.forEach(function( arg ) {\n\t\t// unwrap any collection\n\t\tif ( arg instanceof Collection ) {\n\t\t\tfor ( var i = -1; ++i < arg.length; ) {\n\t\t\t\tthis[this.length++] = arg[i];\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis[this.length++] = arg;\n\t\t}\n\n\t}, this);\n\n\treturn this;\n}\n\nCollection.prototype.forEach = function(cb, scope) {\n\tfor ( var i = -1; ++i < this.length; ) {\n\t\tcb.call(scope || this[i], this[i], i, this);\n\t}\n\n\treturn this;\n};\n\nCollection.prototype.prop = function(name, val) {\n\tvar i;\n\n\t// object setter\n\tif ( typeof name === 'object' ) {\n\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\tthis[i].set( name );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// getter\n\tif ( val === undefined ) {\n\t\treturn this[0][name];\n\t}\n\n\t// simple setter\n\tfor ( i = -1; ++i < this.length; ) {\n\t\tthis[i][name] = val;\n\t}\n\n\treturn this;\n};\n\nfunction wrapConstructor( constructor, prototype, useConstructed ) {\n\treturn function wrapper() {\n\t\tvar c,\n\t\t\ttmp,\n\t\t\tarr = [];\n\n\t\t// constructor used with new\n\t\tif ( this instanceof wrapper ) {\n\t\t\t// proxy to paper native constructor\n\t\t\tc = Object.create(prototype);\n\t\t\ttmp = constructor.apply(c, arguments);\n\t\t\treturn useConstructed ?\n\t\t\t\ttmp : c;\n\n\t\t// without new, build a collection\n\t\t} else {\n\t\t\tif ( Array.isArray( arguments[0] ) ) {\n\t\t\t\targuments[0].forEach(function(params, i) {\n\t\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\t\tc = constructor.call( arr[i], params );\n\t\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\t\tarr[i] = c;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\tc = constructor.apply( arr[0], arguments );\n\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\tarr[0] = c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Collection( arr );\n\t\t}\n\t};\n}\n\nvar rconstructor = /(^|\\.)[A-Z][A-z]+$/;\nfunction constructorFilter( name ) {\n\treturn typeof this[name] === 'function' && rconstructor.test(name);\n}\n\n// unwrap a collection or array of collection\nfunction unwrapArg( arr, id, isPlural ) {\n\t// unwrap a single collection\n\tif ( arr && arr[id] instanceof Collection ) {\n\t\tarr[id] = isPlural ?\n\t\t\t[].slice.call( arr[id], 0 ) :\n\t\t\tarr[id][0];\n\n\t// unwrap an array of collection\n\t} else if ( arr && arr[id].length && arr[id][0] instanceof Collection ) {\n\t\tfor ( var i = -1; ++i < arr[id].length; ) {\n\t\t\tarr[id][i] = arr[id][i][0];\n\t\t}\n\t}\n}\n\nfunction unwrapArgs() {\n\tvar isPlural = this.isPlural,\n\t\targs = [].slice.call( arguments, 0 ),\n\t\tid,\n\t\ti;\n\n\t// first arg is an object and might have a collection or array of collection\n\t// Todo: objects should be unwrapped recursively\n\tif ( args[0] && args[0].constructor === Object ) {\n\t\tif ( 'children' in args[0] ) {\n\t\t\tid = 'children';\n\n\t\t} else if ( 'segments' in args[0] ) {\n\t\t\tid = 'segments';\n\n\t\t} else if ( 'nodes' in args[0] ) {\n\t\t\tid = 'nodes';\n\t\t}\n\n\t\tunwrapArg( args[0], id, true );\n\n\t// otherwise unwrap each arg\n\t} else {\n\t\tfor ( i = -1; ++i < args.length; ) {\n\t\t\t// if the method is plural (addChildren) and we're unwrapping\n\t\t\t// the last argument, we want to keep it in an array\n\t\t\tunwrapArg( args, i, i === args.length - 1 && isPlural );\n\t\t}\n\t}\n\n\treturn args;\n}\n\nCollection.proxy = function( paper ) {\n\tvar plumin = this;\n\n\tplumin.paper = paper;\n\n\tvar methodNames = {};\n\tObject.getOwnPropertyNames( paper.PaperScope.prototype )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype )\n\t\t.forEach(function(name) {\n\t\t\tplumin[name] = wrapConstructor( this[name], this[name].prototype );\n\n\t\t\t// we don't want to proxy methods of Collection\n\t\t\tif ( name === 'Collection' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tObject.getOwnPropertyNames( this[name].prototype )\n\t\t\t\t.forEach(function(_name) {\n\t\t\t\t\t// collect unique method names (first test avoids getters)\n\t\t\t\t\tif ( !Object.getOwnPropertyDescriptor(this, _name).get &&\n\t\t\t\t\t\t\ttypeof this[_name] === 'function' ) {\n\n\t\t\t\t\t\tmethodNames[_name] = true;\n\t\t\t\t\t}\n\n\t\t\t\t}, this[name].prototype);\n\n\t\t}, paper.PaperScope.prototype);\n\n\tObject.keys( paper.PaperScope.prototype.Path )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Path )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Path[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Path );\n\n\tObject.keys( paper.PaperScope.prototype.Shape )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Shape )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Shape[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Shape );\n\n\t// proxy the most commonly used method of paper\n\t// do it only after proxying constructors otherwise it's overwritten\n\tplumin.setup = paper.setup.bind(paper);\n\n\t// proxy all methods from every constructor\n\t// by default methods aren't chainable\n\tObject.keys( methodNames ).sort().forEach(function(name) {\n\t\t// please oh please, don't overwrite my constructor, I need it.\n\t\tif ( name === 'constructor' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(null, arguments),\n\t\t\t\ti,\n\t\t\t\tresult;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tresult = this[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// by default methods aren't chainable\n\t\t\t// return the last result\n\t\t\treturn result;\n\t\t};\n\t});\n\n\t\t// addChild( item ) and other methods with similar signatures\n\t\t// that we want to make chainable\n\tvar chain = [\n\t\t\t'set',\n\t\t\t'setX',\n\t\t\t'setY',\n\t\t\t'insertAbove',\n\t\t\t'insertBelow',\n\t\t\t'sendToBack',\n\t\t\t'bringToFront',\n\t\t\t'remove',\n\t\t\t'removeChildren',\n\t\t\t'reverseChildren',\n\n\t\t\t'translate',\n\t\t\t'rotate',\n\t\t\t'scale',\n\t\t\t'shear',\n\t\t\t'skew',\n\t\t\t'transform',\n\t\t\t'fitBounds',\n\t\t\t'emit',\n\n\t\t\t'activate',\n\n\t\t\t'setPixel',\n\n\t\t\t'smooth',\n\t\t\t'moveTo',\n\t\t\t'lineTo',\n\t\t\t'cubicCurveTo',\n\t\t\t'quadraticCurveTo',\n\t\t\t'curveTo',\n\t\t\t'arcTo',\n\t\t\t'closePath',\n\t\t\t'moveBy',\n\t\t\t'lineBy',\n\t\t\t'cubicCurveBy',\n\t\t\t'quadraticCurveBy',\n\t\t\t'curveBy',\n\t\t\t'arcBy',\n\n\t\t\t'removeSegments',\n\t\t\t'simplify',\n\t\t\t'reverse',\n\n\t\t\t// Rectangle\n\t\t\t'include',\n\t\t\t'expand',\n\t\t\t'scale',\n\t\t// ],\n\t\t// createAndChain = [\n\t\t\t'addChild',\n\t\t\t'insertChild',\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'replaceWith',\n\n\t\t\t'appendTop',\n\t\t\t'appendBottom',\n\n\t\t\t'add',\n\t\t\t'insert',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNode',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\n\t\t\t'addGlyph',\n\t\t\t'addGlyphs',\n\n\t\t\t'addContour',\n\t\t\t'insertContour',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addAnchor',\n\t\t\t'addAnchors',\n\t\t\t'addComponent',\n\t\t\t'addComponents',\n\n\t\t\t'addUnicode',\n\t\t\t'prepareOt',\n\t\t\t'addToFonts',\n\t\t\t'download'\n\t\t],\n\t\tplural = [\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\t\t\t'addGlyphs',\n\t\t\t'addAnchors',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addComponents'\n\t\t]/*,\n\t\tmathPoinFn = [\n\t\t\t'round',\n\t\t\t'ceil',\n\t\t\t'floor',\n\t\t\t'abs'\n\t\t],\n\t\tbooleanPathOp = [\n\t\t\t'unite',\n\t\t\t'intersect',\n\t\t\t'subtract',\n\t\t\t'exclude',\n\t\t\t'divide'\n\t\t]*/;\n\n\tchain.forEach(function(name) {\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(\n\t\t\t\t\t{ isPlural: plural.indexOf(name) !== -1 },\n\t\t\t\t\targuments\n\t\t\t\t),\n\t\t\t\ti;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tthis[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// make method chainable\n\t\t\treturn this;\n\t\t};\n\t});\n\n\t// singular chainable method\n};\n\nmodule.exports = Collection;\n\n},{}],4:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tGlyph = require('./Glyph.js');\n\nfunction Font( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\tif ( !args ) {\n\t\targs = {};\n\t}\n\n\tif ( !args.styleName ) {\n\t\targs.styleName = 'Regular';\n\t}\n\n\tif ( !args.unitsPerEm ) {\n\t\targs.unitsPerEm = 1024;\n\t}\n\n\tthis.fontinfo = this.ot = new opentype.Font( args );\n\n\tthis.glyphMap = {};\n\tthis.charMap = {};\n\tthis.altMap = {};\n\tthis._subset = false;\n\n\tthis.addGlyph(new Glyph({\n\t\tname: '.notdef',\n\t\tunicode: 0\n\t}));\n\n\tif ( args && args.glyphs ) {\n\t\tthis.addGlyphs( args.glyphs );\n\t}\n\n\tif ( typeof window === 'object' && window.document ) {\n\t\t// work around https://bugzilla.mozilla.org/show_bug.cgi?id=1100005\n\t\t// by using fonts.delete in batch, every 1 second\n\t\tif ( document.fonts ) {\n\t\t\tthis.addedFonts = [];\n\n\t\t\tsetInterval(function() {\n\t\t\t\twhile ( this.addedFonts.length > 1 ) {\n\t\t\t\t\tdocument.fonts.delete( this.addedFonts.shift() );\n\t\t\t\t}\n\t\t\t}.bind(this), 1000);\n\n\t\t} else {\n\t\t\tdocument.head.appendChild(\n\t\t\t\tthis.styleElement = document.createElement('style')\n\t\t\t);\n\t\t\t// let's find the corresponding CSSStyleSheet\n\t\t\t// (would be much easier with Array#find)\n\t\t\tthis.styleSheet = document.styleSheets[\n\t\t\t\t[].map.call(document.styleSheets, function(ss) {\n\t\t\t\t\treturn ss.ownerNode;\n\t\t\t\t}).indexOf(this.styleElement)\n\t\t\t];\n\t\t}\n\t}\n}\n\nFont.prototype = Object.create(paper.Group.prototype);\nFont.prototype.constructor = Font;\n\n// proxy .glyphs to .children\n// TODO: handle unicode updates\nObject.defineProperty(\n\tFont.prototype,\n\t'glyphs',\n\tObject.getOwnPropertyDescriptor( paper.Item.prototype, 'children' )\n);\n\n// TODO: proper proxying of ...Glyph[s] methods to ...Child[ren] methods\n// see Glyph.js\nFont.prototype.addGlyph = function( glyph ) {\n\tthis.addChild( glyph );\n\tthis.glyphMap[glyph.name] = glyph;\n\n\tif ( glyph.ot.unicode === undefined ) {\n\t\treturn glyph;\n\t}\n\n\t// build the default cmap\n\t// if multiple glyphs share the same unicode, use the glyph where unicode\n\t// and name are equal\n\tif ( !this.charMap[glyph.ot.unicode] ||\n\t\t\t( glyph.name.length === 1 &&\n\t\t\t\tglyph.name.charCodeAt(0) === glyph.ot.unicode ) ) {\n\n\t\tthis.charMap[glyph.ot.unicode] = glyph;\n\t}\n\n\t// build the alternates map\n\tif ( !this.altMap[glyph.ot.unicode] ) {\n\t\tthis.altMap[glyph.ot.unicode] = [];\n\t}\n\tthis.altMap[glyph.ot.unicode].push( glyph );\n\n\t// invalidate glyph subset cache\n\t// TODO: switch to immutable.js to avoid this maddness\n\tthis._lastSubset = undefined;\n\n\treturn glyph;\n};\n\nFont.prototype.addGlyphs = function( glyphs ) {\n\treturn glyphs.forEach(function( glyph ) {\n\t\tthis.addGlyph(glyph);\n\n\t}, this);\n};\n\nObject.defineProperty( Font.prototype, 'subset', {\n\tget: function() {\n\t\tif ( !this._subset ) {\n\t\t\tthis._subset = this.normalizeSubset( false );\n\t\t}\n\t\treturn this._subset;\n\t},\n\tset: function( set ) {\n\t\tthis._subset = this.normalizeSubset( set );\n\t}\n});\n\nFont.prototype.normalizeSubset = function( _set ) {\n\tvar set;\n\n\t// two cases where _set isn't an array\n\t// false set = all glyphs in the charMap\n\tif ( _set === false ) {\n\t\tset = Object.keys( this.charMap ).map(function( unicode ) {\n\t\t\treturn this.charMap[unicode];\n\t\t}.bind(this));\n\n\t// convert string to array of chars\n\t} else if ( typeof _set === 'string' ) {\n\t\tset = _set.split('').map(function(e) {\n\t\t\treturn e.charCodeAt(0);\n\t\t});\n\n\t} else {\n\t\tset = _set;\n\t}\n\n\t// convert array of number to array of glyphs\n\tif ( Array.isArray( set ) && typeof set[0] === 'number' ) {\n\t\tset = set.map(function( unicode ) {\n\t\t\treturn this.charMap[ unicode ];\n\t\t}.bind(this));\n\t}\n\n\t// always include .undef\n\tif ( set.indexOf( this.glyphMap['.notdef'] ) === -1 ) {\n\t\tset.unshift( this.glyphMap['.notdef'] );\n\t}\n\n\t// remove undefined glyphs and dedupe the set\n\treturn set.filter(function(e, i, arr) {\n\t\treturn e && arr.lastIndexOf(e) === i;\n\t});\n};\n\nFont.prototype.getGlyphSubset = function( _set ) {\n\treturn _set !== undefined ? this.normalizeSubset( _set ) : this.subset;\n};\n\nFont.prototype.setAlternateFor = function( unicode, glyphName ) {\n\tthis.charMap[ unicode ] = this.glyphMap[ glyphName ];\n};\n\nFont.prototype.interpolate = function( font0, font1, coef, set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\tglyph.interpolate(\n\t\t\tfont0.glyphMap[glyph.name],\n\t\t\tfont1.glyphMap[glyph.name],\n\t\t\tcoef\n\t\t);\n\t});\n\n\t// TODO: evaluate if taking subsetting into account makes kerning\n\t// interpolation faster or slower.\n\tif ( this.ot.kerningPairs ) {\n\t\tfor ( var i in this.ot.kerningPairs ) {\n\t\t\tthis.ot.kerningPairs[i] =\n\t\t\t\tfont0.ot.kerningPairs[i] +\n\t\t\t\t( font1.ot.kerningPairs[i] - font0.ot.kerningPairs[i] ) * coef;\n\t\t}\n\t}\n\n\tthis.ot.ascender =\n\t\tfont0.ot.ascender + ( font1.ot.ascender - font0.ot.ascender ) * coef;\n\tthis.ot.descender =\n\t\tfont0.ot.descender + ( font1.ot.descender - font0.ot.descender ) * coef;\n\n\treturn this;\n};\n\nFont.prototype.updateSVGData = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateSVGData();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.updateOTCommands = function( set, united ) {\n\tthis.ot.glyphs = this.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateOTCommands( null, united);\n\t});\n\n\treturn this;\n};\n\nFont.prototype.importOT = function( otFont ) {\n\tthis.ot = otFont;\n\n\totFont.glyphs.forEach(function( otGlyph ) {\n\t\tvar glyph = new Glyph({\n\t\t\t\tname: otGlyph.name,\n\t\t\t\tunicode: otGlyph.unicode\n\t\t\t});\n\n\t\tthis.addGlyph( glyph );\n\t\tglyph.importOT( otGlyph );\n\n\t}, this);\n\n\treturn this;\n};\n\nif ( typeof window === 'object' && window.document ) {\n\n\tvar _URL = window.URL || window.webkitURL;\n\tFont.prototype.addToFonts = document.fonts ?\n\t\t// CSS font loading, lightning fast\n\t\tfunction( buffer ) {\n\t\t\tvar fontface = new window.FontFace(\n\t\t\t\tthis.ot.familyName,\n\t\t\t\tbuffer || this.ot.toBuffer()\n\t\t\t);\n\n\t\t\tdocument.fonts.add( fontface );\n\t\t\tthis.addedFonts.push( fontface );\n\n\t\t\treturn this;\n\t\t} :\n\t\tfunction( buffer ) {\n\t\t\tvar url = _URL.createObjectURL(\n\t\t\t\t\tnew Blob(\n\t\t\t\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t\t\t\t{ type: 'font/opentype' }\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tif ( this.fontObjectURL ) {\n\t\t\t\t_URL.revokeObjectURL( this.fontObjectURL );\n\t\t\t\tthis.styleSheet.deleteRule(0);\n\t\t\t}\n\n\t\t\tthis.styleSheet.insertRule(\n\t\t\t\t'@font-face { font-family: \"' + this.ot.familyName + '\";' +\n\t\t\t\t'src: url(' + url + '); }',\n\t\t\t\t0\n\t\t\t);\n\t\t\tthis.fontObjectURL = url;\n\n\t\t\treturn this;\n\t\t};\n\n\tvar a = document.createElement('a');\n\n\tFont.prototype.downloadFromLink = function( buffer ) {\n\t\t\tvar reader = new FileReader(),\n\t\t\t\tfamilyName = this.ot.familyName;\n\n\t\t\treader.onloadend = function() {\n\t\t\t\ta.download = familyName + '.otf';\n\t\t\t\ta.href = reader.result;\n\t\t\t\ta.dispatchEvent(new MouseEvent('click'));\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\ta.href = '#';\n\t\t\t\t\t_URL.revokeObjectURL( reader.result );\n\t\t\t\t}, 100);\n\t\t\t};\n\n\t\t\treader.readAsDataURL(new Blob(\n\t\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t\t{ type: 'font/opentype' }\n\t\t\t));\n\t};\n\n\tFont.prototype.download = function( buffer, merged, name, user ) {\n\t\tif ( merged ) {\n\t\t\tvar headers = new Headers();\n\t\t\theaders.append('Content-Type', 'application/otf');\n\n\t\t\tfetch('http://fontforgeconv.cloudapp.net/' + name + '/' + user, {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: headers,\n\t\t\t\t\tbody: buffer\n\t\t\t\t})\n\t\t\t\t.then(function( response ) {\n\n\t\t\t\t\tresponse.arrayBuffer()\n\t\t\t\t\t\t.then(function( bufferToDownload ) {\n\t\t\t\t\t\t\tthis.downloadFromLink(bufferToDownload);\n\t\t\t\t\t\t}.bind(this));\n\n\t\t\t\t}.bind(this))\n\t\t\t\t.catch(function(err) {\n\t\t\t\t\tconsole.log('error: ', err);\n\t\t\t\t});\n\n\t\t} else {\n\t\t\tthis.downloadFromLink( buffer );\n\n\t\t\treturn this;\n\t\t}\n\t};\n\n}\n\nmodule.exports = Font;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Glyph.js\":5}],5:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tOutline = require('./Outline.js');\n\nfunction Glyph( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\tif ( args && typeof args.unicode === 'string' ) {\n\t\targs.unicode = args.unicode.charCodeAt(0);\n\t}\n\n\tthis.ot = new opentype.Glyph( args );\n\tthis.ot.path = new opentype.Path();\n\n\tthis.name = args.name;\n\t// workaround opentype 'unicode === 0' bug\n\tthis.ot.unicode = args.unicode;\n\n\tthis.addChild( new Outline() );\n\t// the second child will hold all components\n\tthis.addChild( new paper.Group() );\n\t// Should all anchors and parentAnchors also leave in child groups?\n\tthis.anchors = ( args && args.anchors ) || [];\n\tthis.parentAnchors = ( args && args.parentAnchors ) || [];\n\n\t// each individual glyph must be explicitely made visible\n\tthis.visible = false;\n\t// default colors required to display the glyph in a canvas\n\tthis.fillColor = new paper.Color(0, 0, 0);\n\t// stroke won't be displayed unless strokeWidth is set to 1\n\tthis.strokeColor = new paper.Color(0, 0, 0);\n\tthis.strokeScaling = false;\n}\n\nGlyph.prototype = Object.create(paper.Group.prototype);\nGlyph.prototype.constructor = Glyph;\n\n// Todo: handle unicode updates\nObject.defineProperty(Glyph.prototype, 'unicode', {\n\tset: function( code ) {\n\t\tthis.ot.unicode = typeof code === 'string' ?\n\t\t\tcode.charCodeAt(0) :\n\t\t\tcode;\n\t},\n\tget: function() {\n\t\treturn this.ot.unicode;\n\t}\n});\n\n// proxy .contours to .children[0]\nObject.defineProperty( Glyph.prototype, 'contours', {\n\tget: function() {\n\t\treturn this.children[0].children;\n\t}\n});\n\n// proxy .components to .children[1]\nObject.defineProperty( Glyph.prototype, 'components', {\n\tget: function() {\n\t\treturn this.children[1].children;\n\t}\n});\n\n// proxy .visible to\n\n// proxy ...Contour[s] methods to children[0]...Child[ren] methods\n// and proxy ...Component[s] methods to children[1]...Child[ren] methods\nObject.getOwnPropertyNames( paper.Item.prototype ).forEach(function(name) {\n\tvar proto = this;\n\n\t// exclude getters and non-methods\n\tif ( Object.getOwnPropertyDescriptor(proto, name).get ||\n\t\t\ttypeof proto[name] !== 'function' ) {\n\t\treturn;\n\t}\n\n\tif ( name.indexOf('Children') !== -1 ) {\n\t\tproto[name.replace('Children', 'Contours')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Children', 'Components')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\n\t} else if ( name.indexOf('Child') !== -1 ) {\n\t\tproto[name.replace('Child', 'Contour')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Child', 'Component')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\t}\n\n}, paper.Item.prototype);\n\nGlyph.prototype.addAnchor = function( item ) {\n\tthis.anchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addAnchors = function( anchors ) {\n\treturn anchors.forEach(function(anchor) {\n\t\tthis.addAnchor(anchor);\n\t}, this);\n};\n\nGlyph.prototype.addParentAnchor = function( item ) {\n\tthis.parentAnchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addUnicode = function( code ) {\n\tthis.ot.addUnicode( code );\n\n\treturn this;\n};\n\nGlyph.prototype.interpolate = function( glyph0, glyph1, coef ) {\n\t// If we added an interpolate method to Group, we'd be able to just\n\t// interpolate all this.children directly.\n\t// instead we interpolate the outline first\n\tthis.children[0].interpolate( glyph0.children[0], glyph1.children[0] );\n\t// and then the components\n\tthis.children[1].children.forEach(function(component, j) {\n\t\tcomponent.interpolate(\n\t\t\tglyph0.children[1].children[j], glyph1.children[1].children[j], coef\n\t\t);\n\t});\n\n\tthis.ot.advanceWidth =\n\t\tglyph0.ot.advanceWidth +\n\t\t( glyph1.ot.advanceWidth - glyph0.ot.advanceWidth ) * coef;\n\tthis.ot.leftSideBearing =\n\t\tglyph0.ot.leftSideBearing +\n\t\t( glyph1.ot.leftSideBearing - glyph0.ot.leftSideBearing ) * coef;\n\tthis.ot.xMax =\n\t\tglyph0.ot.xMax + ( glyph1.ot.xMax - glyph0.ot.xMax ) * coef;\n\tthis.ot.xMin =\n\t\tglyph0.ot.xMin + ( glyph1.ot.xMin - glyph0.ot.xMin ) * coef;\n\tthis.ot.yMax =\n\t\tglyph0.ot.yMax + ( glyph1.ot.yMax - glyph0.ot.yMax ) * coef;\n\tthis.ot.yMin =\n\t\tglyph0.ot.yMin + ( glyph1.ot.yMin - glyph0.ot.yMin ) * coef;\n\n\treturn this;\n};\n\nGlyph.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children[0].updateSVGData( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateSVGData( path );\n\t});\n\n\treturn this.svgData;\n};\n\nGlyph.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n/* eslint-disable */\n\tthis.children[0].updateOTCommands( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateOTCommands( path );\n\t});\n/* eslint-enable */\n\n\treturn this.ot;\n};\n\nGlyph.prototype.importOT = function( otGlyph ) {\n\tvar current;\n\tthis.ot = otGlyph;\n\n\tif ( !otGlyph.path || !otGlyph.path.commands ) {\n\t\treturn this;\n\t}\n\n\tthis.ot.path.commands.forEach(function(command) {\n\t\tswitch ( command.type ) {\n\t\t\tcase 'M':\n\t\t\t\tcurrent = new paper.Path();\n\t\t\t\tthis.addContour( current );\n\n\t\t\t\tcurrent.moveTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tcurrent.lineTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tcurrent.cubicCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\t[ command.x2, command.y2 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tcurrent.quadraticCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\t// When the glyph has no contour,\n\t\t\t\t// they contain a single Z command in\n\t\t\t\t// opentype.js.\n\t\t\t\t// TODO: see how we should handle that\n\t\t\t\tif ( current ) {\n\t\t\t\t\tcurrent.closePath();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}, this);\n\n\treturn this;\n};\n\nmodule.exports = Glyph;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Outline.js\":7}],6:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nObject.defineProperty( paper.Segment.prototype, 'x', {\n\tget: function() {\n\t\treturn this.point.x;\n\t},\n\tset: function( value ) {\n\t\tthis.point.x = value;\n\t}\n});\n\nObject.defineProperty( paper.Segment.prototype, 'y', {\n\tget: function() {\n\t\treturn this.point.y;\n\t},\n\tset: function( value ) {\n\t\tthis.point.y = value;\n\t}\n});\n\nmodule.exports = paper.Segment;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],7:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nfunction Outline() {\n\tpaper.CompoundPath.prototype.constructor.apply( this );\n}\n\n// inehrit CompoundPath\nOutline.prototype = Object.create(paper.CompoundPath.prototype);\nOutline.prototype.constructor = Outline;\n\n// Fix two problems with CompoundPath#insertChildren:\n// - it arbitrarily changes the direction of paths\n// - it seems that it doesn't handle CompoundPath arguments\nOutline.prototype.insertChildren = function(index, items, _preserve) {\n\tif ( Array.isArray( items ) ) {\n\t\t// flatten items to handle CompoundPath children\n\t\titems = [].concat.apply([], items.map(function(item) {\n\t\t\treturn item instanceof paper.Path ? item : item.children;\n\t\t}));\n\t}\n\n\treturn paper.Item.prototype.insertChildren.call(\n\t\tthis, index, items, _preserve, paper.Path\n\t);\n};\n\nOutline.fromPath = function( path ) {\n\tvar result = new Outline();\n\treturn path._clone( result, false );\n};\n\nOutline.prototype.interpolate = function( outline0, outline1, coef ) {\n\tfor (var i = 0, l = this.contours.length; i < l; i++) {\n\t\t// The number of children should be the same everywhere,\n\t\t// but we're going to try our best anyway\n\t\tif ( !outline0.children[i] || !outline1.children[i] ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.children[i].interpolate(\n\t\t\toutline0.children[i],\n\t\t\toutline1.children[i],\n\t\t\tcoef\n\t\t);\n\t}\n\n\treturn this;\n};\n\nOutline.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateSVGData( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.svgData;\n};\n\nOutline.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateOTCommands( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.ot;\n};\n\nmodule.exports = Outline;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],8:[function(require,module,exports){\n/* Extend the Path prototype to add OpenType conversion\n * and alias *segments methods and properties to *nodes\n */\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nvar proto = paper.PaperScope.prototype.Path.prototype;\n\n// alias *Segments methods to *Nodes equivalents\n[ 'add', 'insert', 'remove' ].forEach(function(name) {\n\tproto[name + 'Nodes'] =\n\t\tproto[name + 'Segments'];\n});\n\n// alias .segments to .nodes\nObject.defineProperties(proto, {\n\tnodes: Object.getOwnPropertyDescriptor( proto, 'segments' ),\n\tfirstNode: Object.getOwnPropertyDescriptor( proto, 'firstSegment' ),\n\tlastNode: Object.getOwnPropertyDescriptor( proto, 'lastSegment' )\n});\n\nproto._updateData = function( data, matrix, pushSimple, pushBezier ) {\n\tif ( this.visible === false || this.curves.length === 0) {\n\t\treturn data;\n\t}\n\n\t// prototypo needs to be able to change the direction of the updated data.\n\tvar reverse = this.exportReversed,\n\t\tcurves = this.curves,\n\t\tstart = curves[ reverse ? curves.length - 1 : 0 ]\n\t\t\t[ 'point' + ( reverse ? 2 : 1 ) ]\n\t\t\t.transform( matrix );\n\n\tpushSimple(\n\t\t'M',\n\t\tMath.round( start.x ) || 0,\n\t\tMath.round( start.y ) || 0\n\t);\n\n\tfor ( var i = -1, l = curves.length; ++i < l; ) {\n\t\tvar curve = curves[ reverse ? l - 1 - i : i ],\n\t\t\tend = curve['point' + ( reverse ? 1 : 2 ) ].transform( matrix );\n\n\t\tif ( curve.isLinear() ) {\n\t\t\tpushSimple(\n\t\t\t\t'L',\n\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\tMath.round( end.y ) || 0\n\t\t\t);\n\n\t\t} else {\n\t\t\tvar ctrl1 = new paper.Point(\n\t\t\t\t\tcurve.point1.x + curve.handle1.x,\n\t\t\t\t\tcurve.point1.y + curve.handle1.y\n\t\t\t\t).transform( matrix ),\n\t\t\t\tctrl2 = new paper.Point(\n\t\t\t\t\tcurve.point2.x + curve.handle2.x,\n\t\t\t\t\tcurve.point2.y + curve.handle2.y\n\t\t\t\t).transform( matrix );\n\n\t\t\tif ( reverse ) {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( this.closed ) {\n\t\tpushSimple('Z');\n\t}\n\n\treturn data;\n};\n\nproto.updateOTCommands = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx: arguments[1],\n\t\t\t\ty: arguments[2]\n\t\t\t});\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx1: arguments[1],\n\t\t\t\ty1: arguments[2],\n\t\t\t\tx2: arguments[3],\n\t\t\t\ty2: arguments[4],\n\t\t\t\tx: arguments[5],\n\t\t\t\ty: arguments[6]\n\t\t\t});\n\t\t}\n\t);\n};\n\nproto.updateSVGData = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t}\n\t);\n};\n\nmodule.exports = paper.Path;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],9:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tFont = require('./Font.js'),\n\tGlyph = require('./Glyph.js'),\n\tOutline = require('./Outline'),\n\tPath = require('./Path.js'),\n\tNode = require('./Node.js'),\n\tCollection = require('./Collection.js');\n\npaper.PaperScope.prototype.Font = Font;\npaper.PaperScope.prototype.Glyph = Glyph;\npaper.PaperScope.prototype.Outline = Outline;\npaper.PaperScope.prototype.Path = Path;\npaper.PaperScope.prototype.Node = Node;\npaper.PaperScope.prototype.Collection = Collection;\n\nfunction plumin( arg ) {\n\tif ( arguments.length === 1 && arg instanceof Collection ) {\n\t\treturn arg;\n\t}\n\n\tvar c = Object.create( Collection.prototype );\n\tCollection.apply( c, arguments );\n\treturn c;\n}\n\nplumin.opentype = opentype;\n\nplumin.proxy = Collection.proxy.bind(plumin);\nplumin.proxy(paper);\n\nmodule.exports = plumin;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Collection.js\":3,\"./Font.js\":4,\"./Glyph.js\":5,\"./Node.js\":6,\"./Outline\":7,\"./Path.js\":8}]},{},[9,2])(9)\n});\n\n\n//# sourceMappingURL=plumin.js.map","var plumin = require('plumin.js'),\n\tDepTree = require('deptree'),\n\tclone = require('lodash/lang/clone'),\n\tassign = require('es6-object-assign').assign,\n\tupdateUtils = require('./updateUtils.js');\n\nvar paper = plumin.paper,\n\tUtils = updateUtils,\n\t_ = {\n\t\tclone: clone,\n\t\tassign: assign\n\t};\n\n// convert the glyph source from the ufo object model to the paper object model\n// this is the inverse operation done by jsufonify\nUtils.ufoToPaper = function( src ) {\n\tif ( src.parameter ) {\n\t\tsrc.parameters = src.parameter;\n\t\tdelete src.parameter;\n\t}\n\n\tif ( src.anchor ) {\n\t\tsrc.anchors = src.anchor;\n\t\tdelete src.anchor;\n\t}\n\n\tif ( src.outline && src.outline.contour ) {\n\t\tsrc.contours = src.outline.contour;\n\t\tdelete src.outline.contour;\n\t}\n\n\tif ( src.contours ) {\n\t\tsrc.contours.forEach(function(contour) {\n\t\t\tif ( contour.point ) {\n\t\t\t\tcontour.nodes = contour.point;\n\t\t\t\tdelete contour.point;\n\t\t\t}\n\t\t});\n\t}\n\n\tif ( src.outline && src.outline.component ) {\n\t\tsrc.components = src.outline.component;\n\n\t\tsrc.components.forEach(function(component) {\n\t\t\tif ( component.anchor ) {\n\t\t\t\tcomponent.parentAnchors = component.anchor;\n\t\t\t\tdelete component.anchor;\n\t\t\t}\n\n\t\t\tif ( component.parameter ) {\n\t\t\t\tcomponent.parentParameters = component.parameter;\n\t\t\t\tdelete component.parameter;\n\t\t\t}\n\t\t});\n\n\t\tdelete src.outline.component;\n\t}\n\n\tdelete src.outline;\n\n\tif ( src.lib && src.lib.transforms ) {\n\t\tsrc.transforms = src.lib.transforms;\n\t\tdelete src.lib.transforms;\n\t}\n\n\tif ( src.lib && src.lib.transformOrigin ) {\n\t\tsrc.transformOrigin = src.lib.transformOrigin;\n\t\tdelete src.lib.transformOrigin;\n\t}\n\n\tif ( src.lib && src.lib.parameters ) {\n\t\tsrc.parameters = src.lib.parameters;\n\t\tdelete src.lib.parameters;\n\t}\n\n\tif ( src.lib && src.lib.solvingOrder ) {\n\t\tsrc.solvingOrder = src.lib.solvingOrder;\n\t\tdelete src.lib.solvingOrder;\n\t}\n\n\treturn src;\n};\n\nUtils.fontFromSrc = function( src ) {\n\t// TODO: this, block is only here for backward compat\n\t// and should be removed at some point in the future\n\tif ( !src.fontinfo ) {\n\t\tsrc.fontinfo = src.info;\n\t}\n\n\tvar font = new paper.Font( src.fontinfo );\n\n\tfont.src = Utils.ufoToPaper( src );\n\n\tvar filteredSrc = _.assign( {}, src );\n\tdelete filteredSrc.controls;\n\tdelete filteredSrc.presets;\n\tdelete filteredSrc.glyphs;\n\n\tUtils.createUpdaters( filteredSrc, 'font_' + src.fontinfo.familyName );\n\n\tfont.parameters = {};\n\tUtils.mergeStatic( font.parameters, font.src.parameters );\n\n\t// solvingOrder might be already available (if this is a subcomponent,\n\t// or precomputed in a worker)\n\tfont.solvingOrder = font.src.solvingOrder;\n\n\tif ( !font.solvingOrder ) {\n\t\tfont.solvingOrder = filteredSrc.solvingOrder =\n\t\t\tUtils.solveDependencyTree( font, filteredSrc );\n\t}\n\n\treturn font;\n};\n\n// create Glyph instance and all its child items: anchors, contours\n// and components\n// var wmm = typeof WeakMap === 'function' && new WeakMap();\nUtils.glyphFromSrc = function( src, fontSrc, naive, embed ) {\n\tvar glyph = new paper.Glyph({\n\t\tname: src.name,\n\t\tunicode: src.unicode\n\t});\n\n\t// Clone glyph src to allow altering it without impacting components srcs.\n\t// if ( !wmm.has( src ) ) {\n\t// \twmm.set( src, JSON.stringify( src ) );\n\t// }\n\t// glyph.src = JSON.parse( wmm.get( src ) );\n\t// glyph.src = JSON.parse( JSON.stringify( src ) );\n\tglyph.src = _.clone( src, true );\n\t// turn ._operation strings to ._updaters functions\n\t// TODO: restore sourceURL pragma for debugging.\n\t// this should impact the way results are memoized\n\tUtils.createUpdaters( glyph.src/*, 'glyphs/glyph_' + name*/ );\n\tUtils.mergeStatic( glyph, glyph.src );\n\n\t// this will be used to hold local parameters that will be merged with\n\t// the font parameters\n\tglyph.parameters = {};\n\tUtils.mergeStatic( glyph.parameters, glyph.src.parameters );\n\n\t// solvingOrder might be already available (if this is a subcomponent,\n\t// or precomputed in a worker)\n\tglyph.solvingOrder = glyph.src.solvingOrder;\n\n\t(glyph.src.anchors || []).forEach(function(anchorSrc) {\n\t\tvar anchor = new paper.Node();\n\t\tanchor.src = anchorSrc;\n\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\tglyph.addAnchor( anchor );\n\t});\n\n\t(glyph.src.contours || []).forEach(function(contourSrc) {\n\t\tvar contour = new paper.Path();\n\t\tcontour.src = contourSrc;\n\t\tUtils.mergeStatic( contour, contourSrc );\n\n\t\tglyph.addContour( contour );\n\n\t\t// TODO: handle oncurve/offcurve points\n\t\tcontourSrc.nodes.forEach(function(nodeSrc) {\n\t\t\tvar node = new paper.Node();\n\t\t\tnode.src = nodeSrc;\n\t\t\tUtils.mergeStatic( node, nodeSrc );\n\n\t\t\tcontour.add( node );\n\t\t});\n\t});\n\n\tif ( !glyph.src.components ) {\n\t\treturn glyph;\n\t}\n\n\t// components can only be embedded once all glyphs have been generated\n\t// from source\n\tglyph.embedComponents = function() {\n\t\tglyph.src.components.forEach(function(componentSrc) {\n\t\t\t// components are glyphs, quite simply\n\t\t\tvar component = Utils.glyphFromSrc(\n\t\t\t\t\tfontSrc.glyphs[componentSrc.base],\n\t\t\t\t\tfontSrc,\n\t\t\t\t\tnaive,\n\t\t\t\t\t// components' subcomponents can be embedded immediatly\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\tcomponent.parentParameters = {};\n\t\t\tUtils.mergeStatic(\n\t\t\t\tcomponent.parentParameters,\n\t\t\t\tcomponentSrc.parentParameters\n\t\t\t);\n\n\t\t\tnaive.annotator( component );\n\t\t\tglyph.addComponent( component );\n\n\t\t\t(componentSrc.parentAnchors || []).forEach(function(anchorSrc) {\n\t\t\t\tvar anchor = new paper.Node();\n\t\t\t\tanchor.src = anchorSrc;\n\t\t\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\t\t\tcomponent.addParentAnchor( anchor );\n\t\t\t});\n\t\t});\n\n\t\tdelete glyph.embedComponents;\n\t};\n\n\tif ( embed ) {\n\t\tglyph.embedComponents();\n\t}\n\n\treturn glyph;\n};\n\n// build a full cursor from arguments\n// adds 'contours' and 'nodes' automagically when arguments start with a number\nUtils.cursor = function() {\n\tvar cursor = [];\n\n\tfor ( var i = -1; ++i < arguments.length; ) {\n\t\tif ( i === 0 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'contours' );\n\t\t}\n\t\tif ( i === 1 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'nodes' );\n\t\t}\n\t\tcursor.push( arguments[i] );\n\t}\n\n\treturn cursor.join('.');\n};\n\nUtils.propFromCursor = function( cursor, context, length ) {\n\tif ( length === undefined ) {\n\t\tlength = cursor.length;\n\t}\n\n\tfor ( var i = -1; ++i < length; ) {\n\t\tcontext = context[ cursor[i] ];\n\t}\n\n\treturn context;\n};\n\nUtils.mergeStatic = function( obj, src ) {\n\tfor ( var i in src ) {\n\t\tif ( typeof src[i] !== 'object' ) {\n\t\t\tobj[i] = src[i];\n\n\t\t// props that have empty dependencies and params are static\n\t\t} else if ( src[i]._dependencies && src[i]._dependencies.length === 0 &&\n\t\t\t\tsrc[i]._parameters.length === 0 ) {\n\n\t\t\tobj[i] = src[i]._updaters[0].apply(\n\t\t\t\tobj,\n\t\t\t\t[ null, null, null, null, Utils ]\n\t\t\t);\n\n\t\t\tdelete src[i];\n\t\t}\n\t}\n};\n\nUtils.createUpdaters = function( leaf, path ) {\n\tif ( leaf.constructor === Object && leaf._operation ) {\n\t\tleaf._updaters = [ Utils.createUpdater( leaf, path ) ];\n\n\t} else if ( leaf.constructor === Object ) {\n\t\tfor ( var i in leaf ) {\n\t\t\tUtils.createUpdaters( leaf[i], path + '.' + i );\n\t\t}\n\n\t} else if ( leaf.constructor === Array ) {\n\t\tleaf.forEach(function(child, j) {\n\t\t\tUtils.createUpdaters( child, path + '.' + j );\n\t\t});\n\t}\n};\n\nUtils.updaterCache = {};\nUtils.createUpdater = function( leaf/*, path*/ ) {\n\tvar sOperation = leaf._operation.toString(),\n\t\tcacheKey = ( leaf.parameters || [] ).join() + '#' + sOperation;\n\n\tif ( cacheKey in Utils.updaterCache ) {\n\t\treturn Utils.updaterCache[ cacheKey ];\n\t}\n\n\tUtils.updaterCache[ cacheKey ] = Function.apply( null, [\n\t\t\t'propName', 'contours', 'anchors', 'parentAnchors', 'Utils'\n\t\t]\n\t\t.concat( leaf._parameters || [] )\n\t\t.concat(\n\t\t\t( typeof leaf._operation === 'string' &&\n\t\t\t\t\tleaf._operation.indexOf('return ') === -1 ?\n\t\t\t\t'return ' : ''\n\t\t\t) +\n\t\t\t// The operation might be wrapped in a function (e.g. multi-\n\t\t\t// line code for debugging purpose). In this case, return\n\t\t\t// must be explicit\n\t\t\tsOperation\n\t\t\t\t// [\\s\\S] need to be used instead of . because\n\t\t\t\t// javascript doesn't have a dotall flag (s)\n\t\t\t\t.replace(/^function\\s*\\(\\)\\s*\\{([\\s\\S]*?)\\}$/, '$1')\n\t\t\t\t.trim()/* +\n\t\t\t// add sourceURL pragma to help debugging\n\t\t\t// TODO: restore sourceURL pragma if it proves necessary\n\t\t\t'\\n\\n//# sourceURL=' + path*/\n\t\t) );\n\n\treturn Utils.updaterCache[ cacheKey ];\n};\n\nUtils.solveDependencyTree = function( leaf, src ) {\n\tvar depTree = Utils.dependencyTree( src || leaf.src, null ),\n\t\torder = depTree.resolve().map(function( cursor ) {\n\t\t\treturn { cursor: cursor.split('.') };\n\t\t}),\n\t\tsimplified = Utils.simplifyResolutionOrder( leaf, order );\n\n\treturn simplified;\n};\n\nUtils.dependencyTree = function( parentSrc, cursor, depTree ) {\n\tif ( !depTree ) {\n\t\tdepTree = new DepTree();\n\t}\n\n\tObject.keys( parentSrc ).forEach(function( i ) {\n\t\t// don't inspect local parameters, private properties and non-object\n\t\tif ( i === 'parameters' || i.indexOf('_') === 0 ||\n\t\t\t\ttypeof parentSrc[i] !== 'object' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar leafSrc = parentSrc[i],\n\t\t\tcurrCursor = cursor ? cursor + '.' + i : i;\n\n\t\tif ( ( leafSrc._updaters && leafSrc._updaters.length ) ||\n\t\t\t\t( leafSrc._dependencies && leafSrc._dependencies.length ) ) {\n\n\t\t\tdepTree.add( currCursor,\n\t\t\t\tleafSrc._dependencies.filter(function(dep) {\n\t\t\t\t\t// parentAnchors are always here when you need them\n\t\t\t\t\treturn !/^parentAnchors/.test(dep);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif ( !leafSrc._operation ) {\n\t\t\tUtils.dependencyTree( leafSrc, currCursor, depTree );\n\t\t}\n\t});\n\n\treturn depTree;\n};\n\n// Simplify resolution order by removing cursors that don't point to objects\n// with updater functions\nUtils.simplifyResolutionOrder = function( leaf, depTree ) {\n\treturn depTree.filter(function( cursor ) {\n\t\tvar src = Utils.propFromCursor( cursor.cursor, leaf.src );\n\t\treturn src && src._updaters;\n\t});\n};\n\nvar rdeg = /deg$/;\nUtils.transformsToMatrix = function( transforms, origin ) {\n\tvar prev = new Float32Array(6),\n\t\tcurr = new Float32Array(6),\n\t\trslt = new Float32Array([ 1, 0, 0, 1, 0, 0 ]);\n\n\tif ( origin && Array.isArray( origin ) ) {\n\t\ttransforms.unshift([ 'translate', origin[0], origin[1] ]);\n\t\ttransforms.push([ 'translate', -origin[0], -origin[1] ]);\n\n\t} else if ( origin ) {\n\t\ttransforms.unshift([ 'translate', origin.x, origin.y ]);\n\t\ttransforms.push([ 'translate', -origin.x, -origin.y ]);\n\t}\n\n\ttransforms.forEach(function( transform ) {\n\t\tcurr[0] = curr[3] = 1;\n\t\tcurr[1] = curr[2] = curr[4] = curr[5] = 0;\n\n\t\t// convert degrees to radian\n\t\tfor ( var i = 1; i < transform.length; i++ ) {\n\t\t\tif ( transform[i] && typeof transform[i] === 'string' &&\n\t\t\t\t\trdeg.test(transform[i]) ) {\n\t\t\t\ttransform[i] = parseFloat(transform[i]) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\t\t}\n\n\t\tswitch ( transform[0] ) {\n\t\tcase 'translateX':\n\t\t\tcurr[4] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translateY':\n\t\t\tcurr[5] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translate':\n\t\t\tcurr[4] = transform[1];\n\t\t\tcurr[5] = transform[2] || 0;\n\t\t\tbreak;\n\n\t\tcase 'rotate':\n\t\t\tcurr[0] = Math.cos( transform[1] );\n\t\t\tcurr[1] = Math.sin( transform[1] );\n\t\t\tcurr[2] = -curr[1];\n\t\t\tcurr[3] = curr[0];\n\t\t\tbreak;\n\n\t\tcase 'scaleX':\n\t\t\tcurr[0] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scaleY':\n\t\t\tcurr[3] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scale':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[3] = transform.length > 2 ? transform[2] : transform[1];\n\t\t\tbreak;\n\n\t\tcase 'skewX':\n\t\t\t// stop parsing transform when encountering skewX(90)\n\t\t\t// see http://stackoverflow.com/questions/21094958/how-to-deal-with-infinity-in-a-2d-matrix\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[2] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'skewY':\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[1] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'matrix':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[1] = transform[2];\n\t\t\tcurr[2] = transform[3];\n\t\t\tcurr[3] = transform[4];\n\t\t\tcurr[4] = transform[5];\n\t\t\tcurr[5] = transform[6];\n\t\t\tbreak;\n\t\t}\n\n\t\tprev[0] = rslt[0];\n\t\tprev[1] = rslt[1];\n\t\tprev[2] = rslt[2];\n\t\tprev[3] = rslt[3];\n\t\tprev[4] = rslt[4];\n\t\tprev[5] = rslt[5];\n\n\t\trslt[0] = prev[0] * curr[0] + prev[2] * curr[1];\n\t\trslt[1] = prev[1] * curr[0] + prev[3] * curr[1];\n\t\trslt[2] = ( prev[0] * curr[2] || 0 ) + prev[2] * curr[3];\n\t\trslt[3] = ( prev[1] * curr[2] || 0 ) + prev[3] * curr[3];\n\t\trslt[4] = prev[0] * curr[4] + prev[2] * curr[5] + prev[4];\n\t\trslt[5] = prev[1] * curr[4] + prev[3] * curr[5] + prev[5];\n\t});\n\n\treturn new paper.Matrix(\n\t\trslt[0],\n\t\trslt[1],\n\t\trslt[2],\n\t\trslt[3],\n\t\trslt[4],\n\t\trslt[5]\n\t);\n};\n\nUtils.updateParameters = function( leaf, params ) {\n\tObject.keys( ( leaf.src && leaf.src.parameters ) || [] )\n\t\t.forEach(function( name ) {\n\t\t\tvar src = leaf.src.parameters[name];\n\n\t\t\tparams[name] = src._updaters ?\n\t\t\t\tsrc._updaters[0].apply( null, [\n\t\t\t\t\tname, [], [], leaf.parentAnchors, Utils\n\t\t\t\t].concat(\n\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\treturn params[_name];\n\t\t\t\t\t})\n\t\t\t\t)) :\n\t\t\t\tsrc;\n\n\t\t\tif (params.indiv_group_param) {\n\t\t\t\tObject.keys(params.indiv_group_param)\n\t\t\t\t\t.forEach(function( groupName ) {\n\t\t\t\t\tvar needed = false;\n\t\t\t\t\tvar group = params.indiv_group_param[groupName];\n\n\t\t\t\t\tfunction handleGroup(_name) {\n\t\t\t\t\t\treturn group[_name + '_rel'] ?\n\t\t\t\t\t\t\t( group[_name + '_rel'].state === 'relative' ?\n\t\t\t\t\t\t\t\tgroup[_name + '_rel'].value * params[_name] :\n\t\t\t\t\t\t\t\tgroup[_name + '_rel'].value + params[_name]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: params[_name];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (src._parameters) {\n\t\t\t\t\t\tsrc._parameters.forEach(function( parameter ) {\n\t\t\t\t\t\t\tneeded = needed || group[parameter + '_rel'];\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (needed) {\n\n\t\t\t\t\t\t\tgroup[name] = src._updaters ?\n\t\t\t\t\t\t\t\tsrc._updaters[0].apply( null, [\n\t\t\t\t\t\t\t\t\tname, [], [], leaf.parentAnchors, Utils\n\t\t\t\t\t\t\t\t].concat(\n\t\t\t\t\t\t\t\t\t( src._parameters || [] )\n\t\t\t\t\t\t\t\t\t\t.map(handleGroup)\n\t\t\t\t\t\t\t\t)) :\n\t\t\t\t\t\t\t\tsrc;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n};\n\nUtils.updateProperties = function( leaf, params ) {\n\tif ( !leaf.solvingOrder ) {\n\t\treturn;\n\t}\n\n\tleaf.solvingOrder.forEach(function(_cursor) {\n\t\tvar cursor = _cursor.cursor,\n\t\t\tpropName = cursor[ cursor.length - 1 ],\n\t\t\tsrc = _cursor.src || ( _cursor.src =\n\t\t\t\tUtils.propFromCursor( cursor, leaf.src ) ),\n\t\t\tobj = _cursor.obj || ( _cursor.obj =\n\t\t\t\tUtils.propFromCursor( cursor, leaf, cursor.length - 1 ) ),\n\t\t\t// TODO: one day we could allow multiple _updaters\n\t\t\tresult;\n\n\t\tif ( src && src._updaters ) {\n\t\t\ttry {\n\t\t\t\tresult = src._updaters[0].apply(\n\t\t\t\t\tobj,\n\t\t\t\t\t[\n\t\t\t\t\t\tpropName, leaf.contours, leaf.anchors,\n\t\t\t\t\t\tleaf.parentAnchors, Utils\n\t\t\t\t\t].concat(\n\t\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\t\treturn params[_name];\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(\n\t\t\t\t\t[\n\t\t\t\t\t\t'Cannot update property',\n\t\t\t\t\t\tcursor.join('.'),\n\t\t\t\t\t\t'from component',\n\t\t\t\t\t\tleaf.name\n\t\t\t\t\t].join(' '),\n\t\t\t\t\te\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Assume that updaters returning undefined have their own\n\t\t// assignment logic\n\t\tif ( result !== undefined ) {\n\t\t\tobj[propName] = result;\n\t\t}\n\t}, this);\n};\n\nmodule.exports = Utils;\n","var plumin = require('plumin.js'),\n\tassign = require('es6-object-assign').assign,\n\tUtils = require('./Utils.js');\n\nvar paper = plumin.paper,\n\tnaive = {},\n\t_ = { assign: assign };\n\nfunction autoExpandableNodeSrc( node, i, j, inSkeleton ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\tUtils.cursor( i, j, 'y' )\n\t\t] },\n\t\tall: { _dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\treturn Utils.cursor( i, j, key );\n\t\t}) },\n\t\t_dependencies: inSkeleton ?\n\t\t\t// nodes in skeleton are never fully calculated (we don't calculate\n\t\t\t// the position of handles because we never draw their contour).\n\t\t\t// So we don't care about their dependencies.\n\t\t\t[] :\n\t\t\t[ Utils.cursor( 'contours', i, 'all' ) ]\n\t};\n}\n\nfunction autoExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tx: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\ty: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\tpoint: {\n\t\t\t_dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'y' ),\n\t\t\t\tUtils.cursor( i, j, 'expand' )\n\t\t\t],\n\t\t\t_parameters: [ 'width' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar width = arguments[\n\t\t\t\t\t\targuments.length - 1\n\t\t\t\t\t];\n\n\t\t\t\tnaive.expandedNodeUpdater(\n\t\t\t\t\tnode.expandedTo[side], side === 0, width\n\t\t\t\t);\n\t\t\t} ]\n\t\t},\n\t\tall: {\n\t\t\t_dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\t\treturn Utils.cursor( i, j, key );\n\t\t\t}).concat([\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t\t]),\n\t\t\t_updaters: [ function() {\n\t\t\t\tnaive.skeletonCopier( node );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'all' )\n\t\t]\n\t};\n}\n\nfunction explicitExpandableNodeSrc( node, i, j ) {\n\treturn {\n\t\tpoint: { _dependencies: [] },\n\t\tall: { _dependencies: [ 0, 1 ].map(function( side ) {\n\t\t\treturn Utils.cursor( i, j, 'expandedTo', side, 'all' );\n\t\t}) },\n\t\t_dependencies: []\n\t};\n}\n\nfunction explicitExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'y' )\n\t\t] },\n\t\tall: { _dependencies:\n\t\t\tObject.keys( node.src.expandedTo[ side ] ).map(function( key ) {\n\t\t\t\treturn Utils.cursor( i, j, 'expandedTo', side, key );\n\t\t\t})\n\t\t},\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'all' )\n\t\t]\n\t};\n}\n\nfunction expandedContourSrc( contour, i, side ) {\n\tvar half = contour.nodes.length / 2;\n\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function(node, j) {\n\t\t\t\treturn side !== undefined ?\n\t\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'all' ) :\n\t\t\t\t\tUtils.cursor(\n\t\t\t\t\t\ti, j % half, 'expandedTo', ( j < half ? 0 : 1 ), 'all'\n\t\t\t\t\t);\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t// nodes: nodesSrc,\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo', side || 0, 'all' )\n\t\t]\n\t};\n}\n\nfunction contourSrc( contour, i ) {\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\t\treturn Utils.cursor( i, j, 'all' );\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\treturn Utils.cursor( i, j );\n\t\t})\n\t};\n}\n\n// default method to expand skeletons:\n// derives two additional node from every node with an .expand object\nnaive.annotator = function( glyph ) {\n\tvar additionalContours = [];\n\n\tglyph.contours.forEach(function( contour, i ) {\n\t\tif ( contour.skeleton !== true ) {\n\t\t\t// annotate nodes+points that aren't in a skeleton\n\t\t\tcontour.nodes.forEach(function( node, j ) {\n\t\t\t\t_.assign( node.src, autoExpandableNodeSrc( node, i, j ) );\n\t\t\t});\n\n\t\t\t_.assign( contour.src, contourSrc( contour, i ) );\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar leftContour,\n\t\t\trightContour,\n\t\t\tleftNodes = [],\n\t\t\trightNodes = [],\n\t\t\tleftNodesSrc = [],\n\t\t\trightNodesSrc = [],\n\t\t\tfirstNode,\n\t\t\tlastNode;\n\n\t\t// skeletons should be hidden\n\t\tcontour.visible = false;\n\n\t\tcontour.nodes.forEach(function( node, j ) {\n\n\t\t\tvar left = new paper.Node(),\n\t\t\t\tright = new paper.Node(),\n\t\t\t\tleftSrc,\n\t\t\t\trightSrc;\n\n\t\t\tleftNodes.push(left);\n\t\t\trightNodes.unshift(right);\n\t\t\tnode.expandedTo = [ left, right ];\n\t\t\tleft.expandedFrom = right.expandedFrom = node;\n\n\t\t\tif ( !node.src.expandedTo ) {\n\t\t\t\t// annotate nodes+points that are automatically expanded\n\t\t\t\tleftSrc = autoExpandedNodeSrc( node, i, j, 0, contour.closed );\n\t\t\t\trightSrc = autoExpandedNodeSrc( node, i, j, 1, contour.closed );\n\t\t\t\tnode.src.expandedTo = [ leftSrc, rightSrc ];\n\t\t\t\t_.assign( node.src,\n\t\t\t\t\tautoExpandableNodeSrc( node, i, j, !!'inSkeleton' ) );\n\n\t\t\t// the expanded node might have been defined explicitely\n\t\t\t} else if ( node.src.expandedTo[0] &&\n\t\t\t\t\t!node.src.expandedTo[0]._updaters ) {\n\t\t\t\tnode.src.expandedTo.forEach(function( src, k ) {\n\t\t\t\t\tUtils.mergeStatic( node.expandedTo[k], src );\n\t\t\t\t});\n\n\t\t\t\t// annotate nodes+points that are explicitely expanded\n\t\t\t\tleftSrc = _.assign( node.src.expandedTo[0],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 0, contour.closed )\n\t\t\t\t);\n\t\t\t\trightSrc = _.assign( node.src.expandedTo[1],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 1, contour.closed )\n\t\t\t\t);\n\n\t\t\t\t_.assign( node.src,\n\t\t\t\t\texplicitExpandableNodeSrc( node, i, j ) );\n\n\t\t\t\t// A leaf shouldn't appear twice during the recursive\n\t\t\t\t// dependency-tree building. Make the expanded nodes accessible\n\t\t\t\t// from expanded contours, and provide accessors on the\n\t\t\t\t// .expandedFrom node.\n\t\t\t\t// leftNodesSrc.push( leftSrc );\n\t\t\t\t// rightNodesSrc.push( rightSrc );\n\t\t\t}\n\n\t\t\t// if ( leftSrc && rightSrc ) {\n\t\t\t// \tObject.defineProperties( node.src.expandedTo = {}, {\n\t\t\t// \t\t0: { get: function() {\n\t\t\t// \t\t\treturn leftSrc;\n\t\t\t// \t\t}},\n\t\t\t// \t\t1: { get: function() {\n\t\t\t// \t\t\t\treturn rightSrc;\n\t\t\t// \t\t}}\n\t\t\t// \t});\n\t\t\t// }\n\t\t});\n\n\t\tif ( !contour.expandedTo && !contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes.concat(rightNodes)\n\t\t\t});\n\t\t\tcontour.expandedTo = [ leftContour ];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i\n\t\t\t\t\t//, 0, leftNodesSrc.concat( rightNodesSrc )\n\t\t\t\t)\n\t\t\t];\n\t\t\tleftContour.expandedFrom = contour;\n\t\t\tadditionalContours.push( leftContour );\n\n\t\t\tfirstNode = contour.firstNode;\n\t\t\tlastNode = contour.lastNode;\n\n\t\t\tfirstNode.type = 'corner';\n\t\t\tlastNode.type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].type = 'corner';\n\t\t\tfirstNode.expandedTo[1].type = 'corner';\n\t\t\tlastNode.expandedTo[0].type = 'corner';\n\t\t\tlastNode.expandedTo[1].type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].typeIn = 'line';\n\t\t\tfirstNode.expandedTo[1].typeOut = 'line';\n\t\t\tlastNode.expandedTo[0].typeOut = 'line';\n\t\t\tlastNode.expandedTo[1].typeIn = 'line';\n\n\t\t} else if ( !contour.expandedTo && contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes\n\t\t\t});\n\t\t\tadditionalContours.push( leftContour );\n\t\t\trightContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: rightNodes\n\t\t\t});\n\t\t\tadditionalContours.push( rightContour );\n\n\t\t\tcontour.expandedTo = [\n\t\t\t\tleftContour,\n\t\t\t\trightContour\n\t\t\t];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i, 0, leftNodesSrc ),\n\t\t\t\texpandedContourSrc( rightContour, i, 1, rightNodesSrc )\n\t\t\t];\n\t\t\tleftContour.expandedFrom = rightContour.expandedFrom = contour;\n\t\t}\n\t});\n\n\tglyph.addContours( additionalContours );\n};\n\n// Calculate expanded node position\nnaive.expandedNodeUpdater = function( node, isLeft, _width ) {\n\tvar origin = node.expandedFrom,\n\t\texpand = origin.expand,\n\t\twidth = expand && expand.width !== undefined ?\n\t\t\texpand.width : _width,\n\t\tcoef = expand && expand.distr !== undefined ?\n\t\t\t( isLeft ? expand.distr : 1 - expand.distr ) :\n\t\t\t0.5,\n\t\tangle = ( isLeft ? Math.PI : 0 ) +\n\t\t\t( expand && expand.angle !== undefined ?\n\t\t\t\texpand.angle :\n\t\t\t\t// We resort to using directions.\n\t\t\t\t// This is wrong, directions are not included in the\n\t\t\t\t// dependencies of the updater and might not be ready yet.\n\t\t\t\t// TODO: Fix this (always require angle to be specified?)\n\t\t\t\t( origin._dirOut !== undefined ?\n\t\t\t\t\torigin._dirOut - Math.PI / 2 :\n\t\t\t\t\torigin._dirIn + Math.PI / 2\n\t\t\t\t)\n\t\t\t);\n\n\t// position\n\tnode.point.x = origin.point.x + ( width * coef * Math.cos( angle ) );\n\tnode.point.y = origin.point.y + ( width * coef * Math.sin( angle ) );\n};\n\n// copy skeleton properties such as types, directions and tensions to expanded\n// nodes\nnaive.skeletonCopier = function( node ) {\n\tvar angle = node.expand && node.expand.angle || 0,\n\t\tleft = node.expandedTo[0],\n\t\tright = node.expandedTo[1];\n\n\t// node type\n\tif ( node.type !== undefined ) {\n\t\tleft.type = right.type = node.type;\n\t}\n\n\t// direction type\n\tif ( node.typeIn !== undefined ) {\n\t\tleft.typeIn = right.typeOut = node.typeIn;\n\t}\n\tif ( node.typeOut !== undefined ) {\n\t\tleft.typeOut = right.typeIn = node.typeOut;\n\t}\n\n\t// direction\n\tif ( node._dirIn !== undefined ) {\n\t\tleft._dirIn = right._dirOut = node._dirIn;\n\n\t\tif ( node.type === 'smooth' && node._dirOut === undefined ) {\n\t\t\tleft._dirOut = right._dirIn = node._dirIn + Math.PI;\n\t\t}\n\t}\n\tif ( node._dirOut !== undefined ) {\n\t\tleft._dirOut = right._dirIn = node._dirOut;\n\n\t\tif ( node.type === 'smooth' && node._dirIn === undefined ) {\n\t\t\tleft._dirIn = right._dirOut = node._dirOut + Math.PI;\n\t\t}\n\t}\n\t// use angle if direction isn't already defined\n\tif ( left._dirIn === undefined ) { // implies right._dirOut === undefined\n\t\tleft._dirIn = angle - Math.PI / 2;\n\t\tright._dirOut = angle + Math.PI / 2;\n\t}\n\tif ( left._dirOut === undefined ) { // implies right._dirIn === undefined\n\t\tleft._dirOut = angle + Math.PI / 2;\n\t\tright._dirIn = angle - Math.PI / 2;\n\t}\n\n\t// tension\n\tleft.tensionIn = right.tensionOut = node.tensionIn !== undefined ?\n\t\tnode.tensionIn :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n\tleft.tensionOut = right.tensionIn = node.tensionOut !== undefined ?\n\t\tnode.tensionOut :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n};\n\n// Make sure 'line' types are set on both side of segments\n// and if a smooth node is used in a straight segment, update the directions\n// appropriately this can only be done once the types, directions and position\n// of all nodes have been updated can be renamed #prepareLines if no other\n// operation is added\n// TODO: try doing it at the same time as updateContour (once we have more\n// complex glyphs)\nnaive.prepareContour = function( path ) {\n\tpath.nodes.forEach(function(node) {\n\t\tif ( node.typeIn === 'line' && node.previous ) {\n\t\t\tnode.previous.typeOut = 'line';\n\t\t}\n\n\t\tif ( node.typeOut === 'line' && node.next ) {\n\t\t\tnode.next.typeIn = 'line';\n\t\t}\n\t});\n\n\tpath.nodes.forEach(function(node) {\n\t\tif ( node.typeIn === 'line' && node.type === 'smooth' &&\n\t\t\t\tnode.previous ) {\n\n\t\t\tnode._dirIn = Utils.lineAngle(\n\t\t\t\tnode.point, node.previous.point\n\t\t\t);\n\t\t\tnode._dirOut = node._dirIn + Math.PI;\n\t\t}\n\n\t\tif ( node.typeOut === 'line' && node.type === 'smooth' &&\n\t\t\t\tnode.next ) {\n\n\t\t\tnode._dirOut = Utils.lineAngle(\n\t\t\t\tnode.point, node.next.point\n\t\t\t);\n\t\t\tnode._dirIn = node._dirOut + Math.PI;\n\t\t}\n\t});\n};\n\n// sets the position of control points\n// can be renamed #updateControls if no other operation is added\nnaive.updateContour = function( path, curviness ) {\n\tif ( curviness === undefined ) {\n\t\tcurviness = 2 / 3;\n\t}\n\n\tpath.nodes.forEach(function(node) {\n\t\tvar start = node,\n\t\t\tend,\n\t\t\tstartCtrl,\n\t\t\tendCtrl,\n\t\t\tstartType,\n\t\t\tendType,\n\t\t\tstartTension,\n\t\t\tendTension,\n\t\t\tstartDir,\n\t\t\tendDir,\n\t\t\trri;\n\n\t\tif ( !node.next ) {\n\t\t\treturn;\n\t\t}\n\n\t\tend = node.next;\n\t\tstartCtrl = start.handleOut;\n\t\tendCtrl = end.handleIn;\n\n\t\tstartType = start.typeOut;\n\t\tendType = end.typeIn;\n\n\t\tif ( startType === 'line' || endType === 'line' ) {\n\t\t\tstartCtrl.x = 0;\n\t\t\tstartCtrl.y = 0;\n\t\t\tendCtrl.x = 0;\n\t\t\tendCtrl.y = 0;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartTension = start.tensionOut !== undefined ?\n\t\t\tstart.tensionOut :\n\t\t\t( start.tension !== undefined ? start.tension : 1 );\n\t\tendTension = end.tensionIn !== undefined ?\n\t\t\tend.tensionIn :\n\t\t\t( end.tension !== undefined ? end.tension : 1 );\n\n\t\tstartDir = start._dirOut !== undefined ?\n\t\t\tstart._dirOut :\n\t\t\t( start.type === 'smooth' ? start._dirIn + Math.PI : 0 );\n\t\tendDir = end._dirIn !== undefined ?\n\t\t\tend._dirIn :\n\t\t\t( end.type === 'smooth' ? end._dirOut - Math.PI : 0 );\n\n\t\trri = Utils.rayRayIntersection(\n\t\t\tstart._point,\n\t\t\tstartDir,\n\t\t\tend._point,\n\t\t\tendDir\n\t\t);\n\n\t\t// direction of handles is parallel\n\t\tif ( rri === null ) {\n\t\t\tvar angle = Utils.lineAngle( start._point, end._point ),\n\t\t\t\tmiddle = {\n\t\t\t\t\tx: ( end._point.x - start._point.x ) / 2 + start._point.x,\n\t\t\t\t\ty: ( end._point.y - start._point.y ) / 2 + start._point.y\n\t\t\t\t},\n\t\t\t\tp0 = Utils.rayRayIntersection(\n\t\t\t\t\tstart._point, startDir, middle, angle - Math.PI / 2\n\t\t\t\t),\n\t\t\t\tp1 = Utils.rayRayIntersection(\n\t\t\t\t\tmiddle, angle + Math.PI / 2, end._point, endDir\n\t\t\t\t);\n\n\t\t\tif ( p0 === null ) {\n\t\t\t\tstartCtrl.x = 0;\n\t\t\t\tstartCtrl.y = 0;\n\t\t\t\tendCtrl.x = 0;\n\t\t\t\tendCtrl.y = 0;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstartCtrl.x = ( Math.round(p0[0]) - start._point.x ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tstartCtrl.y = ( Math.round(p0[1]) - start._point.y ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tendCtrl.x = ( Math.round(p1[0]) - end._point.x ) *\n\t\t\t\tcurviness * endTension;\n\t\t\tendCtrl.y = ( Math.round(p1[1]) - end._point.y ) *\n\t\t\t\tcurviness * endTension;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartCtrl.x = ( Math.round(rri[0]) - start.point.x ) *\n\t\t\tcurviness * startTension;\n\t\tstartCtrl.y = ( Math.round(rri[1]) - start.point.y ) *\n\t\t\tcurviness * startTension;\n\t\tendCtrl.x = ( Math.round(rri[0]) - end.point.x ) *\n\t\t\tcurviness * endTension;\n\t\tendCtrl.y = ( Math.round(rri[1]) - end.point.y ) *\n\t\t\tcurviness * endTension;\n\t});\n};\n\nvar rdeg = /deg$/;\nObject.defineProperties(paper.PaperScope.prototype.Segment.prototype, {\n\texpand: {\n\t\tget: function() {\n\t\t\treturn this._expand;\n\t\t},\n\t\tset: function( expand ) {\n\t\t\tif ( typeof expand.angle === 'string' && rdeg.test(expand.angle) ) {\n\t\t\t\texpand.angle = parseFloat(expand.angle) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\n\t\t\tthis._expand = expand;\n\t\t}\n\t},\n\tdirIn: {\n\t\tget: function() {\n\t\t\treturn this._dirIn;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirIn = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirIn = dir;\n\t\t\t}\n\t\t}\n\t},\n\tdirOut: {\n\t\tget: function() {\n\t\t\treturn this._dirOut;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirOut = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirOut = dir;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = naive;\n","/*jshint -W098 */\nvar plumin = require('plumin.js'),\n\tassign = require('es6-object-assign').assign,\n\tUtils = require('./Utils.js'),\n\tnaive = require('./naive.js'),\n\tlodash = require('lodash');\n\nvar paper = plumin.paper,\n\t_ = { assign: assign, map: lodash.map };\n\nfunction parametricFont( src ) {\n\tvar font = Utils.fontFromSrc( src );\n\n\tObject.keys( src.glyphs ).forEach(function( name ) {\n\t\tvar glyphSrc = src.glyphs[name];\n\n\t\tUtils.ufoToPaper( glyphSrc );\n\n\t\tvar glyph = Utils.glyphFromSrc( glyphSrc, src, naive );\n\n\t\tfont.addGlyph( glyph );\n\n\t\t// Create additional paths for skeletons and set ._dependencies\n\t\t// appropriately\n\t\tnaive.annotator( glyph );\n\n\t\t// solvingOrder might be already available (if this is a subcomponent,\n\t\t// or precomputed in a worker)\n\t\tif ( !glyph.solvingOrder ) {\n\t\t\tglyph.solvingOrder = glyphSrc.solvingOrder =\n\t\t\t\tUtils.solveDependencyTree( glyph );\n\t\t}\n\t});\n\n\t// all glyphs are ready, embed components now\n\tfont.glyphs.forEach(function( _glyph ) {\n\t\tif ( _glyph.embedComponents ) {\n\t\t\t_glyph.embedComponents();\n\t\t}\n\t});\n\n\treturn font;\n}\n\nplumin.parametricFont = parametricFont;\nplumin.Utils = Utils;\nplumin.Utils.naive = naive;\n\npaper.PaperScope.prototype.Font.prototype.update = function( params, set ) {\n\tvar font = this,\n\t\tmatrix;\n\n\tUtils.updateParameters( font, params );\n\n\tUtils.updateProperties( font, params );\n\n\tif ( params.indiv_group_param ) {\n\t\tconst groupedProperties = [\n\t\t\t'ascender',\n\t\t\t'descender',\n\t\t\t'cap-height',\n\t\t\t'descendent-height'\n\t\t];\n\n\t\tgroupedProperties.forEach(function( name ) {\n\t\t\tvar src = font.src.fontinfo[name];\n\t\t\tObject.keys( params.indiv_group_param )\n\t\t\t\t.forEach(function( groupName ) {\n\t\t\t\tconst group = params.indiv_group_param[groupName];\n\n\t\t\t\tconst sign = font.ot[name] > 0 ? 1 : -1;\n\n\t\t\t\tfont.ot[name] = sign * Math.max( Math.abs(font.ot[name]),\n\t\t\t\t\tMath.abs(src._updaters[0].apply(\n\t\t\t\t\t\tfont.ot,\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tname, null, null,\n\t\t\t\t\t\t\tnull, Utils\n\t\t\t\t\t\t].concat(\n\t\t\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\t\t\treturn group[_name] || params[_name];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t\t))\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t}\n\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.update( params );\n\t}, this);\n\n\tif ( font.transforms ) {\n\t\tmatrix = Utils.transformsToMatrix(\n\t\t\tfont.transforms.slice(0), font.transformOrigin\n\t\t);\n\n\t\tfont.applyMatrix = false;\n\t\tfont.matrix = matrix;\n\t}\n\n\treturn this;\n};\n\n/* Update the shape of the glyph, according to formula and parameters\n * 0. before running, nodes have already been created by ParametricFont\n *   (including expanded ones thanks to naive.expandSkeletons). And static\n *   properties have been copied over to those nodes\n * 1. We use the solving order to calculate all node properties\n * 2. transform contours\n * 3. Update components and transform them\n */\npaper.PaperScope.prototype.Glyph.prototype.update = function( _params ) {\n\tvar glyph = this,\n\t\tfont = glyph.parent,\n\t\tmatrix,\n\t\tparams;\n\n\t// 0. calculate local parameters\n\tif (_params.indiv_glyphs &&\n\t\tObject.keys( _params.indiv_glyphs )\n\t\t\t.indexOf( '' + glyph.ot.unicode ) !== -1) {\n\n\t\tvar indivParam = {};\n\n\t\tObject.keys( _params ).forEach(function( param ) {\n\t\t\tif ( _params[param].constructor.name === 'Number' ) {\n\t\t\t\tvar groups = _params.indiv_group_param[_params.indiv_glyphs[glyph.ot.unicode]],\n\t\t\t\t\tmultiplier = groups[param + '_rel'] || {\n\t\t\t\t\tstate: 'relative',\n\t\t\t\t\tvalue: 1\n\t\t\t\t};\n\n\t\t\t\tindivParam[param] = groups[param] ||\n\t\t\t\t\t( multiplier.state === 'relative' ?\n\t\t\t\t\t\t(multiplier.value * _params[param]) :\n\t\t\t\t\t\t(multiplier.value + _params[param])\n\t\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tparams = _.assign({},\n\t\t\t_params,\n\t\t\tindivParam,\n\t\t\tglyph.parentParameters);\n\t} else {\n\t\tparams = _.assign({}, _params, glyph.parentParameters);\n\t}\n\n\tUtils.updateParameters( glyph, params );\n\n\t// parentParameters always overwrite glyph parameters. Use aliases\n\t// (e.g. _width) to let glyph hav the final word\n\t_.assign( params, glyph.parentParameters );\n\n\t// 1. calculate node properties\n\tUtils.updateProperties( glyph, params );\n\n\t// 2. transform contours\n\tthis.contours.forEach(function(contour) {\n\t\t// a. transform the nodes\n\t\tcontour.nodes.forEach(function(node) {\n\t\t\tif ( node.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tnode.transforms.slice(0), node.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\t\t// We don't want to apply the transforms immediatly,\n\t\t\t\t\t// otherwise the transformation will add-up on each\n\t\t\t\t\t// update.\n\t\t\t\t\t//node.applyMatrix = false;\n\t\t\t\t\t//node.matrix = matrix;\n\n\t\t\t\t\tnode.transform(matrix);\n\n\t\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t\t// expanded items\n\t\t\t\t} else {\n\t\t\t\t\tnode.expandedTo.forEach(function( _node ) {\n\t\t\t\t\t\t//_node.applyMatrix = false;\n\t\t\t\t\t\t//_node.matrix = matrix;\n\t\t\t\t\t\t_node.transform(matrix);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// b. transform the contour\n\t\t// prepare and update outlines and expanded contours, but not\n\t\t// skeletons\n\t\tif ( contour.transforms ) {\n\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\tcontour.transforms.slice(0), contour.transformOrigin\n\t\t\t);\n\n\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\tcontour.applyMatrix = false;\n\t\t\t\tcontour.matrix = matrix;\n\n\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t// expanded items\n\t\t\t} else {\n\t\t\t\tcontour.expandedTo.forEach(function( _contour ) {\n\t\t\t\t\t_contour.applyMatrix = false;\n\t\t\t\t\t_contour.matrix = matrix;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, this);\n\n\t// 3. update components and transform components\n\tif ( this.components.length && font ) {\n\t\t// subcomponents have the parent component as their parent\n\t\t// so search for the font\n\t\twhile ( !('glyphs' in font) ) {\n\t\t\tfont = font.parent;\n\t\t}\n\n\t\tthis.components.forEach(function(component) {\n\t\t\tcomponent.update( params );\n\n\t\t\tif ( component.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tcomponent.transforms.slice(0), component.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tcomponent.applyMatrix = false;\n\t\t\t\tcomponent.matrix = matrix;\n\t\t\t}\n\t\t}, this);\n\t}\n\n\t// 4. transform whole glyph\n\tif ( glyph.transforms ) {\n\t\tmatrix = Utils.transformsToMatrix(\n\t\t\tglyph.transforms.slice(0), glyph.transformOrigin\n\t\t);\n\n\t\tglyph.applyMatrix = false;\n\t\tglyph.matrix = matrix;\n\t}\n\n\treturn this;\n};\n\n// Before updating SVG or OpenType data, we must determine paths exports\n// directions. Basically, everything needs to be clockwise.\n// this method needs to be called only after the first update, otherwise the\n// directions won't be known\npaper.PaperScope.prototype.Outline.prototype.prepareDataUpdate = function() {\n\tif ( this.isPrepared ) {\n\t\treturn;\n\t}\n\n\tthis.children.forEach(function(contour) {\n\t\t// expanded contours are handled from their skeleton\n\t\tif ( contour.expandedFrom ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( contour.skeleton !== true ) {\n\t\t\tcontour.exportReversed = !contour.isClockwise();\n\n\t\t} else if ( !contour.expandedTo[1] ) {\n\t\t\tcontour.expandedTo[0].exportReversed =\n\t\t\t\t!contour.expandedTo[0].isClockwise();\n\n\t\t} else {\n\t\t\tvar isClockwise = contour.isClockwise();\n\n\t\t\tcontour.expandedTo[0].exportReversed = !isClockwise;\n\t\t\tcontour.expandedTo[1].exportReversed = !isClockwise;\n\t\t}\n\t});\n\n\tthis.isPrepared = true;\n};\n\nvar updateSVGData =\n\t\tpaper.PaperScope.prototype.Outline.prototype.updateSVGData,\n\tupdateOTCommands =\n\t\tpaper.PaperScope.prototype.Outline.prototype.updateOTCommands;\n\npaper.PaperScope.prototype.Outline.prototype.updateSVGData = function() {\n\tif ( !this.isPrepared ) {\n\t\tthis.prepareDataUpdate();\n\t}\n\n\tupdateSVGData.apply( this, arguments );\n};\n\npaper.PaperScope.prototype.Outline.prototype.updateOTCommands = function() {\n\tif ( !this.isPrepared ) {\n\t\tthis.prepareDataUpdate();\n\t\tthis.isPrepared = true;\n\t}\n\n\tupdateOTCommands.apply( this, arguments );\n};\n\nmodule.exports = plumin;\n","var Utils = {};\n\n// The following function should be useless, thanks to paper\nUtils.lineLineIntersection = function( p1, p2, p3, p4 ) {\n\tvar x1 = p1.x,\n\t\ty1 = p1.y,\n\t\tx2 = p2.x,\n\t\ty2 = p2.y,\n\t\tx3 = p3.x,\n\t\ty3 = p3.y,\n\t\tx4 = p4.x,\n\t\ty4 = p4.y,\n\t\td = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n\tif ( d === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn new Float32Array([\n\t\t( (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4) ) /\n\t\td,\n\t\t( (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4) ) /\n\t\td\n\t]);\n};\n\n// Find the intersection of two rays.\n// A ray is defined by a point and an angle.\nUtils.rayRayIntersection = function( p1, a1, p2, a2 ) {\n\t// line equations\n\tvar a = Math.tan(a1),\n\t\tb = Math.tan(a2),\n\t\tc = p1.y - a * p1.x,\n\t\td = p2.y - b * p2.x,\n\t\tx,\n\t\ty;\n\n\t// When searching for lines intersection,\n\t// angles can be normalized to 0 < a < PI\n\t// This will be helpful in detecting special cases below.\n\ta1 = a1 % Math.PI;\n\tif ( a1 < 0 ) {\n\t\ta1 += Math.PI;\n\t}\n\ta2 = a2 % Math.PI;\n\tif ( a2 < 0 ) {\n\t\ta2 += Math.PI;\n\t}\n\n\t// no intersection\n\tif ( a1 === a2 ) {\n\t\treturn null;\n\t}\n\n\t// Optimize frequent and easy special cases.\n\t// Without optimization, results would be incorrect when cos(a) === 0\n\tif ( a1 === 0 ) {\n\t\ty = p1.y;\n\t} else if ( a1 === Math.PI / 2 ) {\n\t\tx = p1.x;\n\t}\n\tif ( a2 === 0 ) {\n\t\ty = p2.y;\n\t} else if ( a2 === Math.PI / 2 ) {\n\t\tx = p2.x;\n\t}\n\n\t// easiest case\n\tif ( x !== undefined && y !== undefined ) {\n\t\treturn new Float32Array([ x, y ]);\n\t}\n\n\t// other cases that can be optimized\n\tif ( a1 === 0 ) {\n\t\treturn new Float32Array([ ( y - d ) / b, y ]);\n\t}\n\tif ( a1 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, b * x + d ]);\n\t}\n\tif ( a2 === 0 ) {\n\t\treturn new Float32Array([ ( y - c ) / a, y ]);\n\t}\n\tif ( a2 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, a * x + c ]);\n\t}\n\n\t// intersection from two line equations\n\t// algo: http://en.wikipedia.org/wiki/Line–line_intersection#Given_the_equations_of_the_lines\n\treturn new Float32Array([\n\t\tx = (d - c) / (a - b),\n\t\t// this should work equally well with ax+c or bx+d\n\t\ta * x + c\n\t]);\n};\n\n// return the angle between two points\nUtils.lineAngle = function( p0, p1 ) {\n\treturn Math.atan2( p1.y - p0.y, p1.x - p0.x );\n};\n\nUtils.onLine = function( params ) {\n\tvar origin = params.on[0],\n\t\tvector = [\n\t\t\tparams.on[1].x - params.on[0].x,\n\t\t\tparams.on[1].y - params.on[0].y\n\t\t];\n\n\treturn 'x' in params ?\n\t\t( params.x - origin.x ) / vector[0] * vector[1] + origin.y :\n\t\t( params.y - origin.y ) / vector[1] * vector[0] + origin.x;\n};\n\nUtils.pointOnCurve = function(pointHandleOut,\n\tpointHandleIn,\n\tdistanceFromOut,\n\tinverseOrientation,\n\tlinePrecision) {\n\tlinePrecision = linePrecision || 3;\n\tvar length = 0;\n\tvar previousPoint;\n\n\tvar points;\n\tif (!inverseOrientation) {\n\t\tpoints = [\n\t\t\tpointHandleOut.point,\n\t\t\tpointHandleOut.point.add(pointHandleOut.handleOut),\n\t\t\tpointHandleIn.point.add(pointHandleIn.handleIn),\n\t\t\tpointHandleIn.point\n\t\t];\n\t} else {\n\t\tpoints = [\n\t\t\tpointHandleIn.point,\n\t\t\tpointHandleIn.point.add(pointHandleIn.handleIn),\n\t\t\tpointHandleOut.point.add(pointHandleOut.handleOut),\n\t\t\tpointHandleOut.point\n\t\t];\n\t}\n\n\tfor (var i = 0; i < linePrecision; i++) {\n\t\tvar point = Utils.deCasteljau(points,\n\t\t\t( i / ( linePrecision - 1 ) ) );\n\n\t\tif (previousPoint) {\n\t\t\tlength += Utils.distance(previousPoint.x,\n\t\t\t\tpreviousPoint.y,\n\t\t\t\tpoint.x,\n\t\t\t\tpoint.y);\n\n\t\t}\n\n\t\tpreviousPoint = point;\n\t}\n\n\tvar t = length === 0 ? 0 : distanceFromOut / length;\n\n\tt = Math.max(0.001, Math.min(1, t));\n\n    return Utils.deCasteljau(points, t);\n};\n\nUtils.deCasteljau = function(points, t) {\n\tvar newPoints = [];\n\tfor (var i = 1; i < points.length; i++) {\n\t\tnewPoints.push(\n\t\t\tpoints[i - 1]\n\t\t\t\t.multiply(1 - t)\n\t\t\t\t.add(\n\t\t\t\t\tpoints[i]\n\t\t\t\t\t\t.multiply(t)\n\t\t\t\t)\n\t\t\t);\n\t}\n\n\tif (newPoints.length === 1) {\n\t\tvar p0 = { x: 0, y: 0 },\n\t\t\tp1 = {\n\t\t\tx: points[1].x - points[0].x,\n\t\t\ty: points[1].y - points[0].y\n\t\t};\n\n\t\treturn {\n\t\t\tx: newPoints[0].x,\n\t\t\ty: newPoints[0].y,\n\t\t\tnormal: Utils.lineAngle(p0, p1)\n\t\t};\n\t} else {\n\t\treturn Utils.deCasteljau(newPoints, t);\n\t}\n};\n\nUtils.distance = function(x1, y1, x2, y2) {\n\treturn Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y1 - y2, 2));\n};\n\nUtils.log = function() {\n\tconsole.log.apply( console, arguments );\n\treturn arguments[0];\n};\n\nmodule.exports = Utils;\n"]}