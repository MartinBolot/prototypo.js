{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/deptree/index.js","node_modules/es6-object-assign/src/index.js","node_modules/lodash/internal/arrayCopy.js","node_modules/lodash/internal/arrayEach.js","node_modules/lodash/internal/baseAssign.js","node_modules/lodash/internal/baseClone.js","node_modules/lodash/internal/baseCopy.js","node_modules/lodash/internal/baseFor.js","node_modules/lodash/internal/baseForOwn.js","node_modules/lodash/internal/baseProperty.js","node_modules/lodash/internal/bindCallback.js","node_modules/lodash/internal/bufferClone.js","node_modules/lodash/internal/createBaseFor.js","node_modules/lodash/internal/getLength.js","node_modules/lodash/internal/getNative.js","node_modules/lodash/internal/initCloneArray.js","node_modules/lodash/internal/initCloneByTag.js","node_modules/lodash/internal/initCloneObject.js","node_modules/lodash/internal/isArrayLike.js","node_modules/lodash/internal/isIndex.js","node_modules/lodash/internal/isIterateeCall.js","node_modules/lodash/internal/isLength.js","node_modules/lodash/internal/isObjectLike.js","node_modules/lodash/internal/shimKeys.js","node_modules/lodash/internal/toObject.js","node_modules/lodash/lang/clone.js","node_modules/lodash/lang/isArguments.js","node_modules/lodash/lang/isArray.js","node_modules/lodash/lang/isFunction.js","node_modules/lodash/lang/isNative.js","node_modules/lodash/lang/isObject.js","node_modules/lodash/object/keys.js","node_modules/lodash/object/keysIn.js","node_modules/lodash/utility/identity.js","node_modules/plumin.js/dist/plumin.js","src/Utils.js","src/naive.js","src/prototypo.js","src/updateUtils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","prototypo","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"DepTree","nodes","prototype","add","node","dependants","Array","resolveNode","resolved","processing","deps","forEach","dep","indexOf","push","resolve","assign","target","firstSource","undefined","TypeError","to","Object","arguments","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","polyfill","defineProperty","configurable","writable","value","arrayCopy","source","array","index","arrayEach","iteratee","baseCopy","baseAssign","object","baseForOwn","initCloneArray","initCloneByTag","initCloneObject","isArray","isObject","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","cloneableTags","objectProto","objToString","toString","baseClone","isDeep","customizer","key","stackA","stackB","result","isArr","tag","isFunc","subValue","props","createBaseFor","baseFor","baseProperty","identity","bindCallback","func","thisArg","argCount","collection","accumulator","other","apply","ArrayBuffer","Uint8Array","bufferClone","buffer","byteLength","view","set","toObject","fromRight","keysFunc","iterable","getLength","isNative","getNative","hasOwnProperty","constructor","input","reFlags","Ctor","byteOffset","exec","lastIndex","isLength","isArrayLike","reIsUint","MAX_SAFE_INTEGER","isIndex","test","isIterateeCall","type","isObjectLike","isArguments","keysIn","shimKeys","propsLength","allowIndexes","clone","propertyIsEnumerable","nativeIsArray","isFunction","reIsHostCtor","fnToString","Function","reIsNative","RegExp","replace","nativeKeys","isProto","skipIndexes","plumin","use_int32","use_xyz","use_lines","use_deprecated","ClipperLib","isNode","navigator_appName","nav","navigator","userAgent","toLowerCase","appName","browser","chrome","chromium","safari","firefox","firefox17","firefox15","firefox3","opera","msie10","msie9","msie8","msie7","msie","biginteger_used","dbits","canary","j_lm","BigInteger","b","c","fromInt","fromNumber","fromString","nbi","am1","x","w","j","v","Math","floor","am2","xl","xh","h","m","am3","am","DB","DM","DV","BI_FP","FV","pow","F1","F2","BI_RM","BI_RC","rr","vv","charCodeAt","int2char","charAt","intAt","bnpCopyTo","bnpFromInt","nbv","bnpFromString","k","fromRadix","mi","sh","clamp","ZERO","subTo","bnpClamp","bnToString","negate","toRadix","km","d","p","bnNegate","bnAbs","bnCompareTo","nbits","bnBitLength","bnpDLShiftTo","bnpDRShiftTo","max","bnpLShiftTo","bs","cbs","bm","ds","bnpRShiftTo","bnpSubTo","min","bnpMultiplyTo","abs","y","bnpSquareTo","bnpDivRemTo","q","pm","pt","copyTo","ts","ms","nsh","lShiftTo","ys","y0","yt","d1","d2","dlShiftTo","compareTo","ONE","qd","drShiftTo","rShiftTo","bnMod","divRemTo","Classic","cConvert","mod","cRevert","cReduce","cMulTo","multiplyTo","reduce","cSqrTo","squareTo","convert","revert","mulTo","sqrTo","bnpInvDigit","Montgomery","mp","invDigit","mpl","mph","um","mt2","montConvert","montRevert","montReduce","u0","montSqrTo","montMulTo","bnpIsEven","bnpExp","z","r2","bnModPowInt","isEven","exp","bitLength","modPowInt","bnClone","bnIntValue","bnByteValue","bnShortValue","bnpChunkSize","LN2","log","bnSigNum","bnpToRadix","signum","cs","chunkSize","intValue","substr","bnpFromRadix","dMultiply","dAddOffset","bnpFromNumber","testBit","bitwiseTo","shiftLeft","op_or","isProbablePrime","nextBytes","bnToByteArray","bnEquals","bnMin","bnMax","bnpBitwiseTo","op","op_and","bnAnd","bnOr","op_xor","bnXor","op_andnot","bnAndNot","bnNot","bnShiftLeft","bnShiftRight","lbit","bnGetLowestSetBit","cbit","bnBitCount","bnTestBit","bnpChangeBit","bnSetBit","changeBit","bnClearBit","bnFlipBit","bnpAddTo","bnAdd","addTo","bnSubtract","bnMultiply","bnSquare","bnDivide","bnRemainder","bnDivideAndRemainder","bnpDMultiply","bnpDAddOffset","NullExp","nNop","nMulTo","nSqrTo","bnPow","bnpMultiplyLowerTo","bnpMultiplyUpperTo","Barrett","q3","mu","divide","barrettConvert","barrettRevert","barrettReduce","multiplyUpperTo","multiplyLowerTo","barrettSqrTo","barrettMulTo","bnModPow","k1","g2","is1","bnGCD","getLowestSetBit","bnpModInt","bnModInverse","ac","subtract","lowprimes","lplim","bnIsProbablePrime","modInt","millerRabin","bnpMillerRabin","n1","shiftRight","random","modPow","byteValue","shortValue","toByteArray","equals","and","or","xor","andNot","not","bitCount","setBit","clearBit","flipBit","multiply","remainder","divideAndRemainder","modInverse","gcd","square","Int128","IsNegative","op_Equality","val1","val2","op_Inequality","op_GreaterThan","op_LessThan","op_Addition","lhs","rhs","op_Subtraction","Int128Mul","op_Division","ToDouble","parseFloat","Inherit","ce","ce2","$baseCtor","getOwnPropertyNames","Path","Paths","DoublePoint","X","Y","DoublePoint0","DoublePoint1","dp","DoublePoint2","PolyNode","m_Parent","m_polygon","m_Index","m_jointype","m_endtype","m_Childs","IsOpen","IsHoleNode","ChildCount","Contour","AddChild","Child","cnt","GetNext","GetNextSiblingUp","Childs","Parent","IsHole","PolyTree","m_AllPolys","Clear","ilen","GetFirst","Total","Math_Abs_Int64","Math_Abs_Int32","Math_Abs_Double","Math_Max_Int32_Int32","Cast_Int32","Cast_Int64","ceil","Number","toInteger","parseInt","PI","PI2","IntPoint","alen","Z","Clipper","Round","IntPoint0","IntPoint1","IntPoint1dp","IntPoint2","IntPoint3","IntRect","left","top","right","bottom","ir","IntRect0","IntRect1","IntRect4","ClipType","ctIntersection","ctUnion","ctDifference","ctXor","PolyType","ptSubject","ptClip","PolyFillType","pftEvenOdd","pftNonZero","pftPositive","pftNegative","JoinType","jtSquare","jtRound","jtMiter","EndType","etOpenSquare","etOpenRound","etOpenButt","etClosedLine","etClosedPolygon","EndType_","etSquare","etRound","etButt","etClosed","EdgeSide","esLeft","esRight","Direction","dRightToLeft","dLeftToRight","TEdge","Bot","Curr","Top","Delta","Dx","PolyTyp","Side","WindDelta","WindCnt","WindCnt2","OutIdx","Next","Prev","NextInLML","NextInAEL","PrevInAEL","NextInSEL","PrevInSEL","IntersectNode","Edge1","Edge2","Pt","MyIntersectNodeSort","Compare","node1","node2","LocalMinima","LeftBound","RightBound","Scanbeam","OutRec","Idx","FirstLeft","Pts","BottomPt","OutPt","Join","OutPt1","OutPt2","OffPt","ClipperBase","m_MinimaList","m_CurrentLM","m_edges","m_UseFullRange","m_HasOpenPaths","PreserveCollinear","horizontal","Skip","Unassigned","tolerance","loRange","hiRange","near_zero","val","IsHorizontal","PointIsVertex","pp","pp2","PointOnLineSegment","linePt1","linePt2","UseFullRange","PointOnPolygon","SlopesEqual","e1","e2","pt1","pt2","pt3","pt4","SlopesEqual3","SlopesEqual4","SlopesEqual5","DisposeLocalMinimaList","jlen","tmpLm","RangeTest","useFullRange","Value","InitEdge","eNext","ePrev","InitEdge2","polyType","SetDx","FindNextLocMin","E","E2","ProcessBound","IsClockwise","EStart","Result","Horz","StartX","ReverseHorizontal","locMin","InsertLocalMinima","AddPath","pg","Closed","highI","edges","IsFlat","$1","eStart","eLoopStop","RemoveEdge","Pt2IsBetweenPt1AndPt3","eHighest","clockwise","EMin","AddPaths","ppg","closed","newLm","PopLocalMinima","tmp","Reset","lm","InitOptions","m_PolyOuts","m_ClipType","m_Scanbeam","m_ActiveEdges","m_SortedEdges","m_IntersectList","m_IntersectNodeComparer","m_ExecuteLocked","m_ClipFillType","m_SubjFillType","m_Joins","m_GhostJoins","m_UsingPolyTree","ReverseSolution","StrictlySimple","ZFillFunction","ioReverseSolution","ioStrictlySimple","ioPreserveCollinear","DisposeAllPolyPts","DisposeScanbeamList","sb2","InsertScanbeam","newSb","Execute","ispolytree","clipType","solution","subjFillType","clipFillType","succeeded","ExecuteInternal","BuildResult","polytree","BuildResult2","FixHoleLinkage","outRec","orfl","botY","PopScanbeam","InsertLocalMinimaIntoAEL","ProcessHorizontals","topY","ProcessIntersections","ProcessEdgesAtTopOfScanbeam","Area","ReversePolyPtLinks","JoinCommonEdges","FixupOutPolygon","DoSimplePolygons","DisposeOutRec","DisposeOutPts","tmpPp","AddJoin","Op1","Op2","AddGhostJoin","Op","SetZ","lb","rb","InsertEdgeIntoAEL","SetWindingCount","IsContributing","AddOutPt","AddLocalMinPoly","AddEdgeToSEL","HorzSegmentsOverlap","IntersectEdges","edge","startEdge","E2InsertsBeforeE1","TopX","IsEvenOddFillType","IsEvenOddAltFillType","pft","pft2","Inside","CopyAELToSEL","SwapPositionsInAEL","edge1","edge2","next","prev","SwapPositionsInSEL","AddLocalMaxPoly","AppendPolygon","prevE","outPt","CreateOutRec","ToFront","newOp","SetHoleState","SwapPoints","Pt1a","Pt1b","Pt2a","Pt2b","InsertPolyPtBetween","p1","p2","isHole","GetDx","FirstIsBottomPt","btmPt1","btmPt2","dx1p","dx1n","dx2p","dx2n","GetBottomPt","dups","GetLowermostRec","outRec1","outRec2","bPt1","bPt2","Param1RightOfParam2","GetOutRec","idx","outrec","holeStateRec","p1_lft","p1_rt","p2_lft","p2_rt","side","OKIdx","ObsoleteIdx","pp1","SwapSides","SwapPolyIndexes","outIdx","protect","e1stops","e2stops","e1Contributing","e2Contributing","DeleteFromAEL","oldE1WindCnt","e1FillType","e2FillType","e1FillType2","e2FillType2","e1Wc","e2Wc","e1Wc2","e2Wc2","AelPrev","AelNext","DeleteFromSEL","SelPrev","SelNext","UpdateEdgeIntoAEL","isTopOfScanbeam","horzEdge","ProcessHorizontal","GetHorzDirection","HorzEdge","$var","Left","Right","Dir","PrepareHorzJoins","dir","horzLeft","horzRight","eLastHorz","eMaxPair","GetMaximaPair","IsLastHorz","GetNextInAEL","op1","op2","IsMinima","IsMaxima","IsIntermediate","BuildIntersectList","FixupIntersectionOrder","ProcessIntersectList","$$e2","isModified","IntersectPoint","newNode","EdgesAdjacent","inode","IntersectNodeSort","sort","iNode","R1","round","R2","R3","R4","currentY","ip","b1","b2","IsMaximaEdge","DoMaxima","ReversePaths","polys","reverse","Orientation","poly","PointCount","pts","polyg","pn","lastOK","DupOutPt","InsertAfter","GetOverlap","a1","a2","$val","JoinHorz","op1b","op2b","DiscardLeft","Dir1","Dir2","JoinPoints","isHorizontal","reverse1","reverse2","DiscardLeftSide","Reverse1","Reverse2","GetBounds","paths","GetBounds2","ops","opStart","PointInPolygon","path","ipNext","startOp","poly0x","poly0y","poly1x","poly1y","Poly2ContainsPoly1","outPt1","outPt2","res","FixupFirstLefts1","OldOutRec","NewOutRec","FixupFirstLefts2","$i2","$t2","$l2","ParseFirstLeft","join","UpdateOutPtIdxs","oRec","op3","op4","outrec2","OffsetPaths","delta","jointype","endtype","MiterLimit","co","ClipperOffset","SimplifyPolygon","fillType","SimplifyPolygons","DistanceSqrd","dx","dy","DistanceFromLineSqrd","ln1","ln2","A","B","C","SlopesNearCollinear","distSqrd","PointsAreClose","ExcludeOp","CleanPolygon","distance","outPts","CleanPolygons","Minkowski","pattern","IsSum","IsClosed","polyCnt","pathCnt","quads","quad","MinkowskiSum","pathIsClosed","pathFillType","MinkowskiDiff","PolyTreeToPaths","AddPolyNodeToPaths","NodeType","ntAny","polynode","nt","match","ntOpen","ntClosed","$i3","$t3","$l3","OpenPathsFromPolyTree","ClosedPathsFromPolyTree","miterLimit","arcTolerance","def_arc_tolerance","m_destPolys","m_srcPoly","m_destPoly","m_normals","m_delta","m_sinA","m_sin","m_cos","m_miterLim","m_StepsPerRad","m_lowest","m_polyNodes","ArcTolerance","two_pi","joinType","endType","FixOrientations","GetUnitNormal","sqrt","DoOffset","steps","acos","sin","cos","X2","OffsetPoint","DoSquare","DoRound","clpr","outer","splice","outerNode","DoMiter","tan","atan2","message","err","alert","JS","AreaOfPolygon","scale","AreaOfPolygons","area","BoundsOfPath","BoundsOfPaths","bounds","Clean","polygon","isPolygons","Clone","k_length","results","plen","Lighten","poly2","P","rem","addlast","bxax","byay","ax","ay","toleranceSq","pop","PerimeterOfPath","perimeter","p1x","p1y","p2x","p2y","PerimeterOfPaths","ScaleDownPath","ScaleDownPaths","ScaleUpPath","ScaleUpPaths","ExPolygons","ExPolygon","holes","AddOuterPolyNodeToExPolygons","expolygons","ep","childs","childs2","ExPolygonsToPaths","PolyTreeToExPolygons",2,"opentype","argument","predicate","assert","line","ctx","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke",3,"cffStandardStrings","cffStandardEncoding","cffExpertEncoding","standardNames","DefaultEncoding","font","charToGlyphIndex","glyphs","glyph","unicodes","CmapEncoding","cmap","glyphIndexMap","CffEncoding","encoding","charset","charName","GlyphNames","post","version","names","slice","numberOfGlyphs","glyphNameIndex","nameToGlyphIndex","name","glyphIndexToName","gid","addGlyphNames","tables","charCodes","glyphIndex","addUnicode","cffEncoding","glyphNames",4,"sfnt","Font","options","familyName","styleName","designer","designerURL","manufacturer","manufacturerURL","license","licenseURL","description","copyright","trademark","unitsPerEm","ascender","descender","supported","hasChar","charToGlyph","stringToGlyphs","nameToGlyph","nametoGlyphIndex","getKerningValue","leftGlyph","rightGlyph","gposKerning","getGposKerningValue","kerningPairs","forEachGlyph","text","fontSize","callback","kerning","fontScale","advanceWidth","kerningValue","getPath","fullPath","gX","gY","gFontSize","glyphPath","extend","draw","drawPoints","drawMetrics","validate","warnings","_this","assertStringAttribute","attrName","trim","toTables","fontToTable","toBuffer","sfntTable","bytes","encode","intArray","download","fileName","requestFileSystem","webkitRequestFileSystem","TEMPORARY","fs","root","getFile","create","fileEntry","createWriter","writer","dataView","DataView","blob","Blob","write","addEventListener","location","href","toURL","./encoding","./path","./tables/sfnt",5,"check","Glyph","unicode","xMin","yMin","xMax","yMax","commands","cmd","quadraticCurveTo","curveTo","closePath","getContours","points","contours","currentContour","lastPointOfContour","getMetrics","xCoords","yCoords","metrics","leftSideBearing","rightSideBearing","drawCircles","PI_SQ","arc","fill","blueCircles","redCircles","fillStyle","lineWidth","strokeStyle","./check","./draw",6,"_font","parse","cff","glyf","gpos","head","hhea","hmtx","kern","loca","maxp","_name","os2","toArrayBuffer","arrayBuffer","data","loadFromFile","readFile","loadFromUrl","url","request","XMLHttpRequest","open","responseType","onload","status","statusText","response","send","parseBuffer","indexToLocFormat","hmtxOffset","glyfOffset","locaOffset","cffOffset","kernOffset","gposOffset","getFixed","outlinesFormat","getTag","numTables","getUShort","offset","getULong","numberOfHMetrics","numGlyphs","fontFamily","fontSubfamily","shortVersion","locaTable","load","loadFn","_parse","./font","./glyph","./parse","./tables/cff","./tables/cmap","./tables/glyf","./tables/gpos","./tables/head","./tables/hhea","./tables/hmtx","./tables/kern","./tables/loca","./tables/maxp","./tables/name","./tables/os2","./tables/post",7,"getByte","getUint8","getCard8","getUint16","getCard16","getShort","getInt16","getUint32","decimal","fraction","String","fromCharCode","getInt8","getOffset","offSize","getBytes","startOffset","endOffset","bytesToString","typeOffsets","byte","uShort","short","uLong","fixed","longDateTime","Parser","relativeOffset","parseByte","parseChar","parseCard8","parseUShort","parseCard16","parseSID","parseOffset16","parseShort","parseF2Dot14","parseULong","parseFixed","parseOffset16List","parseUShortList","count","offsets","parseString","string","parseTag","parseLongDateTime","parseVersion","major","minor","skip","amount",8,"strokeWidth","bezierCurveTo","quadTo","close","pathOrCommands","toPathData","decimalPlaces","floatToString","toFixed","packValues","toSVG","svg",9,"sizeOf","Table","tableName","fields","field","optionKeys","sizeOfFunction","TABLE","./types",10,"_glyph","table","parseCFFIndex","start","conversionFn","objects","objectOffset","offsetSize","pos","parseFloatOperand","parser","eof","lookup","n2","parseOperand","b0","b3","b4","entriesToObject","entries","values","parseCFFDict","size","operands","getCFFString","strings","interpretDict","dict","meta","newDict","parseCFFHeader","header","formatMajor","formatMinor","TOP_DICT_META","PRIVATE_DICT_META","parseCFFTopDict","parseCFFPrivateDict","parseCFFCharset","nGlyphs","sid","format","parseCFFEncoding","enc","nCodes","nRanges","first","nLeft","parseCFFCharstring","c1x","c1y","c2x","c2y","stack","nStems","haveWidth","width","defaultWidthX","newContour","parseStems","hasWidthArg","shift","nominalWidthX","codeIndex","subrCode","jpx","jpy","c3x","c3y","c4x","c4y","subrsBias","subrs","console","gsubrsBias","gsubrs","calcCFFSubroutineBias","bias","parseCFFTable","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDictData","topDict","privateDictOffset","privateDict","subrOffset","subrIndex","charStringsIndex","charStrings","charString","encodeString","makeHeader","makeNameIndex","fontNames","makeDict","attrs","entry","makeTopDict","makeTopDictIndex","topDicts","makeStringIndex","makeGlobalSubrIndex","makeCharsets","glyphName","glyphSID","glyphToOps","_13","_23","dx1","dy1","dx2","dy2","makeCharStringsIndex","makePrivateDict","makePrivateDictIndex","privateDicts","makeCFFTable","fullName","weight","weightName","private","privateAttrs","postScriptName","charsets","privateDictIndex","make","../encoding","../glyph","../parse","../path","../table",11,"parseCmapTable","platformId","encodingId","language","segCount","endCountParser","startCountParser","idDeltaParser","idRangeOffsetParser","glyphIndexOffset","endCount","startCount","idDelta","idRangeOffset","addSegment","segments","end","addTerminatorSegment","makeCmapTable","segCountX2","searchRange","entrySelector","rangeShift","endCounts","startCounts","idDeltas","idRangeOffsets","glyphIds","segment","concat","glyphId","../check",12,"parseGlyphCoordinate","flag","previousValue","shortVectorBitMask","sameBitMask","parseGlyph","numberOfContours","flags","endPointIndices","instructionLength","instructions","numberOfCoordinates","repeatCount","point","onCurve","px","py","isComposite","components","moreComponents","component","xScale","scale01","scale10","yScale","transformPoints","transform","newPoints","newPt","contour","firstPt","lastPt","curvePt","realFirstPoint","prevPt","midPt","parseGlyfTable","nextOffset","componentGlyph","transformedPoints",13,"parseTaggedListTable","list","parseCoverageTable","coverage","begin","parseClassDefTable","startGlyph","glyphCount","classes","glyphID","rangeCount","startGlyphs","endGlyphs","classValues","parsePairPosSubTable","coverageOffset","valueFormat1","valueFormat2","value1","value2","sharedPairSets","pairSetCount","pairSet","pairSetOffsets","firstGlyph","pairSetOffset","sharedPairSet","pairValueCount","secondGlyph","pairs","classDef1Offset","classDef2Offset","class1Count","class2Count","getClass1","getClass2","kerningMatrix","kerningRow","covered","class1","class2","parseLookupTable","lookupType","lookupFlag","useMarkFilteringSet","subTableCount","subTableOffsets","markFilteringSet","subtables","parseGposTable","tableVersion","lookupListOffset","lookupCount","lookupTableOffsets","lookupListAbsoluteOffset",14,"parseHeadTable","fontRevision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","glyphDataFormat","makeHeadTable",15,"parseHheaTable","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","makeHheaTable",16,"parseHmtxTable","numMetrics","makeHmtxTable",17,"parseKernTable","subTableVersion","nPairs","leftIndex","rightIndex",18,"parseLocaTable","parseFn","glyphOffsets","glyphOffset",19,"parseMaxpTable","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","makeMaxpTable",20,"nameTableNames","parseNameTable","stringOffset","unknownCount","platformID","encodingID","languageID","nameID","property","codePoints","str","langTagCount","makeNameRecord","addMacintoshNameRecord","recordID","stringBytes","STRING","records","addWindowsNameRecord","utf16Bytes","UTF16","makeNameTable","../types",21,"unicodeRanges","getUnicodeRange","range","parseOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContent","makeOS2Table",22,"parsePostTable","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","nameLength","makePostTable",23,"log2","computeCheckSum","sum","makeTableRecord","checkSum","makeSfntTable","highestPowerOf2","recordFields","tableFields","tableLength","tableRecord","isNaN","r1","metricsForChar","chars","notFoundMetrics","average","vs","fontToSfntTable","xMins","yMins","xMaxs","yMaxs","advanceWidths","leftSideBearings","rightSideBearings","firstCharIndex","lastCharIndex","position","globals","advanceWidthAvg","maxLeftSideBearing","headTable","hheaTable","maxpTable","os2Table","hmtxTable","cmapTable","nameTable","uniqueID","preferredFamily","preferredSubfamily","postTable","cffTable","checkSumAdjusted","./cff","./cmap","./head","./hhea","./hmtx","./maxp","./name","./os2","./post",24,"LIMIT16","LIMIT32","decode","constant","BYTE","CHAR","CHARARRAY","USHORT","SHORT","UINT24","ULONG","LONG","FIXED","FWORD","UFWORD","LONGDATETIME","TAG","Card8","Card16","OffSize","SID","NUMBER","NUMBER16","NUMBER32","NAME","INDEX","dataSize","OBJECT","encodedOffsets","offsetEncoder","encodedOffset","DICT","OPERAND","OPERATOR","OP","wmm","WeakMap","CHARSTRING","has","get","encodingFunction","LITERAL","paper","noCanvas","process","WorkerGlobalScope","Base","hidden","iter","bind","forIn","proto","__proto__","describe","obj","__lookupGetter__","__lookupSetter__","_define","__defineGetter__","__defineSetter__","inject","dest","src","beans","preserve","beansNames","substring","bean","base","isPlainObject","part","each","exclude","statics","ctor","initialize","pick","_id","_class","Formatter","instance","number","getClassName","exportJSON","toJSON","serialize","_set","dontCheck","orig","_filtering","obj1","obj2","checkKeys","o1","o2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","formatter","precision","definitions","references","item","id","ref","unshift","_serialize","_compact","deserialize","json","_data","isRoot","isDictionary","args","JSON","stringify","importJSON","isTarget","Item","Layer","insert","items","remove","append","_index","removed","capitalize","toUpperCase","camelize","all","chr","hyphenate","Emitter","on","_eventTypes","handlers","_callbacks","install","off","uninstall","once","emit","event","stop","responds","attach","detach","fire","_installEvents","events","_events","types","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","project","projects","tools","palettes","_scopes","support","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","v1","v2","rv","versionNumber","webkit","atom","getView","getPaper","execute","PaperScript","View","updateFocus","scope","that","setup","element","Project","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","separator","height","rectangle","Numerical","abscissas","weights","TOLERANCE","EPSILON","MACHINE_EPSILON","KAPPA","isZero","integrate","Ax","findRoot","df","fx","nx","solveQuadratic","roots","Infinity","D","gmC","mult","LOG10E","isFinite","R","solveCubic","c2","ec","x0","Point","arg0","arg1","hasY","angle","setAngle","setLength","_angle","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","div","NaN","dot","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","current","rotate","center","matrix","_transformPoint","modulo","isInside","Rectangle","contains","isClose","isColinear","isOrthogonal","point1","point2","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","rect","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","getTop","setTop","getRight","setRight","getBottom","setBottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","concatenate","c1","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","apx","apy","avx","avy","bpx","bpy","bvx","bvy","ta","tb","vx","vy","v2x","v2y","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","_drawSelection","Symbol","dontCenter","setDefinition","_definition","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","PlacedSymbol","symbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","visible","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","parent","setParent","mouseFlags","mousedown","mousedrag","click","doubleclick","mouseup","mousemove","mouseenter","mouseleave","mouseEvent","counters","_eventCounters","onFrame","_animateItem","onLoad","animate","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","children","_children","namedChildren","_namedChildren","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getRegistration","setRegistration","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","child","setBounds","cache","_boundsCache","ids","cached","_internal","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","copy","insertAbove","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","getIntersections","guides","parentTotalMatrix","_totalMatrix","totalMatrix","tolerancePadding","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","class","checkBounds","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","matches","compare","matchObject","firstOnly","overlapping","inside","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","namedArray","notifyParent","replaceWith","reverseChildren","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","toCanvasStyle","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","getViewMatrix","normalBlend","nativeBlend","direct","dontStart","clip","_canComposite","mainCtx","itemOffset","prevOffset","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","getWindingRule","getCornerCenter","halfSize","corner","getEllipseRadius","hit","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","getElement","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","modify","setContext","context","toDataURL","loaded","update","document","getElementById","Image","setTimeout","DomEvent","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","isLinear","_point","_handleIn","_handleOut","_path","curves","_curves","curve","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","setLinear","linear","next1","getNext","next2","getPrevious","isArc","handle1","handle2","_selectionState","state","oldState","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","removeSegment","interpolate","segment0","segment1","coef","dxPoint","dyPoint","dxHandleIn","dyHandleIn","dxHandleOut","dyHandleOut","change","Curve","arg6","arg7","_segment2","segment2","_length","getPoint1","setPoint1","getPoint2","setPoint2","getHandle1","setHandle1","getHandle2","setHandle2","getSegment1","getSegment2","getPoints","getPart","getPartLength","filterIntersections","_getParameter","isParameter","parameter","getParameterAt","ignoreLinear","subdivide","split","h1","h2","evaluate","bx","by","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","txs","tys","sx","sy","isFlatEnough","ux","uy","getEdgeSum","_addBounds","v0","v3","padding","tMin","tMax","getLocationAt","getLocationOf","getOffsetOf","loc","getNearestLocation","minDist","minT","refine","dist","step","getNearestPoint","getLengthIntegrand","getIterations","forward","rangeLength","guess","addLocation","locations","curve1","t1","curve2","t2","addCurveIntersections","uMin","uMax","oldTDiff","recursion","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","tMinNew","tMaxNew","tDiff","hull","getConvexHull","tMinClip","tMaxClip","clipConvexHull","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","flip","pmax","distZero","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rlx2","rvl","rvc","tc","tl","addLineIntersection","linear1","linear2","c1p1","c1p2","c2p1","c2p2","_expand","last","_curve","_curve2","_parameter","_parameter2","loc1","loc2","path1","path2","getParameter","getIntersection","_point2","_distance","getSegment","_preferFirst","_segment","_uncached","intersection","_intersection","_getOffset","getCurveOffset","getPointAt","curves1","curves2","matrix1","matrix2","length1","length2","values2","values1","seg1","seg2","setPathData","relative","previous","control","getCoord","command","lower","move","cubicCurveTo","arcTo","winding","_getWinding","setSegments","_clockwise","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","curX","curY","prevX","prevY","inX","inY","outX","outY","skipLine","isPolygon","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","simplify","fitter","PathFitter","fit","isClockwise","setClockwise","last1","last2","first2","first1","path0","toShape","topCenter","shape","numSegments","strokePadding","cap","hitStroke","hitFill","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","_addBevelJoin","_addSquareCap","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","smooth","overlap","knots","f1","f2","ie","je","getCurrentSegment","moveBy","through","extent","vector","middle","large","epsilon","rxSq","rySq","xSq","ySq","l1","l2","throughSide","centerSide","ext","inc","out","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","prevCoords","processSegment","joinBounds","addRound","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getNormal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","compoundpath0","compoundpath1","getCurrentPath","operators","computeBoolean","operation","operator","preparePath","reorient","_path1","_path2","splitPath","monoCurves","collect","_getMonoCurves","_winding","startSeg","totalLength","windingSum","curveLength","getTangentAt","getWinding","tracePaths","intersections","linearHandles","resetLinear","newCurve","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","prevT","slope","selfOp","_visited","inter","startInterSeg","added","interSeg","c4","c3","t3","t4","w3","w4","nextCurve","nextSeg","firstSegment","lastSegment","prevCurve","insertCurve","handleCurve","y3","getInteriorPoint","xIntercepts","maxRecursion","minDifference","addCurve","computeParts","maxT","halfT","prevVal","prevLen","error","fitCubic","tan1","tan2","uPrime","chordLengthParameterize","maxError","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","detC0C1","alpha1","alpha2","detC0X","detXC1","c0","segLength","diff","degree","maxDist","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","gray","rgb","hsb","hsl","gradient","componentParsers","colorCache","colorCtx","fromCSS","hsbIndices","converters","rgb-hsb","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","hasOverlap","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","_stops","origin","destination","canvasGradient","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","acronym","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","nativeRequest","requested","callbacks","focused","timer","focus","blur","handleCallbacks","setInterval","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","getCanvasSize","_windowEvents","resize","setViewSize","_setViewSize","Stats","_stats","stats","domElement","appendChild","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","onResize","_time","_count","_requestFrame","_requested","_handleFrame","now","Date","_before","_handlingFrame","time","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tool","prevFocus","tempFocus","dragging","handleMouseMove","_handleEvent","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","HTMLCanvasElement","deviceRatio","backingStoreRatio","prevFont","measureText","downPoint","lastPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","callEvent","MouseEvent","isStopped","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","specialKeys",27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","space","charCodeMap","keyMap","downCode","handleKey","keyCode","charCode","specialKey","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","method","xhr","ActiveXObject","overrideMimeType","onreadystatechange","readyState","responseText","canvases","createElement","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","attribute","fromSVG","exportFilter","SVGNamespaces","xlink","setAttributes","namespace","setAttributeNS","createElementNS","getTransform","coordinates","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","exporters","applyStyle","visibility","svgs","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","map","importGroup","childNodes","isClip","currentStyle","applyAttributes","importSVG","importPoly","importPath","pathData","importGradient","isRadial","importers","#document","nextSibling","clippath","polyline","lineargradient","radialgradient","use","circle","applyTransform","transforms","applyOpacity","attributes","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","styles","group","parentNode","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","onImport","expandShapes","Collection","cb","wrapConstructor","useConstructed","wrapper","arr","params","rconstructor","constructorFilter","unwrapArg","isPlural","unwrapArgs","proxy","methodNames","filter","plural","fontinfo","ot","glyphMap","charMap","altMap","_subset","addGlyph","addGlyphs","fonts","addedFonts","delete","styleElement","styleSheet","styleSheets","ss","ownerNode","_lastSubset","normalizeSubset","lastIndexOf","getGlyphSubset","subset","font0","font1","updateSVGData","updateOTCommands","united","importOT","otFont","otGlyph","_URL","URL","webkitURL","addToFonts","fontface","FontFace","createObjectURL","fontObjectURL","revokeObjectURL","deleteRule","insertRule","onloadend","dispatchEvent","readAsDataURL","../node_modules/opentype.js/dist/opentype.js","../node_modules/paper/dist/paper-core.js","./Glyph.js","Outline","clipper","anchors","parentAnchors","addAnchor","addAnchors","addParentAnchor","glyph0","glyph1","svgData","StriclySimple","getPaths","unionedPath","constructedPath","isPrepared","addContour","../node_modules/jsclipper/clipper_unminified.js","./Outline.js","fromPath","outline0","outline1","expandedFrom","skeleton","expandedTo","getSimplePath","defineProperties","firstNode","lastNode","_updateData","pushSimple","pushBezier","exportReversed","ctrl1","ctrl2","locationOnCurve","newPathToAdd","Node","./Collection.js","./Font.js","./Node.js","./Outline","./Path.js","updateUtils","Utils","_","ufoToPaper","parameters","outline","parentParameters","lib","transformOrigin","solvingOrder","fontFromSrc","info","filteredSrc","controls","presets","createUpdaters","mergeStatic","solveDependencyTree","glyphFromSrc","fontSrc","naive","embed","anchorSrc","contourSrc","nodeSrc","embedComponents","componentSrc","annotator","addComponent","cursor","propFromCursor","_dependencies","_parameters","_updaters","leaf","_operation","createUpdater","updaterCache","sOperation","cacheKey","depTree","dependencyTree","order","simplified","simplifyResolutionOrder","parentSrc","leafSrc","currCursor","rdeg","transformsToMatrix","Float32Array","curr","rslt","updateParameters","updateProperties","_cursor","propName","autoExpandableNodeSrc","inSkeleton","autoExpandedNodeSrc","expandedNodeUpdater","skeletonCopier","explicitExpandableNodeSrc","explicitExpandedNodeSrc","expandedContourSrc","curviness","prepareContour","updateContour","additionalContours","leftContour","rightContour","leftNodes","rightNodes","leftNodesSrc","rightNodesSrc","leftSrc","rightSrc","typeIn","typeOut","addContours","isLeft","distr","_dirOut","_dirIn","tensionIn","tensionOut","tension","lineAngle","startCtrl","endCtrl","startType","startTension","endTension","startDir","endDir","rri","rayRayIntersection","dirIn","dirOut","parametricFont","glyphSrc","_params","_node","_contour","prepareDataUpdate","lineLineIntersection","p4","x3","x4","y4","onLine","pointOnCurve","pointHandleOut","pointHandleIn","distanceFromOut","inverseOrientation","linePrecision","previousPoint","deCasteljau"],"mappings":"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CA,OAAAA,WAAA,GAGAhD,QAAAD,QAAAstH;AtCvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChhEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpzqyxiisourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var DepTree = function() {\n  this.nodes = {}; \n};\n\nDepTree.prototype.add = function(node, dependants) {\n  var self = this;\n\n  if (!dependants) {\n    dependants = [];\n  } else if (!(dependants instanceof Array)) {\n    dependants = [dependants];\n  }\n\n  this.nodes[node] = dependants;\n};\n\n\nDepTree.prototype.resolveNode = function(node, resolved, processing) {\n\n  var self = this;\n\n  resolved = resolved || [];\n  processing = processing || {};\n  var deps = this.nodes[node] || [];\n\n  processing[node] = true;\n\n  deps.forEach(function(dep) {\n    if (resolved.indexOf(dep) != -1) {\n      return;\n    }\n    if (processing[dep]) {\n      throw new Error('Circular dependency: '+dep);\n    }\n    self.resolveNode(dep, resolved, processing);\n  });\n\n  if (resolved.indexOf(node) == -1) {\n    processing[node] = false;\n    resolved.push(node);\n  }\n  return resolved;\n};\n\nDepTree.prototype.resolve = function() {\n\n  var resolved = [];\n  for (var node in this.nodes) {\n    this.resolveNode(node, resolved);\n  }\n\n  return resolved;\n\n};\n\n\nmodule.exports = DepTree;\n","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction arrayCopy(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayCopy;\n","/**\n * A specialized version of `_.forEach` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var baseCopy = require('./baseCopy'),\n    keys = require('../object/keys');\n\n/**\n * The base implementation of `_.assign` without support for argument juggling,\n * multiple sources, and `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return source == null\n    ? object\n    : baseCopy(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var arrayCopy = require('./arrayCopy'),\n    arrayEach = require('./arrayEach'),\n    baseAssign = require('./baseAssign'),\n    baseForOwn = require('./baseForOwn'),\n    initCloneArray = require('./initCloneArray'),\n    initCloneByTag = require('./initCloneByTag'),\n    initCloneObject = require('./initCloneObject'),\n    isArray = require('../lang/isArray'),\n    isObject = require('../lang/isObject');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\ncloneableTags[dateTag] = cloneableTags[float32Tag] =\ncloneableTags[float64Tag] = cloneableTags[int8Tag] =\ncloneableTags[int16Tag] = cloneableTags[int32Tag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[stringTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[mapTag] = cloneableTags[setTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * The base implementation of `_.clone` without support for argument juggling\n * and `this` binding `customizer` functions.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The object `value` belongs to.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates clones with source counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return arrayCopy(value, result);\n    }\n  } else {\n    var tag = objToString.call(value),\n        isFunc = tag == funcTag;\n\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return baseAssign(result, value);\n      }\n    } else {\n      return cloneableTags[tag]\n        ? initCloneByTag(value, tag, isDeep)\n        : (object ? value : {});\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == value) {\n      return stackB[length];\n    }\n  }\n  // Add the source value to the stack of traversed objects and associate it with its clone.\n  stackA.push(value);\n  stackB.push(result);\n\n  // Recursively populate clone (susceptible to call stack limits).\n  (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n    result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @returns {Object} Returns `object`.\n */\nfunction baseCopy(source, props, object) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    object[key] = source[key];\n  }\n  return object;\n}\n\nmodule.exports = baseCopy;\n","var createBaseFor = require('./createBaseFor');\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./baseFor'),\n    keys = require('../object/keys');\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var identity = require('../utility/identity');\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\nmodule.exports = bindCallback;\n","(function (global){\n/** Native method references. */\nvar ArrayBuffer = global.ArrayBuffer,\n    Uint8Array = global.Uint8Array;\n\n/**\n * Creates a clone of the given array buffer.\n *\n * @private\n * @param {ArrayBuffer} buffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction bufferClone(buffer) {\n  var result = new ArrayBuffer(buffer.byteLength),\n      view = new Uint8Array(result);\n\n  view.set(new Uint8Array(buffer));\n  return result;\n}\n\nmodule.exports = bufferClone;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9sb2Rhc2gvaW50ZXJuYWwvYnVmZmVyQ2xvbmUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIE5hdGl2ZSBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBBcnJheUJ1ZmZlciA9IGdsb2JhbC5BcnJheUJ1ZmZlcixcbiAgICBVaW50OEFycmF5ID0gZ2xvYmFsLlVpbnQ4QXJyYXk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGNsb25lIG9mIHRoZSBnaXZlbiBhcnJheSBidWZmZXIuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXlCdWZmZXJ9IGJ1ZmZlciBUaGUgYXJyYXkgYnVmZmVyIHRvIGNsb25lLlxuICogQHJldHVybnMge0FycmF5QnVmZmVyfSBSZXR1cm5zIHRoZSBjbG9uZWQgYXJyYXkgYnVmZmVyLlxuICovXG5mdW5jdGlvbiBidWZmZXJDbG9uZShidWZmZXIpIHtcbiAgdmFyIHJlc3VsdCA9IG5ldyBBcnJheUJ1ZmZlcihidWZmZXIuYnl0ZUxlbmd0aCksXG4gICAgICB2aWV3ID0gbmV3IFVpbnQ4QXJyYXkocmVzdWx0KTtcblxuICB2aWV3LnNldChuZXcgVWludDhBcnJheShidWZmZXIpKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBidWZmZXJDbG9uZTtcbiJdfQ==","var toObject = require('./toObject');\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var baseProperty = require('./baseProperty');\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n","var isNative = require('../lang/isNative');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add array properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var bufferClone = require('./bufferClone');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    stringTag = '[object String]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return bufferClone(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      var buffer = object.buffer;\n      return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      var result = new Ctor(object.source, reFlags.exec(object));\n      result.lastIndex = object.lastIndex;\n  }\n  return result;\n}\n\nmodule.exports = initCloneByTag;\n","/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  var Ctor = object.constructor;\n  if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n    Ctor = Object;\n  }\n  return new Ctor;\n}\n\nmodule.exports = initCloneObject;\n","var getLength = require('./getLength'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\nmodule.exports = isArrayLike;\n","/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n","var isArrayLike = require('./isArrayLike'),\n    isIndex = require('./isIndex'),\n    isObject = require('../lang/isObject');\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('./isIndex'),\n    isLength = require('./isLength'),\n    keysIn = require('../object/keysIn');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = !!length && isLength(length) &&\n    (isArray(object) || isArguments(object));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = shimKeys;\n","var isObject = require('../lang/isObject');\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\nmodule.exports = toObject;\n","var baseClone = require('../internal/baseClone'),\n    bindCallback = require('../internal/bindCallback'),\n    isIterateeCall = require('../internal/isIterateeCall');\n\n/**\n * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n * otherwise they are assigned by reference. If `customizer` is provided it's\n * invoked to produce the cloned values. If `customizer` returns `undefined`\n * cloning is handled by the method instead. The `customizer` is bound to\n * `thisArg` and invoked with up to three argument; (value [, index|key, object]).\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n * The enumerable properties of `arguments` objects and objects created by\n * constructors other than `Object` are cloned to plain `Object` objects. An\n * empty object is returned for uncloneable values such as functions, DOM nodes,\n * Maps, Sets, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {*} Returns the cloned value.\n * @example\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * var shallow = _.clone(users);\n * shallow[0] === users[0];\n * // => true\n *\n * var deep = _.clone(users, true);\n * deep[0] === users[0];\n * // => false\n *\n * // using a customizer callback\n * var el = _.clone(document.body, function(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(false);\n *   }\n * });\n *\n * el === document.body\n * // => false\n * el.nodeName\n * // => BODY\n * el.childNodes.length;\n * // => 0\n */\nfunction clone(value, isDeep, customizer, thisArg) {\n  if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n    isDeep = false;\n  }\n  else if (typeof isDeep == 'function') {\n    thisArg = customizer;\n    customizer = isDeep;\n    isDeep = false;\n  }\n  return typeof customizer == 'function'\n    ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 3))\n    : baseClone(value, isDeep);\n}\n\nmodule.exports = clone;\n","var isArrayLike = require('../internal/isArrayLike'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && isArrayLike(value) &&\n    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n}\n\nmodule.exports = isArguments;\n","var getNative = require('../internal/getNative'),\n    isLength = require('../internal/isLength'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\nmodule.exports = isArray;\n","var isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 which returns 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\nmodule.exports = isFunction;\n","var isFunction = require('./isFunction'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = isNative;\n","/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var getNative = require('../internal/getNative'),\n    isArrayLike = require('../internal/isArrayLike'),\n    isObject = require('../lang/isObject'),\n    shimKeys = require('../internal/shimKeys');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = getNative(Object, 'keys');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  var Ctor = object == null ? undefined : object.constructor;\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && isArrayLike(object))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\nmodule.exports = keys;\n","var isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('../internal/isIndex'),\n    isLength = require('../internal/isLength'),\n    isObject = require('../lang/isObject');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keysIn;\n","/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.plumin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// rev 452\n/********************************************************************************\n *                                                                              *\n * Author    :  Angus Johnson                                                   *\n * Version   :  6.1.3a                                                          *\n * Date      :  22 January 2014                                                 *\n * Website   :  http://www.angusj.com                                           *\n * Copyright :  Angus Johnson 2010-2014                                         *\n *                                                                              *\n * License:                                                                     *\n * Use, modification & distribution is subject to Boost Software License Ver 1. *\n * http://www.boost.org/LICENSE_1_0.txt                                         *\n *                                                                              *\n * Attributions:                                                                *\n * The code in this library is an extension of Bala Vatti's clipping algorithm: *\n * \"A generic solution to polygon clipping\"                                     *\n * Communications of the ACM, Vol 35, Issue 7 (July 1992) pp 56-63.             *\n * http://portal.acm.org/citation.cfm?id=129906                                 *\n *                                                                              *\n * Computer graphics and geometric modeling: implementation and algorithms      *\n * By Max K. Agoston                                                            *\n * Springer; 1 edition (January 4, 2005)                                        *\n * http://books.google.com/books?q=vatti+clipping+agoston                       *\n *                                                                              *\n * See also:                                                                    *\n * \"Polygon Offsetting by Computing Winding Numbers\"                            *\n * Paper no. DETC2005-85513 pp. 565-575                                         *\n * ASME 2005 International Design Engineering Technical Conferences             *\n * and Computers and Information in Engineering Conference (IDETC/CIE2005)      *\n * September 24-28, 2005 , Long Beach, California, USA                          *\n * http://www.me.berkeley.edu/~mcmains/pubs/DAC05OffsetPolygon.pdf              *\n *                                                                              *\n *******************************************************************************/\n/*******************************************************************************\n *                                                                              *\n * Author    :  Timo                                                            *\n * Version   :  6.1.3.2                                                         *\n * Date      :  1 February 2014                                                 *\n *                                                                              *\n * This is a translation of the C# Clipper library to Javascript.               *\n * Int128 struct of C# is implemented using JSBN of Tom Wu.                     *\n * Because Javascript lacks support for 64-bit integers, the space              *\n * is a little more restricted than in C# version.                              *\n *                                                                              *\n * C# version has support for coordinate space:                                 *\n * +-4611686018427387903 ( sqrt(2^127 -1)/2 )                                   *\n * while Javascript version has support for space:                              *\n * +-4503599627370495 ( sqrt(2^106 -1)/2 )                                      *\n *                                                                              *\n * Tom Wu's JSBN proved to be the fastest big integer library:                  *\n * http://jsperf.com/big-integer-library-test                                   *\n *                                                                              *\n * This class can be made simpler when (if ever) 64-bit integer support comes.  *\n *                                                                              *\n *******************************************************************************/\n/*******************************************************************************\n *                                                                              *\n * Basic JavaScript BN library - subset useful for RSA encryption.              *\n * http://www-cs-students.stanford.edu/~tjw/jsbn/                               *\n * Copyright (c) 2005  Tom Wu                                                   *\n * All Rights Reserved.                                                         *\n * See \"LICENSE\" for details:                                                   *\n * http://www-cs-students.stanford.edu/~tjw/jsbn/LICENSE                        *\n *                                                                              *\n *******************************************************************************/\n(function ()\n{\n  \"use strict\";\n  //use_int32: When enabled 32bit ints are used instead of 64bit ints. This\n  //improve performance but coordinate values are limited to the range +/- 46340\n  var use_int32 = false;\n  //use_xyz: adds a Z member to IntPoint. Adds a minor cost to performance.\n  var use_xyz = false;\n  //UseLines: Enables line clipping. Adds a very minor cost to performance.\n  var use_lines = true;\n  //use_deprecated: Enables support for the obsolete OffsetPaths() function\n  //which has been replace with the ClipperOffset class.\n  var use_deprecated = false;\n\n  var ClipperLib = {};\n  var isNode = false;\n  if (typeof module !== 'undefined' && module.exports)\n  {\n    module.exports = ClipperLib;\n    isNode = true;\n  }\n  else\n  {\n    if (typeof (document) !== \"undefined\") window.ClipperLib = ClipperLib;\n    else self['ClipperLib'] = ClipperLib;\n  }\n  var navigator_appName;\n  if (!isNode)\n  {\n    var nav = navigator.userAgent.toString().toLowerCase();\n    navigator_appName = navigator.appName;\n  }\n  else\n  {\n    var nav = \"chrome\"; // Node.js uses Chrome's V8 engine\n    navigator_appName = \"Netscape\"; // Firefox, Chrome and Safari returns \"Netscape\", so Node.js should also\n  }\n  // Browser test to speedup performance critical functions\n  var browser = {};\n  if (nav.indexOf(\"chrome\") != -1 && nav.indexOf(\"chromium\") == -1) browser.chrome = 1;\n  else browser.chrome = 0;\n  if (nav.indexOf(\"chromium\") != -1) browser.chromium = 1;\n  else browser.chromium = 0;\n  if (nav.indexOf(\"safari\") != -1 && nav.indexOf(\"chrome\") == -1 && nav.indexOf(\"chromium\") == -1) browser.safari = 1;\n  else browser.safari = 0;\n  if (nav.indexOf(\"firefox\") != -1) browser.firefox = 1;\n  else browser.firefox = 0;\n  if (nav.indexOf(\"firefox/17\") != -1) browser.firefox17 = 1;\n  else browser.firefox17 = 0;\n  if (nav.indexOf(\"firefox/15\") != -1) browser.firefox15 = 1;\n  else browser.firefox15 = 0;\n  if (nav.indexOf(\"firefox/3\") != -1) browser.firefox3 = 1;\n  else browser.firefox3 = 0;\n  if (nav.indexOf(\"opera\") != -1) browser.opera = 1;\n  else browser.opera = 0;\n  if (nav.indexOf(\"msie 10\") != -1) browser.msie10 = 1;\n  else browser.msie10 = 0;\n  if (nav.indexOf(\"msie 9\") != -1) browser.msie9 = 1;\n  else browser.msie9 = 0;\n  if (nav.indexOf(\"msie 8\") != -1) browser.msie8 = 1;\n  else browser.msie8 = 0;\n  if (nav.indexOf(\"msie 7\") != -1) browser.msie7 = 1;\n  else browser.msie7 = 0;\n  if (nav.indexOf(\"msie \") != -1) browser.msie = 1;\n  else browser.msie = 0;\n  ClipperLib.biginteger_used = null;\n  // Copyright (c) 2005  Tom Wu\n  // All Rights Reserved.\n  // See \"LICENSE\" for details.\n  // Basic JavaScript BN library - subset useful for RSA encryption.\n  // Bits per digit\n  var dbits;\n  // JavaScript engine analysis\n  var canary = 0xdeadbeefcafe;\n  var j_lm = ((canary & 0xffffff) == 0xefcafe);\n  // (public) Constructor\n  function BigInteger(a, b, c)\n  {\n    // This test variable can be removed,\n    // but at least for performance tests it is useful piece of knowledge\n    // This is the only ClipperLib related variable in BigInteger library\n    ClipperLib.biginteger_used = 1;\n    if (a != null)\n      if (\"number\" == typeof a && \"undefined\" == typeof (b)) this.fromInt(a); // faster conversion\n      else if (\"number\" == typeof a) this.fromNumber(a, b, c);\n    else if (b == null && \"string\" != typeof a) this.fromString(a, 256);\n    else this.fromString(a, b);\n  }\n  // return new, unset BigInteger\n  function nbi()\n  {\n    return new BigInteger(null);\n  }\n  // am: Compute w_j += (x*this_i), propagate carries,\n  // c is initial carry, returns final carry.\n  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n  // We need to select the fastest one that works in this environment.\n  // am1: use a single mult and divide to get the high bits,\n  // max digit bits should be 26 because\n  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n  function am1(i, x, w, j, c, n)\n  {\n    while (--n >= 0)\n    {\n      var v = x * this[i++] + w[j] + c;\n      c = Math.floor(v / 0x4000000);\n      w[j++] = v & 0x3ffffff;\n    }\n    return c;\n  }\n  // am2 avoids a big mult-and-extract completely.\n  // Max digit bits should be <= 30 because we do bitwise ops\n  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n  function am2(i, x, w, j, c, n)\n  {\n    var xl = x & 0x7fff,\n      xh = x >> 15;\n    while (--n >= 0)\n    {\n      var l = this[i] & 0x7fff;\n      var h = this[i++] >> 15;\n      var m = xh * l + h * xl;\n      l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n      c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n      w[j++] = l & 0x3fffffff;\n    }\n    return c;\n  }\n  // Alternately, set max digit bits to 28 since some\n  // browsers slow down when dealing with 32-bit numbers.\n  function am3(i, x, w, j, c, n)\n  {\n    var xl = x & 0x3fff,\n      xh = x >> 14;\n    while (--n >= 0)\n    {\n      var l = this[i] & 0x3fff;\n      var h = this[i++] >> 14;\n      var m = xh * l + h * xl;\n      l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n      c = (l >> 28) + (m >> 14) + xh * h;\n      w[j++] = l & 0xfffffff;\n    }\n    return c;\n  }\n  if (j_lm && (navigator_appName == \"Microsoft Internet Explorer\"))\n  {\n    BigInteger.prototype.am = am2;\n    dbits = 30;\n  }\n  else if (j_lm && (navigator_appName != \"Netscape\"))\n  {\n    BigInteger.prototype.am = am1;\n    dbits = 26;\n  }\n  else\n  { // Mozilla/Netscape seems to prefer am3\n    BigInteger.prototype.am = am3;\n    dbits = 28;\n  }\n  BigInteger.prototype.DB = dbits;\n  BigInteger.prototype.DM = ((1 << dbits) - 1);\n  BigInteger.prototype.DV = (1 << dbits);\n  var BI_FP = 52;\n  BigInteger.prototype.FV = Math.pow(2, BI_FP);\n  BigInteger.prototype.F1 = BI_FP - dbits;\n  BigInteger.prototype.F2 = 2 * dbits - BI_FP;\n  // Digit conversions\n  var BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n  var BI_RC = new Array();\n  var rr, vv;\n  rr = \"0\".charCodeAt(0);\n  for (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\n  rr = \"a\".charCodeAt(0);\n  for (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n  rr = \"A\".charCodeAt(0);\n  for (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\n  function int2char(n)\n  {\n    return BI_RM.charAt(n);\n  }\n\n  function intAt(s, i)\n  {\n    var c = BI_RC[s.charCodeAt(i)];\n    return (c == null) ? -1 : c;\n  }\n  // (protected) copy this to r\n  function bnpCopyTo(r)\n  {\n    for (var i = this.t - 1; i >= 0; --i) r[i] = this[i];\n    r.t = this.t;\n    r.s = this.s;\n  }\n  // (protected) set from integer value x, -DV <= x < DV\n  function bnpFromInt(x)\n  {\n    this.t = 1;\n    this.s = (x < 0) ? -1 : 0;\n    if (x > 0) this[0] = x;\n    else if (x < -1) this[0] = x + this.DV;\n    else this.t = 0;\n  }\n  // return bigint initialized to value\n  function nbv(i)\n  {\n    var r = nbi();\n    r.fromInt(i);\n    return r;\n  }\n  // (protected) set from string and radix\n  function bnpFromString(s, b)\n  {\n    var k;\n    if (b == 16) k = 4;\n    else if (b == 8) k = 3;\n    else if (b == 256) k = 8; // byte array\n    else if (b == 2) k = 1;\n    else if (b == 32) k = 5;\n    else if (b == 4) k = 2;\n    else\n    {\n      this.fromRadix(s, b);\n      return;\n    }\n    this.t = 0;\n    this.s = 0;\n    var i = s.length,\n      mi = false,\n      sh = 0;\n    while (--i >= 0)\n    {\n      var x = (k == 8) ? s[i] & 0xff : intAt(s, i);\n      if (x < 0)\n      {\n        if (s.charAt(i) == \"-\") mi = true;\n        continue;\n      }\n      mi = false;\n      if (sh == 0)\n        this[this.t++] = x;\n      else if (sh + k > this.DB)\n      {\n        this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;\n        this[this.t++] = (x >> (this.DB - sh));\n      }\n      else\n        this[this.t - 1] |= x << sh;\n      sh += k;\n      if (sh >= this.DB) sh -= this.DB;\n    }\n    if (k == 8 && (s[0] & 0x80) != 0)\n    {\n      this.s = -1;\n      if (sh > 0) this[this.t - 1] |= ((1 << (this.DB - sh)) - 1) << sh;\n    }\n    this.clamp();\n    if (mi) BigInteger.ZERO.subTo(this, this);\n  }\n  // (protected) clamp off excess high words\n  function bnpClamp()\n  {\n    var c = this.s & this.DM;\n    while (this.t > 0 && this[this.t - 1] == c)--this.t;\n  }\n  // (public) return string representation in given radix\n  function bnToString(b)\n  {\n    if (this.s < 0) return \"-\" + this.negate().toString(b);\n    var k;\n    if (b == 16) k = 4;\n    else if (b == 8) k = 3;\n    else if (b == 2) k = 1;\n    else if (b == 32) k = 5;\n    else if (b == 4) k = 2;\n    else return this.toRadix(b);\n    var km = (1 << k) - 1,\n      d, m = false,\n      r = \"\",\n      i = this.t;\n    var p = this.DB - (i * this.DB) % k;\n    if (i-- > 0)\n    {\n      if (p < this.DB && (d = this[i] >> p) > 0)\n      {\n        m = true;\n        r = int2char(d);\n      }\n      while (i >= 0)\n      {\n        if (p < k)\n        {\n          d = (this[i] & ((1 << p) - 1)) << (k - p);\n          d |= this[--i] >> (p += this.DB - k);\n        }\n        else\n        {\n          d = (this[i] >> (p -= k)) & km;\n          if (p <= 0)\n          {\n            p += this.DB;\n            --i;\n          }\n        }\n        if (d > 0) m = true;\n        if (m) r += int2char(d);\n      }\n    }\n    return m ? r : \"0\";\n  }\n  // (public) -this\n  function bnNegate()\n  {\n    var r = nbi();\n    BigInteger.ZERO.subTo(this, r);\n    return r;\n  }\n  // (public) |this|\n  function bnAbs()\n  {\n    return (this.s < 0) ? this.negate() : this;\n  }\n  // (public) return + if this > a, - if this < a, 0 if equal\n  function bnCompareTo(a)\n  {\n    var r = this.s - a.s;\n    if (r != 0) return r;\n    var i = this.t;\n    r = i - a.t;\n    if (r != 0) return (this.s < 0) ? -r : r;\n    while (--i >= 0)\n      if ((r = this[i] - a[i]) != 0) return r;\n    return 0;\n  }\n  // returns bit length of the integer x\n  function nbits(x)\n  {\n    var r = 1,\n      t;\n    if ((t = x >>> 16) != 0)\n    {\n      x = t;\n      r += 16;\n    }\n    if ((t = x >> 8) != 0)\n    {\n      x = t;\n      r += 8;\n    }\n    if ((t = x >> 4) != 0)\n    {\n      x = t;\n      r += 4;\n    }\n    if ((t = x >> 2) != 0)\n    {\n      x = t;\n      r += 2;\n    }\n    if ((t = x >> 1) != 0)\n    {\n      x = t;\n      r += 1;\n    }\n    return r;\n  }\n  // (public) return the number of bits in \"this\"\n  function bnBitLength()\n  {\n    if (this.t <= 0) return 0;\n    return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));\n  }\n  // (protected) r = this << n*DB\n  function bnpDLShiftTo(n, r)\n  {\n    var i;\n    for (i = this.t - 1; i >= 0; --i) r[i + n] = this[i];\n    for (i = n - 1; i >= 0; --i) r[i] = 0;\n    r.t = this.t + n;\n    r.s = this.s;\n  }\n  // (protected) r = this >> n*DB\n  function bnpDRShiftTo(n, r)\n  {\n    for (var i = n; i < this.t; ++i) r[i - n] = this[i];\n    r.t = Math.max(this.t - n, 0);\n    r.s = this.s;\n  }\n  // (protected) r = this << n\n  function bnpLShiftTo(n, r)\n  {\n    var bs = n % this.DB;\n    var cbs = this.DB - bs;\n    var bm = (1 << cbs) - 1;\n    var ds = Math.floor(n / this.DB),\n      c = (this.s << bs) & this.DM,\n      i;\n    for (i = this.t - 1; i >= 0; --i)\n    {\n      r[i + ds + 1] = (this[i] >> cbs) | c;\n      c = (this[i] & bm) << bs;\n    }\n    for (i = ds - 1; i >= 0; --i) r[i] = 0;\n    r[ds] = c;\n    r.t = this.t + ds + 1;\n    r.s = this.s;\n    r.clamp();\n  }\n  // (protected) r = this >> n\n  function bnpRShiftTo(n, r)\n  {\n    r.s = this.s;\n    var ds = Math.floor(n / this.DB);\n    if (ds >= this.t)\n    {\n      r.t = 0;\n      return;\n    }\n    var bs = n % this.DB;\n    var cbs = this.DB - bs;\n    var bm = (1 << bs) - 1;\n    r[0] = this[ds] >> bs;\n    for (var i = ds + 1; i < this.t; ++i)\n    {\n      r[i - ds - 1] |= (this[i] & bm) << cbs;\n      r[i - ds] = this[i] >> bs;\n    }\n    if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\n    r.t = this.t - ds;\n    r.clamp();\n  }\n  // (protected) r = this - a\n  function bnpSubTo(a, r)\n  {\n    var i = 0,\n      c = 0,\n      m = Math.min(a.t, this.t);\n    while (i < m)\n    {\n      c += this[i] - a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    if (a.t < this.t)\n    {\n      c -= a.s;\n      while (i < this.t)\n      {\n        c += this[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n      }\n      c += this.s;\n    }\n    else\n    {\n      c += this.s;\n      while (i < a.t)\n      {\n        c -= a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n      }\n      c -= a.s;\n    }\n    r.s = (c < 0) ? -1 : 0;\n    if (c < -1) r[i++] = this.DV + c;\n    else if (c > 0) r[i++] = c;\n    r.t = i;\n    r.clamp();\n  }\n  // (protected) r = this * a, r != this,a (HAC 14.12)\n  // \"this\" should be the larger one if appropriate.\n  function bnpMultiplyTo(a, r)\n  {\n    var x = this.abs(),\n      y = a.abs();\n    var i = x.t;\n    r.t = i + y.t;\n    while (--i >= 0) r[i] = 0;\n    for (i = 0; i < y.t; ++i) r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n    r.s = 0;\n    r.clamp();\n    if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\n  }\n  // (protected) r = this^2, r != this (HAC 14.16)\n  function bnpSquareTo(r)\n  {\n    var x = this.abs();\n    var i = r.t = 2 * x.t;\n    while (--i >= 0) r[i] = 0;\n    for (i = 0; i < x.t - 1; ++i)\n    {\n      var c = x.am(i, x[i], r, 2 * i, 0, 1);\n      if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV)\n      {\n        r[i + x.t] -= x.DV;\n        r[i + x.t + 1] = 1;\n      }\n    }\n    if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n    r.s = 0;\n    r.clamp();\n  }\n  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n  // r != q, this != m.  q or r may be null.\n  function bnpDivRemTo(m, q, r)\n  {\n    var pm = m.abs();\n    if (pm.t <= 0) return;\n    var pt = this.abs();\n    if (pt.t < pm.t)\n    {\n      if (q != null) q.fromInt(0);\n      if (r != null) this.copyTo(r);\n      return;\n    }\n    if (r == null) r = nbi();\n    var y = nbi(),\n      ts = this.s,\n      ms = m.s;\n    var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus\n    if (nsh > 0)\n    {\n      pm.lShiftTo(nsh, y);\n      pt.lShiftTo(nsh, r);\n    }\n    else\n    {\n      pm.copyTo(y);\n      pt.copyTo(r);\n    }\n    var ys = y.t;\n    var y0 = y[ys - 1];\n    if (y0 == 0) return;\n    var yt = y0 * (1 << this.F1) + ((ys > 1) ? y[ys - 2] >> this.F2 : 0);\n    var d1 = this.FV / yt,\n      d2 = (1 << this.F1) / yt,\n      e = 1 << this.F2;\n    var i = r.t,\n      j = i - ys,\n      t = (q == null) ? nbi() : q;\n    y.dlShiftTo(j, t);\n    if (r.compareTo(t) >= 0)\n    {\n      r[r.t++] = 1;\n      r.subTo(t, r);\n    }\n    BigInteger.ONE.dlShiftTo(ys, t);\n    t.subTo(y, y); // \"negative\" y so we can replace sub with am later\n    while (y.t < ys) y[y.t++] = 0;\n    while (--j >= 0)\n    {\n      // Estimate quotient digit\n      var qd = (r[--i] == y0) ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n      if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd)\n      { // Try it out\n        y.dlShiftTo(j, t);\n        r.subTo(t, r);\n        while (r[i] < --qd) r.subTo(t, r);\n      }\n    }\n    if (q != null)\n    {\n      r.drShiftTo(ys, q);\n      if (ts != ms) BigInteger.ZERO.subTo(q, q);\n    }\n    r.t = ys;\n    r.clamp();\n    if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder\n    if (ts < 0) BigInteger.ZERO.subTo(r, r);\n  }\n  // (public) this mod a\n  function bnMod(a)\n  {\n    var r = nbi();\n    this.abs().divRemTo(a, null, r);\n    if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n    return r;\n  }\n  // Modular reduction using \"classic\" algorithm\n  function Classic(m)\n  {\n    this.m = m;\n  }\n\n  function cConvert(x)\n  {\n    if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n    else return x;\n  }\n\n  function cRevert(x)\n  {\n    return x;\n  }\n\n  function cReduce(x)\n  {\n    x.divRemTo(this.m, null, x);\n  }\n\n  function cMulTo(x, y, r)\n  {\n    x.multiplyTo(y, r);\n    this.reduce(r);\n  }\n\n  function cSqrTo(x, r)\n  {\n    x.squareTo(r);\n    this.reduce(r);\n  }\n  Classic.prototype.convert = cConvert;\n  Classic.prototype.revert = cRevert;\n  Classic.prototype.reduce = cReduce;\n  Classic.prototype.mulTo = cMulTo;\n  Classic.prototype.sqrTo = cSqrTo;\n  // (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n  // justification:\n  //         xy == 1 (mod m)\n  //         xy =  1+km\n  //   xy(2-xy) = (1+km)(1-km)\n  // x[y(2-xy)] = 1-k^2m^2\n  // x[y(2-xy)] == 1 (mod m^2)\n  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n  // JS multiply \"overflows\" differently from C/C++, so care is needed here.\n  function bnpInvDigit()\n  {\n    if (this.t < 1) return 0;\n    var x = this[0];\n    if ((x & 1) == 0) return 0;\n    var y = x & 3; // y == 1/x mod 2^2\n    y = (y * (2 - (x & 0xf) * y)) & 0xf; // y == 1/x mod 2^4\n    y = (y * (2 - (x & 0xff) * y)) & 0xff; // y == 1/x mod 2^8\n    y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff; // y == 1/x mod 2^16\n    // last step - calculate inverse mod DV directly;\n    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n    y = (y * (2 - x * y % this.DV)) % this.DV; // y == 1/x mod 2^dbits\n    // we really want the negative inverse, and -DV < y < DV\n    return (y > 0) ? this.DV - y : -y;\n  }\n  // Montgomery reduction\n  function Montgomery(m)\n  {\n    this.m = m;\n    this.mp = m.invDigit();\n    this.mpl = this.mp & 0x7fff;\n    this.mph = this.mp >> 15;\n    this.um = (1 << (m.DB - 15)) - 1;\n    this.mt2 = 2 * m.t;\n  }\n  // xR mod m\n  function montConvert(x)\n  {\n    var r = nbi();\n    x.abs().dlShiftTo(this.m.t, r);\n    r.divRemTo(this.m, null, r);\n    if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n    return r;\n  }\n  // x/R mod m\n  function montRevert(x)\n  {\n    var r = nbi();\n    x.copyTo(r);\n    this.reduce(r);\n    return r;\n  }\n  // x = x/R mod m (HAC 14.32)\n  function montReduce(x)\n  {\n    while (x.t <= this.mt2) // pad x so am has enough room later\n      x[x.t++] = 0;\n    for (var i = 0; i < this.m.t; ++i)\n    {\n      // faster way of calculating u0 = x[i]*mp mod DV\n      var j = x[i] & 0x7fff;\n      var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & x.DM;\n      // use am to combine the multiply-shift-add into one call\n      j = i + this.m.t;\n      x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n      // propagate carry\n      while (x[j] >= x.DV)\n      {\n        x[j] -= x.DV;\n        x[++j]++;\n      }\n    }\n    x.clamp();\n    x.drShiftTo(this.m.t, x);\n    if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n  }\n  // r = \"x^2/R mod m\"; x != r\n  function montSqrTo(x, r)\n  {\n    x.squareTo(r);\n    this.reduce(r);\n  }\n  // r = \"xy/R mod m\"; x,y != r\n  function montMulTo(x, y, r)\n  {\n    x.multiplyTo(y, r);\n    this.reduce(r);\n  }\n  Montgomery.prototype.convert = montConvert;\n  Montgomery.prototype.revert = montRevert;\n  Montgomery.prototype.reduce = montReduce;\n  Montgomery.prototype.mulTo = montMulTo;\n  Montgomery.prototype.sqrTo = montSqrTo;\n  // (protected) true iff this is even\n  function bnpIsEven()\n  {\n    return ((this.t > 0) ? (this[0] & 1) : this.s) == 0;\n  }\n  // (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\n  function bnpExp(e, z)\n  {\n    if (e > 0xffffffff || e < 1) return BigInteger.ONE;\n    var r = nbi(),\n      r2 = nbi(),\n      g = z.convert(this),\n      i = nbits(e) - 1;\n    g.copyTo(r);\n    while (--i >= 0)\n    {\n      z.sqrTo(r, r2);\n      if ((e & (1 << i)) > 0) z.mulTo(r2, g, r);\n      else\n      {\n        var t = r;\n        r = r2;\n        r2 = t;\n      }\n    }\n    return z.revert(r);\n  }\n  // (public) this^e % m, 0 <= e < 2^32\n  function bnModPowInt(e, m)\n  {\n    var z;\n    if (e < 256 || m.isEven()) z = new Classic(m);\n    else z = new Montgomery(m);\n    return this.exp(e, z);\n  }\n  // protected\n  BigInteger.prototype.copyTo = bnpCopyTo;\n  BigInteger.prototype.fromInt = bnpFromInt;\n  BigInteger.prototype.fromString = bnpFromString;\n  BigInteger.prototype.clamp = bnpClamp;\n  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;\n  BigInteger.prototype.drShiftTo = bnpDRShiftTo;\n  BigInteger.prototype.lShiftTo = bnpLShiftTo;\n  BigInteger.prototype.rShiftTo = bnpRShiftTo;\n  BigInteger.prototype.subTo = bnpSubTo;\n  BigInteger.prototype.multiplyTo = bnpMultiplyTo;\n  BigInteger.prototype.squareTo = bnpSquareTo;\n  BigInteger.prototype.divRemTo = bnpDivRemTo;\n  BigInteger.prototype.invDigit = bnpInvDigit;\n  BigInteger.prototype.isEven = bnpIsEven;\n  BigInteger.prototype.exp = bnpExp;\n  // public\n  BigInteger.prototype.toString = bnToString;\n  BigInteger.prototype.negate = bnNegate;\n  BigInteger.prototype.abs = bnAbs;\n  BigInteger.prototype.compareTo = bnCompareTo;\n  BigInteger.prototype.bitLength = bnBitLength;\n  BigInteger.prototype.mod = bnMod;\n  BigInteger.prototype.modPowInt = bnModPowInt;\n  // \"constants\"\n  BigInteger.ZERO = nbv(0);\n  BigInteger.ONE = nbv(1);\n  // Copyright (c) 2005-2009  Tom Wu\n  // All Rights Reserved.\n  // See \"LICENSE\" for details.\n  // Extended JavaScript BN functions, required for RSA private ops.\n  // Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n  // Version 1.2: square() API, isProbablePrime fix\n  // (public)\n  function bnClone()\n  {\n    var r = nbi();\n    this.copyTo(r);\n    return r;\n  }\n  // (public) return value as integer\n  function bnIntValue()\n  {\n    if (this.s < 0)\n    {\n      if (this.t == 1) return this[0] - this.DV;\n      else if (this.t == 0) return -1;\n    }\n    else if (this.t == 1) return this[0];\n    else if (this.t == 0) return 0;\n    // assumes 16 < DB < 32\n    return ((this[1] & ((1 << (32 - this.DB)) - 1)) << this.DB) | this[0];\n  }\n  // (public) return value as byte\n  function bnByteValue()\n  {\n    return (this.t == 0) ? this.s : (this[0] << 24) >> 24;\n  }\n  // (public) return value as short (assumes DB>=16)\n  function bnShortValue()\n  {\n    return (this.t == 0) ? this.s : (this[0] << 16) >> 16;\n  }\n  // (protected) return x s.t. r^x < DV\n  function bnpChunkSize(r)\n  {\n    return Math.floor(Math.LN2 * this.DB / Math.log(r));\n  }\n  // (public) 0 if this == 0, 1 if this > 0\n  function bnSigNum()\n  {\n    if (this.s < 0) return -1;\n    else if (this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\n    else return 1;\n  }\n  // (protected) convert to radix string\n  function bnpToRadix(b)\n  {\n    if (b == null) b = 10;\n    if (this.signum() == 0 || b < 2 || b > 36) return \"0\";\n    var cs = this.chunkSize(b);\n    var a = Math.pow(b, cs);\n    var d = nbv(a),\n      y = nbi(),\n      z = nbi(),\n      r = \"\";\n    this.divRemTo(d, y, z);\n    while (y.signum() > 0)\n    {\n      r = (a + z.intValue()).toString(b).substr(1) + r;\n      y.divRemTo(d, y, z);\n    }\n    return z.intValue().toString(b) + r;\n  }\n  // (protected) convert from radix string\n  function bnpFromRadix(s, b)\n  {\n    this.fromInt(0);\n    if (b == null) b = 10;\n    var cs = this.chunkSize(b);\n    var d = Math.pow(b, cs),\n      mi = false,\n      j = 0,\n      w = 0;\n    for (var i = 0; i < s.length; ++i)\n    {\n      var x = intAt(s, i);\n      if (x < 0)\n      {\n        if (s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n        continue;\n      }\n      w = b * w + x;\n      if (++j >= cs)\n      {\n        this.dMultiply(d);\n        this.dAddOffset(w, 0);\n        j = 0;\n        w = 0;\n      }\n    }\n    if (j > 0)\n    {\n      this.dMultiply(Math.pow(b, j));\n      this.dAddOffset(w, 0);\n    }\n    if (mi) BigInteger.ZERO.subTo(this, this);\n  }\n  // (protected) alternate constructor\n  function bnpFromNumber(a, b, c)\n  {\n    if (\"number\" == typeof b)\n    {\n      // new BigInteger(int,int,RNG)\n      if (a < 2) this.fromInt(1);\n      else\n      {\n        this.fromNumber(a, c);\n        if (!this.testBit(a - 1)) // force MSB set\n          this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);\n        if (this.isEven()) this.dAddOffset(1, 0); // force odd\n        while (!this.isProbablePrime(b))\n        {\n          this.dAddOffset(2, 0);\n          if (this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);\n        }\n      }\n    }\n    else\n    {\n      // new BigInteger(int,RNG)\n      var x = new Array(),\n        t = a & 7;\n      x.length = (a >> 3) + 1;\n      b.nextBytes(x);\n      if (t > 0) x[0] &= ((1 << t) - 1);\n      else x[0] = 0;\n      this.fromString(x, 256);\n    }\n  }\n  // (public) convert to bigendian byte array\n  function bnToByteArray()\n  {\n    var i = this.t,\n      r = new Array();\n    r[0] = this.s;\n    var p = this.DB - (i * this.DB) % 8,\n      d, k = 0;\n    if (i-- > 0)\n    {\n      if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p)\n        r[k++] = d | (this.s << (this.DB - p));\n      while (i >= 0)\n      {\n        if (p < 8)\n        {\n          d = (this[i] & ((1 << p) - 1)) << (8 - p);\n          d |= this[--i] >> (p += this.DB - 8);\n        }\n        else\n        {\n          d = (this[i] >> (p -= 8)) & 0xff;\n          if (p <= 0)\n          {\n            p += this.DB;\n            --i;\n          }\n        }\n        if ((d & 0x80) != 0) d |= -256;\n        if (k == 0 && (this.s & 0x80) != (d & 0x80))++k;\n        if (k > 0 || d != this.s) r[k++] = d;\n      }\n    }\n    return r;\n  }\n\n  function bnEquals(a)\n  {\n    return (this.compareTo(a) == 0);\n  }\n\n  function bnMin(a)\n  {\n    return (this.compareTo(a) < 0) ? this : a;\n  }\n\n  function bnMax(a)\n  {\n    return (this.compareTo(a) > 0) ? this : a;\n  }\n  // (protected) r = this op a (bitwise)\n  function bnpBitwiseTo(a, op, r)\n  {\n    var i, f, m = Math.min(a.t, this.t);\n    for (i = 0; i < m; ++i) r[i] = op(this[i], a[i]);\n    if (a.t < this.t)\n    {\n      f = a.s & this.DM;\n      for (i = m; i < this.t; ++i) r[i] = op(this[i], f);\n      r.t = this.t;\n    }\n    else\n    {\n      f = this.s & this.DM;\n      for (i = m; i < a.t; ++i) r[i] = op(f, a[i]);\n      r.t = a.t;\n    }\n    r.s = op(this.s, a.s);\n    r.clamp();\n  }\n  // (public) this & a\n  function op_and(x, y)\n  {\n    return x & y;\n  }\n\n  function bnAnd(a)\n  {\n    var r = nbi();\n    this.bitwiseTo(a, op_and, r);\n    return r;\n  }\n  // (public) this | a\n  function op_or(x, y)\n  {\n    return x | y;\n  }\n\n  function bnOr(a)\n  {\n    var r = nbi();\n    this.bitwiseTo(a, op_or, r);\n    return r;\n  }\n  // (public) this ^ a\n  function op_xor(x, y)\n  {\n    return x ^ y;\n  }\n\n  function bnXor(a)\n  {\n    var r = nbi();\n    this.bitwiseTo(a, op_xor, r);\n    return r;\n  }\n  // (public) this & ~a\n  function op_andnot(x, y)\n  {\n    return x & ~y;\n  }\n\n  function bnAndNot(a)\n  {\n    var r = nbi();\n    this.bitwiseTo(a, op_andnot, r);\n    return r;\n  }\n  // (public) ~this\n  function bnNot()\n  {\n    var r = nbi();\n    for (var i = 0; i < this.t; ++i) r[i] = this.DM & ~this[i];\n    r.t = this.t;\n    r.s = ~this.s;\n    return r;\n  }\n  // (public) this << n\n  function bnShiftLeft(n)\n  {\n    var r = nbi();\n    if (n < 0) this.rShiftTo(-n, r);\n    else this.lShiftTo(n, r);\n    return r;\n  }\n  // (public) this >> n\n  function bnShiftRight(n)\n  {\n    var r = nbi();\n    if (n < 0) this.lShiftTo(-n, r);\n    else this.rShiftTo(n, r);\n    return r;\n  }\n  // return index of lowest 1-bit in x, x < 2^31\n  function lbit(x)\n  {\n    if (x == 0) return -1;\n    var r = 0;\n    if ((x & 0xffff) == 0)\n    {\n      x >>= 16;\n      r += 16;\n    }\n    if ((x & 0xff) == 0)\n    {\n      x >>= 8;\n      r += 8;\n    }\n    if ((x & 0xf) == 0)\n    {\n      x >>= 4;\n      r += 4;\n    }\n    if ((x & 3) == 0)\n    {\n      x >>= 2;\n      r += 2;\n    }\n    if ((x & 1) == 0)++r;\n    return r;\n  }\n  // (public) returns index of lowest 1-bit (or -1 if none)\n  function bnGetLowestSetBit()\n  {\n    for (var i = 0; i < this.t; ++i)\n      if (this[i] != 0) return i * this.DB + lbit(this[i]);\n    if (this.s < 0) return this.t * this.DB;\n    return -1;\n  }\n  // return number of 1 bits in x\n  function cbit(x)\n  {\n    var r = 0;\n    while (x != 0)\n    {\n      x &= x - 1;\n      ++r;\n    }\n    return r;\n  }\n  // (public) return number of set bits\n  function bnBitCount()\n  {\n    var r = 0,\n      x = this.s & this.DM;\n    for (var i = 0; i < this.t; ++i) r += cbit(this[i] ^ x);\n    return r;\n  }\n  // (public) true iff nth bit is set\n  function bnTestBit(n)\n  {\n    var j = Math.floor(n / this.DB);\n    if (j >= this.t) return (this.s != 0);\n    return ((this[j] & (1 << (n % this.DB))) != 0);\n  }\n  // (protected) this op (1<<n)\n  function bnpChangeBit(n, op)\n  {\n    var r = BigInteger.ONE.shiftLeft(n);\n    this.bitwiseTo(r, op, r);\n    return r;\n  }\n  // (public) this | (1<<n)\n  function bnSetBit(n)\n  {\n    return this.changeBit(n, op_or);\n  }\n  // (public) this & ~(1<<n)\n  function bnClearBit(n)\n  {\n    return this.changeBit(n, op_andnot);\n  }\n  // (public) this ^ (1<<n)\n  function bnFlipBit(n)\n  {\n    return this.changeBit(n, op_xor);\n  }\n  // (protected) r = this + a\n  function bnpAddTo(a, r)\n  {\n    var i = 0,\n      c = 0,\n      m = Math.min(a.t, this.t);\n    while (i < m)\n    {\n      c += this[i] + a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    if (a.t < this.t)\n    {\n      c += a.s;\n      while (i < this.t)\n      {\n        c += this[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n      }\n      c += this.s;\n    }\n    else\n    {\n      c += this.s;\n      while (i < a.t)\n      {\n        c += a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n      }\n      c += a.s;\n    }\n    r.s = (c < 0) ? -1 : 0;\n    if (c > 0) r[i++] = c;\n    else if (c < -1) r[i++] = this.DV + c;\n    r.t = i;\n    r.clamp();\n  }\n  // (public) this + a\n  function bnAdd(a)\n  {\n    var r = nbi();\n    this.addTo(a, r);\n    return r;\n  }\n  // (public) this - a\n  function bnSubtract(a)\n  {\n    var r = nbi();\n    this.subTo(a, r);\n    return r;\n  }\n  // (public) this * a\n  function bnMultiply(a)\n  {\n    var r = nbi();\n    this.multiplyTo(a, r);\n    return r;\n  }\n  // (public) this^2\n  function bnSquare()\n  {\n    var r = nbi();\n    this.squareTo(r);\n    return r;\n  }\n  // (public) this / a\n  function bnDivide(a)\n  {\n    var r = nbi();\n    this.divRemTo(a, r, null);\n    return r;\n  }\n  // (public) this % a\n  function bnRemainder(a)\n  {\n    var r = nbi();\n    this.divRemTo(a, null, r);\n    return r;\n  }\n  // (public) [this/a,this%a]\n  function bnDivideAndRemainder(a)\n  {\n    var q = nbi(),\n      r = nbi();\n    this.divRemTo(a, q, r);\n    return new Array(q, r);\n  }\n  // (protected) this *= n, this >= 0, 1 < n < DV\n  function bnpDMultiply(n)\n  {\n    this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);\n    ++this.t;\n    this.clamp();\n  }\n  // (protected) this += n << w words, this >= 0\n  function bnpDAddOffset(n, w)\n  {\n    if (n == 0) return;\n    while (this.t <= w) this[this.t++] = 0;\n    this[w] += n;\n    while (this[w] >= this.DV)\n    {\n      this[w] -= this.DV;\n      if (++w >= this.t) this[this.t++] = 0;\n      ++this[w];\n    }\n  }\n  // A \"null\" reducer\n  function NullExp()\n  {}\n\n  function nNop(x)\n  {\n    return x;\n  }\n\n  function nMulTo(x, y, r)\n  {\n    x.multiplyTo(y, r);\n  }\n\n  function nSqrTo(x, r)\n  {\n    x.squareTo(r);\n  }\n  NullExp.prototype.convert = nNop;\n  NullExp.prototype.revert = nNop;\n  NullExp.prototype.mulTo = nMulTo;\n  NullExp.prototype.sqrTo = nSqrTo;\n  // (public) this^e\n  function bnPow(e)\n  {\n    return this.exp(e, new NullExp());\n  }\n  // (protected) r = lower n words of \"this * a\", a.t <= n\n  // \"this\" should be the larger one if appropriate.\n  function bnpMultiplyLowerTo(a, n, r)\n  {\n    var i = Math.min(this.t + a.t, n);\n    r.s = 0; // assumes a,this >= 0\n    r.t = i;\n    while (i > 0) r[--i] = 0;\n    var j;\n    for (j = r.t - this.t; i < j; ++i) r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);\n    for (j = Math.min(a.t, n); i < j; ++i) this.am(0, a[i], r, i, 0, n - i);\n    r.clamp();\n  }\n  // (protected) r = \"this * a\" without lower n words, n > 0\n  // \"this\" should be the larger one if appropriate.\n  function bnpMultiplyUpperTo(a, n, r)\n  {\n    --n;\n    var i = r.t = this.t + a.t - n;\n    r.s = 0; // assumes a,this >= 0\n    while (--i >= 0) r[i] = 0;\n    for (i = Math.max(n - this.t, 0); i < a.t; ++i)\n      r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);\n    r.clamp();\n    r.drShiftTo(1, r);\n  }\n  // Barrett modular reduction\n  function Barrett(m)\n  {\n    // setup Barrett\n    this.r2 = nbi();\n    this.q3 = nbi();\n    BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);\n    this.mu = this.r2.divide(m);\n    this.m = m;\n  }\n\n  function barrettConvert(x)\n  {\n    if (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m);\n    else if (x.compareTo(this.m) < 0) return x;\n    else\n    {\n      var r = nbi();\n      x.copyTo(r);\n      this.reduce(r);\n      return r;\n    }\n  }\n\n  function barrettRevert(x)\n  {\n    return x;\n  }\n  // x = x mod m (HAC 14.42)\n  function barrettReduce(x)\n  {\n    x.drShiftTo(this.m.t - 1, this.r2);\n    if (x.t > this.m.t + 1)\n    {\n      x.t = this.m.t + 1;\n      x.clamp();\n    }\n    this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);\n    this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);\n    while (x.compareTo(this.r2) < 0) x.dAddOffset(1, this.m.t + 1);\n    x.subTo(this.r2, x);\n    while (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n  }\n  // r = x^2 mod m; x != r\n  function barrettSqrTo(x, r)\n  {\n    x.squareTo(r);\n    this.reduce(r);\n  }\n  // r = x*y mod m; x,y != r\n  function barrettMulTo(x, y, r)\n  {\n    x.multiplyTo(y, r);\n    this.reduce(r);\n  }\n  Barrett.prototype.convert = barrettConvert;\n  Barrett.prototype.revert = barrettRevert;\n  Barrett.prototype.reduce = barrettReduce;\n  Barrett.prototype.mulTo = barrettMulTo;\n  Barrett.prototype.sqrTo = barrettSqrTo;\n  // (public) this^e % m (HAC 14.85)\n  function bnModPow(e, m)\n  {\n    var i = e.bitLength(),\n      k, r = nbv(1),\n      z;\n    if (i <= 0) return r;\n    else if (i < 18) k = 1;\n    else if (i < 48) k = 3;\n    else if (i < 144) k = 4;\n    else if (i < 768) k = 5;\n    else k = 6;\n    if (i < 8)\n      z = new Classic(m);\n    else if (m.isEven())\n      z = new Barrett(m);\n    else\n      z = new Montgomery(m);\n    // precomputation\n    var g = new Array(),\n      n = 3,\n      k1 = k - 1,\n      km = (1 << k) - 1;\n    g[1] = z.convert(this);\n    if (k > 1)\n    {\n      var g2 = nbi();\n      z.sqrTo(g[1], g2);\n      while (n <= km)\n      {\n        g[n] = nbi();\n        z.mulTo(g2, g[n - 2], g[n]);\n        n += 2;\n      }\n    }\n    var j = e.t - 1,\n      w, is1 = true,\n      r2 = nbi(),\n      t;\n    i = nbits(e[j]) - 1;\n    while (j >= 0)\n    {\n      if (i >= k1) w = (e[j] >> (i - k1)) & km;\n      else\n      {\n        w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\n        if (j > 0) w |= e[j - 1] >> (this.DB + i - k1);\n      }\n      n = k;\n      while ((w & 1) == 0)\n      {\n        w >>= 1;\n        --n;\n      }\n      if ((i -= n) < 0)\n      {\n        i += this.DB;\n        --j;\n      }\n      if (is1)\n      { // ret == 1, don't bother squaring or multiplying it\n        g[w].copyTo(r);\n        is1 = false;\n      }\n      else\n      {\n        while (n > 1)\n        {\n          z.sqrTo(r, r2);\n          z.sqrTo(r2, r);\n          n -= 2;\n        }\n        if (n > 0) z.sqrTo(r, r2);\n        else\n        {\n          t = r;\n          r = r2;\n          r2 = t;\n        }\n        z.mulTo(r2, g[w], r);\n      }\n      while (j >= 0 && (e[j] & (1 << i)) == 0)\n      {\n        z.sqrTo(r, r2);\n        t = r;\n        r = r2;\n        r2 = t;\n        if (--i < 0)\n        {\n          i = this.DB - 1;\n          --j;\n        }\n      }\n    }\n    return z.revert(r);\n  }\n  // (public) gcd(this,a) (HAC 14.54)\n  function bnGCD(a)\n  {\n    var x = (this.s < 0) ? this.negate() : this.clone();\n    var y = (a.s < 0) ? a.negate() : a.clone();\n    if (x.compareTo(y) < 0)\n    {\n      var t = x;\n      x = y;\n      y = t;\n    }\n    var i = x.getLowestSetBit(),\n      g = y.getLowestSetBit();\n    if (g < 0) return x;\n    if (i < g) g = i;\n    if (g > 0)\n    {\n      x.rShiftTo(g, x);\n      y.rShiftTo(g, y);\n    }\n    while (x.signum() > 0)\n    {\n      if ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x);\n      if ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y);\n      if (x.compareTo(y) >= 0)\n      {\n        x.subTo(y, x);\n        x.rShiftTo(1, x);\n      }\n      else\n      {\n        y.subTo(x, y);\n        y.rShiftTo(1, y);\n      }\n    }\n    if (g > 0) y.lShiftTo(g, y);\n    return y;\n  }\n  // (protected) this % n, n < 2^26\n  function bnpModInt(n)\n  {\n    if (n <= 0) return 0;\n    var d = this.DV % n,\n      r = (this.s < 0) ? n - 1 : 0;\n    if (this.t > 0)\n      if (d == 0) r = this[0] % n;\n      else\n        for (var i = this.t - 1; i >= 0; --i) r = (d * r + this[i]) % n;\n    return r;\n  }\n  // (public) 1/this % m (HAC 14.61)\n  function bnModInverse(m)\n  {\n    var ac = m.isEven();\n    if ((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\n    var u = m.clone(),\n      v = this.clone();\n    var a = nbv(1),\n      b = nbv(0),\n      c = nbv(0),\n      d = nbv(1);\n    while (u.signum() != 0)\n    {\n      while (u.isEven())\n      {\n        u.rShiftTo(1, u);\n        if (ac)\n        {\n          if (!a.isEven() || !b.isEven())\n          {\n            a.addTo(this, a);\n            b.subTo(m, b);\n          }\n          a.rShiftTo(1, a);\n        }\n        else if (!b.isEven()) b.subTo(m, b);\n        b.rShiftTo(1, b);\n      }\n      while (v.isEven())\n      {\n        v.rShiftTo(1, v);\n        if (ac)\n        {\n          if (!c.isEven() || !d.isEven())\n          {\n            c.addTo(this, c);\n            d.subTo(m, d);\n          }\n          c.rShiftTo(1, c);\n        }\n        else if (!d.isEven()) d.subTo(m, d);\n        d.rShiftTo(1, d);\n      }\n      if (u.compareTo(v) >= 0)\n      {\n        u.subTo(v, u);\n        if (ac) a.subTo(c, a);\n        b.subTo(d, b);\n      }\n      else\n      {\n        v.subTo(u, v);\n        if (ac) c.subTo(a, c);\n        d.subTo(b, d);\n      }\n    }\n    if (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n    if (d.compareTo(m) >= 0) return d.subtract(m);\n    if (d.signum() < 0) d.addTo(m, d);\n    else return d;\n    if (d.signum() < 0) return d.add(m);\n    else return d;\n  }\n  var lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\n  var lplim = (1 << 26) / lowprimes[lowprimes.length - 1];\n  // (public) test primality with certainty >= 1-.5^t\n  function bnIsProbablePrime(t)\n  {\n    var i, x = this.abs();\n    if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1])\n    {\n      for (i = 0; i < lowprimes.length; ++i)\n        if (x[0] == lowprimes[i]) return true;\n      return false;\n    }\n    if (x.isEven()) return false;\n    i = 1;\n    while (i < lowprimes.length)\n    {\n      var m = lowprimes[i],\n        j = i + 1;\n      while (j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n      m = x.modInt(m);\n      while (i < j)\n        if (m % lowprimes[i++] == 0) return false;\n    }\n    return x.millerRabin(t);\n  }\n  // (protected) true if probably prime (HAC 4.24, Miller-Rabin)\n  function bnpMillerRabin(t)\n  {\n    var n1 = this.subtract(BigInteger.ONE);\n    var k = n1.getLowestSetBit();\n    if (k <= 0) return false;\n    var r = n1.shiftRight(k);\n    t = (t + 1) >> 1;\n    if (t > lowprimes.length) t = lowprimes.length;\n    var a = nbi();\n    for (var i = 0; i < t; ++i)\n    {\n      //Pick bases at random, instead of starting at 2\n      a.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);\n      var y = a.modPow(r, this);\n      if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0)\n      {\n        var j = 1;\n        while (j++ < k && y.compareTo(n1) != 0)\n        {\n          y = y.modPowInt(2, this);\n          if (y.compareTo(BigInteger.ONE) == 0) return false;\n        }\n        if (y.compareTo(n1) != 0) return false;\n      }\n    }\n    return true;\n  }\n  // protected\n  BigInteger.prototype.chunkSize = bnpChunkSize;\n  BigInteger.prototype.toRadix = bnpToRadix;\n  BigInteger.prototype.fromRadix = bnpFromRadix;\n  BigInteger.prototype.fromNumber = bnpFromNumber;\n  BigInteger.prototype.bitwiseTo = bnpBitwiseTo;\n  BigInteger.prototype.changeBit = bnpChangeBit;\n  BigInteger.prototype.addTo = bnpAddTo;\n  BigInteger.prototype.dMultiply = bnpDMultiply;\n  BigInteger.prototype.dAddOffset = bnpDAddOffset;\n  BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\n  BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\n  BigInteger.prototype.modInt = bnpModInt;\n  BigInteger.prototype.millerRabin = bnpMillerRabin;\n  // public\n  BigInteger.prototype.clone = bnClone;\n  BigInteger.prototype.intValue = bnIntValue;\n  BigInteger.prototype.byteValue = bnByteValue;\n  BigInteger.prototype.shortValue = bnShortValue;\n  BigInteger.prototype.signum = bnSigNum;\n  BigInteger.prototype.toByteArray = bnToByteArray;\n  BigInteger.prototype.equals = bnEquals;\n  BigInteger.prototype.min = bnMin;\n  BigInteger.prototype.max = bnMax;\n  BigInteger.prototype.and = bnAnd;\n  BigInteger.prototype.or = bnOr;\n  BigInteger.prototype.xor = bnXor;\n  BigInteger.prototype.andNot = bnAndNot;\n  BigInteger.prototype.not = bnNot;\n  BigInteger.prototype.shiftLeft = bnShiftLeft;\n  BigInteger.prototype.shiftRight = bnShiftRight;\n  BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\n  BigInteger.prototype.bitCount = bnBitCount;\n  BigInteger.prototype.testBit = bnTestBit;\n  BigInteger.prototype.setBit = bnSetBit;\n  BigInteger.prototype.clearBit = bnClearBit;\n  BigInteger.prototype.flipBit = bnFlipBit;\n  BigInteger.prototype.add = bnAdd;\n  BigInteger.prototype.subtract = bnSubtract;\n  BigInteger.prototype.multiply = bnMultiply;\n  BigInteger.prototype.divide = bnDivide;\n  BigInteger.prototype.remainder = bnRemainder;\n  BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\n  BigInteger.prototype.modPow = bnModPow;\n  BigInteger.prototype.modInverse = bnModInverse;\n  BigInteger.prototype.pow = bnPow;\n  BigInteger.prototype.gcd = bnGCD;\n  BigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n  // JSBN-specific extension\n  BigInteger.prototype.square = bnSquare;\n  var Int128 = BigInteger;\n  // BigInteger interfaces not implemented in jsbn:\n  // BigInteger(int signum, byte[] magnitude)\n  // double doubleValue()\n  // float floatValue()\n  // int hashCode()\n  // long longValue()\n  // static BigInteger valueOf(long val)\n  // Helper functions to make BigInteger functions callable with two parameters\n  // as in original C# Clipper\n  Int128.prototype.IsNegative = function ()\n  {\n    if (this.compareTo(Int128.ZERO) == -1) return true;\n    else return false;\n  };\n  Int128.op_Equality = function (val1, val2)\n  {\n    if (val1.compareTo(val2) == 0) return true;\n    else return false;\n  };\n  Int128.op_Inequality = function (val1, val2)\n  {\n    if (val1.compareTo(val2) != 0) return true;\n    else return false;\n  };\n  Int128.op_GreaterThan = function (val1, val2)\n  {\n    if (val1.compareTo(val2) > 0) return true;\n    else return false;\n  };\n  Int128.op_LessThan = function (val1, val2)\n  {\n    if (val1.compareTo(val2) < 0) return true;\n    else return false;\n  };\n  Int128.op_Addition = function (lhs, rhs)\n  {\n    return new Int128(lhs).add(new Int128(rhs));\n  };\n  Int128.op_Subtraction = function (lhs, rhs)\n  {\n    return new Int128(lhs).subtract(new Int128(rhs));\n  };\n  Int128.Int128Mul = function (lhs, rhs)\n  {\n    return new Int128(lhs).multiply(new Int128(rhs));\n  };\n  Int128.op_Division = function (lhs, rhs)\n  {\n    return lhs.divide(rhs);\n  };\n  Int128.prototype.ToDouble = function ()\n  {\n    return parseFloat(this.toString()); // This could be something faster\n  };\n  // end of Int128 section\n  /*\n  // Uncomment the following two lines if you want to use Int128 outside ClipperLib\n  if (typeof(document) !== \"undefined\") window.Int128 = Int128;\n  else self.Int128 = Int128;\n  */\n  // ---------------------------------------------  \n  // Here starts the actual Clipper library:\n  // Helper function to support Inheritance in Javascript\n  if (typeof (Inherit) == 'undefined')\n  {\n    var Inherit = function (ce, ce2)\n    {\n      var p;\n      if (typeof (Object.getOwnPropertyNames) == 'undefined')\n      {\n        for (p in ce2.prototype)\n          if (typeof (ce.prototype[p]) == 'undefined' || ce.prototype[p] == Object.prototype[p]) ce.prototype[p] = ce2.prototype[p];\n        for (p in ce2)\n          if (typeof (ce[p]) == 'undefined') ce[p] = ce2[p];\n        ce.$baseCtor = ce2;\n      }\n      else\n      {\n        var props = Object.getOwnPropertyNames(ce2.prototype);\n        for (var i = 0; i < props.length; i++)\n          if (typeof (Object.getOwnPropertyDescriptor(ce.prototype, props[i])) == 'undefined') Object.defineProperty(ce.prototype, props[i], Object.getOwnPropertyDescriptor(ce2.prototype, props[i]));\n        for (p in ce2)\n          if (typeof (ce[p]) == 'undefined') ce[p] = ce2[p];\n        ce.$baseCtor = ce2;\n      }\n    };\n  }\n  ClipperLib.Path = function ()\n  {\n    return [];\n  };\n  ClipperLib.Paths = function ()\n  {\n    return []; // Was previously [[]], but caused problems when pushed\n  };\n  // Preserves the calling way of original C# Clipper\n  // Is essential due to compatibility, because DoublePoint is public class in original C# version\n  ClipperLib.DoublePoint = function ()\n  {\n    var a = arguments;\n    this.X = 0;\n    this.Y = 0;\n    // public DoublePoint(DoublePoint dp)\n    // public DoublePoint(IntPoint ip)\n    if (a.length == 1)\n    {\n      this.X = a[0].X;\n      this.Y = a[0].Y;\n    }\n    else if (a.length == 2)\n    {\n      this.X = a[0];\n      this.Y = a[1];\n    }\n  }; // This is internal faster function when called without arguments\n  ClipperLib.DoublePoint0 = function ()\n  {\n    this.X = 0;\n    this.Y = 0;\n  };\n  // This is internal faster function when called with 1 argument (dp or ip)\n  ClipperLib.DoublePoint1 = function (dp)\n  {\n    this.X = dp.X;\n    this.Y = dp.Y;\n  };\n  // This is internal faster function when called with 2 arguments (x and y)\n  ClipperLib.DoublePoint2 = function (x, y)\n  {\n    this.X = x;\n    this.Y = y;\n  };\n  // PolyTree & PolyNode start\n  // -------------------------------\n  ClipperLib.PolyNode = function ()\n  {\n    this.m_Parent = null;\n    this.m_polygon = new ClipperLib.Path();\n    this.m_Index = 0;\n    this.m_jointype = 0;\n    this.m_endtype = 0;\n    this.m_Childs = [];\n    this.IsOpen = false;\n  };\n  ClipperLib.PolyNode.prototype.IsHoleNode = function ()\n  {\n    var result = true;\n    var node = this.m_Parent;\n    while (node !== null)\n    {\n      result = !result;\n      node = node.m_Parent;\n    }\n    return result;\n  };\n  ClipperLib.PolyNode.prototype.ChildCount = function ()\n  {\n    return this.m_Childs.length;\n  };\n  ClipperLib.PolyNode.prototype.Contour = function ()\n  {\n    return this.m_polygon;\n  };\n  ClipperLib.PolyNode.prototype.AddChild = function (Child)\n  {\n    var cnt = this.m_Childs.length;\n    this.m_Childs.push(Child);\n    Child.m_Parent = this;\n    Child.m_Index = cnt;\n  };\n  ClipperLib.PolyNode.prototype.GetNext = function ()\n  {\n    if (this.m_Childs.length > 0)\n      return this.m_Childs[0];\n    else\n      return this.GetNextSiblingUp();\n  };\n  ClipperLib.PolyNode.prototype.GetNextSiblingUp = function ()\n  {\n    if (this.m_Parent === null)\n      return null;\n    else if (this.m_Index == this.m_Parent.m_Childs.length - 1)\n      return this.m_Parent.GetNextSiblingUp();\n    else\n      return this.m_Parent.m_Childs[this.m_Index + 1];\n  };\n  ClipperLib.PolyNode.prototype.Childs = function ()\n  {\n    return this.m_Childs;\n  };\n  ClipperLib.PolyNode.prototype.Parent = function ()\n  {\n    return this.m_Parent;\n  };\n  ClipperLib.PolyNode.prototype.IsHole = function ()\n  {\n    return this.IsHoleNode();\n  };\n  // PolyTree : PolyNode\n  ClipperLib.PolyTree = function ()\n  {\n    this.m_AllPolys = [];\n    ClipperLib.PolyNode.call(this);\n  };\n  ClipperLib.PolyTree.prototype.Clear = function ()\n  {\n    for (var i = 0, ilen = this.m_AllPolys.length; i < ilen; i++)\n      this.m_AllPolys[i] = null;\n    this.m_AllPolys.length = 0;\n    this.m_Childs.length = 0;\n  };\n  ClipperLib.PolyTree.prototype.GetFirst = function ()\n  {\n    if (this.m_Childs.length > 0)\n      return this.m_Childs[0];\n    else\n      return null;\n  };\n  ClipperLib.PolyTree.prototype.Total = function ()\n  {\n    return this.m_AllPolys.length;\n  };\n  Inherit(ClipperLib.PolyTree, ClipperLib.PolyNode);\n  // -------------------------------\n  // PolyTree & PolyNode end\n  ClipperLib.Math_Abs_Int64 = ClipperLib.Math_Abs_Int32 = ClipperLib.Math_Abs_Double = function (a)\n  {\n    return Math.abs(a);\n  };\n  ClipperLib.Math_Max_Int32_Int32 = function (a, b)\n  {\n    return Math.max(a, b);\n  };\n  /*\n  -----------------------------------\n  cast_32 speedtest: http://jsperf.com/truncate-float-to-integer/2\n  -----------------------------------\n  */\n  if (browser.msie || browser.opera || browser.safari) ClipperLib.Cast_Int32 = function (a)\n  {\n    return a | 0;\n  };\n  else ClipperLib.Cast_Int32 = function (a)\n  { // eg. browser.chrome || browser.chromium || browser.firefox\n    return~~ a;\n  };\n  /*\n  --------------------------\n  cast_64 speedtests: http://jsperf.com/truncate-float-to-integer\n  Chrome: bitwise_not_floor\n  Firefox17: toInteger (typeof test)\n  IE9: bitwise_or_floor\n  IE7 and IE8: to_parseint\n  Chromium: to_floor_or_ceil\n  Firefox3: to_floor_or_ceil\n  Firefox15: to_floor_or_ceil\n  Opera: to_floor_or_ceil\n  Safari: to_floor_or_ceil\n  --------------------------\n  */\n  if (browser.chrome) ClipperLib.Cast_Int64 = function (a)\n  {\n    if (a < -2147483648 || a > 2147483647)\n      return a < 0 ? Math.ceil(a) : Math.floor(a);\n    else return~~ a;\n  };\n  else if (browser.firefox && typeof (Number.toInteger) == \"function\") ClipperLib.Cast_Int64 = function (a)\n  {\n    return Number.toInteger(a);\n  };\n  else if (browser.msie7 || browser.msie8) ClipperLib.Cast_Int64 = function (a)\n  {\n    return parseInt(a, 10);\n  };\n  else if (browser.msie) ClipperLib.Cast_Int64 = function (a)\n  {\n    if (a < -2147483648 || a > 2147483647)\n      return a < 0 ? Math.ceil(a) : Math.floor(a);\n    return a | 0;\n  };\n  // eg. browser.chromium || browser.firefox || browser.opera || browser.safari\n  else ClipperLib.Cast_Int64 = function (a)\n  {\n    return a < 0 ? Math.ceil(a) : Math.floor(a);\n  };\n  ClipperLib.Clear = function (a)\n  {\n    a.length = 0;\n  };\n  //ClipperLib.MaxSteps = 64; // How many steps at maximum in arc in BuildArc() function\n  ClipperLib.PI = 3.141592653589793;\n  ClipperLib.PI2 = 2 * 3.141592653589793;\n  ClipperLib.IntPoint = function ()\n  {\n    var a = arguments,\n      alen = a.length;\n    this.X = 0;\n    this.Y = 0;\n    if (use_xyz)\n    {\n      this.Z = 0;\n      if (alen == 3) // public IntPoint(cInt x, cInt y, cInt z = 0)\n      {\n        this.X = a[0];\n        this.Y = a[1];\n        this.Z = a[2];\n      }\n      else if (alen == 2) // public IntPoint(cInt x, cInt y)\n      {\n        this.X = a[0];\n        this.Y = a[1];\n        this.Z = 0;\n      }\n      else if (alen == 1)\n      {\n        if (a[0] instanceof ClipperLib.DoublePoint) // public IntPoint(DoublePoint dp)\n        {\n          var dp = a[0];\n          this.X = ClipperLib.Clipper.Round(dp.X);\n          this.Y = ClipperLib.Clipper.Round(dp.Y);\n          this.Z = 0;\n        }\n        else // public IntPoint(IntPoint pt)\n        {\n          var pt = a[0];\n          if (typeof (pt.Z) == \"undefined\") pt.Z = 0;\n          this.X = pt.X;\n          this.Y = pt.Y;\n          this.Z = pt.Z;\n        }\n      }\n      else // public IntPoint()\n      {\n        this.X = 0;\n        this.Y = 0;\n        this.Z = 0;\n      }\n    }\n    else // if (!use_xyz)\n    {\n      if (alen == 2) // public IntPoint(cInt X, cInt Y)\n      {\n        this.X = a[0];\n        this.Y = a[1];\n      }\n      else if (alen == 1)\n      {\n        if (a[0] instanceof ClipperLib.DoublePoint) // public IntPoint(DoublePoint dp)\n        {\n          var dp = a[0];\n          this.X = ClipperLib.Clipper.Round(dp.X);\n          this.Y = ClipperLib.Clipper.Round(dp.Y);\n        }\n        else // public IntPoint(IntPoint pt)\n        {\n          var pt = a[0];\n          this.X = pt.X;\n          this.Y = pt.Y;\n        }\n      }\n      else // public IntPoint(IntPoint pt)\n      {\n        this.X = 0;\n        this.Y = 0;\n      }\n    }\n  };\n  ClipperLib.IntPoint.op_Equality = function (a, b)\n  {\n    //return a == b;\n    return a.X == b.X && a.Y == b.Y;\n  };\n  ClipperLib.IntPoint.op_Inequality = function (a, b)\n  {\n    //return a != b;\n    return a.X != b.X || a.Y != b.Y;\n  };\n  /*\n  ClipperLib.IntPoint.prototype.Equals = function (obj)\n  {\n    if (obj === null)\n        return false;\n    if (obj instanceof ClipperLib.IntPoint)\n    {\n        var a = Cast(obj, ClipperLib.IntPoint);\n        return (this.X == a.X) && (this.Y == a.Y);\n    }\n    else\n        return false;\n  };\n*/\n  if (use_xyz)\n  {\n    ClipperLib.IntPoint0 = function ()\n    {\n      this.X = 0;\n      this.Y = 0;\n      this.Z = 0;\n    };\n    ClipperLib.IntPoint1 = function (pt)\n    {\n      this.X = pt.X;\n      this.Y = pt.Y;\n      this.Z = pt.Z;\n    };\n    ClipperLib.IntPoint1dp = function (dp)\n    {\n      this.X = ClipperLib.Clipper.Round(dp.X);\n      this.Y = ClipperLib.Clipper.Round(dp.Y);\n      this.Z = 0;\n    };\n    ClipperLib.IntPoint2 = function (x, y)\n    {\n      this.X = x;\n      this.Y = y;\n      this.Z = 0;\n    };\n    ClipperLib.IntPoint3 = function (x, y, z)\n    {\n      this.X = x;\n      this.Y = y;\n      this.Z = z;\n    };\n  }\n  else // if (!use_xyz)\n  {\n    ClipperLib.IntPoint0 = function ()\n    {\n      this.X = 0;\n      this.Y = 0;\n    };\n    ClipperLib.IntPoint1 = function (pt)\n    {\n      this.X = pt.X;\n      this.Y = pt.Y;\n    };\n    ClipperLib.IntPoint1dp = function (dp)\n    {\n      this.X = ClipperLib.Clipper.Round(dp.X);\n      this.Y = ClipperLib.Clipper.Round(dp.Y);\n    };\n    ClipperLib.IntPoint2 = function (x, y)\n    {\n      this.X = x;\n      this.Y = y;\n    };\n  }\n  ClipperLib.IntRect = function ()\n  {\n    var a = arguments,\n      alen = a.length;\n    if (alen == 4) // function (l, t, r, b)\n    {\n      this.left = a[0];\n      this.top = a[1];\n      this.right = a[2];\n      this.bottom = a[3];\n    }\n    else if (alen == 1) // function (ir)\n    {\n      this.left = ir.left;\n      this.top = ir.top;\n      this.right = ir.right;\n      this.bottom = ir.bottom;\n    }\n    else // function ()\n    {\n      this.left = 0;\n      this.top = 0;\n      this.right = 0;\n      this.bottom = 0;\n    }\n  };\n  ClipperLib.IntRect0 = function ()\n  {\n    this.left = 0;\n    this.top = 0;\n    this.right = 0;\n    this.bottom = 0;\n  };\n  ClipperLib.IntRect1 = function (ir)\n  {\n    this.left = ir.left;\n    this.top = ir.top;\n    this.right = ir.right;\n    this.bottom = ir.bottom;\n  };\n  ClipperLib.IntRect4 = function (l, t, r, b)\n  {\n    this.left = l;\n    this.top = t;\n    this.right = r;\n    this.bottom = b;\n  };\n  ClipperLib.ClipType = {\n    ctIntersection: 0,\n    ctUnion: 1,\n    ctDifference: 2,\n    ctXor: 3\n  };\n  ClipperLib.PolyType = {\n    ptSubject: 0,\n    ptClip: 1\n  };\n  ClipperLib.PolyFillType = {\n    pftEvenOdd: 0,\n    pftNonZero: 1,\n    pftPositive: 2,\n    pftNegative: 3\n  };\n  ClipperLib.JoinType = {\n    jtSquare: 0,\n    jtRound: 1,\n    jtMiter: 2\n  };\n  ClipperLib.EndType = {\n    etOpenSquare: 0,\n    etOpenRound: 1,\n    etOpenButt: 2,\n    etClosedLine: 3,\n    etClosedPolygon: 4\n  };\n  if (use_deprecated)\n    ClipperLib.EndType_ = {\n      etSquare: 0,\n      etRound: 1,\n      etButt: 2,\n      etClosed: 3\n    };\n  ClipperLib.EdgeSide = {\n    esLeft: 0,\n    esRight: 1\n  };\n  ClipperLib.Direction = {\n    dRightToLeft: 0,\n    dLeftToRight: 1\n  };\n  ClipperLib.TEdge = function ()\n  {\n    this.Bot = new ClipperLib.IntPoint();\n    this.Curr = new ClipperLib.IntPoint();\n    this.Top = new ClipperLib.IntPoint();\n    this.Delta = new ClipperLib.IntPoint();\n    this.Dx = 0;\n    this.PolyTyp = ClipperLib.PolyType.ptSubject;\n    this.Side = ClipperLib.EdgeSide.esLeft;\n    this.WindDelta = 0;\n    this.WindCnt = 0;\n    this.WindCnt2 = 0;\n    this.OutIdx = 0;\n    this.Next = null;\n    this.Prev = null;\n    this.NextInLML = null;\n    this.NextInAEL = null;\n    this.PrevInAEL = null;\n    this.NextInSEL = null;\n    this.PrevInSEL = null;\n  };\n  ClipperLib.IntersectNode = function ()\n  {\n    this.Edge1 = null;\n    this.Edge2 = null;\n    this.Pt = new ClipperLib.IntPoint();\n  };\n  ClipperLib.MyIntersectNodeSort = function () {};\n  ClipperLib.MyIntersectNodeSort.Compare = function (node1, node2)\n  {\n    return (node2.Pt.Y - node1.Pt.Y);\n  };\n  ClipperLib.LocalMinima = function ()\n  {\n    this.Y = 0;\n    this.LeftBound = null;\n    this.RightBound = null;\n    this.Next = null;\n  };\n  ClipperLib.Scanbeam = function ()\n  {\n    this.Y = 0;\n    this.Next = null;\n  };\n  ClipperLib.OutRec = function ()\n  {\n    this.Idx = 0;\n    this.IsHole = false;\n    this.IsOpen = false;\n    this.FirstLeft = null;\n    this.Pts = null;\n    this.BottomPt = null;\n    this.PolyNode = null;\n  };\n  ClipperLib.OutPt = function ()\n  {\n    this.Idx = 0;\n    this.Pt = new ClipperLib.IntPoint();\n    this.Next = null;\n    this.Prev = null;\n  };\n  ClipperLib.Join = function ()\n  {\n    this.OutPt1 = null;\n    this.OutPt2 = null;\n    this.OffPt = new ClipperLib.IntPoint();\n  };\n  ClipperLib.ClipperBase = function ()\n  {\n    this.m_MinimaList = null;\n    this.m_CurrentLM = null;\n    this.m_edges = new Array();\n    this.m_UseFullRange = false;\n    this.m_HasOpenPaths = false;\n    this.PreserveCollinear = false;\n    this.m_MinimaList = null;\n    this.m_CurrentLM = null;\n    this.m_UseFullRange = false;\n    this.m_HasOpenPaths = false;\n  };\n  // Ranges are in original C# too high for Javascript (in current state 2013 september):\n  // protected const double horizontal = -3.4E+38;\n  // internal const cInt loRange = 0x3FFFFFFF; // = 1073741823 = sqrt(2^63 -1)/2\n  // internal const cInt hiRange = 0x3FFFFFFFFFFFFFFFL; // = 4611686018427387903 = sqrt(2^127 -1)/2\n  // So had to adjust them to more suitable for Javascript.\n  // If JS some day supports truly 64-bit integers, then these ranges can be as in C#\n  // and biginteger library can be more simpler (as then 128bit can be represented as two 64bit numbers)\n  ClipperLib.ClipperBase.horizontal = -9007199254740992; //-2^53\n  ClipperLib.ClipperBase.Skip = -2;\n  ClipperLib.ClipperBase.Unassigned = -1;\n  ClipperLib.ClipperBase.tolerance = 1E-20;\n  if (use_int32)\n  {\n    ClipperLib.ClipperBase.loRange = 46340;\n    ClipperLib.ClipperBase.hiRange = 46340;\n  }\n  else\n  {\n    ClipperLib.ClipperBase.loRange = 47453132; // sqrt(2^53 -1)/2\n    ClipperLib.ClipperBase.hiRange = 4503599627370495; // sqrt(2^106 -1)/2\n  }\n  ClipperLib.ClipperBase.near_zero = function (val)\n  {\n    return (val > -ClipperLib.ClipperBase.tolerance) && (val < ClipperLib.ClipperBase.tolerance);\n  };\n  ClipperLib.ClipperBase.IsHorizontal = function (e)\n  {\n    return e.Delta.Y === 0;\n  };\n  ClipperLib.ClipperBase.prototype.PointIsVertex = function (pt, pp)\n  {\n    var pp2 = pp;\n    do {\n      if (ClipperLib.IntPoint.op_Equality(pp2.Pt, pt))\n        return true;\n      pp2 = pp2.Next;\n    }\n    while (pp2 != pp)\n    return false;\n  };\n  ClipperLib.ClipperBase.prototype.PointOnLineSegment = function (pt, linePt1, linePt2, UseFullRange)\n  {\n    if (UseFullRange)\n      return ((pt.X == linePt1.X) && (pt.Y == linePt1.Y)) ||\n        ((pt.X == linePt2.X) && (pt.Y == linePt2.Y)) ||\n        (((pt.X > linePt1.X) == (pt.X < linePt2.X)) &&\n        ((pt.Y > linePt1.Y) == (pt.Y < linePt2.Y)) &&\n        (Int128.op_Equality(Int128.Int128Mul((pt.X - linePt1.X), (linePt2.Y - linePt1.Y)),\n          Int128.Int128Mul((linePt2.X - linePt1.X), (pt.Y - linePt1.Y)))));\n    else\n      return ((pt.X == linePt1.X) && (pt.Y == linePt1.Y)) || ((pt.X == linePt2.X) && (pt.Y == linePt2.Y)) || (((pt.X > linePt1.X) == (pt.X < linePt2.X)) && ((pt.Y > linePt1.Y) == (pt.Y < linePt2.Y)) && ((pt.X - linePt1.X) * (linePt2.Y - linePt1.Y) == (linePt2.X - linePt1.X) * (pt.Y - linePt1.Y)));\n  };\n  ClipperLib.ClipperBase.prototype.PointOnPolygon = function (pt, pp, UseFullRange)\n  {\n    var pp2 = pp;\n    while (true)\n    {\n      if (this.PointOnLineSegment(pt, pp2.Pt, pp2.Next.Pt, UseFullRange))\n        return true;\n      pp2 = pp2.Next;\n      if (pp2 == pp)\n        break;\n    }\n    return false;\n  };\n  ClipperLib.ClipperBase.prototype.SlopesEqual = ClipperLib.ClipperBase.SlopesEqual = function ()\n  {\n    var a = arguments,\n      alen = a.length;\n    var e1, e2, pt1, pt2, pt3, pt4, UseFullRange;\n    if (alen == 3) // function (e1, e2, UseFullRange)\n    {\n      e1 = a[0];\n      e2 = a[1];\n      UseFullRange = a[2];\n      if (UseFullRange)\n        return Int128.op_Equality(Int128.Int128Mul(e1.Delta.Y, e2.Delta.X), Int128.Int128Mul(e1.Delta.X, e2.Delta.Y));\n      else\n        return ClipperLib.Cast_Int64((e1.Delta.Y) * (e2.Delta.X)) == ClipperLib.Cast_Int64((e1.Delta.X) * (e2.Delta.Y));\n    }\n    else if (alen == 4) // function (pt1, pt2, pt3, UseFullRange)\n    {\n      pt1 = a[0];\n      pt2 = a[1];\n      pt3 = a[2];\n      UseFullRange = a[3];\n      if (UseFullRange)\n        return Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt2.X - pt3.X), Int128.Int128Mul(pt1.X - pt2.X, pt2.Y - pt3.Y));\n      else\n        return ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt2.X - pt3.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt2.Y - pt3.Y)) === 0;\n    }\n    else // function (pt1, pt2, pt3, pt4, UseFullRange)\n    {\n      pt1 = a[0];\n      pt2 = a[1];\n      pt3 = a[2];\n      pt4 = a[3];\n      UseFullRange = a[4];\n      if (UseFullRange)\n        return Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt3.X - pt4.X), Int128.Int128Mul(pt1.X - pt2.X, pt3.Y - pt4.Y));\n      else\n        return ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt3.X - pt4.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt3.Y - pt4.Y)) === 0;\n    }\n  };\n  ClipperLib.ClipperBase.SlopesEqual3 = function (e1, e2, UseFullRange)\n  {\n    if (UseFullRange)\n      return Int128.op_Equality(Int128.Int128Mul(e1.Delta.Y, e2.Delta.X), Int128.Int128Mul(e1.Delta.X, e2.Delta.Y));\n    else\n      return ClipperLib.Cast_Int64((e1.Delta.Y) * (e2.Delta.X)) == ClipperLib.Cast_Int64((e1.Delta.X) * (e2.Delta.Y));\n  };\n  ClipperLib.ClipperBase.SlopesEqual4 = function (pt1, pt2, pt3, UseFullRange)\n  {\n    if (UseFullRange)\n      return Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt2.X - pt3.X), Int128.Int128Mul(pt1.X - pt2.X, pt2.Y - pt3.Y));\n    else\n      return ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt2.X - pt3.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt2.Y - pt3.Y)) === 0;\n  };\n  ClipperLib.ClipperBase.SlopesEqual5 = function (pt1, pt2, pt3, pt4, UseFullRange)\n  {\n    if (UseFullRange)\n      return Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt3.X - pt4.X), Int128.Int128Mul(pt1.X - pt2.X, pt3.Y - pt4.Y));\n    else\n      return ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt3.X - pt4.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt3.Y - pt4.Y)) === 0;\n  };\n  ClipperLib.ClipperBase.prototype.Clear = function ()\n  {\n    this.DisposeLocalMinimaList();\n    for (var i = 0, ilen = this.m_edges.length; i < ilen; ++i)\n    {\n      for (var j = 0, jlen = this.m_edges[i].length; j < jlen; ++j)\n        this.m_edges[i][j] = null;\n      ClipperLib.Clear(this.m_edges[i]);\n    }\n    ClipperLib.Clear(this.m_edges);\n    this.m_UseFullRange = false;\n    this.m_HasOpenPaths = false;\n  };\n  ClipperLib.ClipperBase.prototype.DisposeLocalMinimaList = function ()\n  {\n    while (this.m_MinimaList !== null)\n    {\n      var tmpLm = this.m_MinimaList.Next;\n      this.m_MinimaList = null;\n      this.m_MinimaList = tmpLm;\n    }\n    this.m_CurrentLM = null;\n  };\n  ClipperLib.ClipperBase.prototype.RangeTest = function (Pt, useFullRange)\n  {\n    if (useFullRange.Value)\n    {\n      if (Pt.X > ClipperLib.ClipperBase.hiRange || Pt.Y > ClipperLib.ClipperBase.hiRange || -Pt.X > ClipperLib.ClipperBase.hiRange || -Pt.Y > ClipperLib.ClipperBase.hiRange)\n        ClipperLib.Error(\"Coordinate outside allowed range in RangeTest().\");\n    }\n    else if (Pt.X > ClipperLib.ClipperBase.loRange || Pt.Y > ClipperLib.ClipperBase.loRange || -Pt.X > ClipperLib.ClipperBase.loRange || -Pt.Y > ClipperLib.ClipperBase.loRange)\n    {\n      useFullRange.Value = true;\n      this.RangeTest(Pt, useFullRange);\n    }\n  };\n  ClipperLib.ClipperBase.prototype.InitEdge = function (e, eNext, ePrev, pt)\n  {\n    e.Next = eNext;\n    e.Prev = ePrev;\n    //e.Curr = pt;\n    e.Curr.X = pt.X;\n    e.Curr.Y = pt.Y;\n    e.OutIdx = -1;\n  };\n  ClipperLib.ClipperBase.prototype.InitEdge2 = function (e, polyType)\n  {\n    if (e.Curr.Y >= e.Next.Curr.Y)\n    {\n      //e.Bot = e.Curr;\n      e.Bot.X = e.Curr.X;\n      e.Bot.Y = e.Curr.Y;\n      //e.Top = e.Next.Curr;\n      e.Top.X = e.Next.Curr.X;\n      e.Top.Y = e.Next.Curr.Y;\n    }\n    else\n    {\n      //e.Top = e.Curr;\n      e.Top.X = e.Curr.X;\n      e.Top.Y = e.Curr.Y;\n      //e.Bot = e.Next.Curr;\n      e.Bot.X = e.Next.Curr.X;\n      e.Bot.Y = e.Next.Curr.Y;\n    }\n    this.SetDx(e);\n    e.PolyTyp = polyType;\n  };\n  ClipperLib.ClipperBase.prototype.FindNextLocMin = function (E)\n  {\n    var E2;\n    for (;;)\n    {\n      while (ClipperLib.IntPoint.op_Inequality(E.Bot, E.Prev.Bot) || ClipperLib.IntPoint.op_Equality(E.Curr, E.Top))\n        E = E.Next;\n      if (E.Dx != ClipperLib.ClipperBase.horizontal && E.Prev.Dx != ClipperLib.ClipperBase.horizontal)\n        break;\n      while (E.Prev.Dx == ClipperLib.ClipperBase.horizontal)\n        E = E.Prev;\n      E2 = E;\n      while (E.Dx == ClipperLib.ClipperBase.horizontal)\n        E = E.Next;\n      if (E.Top.Y == E.Prev.Bot.Y)\n        continue;\n      //ie just an intermediate horz.\n      if (E2.Prev.Bot.X < E.Bot.X)\n        E = E2;\n      break;\n    }\n    return E;\n  };\n  ClipperLib.ClipperBase.prototype.ProcessBound = function (E, IsClockwise)\n  {\n    var EStart = E,\n      Result = E;\n    var Horz;\n    var StartX;\n    if (E.Dx == ClipperLib.ClipperBase.horizontal)\n    {\n      //it's possible for adjacent overlapping horz edges to start heading left\n      //before finishing right, so ...\n      if (IsClockwise)\n        StartX = E.Prev.Bot.X;\n      else\n        StartX = E.Next.Bot.X;\n      if (E.Bot.X != StartX)\n        this.ReverseHorizontal(E);\n    }\n    if (Result.OutIdx != ClipperLib.ClipperBase.Skip)\n    {\n      if (IsClockwise)\n      {\n        while (Result.Top.Y == Result.Next.Bot.Y && Result.Next.OutIdx != ClipperLib.ClipperBase.Skip)\n          Result = Result.Next;\n        if (Result.Dx == ClipperLib.ClipperBase.horizontal && Result.Next.OutIdx != ClipperLib.ClipperBase.Skip)\n        {\n          //nb: at the top of a bound, horizontals are added to the bound\n          //only when the preceding edge attaches to the horizontal's left vertex\n          //unless a Skip edge is encountered when that becomes the top divide\n          Horz = Result;\n          while (Horz.Prev.Dx == ClipperLib.ClipperBase.horizontal)\n            Horz = Horz.Prev;\n          if (Horz.Prev.Top.X == Result.Next.Top.X)\n          {\n            if (!IsClockwise)\n              Result = Horz.Prev;\n          }\n          else if (Horz.Prev.Top.X > Result.Next.Top.X)\n            Result = Horz.Prev;\n        }\n        while (E != Result)\n        {\n          E.NextInLML = E.Next;\n          if (E.Dx == ClipperLib.ClipperBase.horizontal && E != EStart && E.Bot.X != E.Prev.Top.X)\n            this.ReverseHorizontal(E);\n          E = E.Next;\n        }\n        if (E.Dx == ClipperLib.ClipperBase.horizontal && E != EStart && E.Bot.X != E.Prev.Top.X)\n          this.ReverseHorizontal(E);\n        Result = Result.Next;\n        //move to the edge just beyond current bound\n      }\n      else\n      {\n        while (Result.Top.Y == Result.Prev.Bot.Y && Result.Prev.OutIdx != ClipperLib.ClipperBase.Skip)\n          Result = Result.Prev;\n        if (Result.Dx == ClipperLib.ClipperBase.horizontal && Result.Prev.OutIdx != ClipperLib.ClipperBase.Skip)\n        {\n          Horz = Result;\n          while (Horz.Next.Dx == ClipperLib.ClipperBase.horizontal)\n            Horz = Horz.Next;\n          if (Horz.Next.Top.X == Result.Prev.Top.X)\n          {\n            if (!IsClockwise)\n              Result = Horz.Next;\n          }\n          else if (Horz.Next.Top.X > Result.Prev.Top.X)\n            Result = Horz.Next;\n        }\n        while (E != Result)\n        {\n          E.NextInLML = E.Prev;\n          if (E.Dx == ClipperLib.ClipperBase.horizontal && E != EStart && E.Bot.X != E.Next.Top.X)\n            this.ReverseHorizontal(E);\n          E = E.Prev;\n        }\n        if (E.Dx == ClipperLib.ClipperBase.horizontal && E != EStart && E.Bot.X != E.Next.Top.X)\n          this.ReverseHorizontal(E);\n        Result = Result.Prev;\n        //move to the edge just beyond current bound\n      }\n    }\n    if (Result.OutIdx == ClipperLib.ClipperBase.Skip)\n    {\n      //if edges still remain in the current bound beyond the skip edge then\n      //create another LocMin and call ProcessBound once more\n      E = Result;\n      if (IsClockwise)\n      {\n        while (E.Top.Y == E.Next.Bot.Y)\n          E = E.Next;\n        //don't include top horizontals when parsing a bound a second time,\n        //they will be contained in the opposite bound ...\n        while (E != Result && E.Dx == ClipperLib.ClipperBase.horizontal)\n          E = E.Prev;\n      }\n      else\n      {\n        while (E.Top.Y == E.Prev.Bot.Y)\n          E = E.Prev;\n        while (E != Result && E.Dx == ClipperLib.ClipperBase.horizontal)\n          E = E.Next;\n      }\n      if (E == Result)\n      {\n        if (IsClockwise)\n          Result = E.Next;\n        else\n          Result = E.Prev;\n      }\n      else\n      {\n        //there are more edges in the bound beyond result starting with E\n        if (IsClockwise)\n          E = Result.Next;\n        else\n          E = Result.Prev;\n        var locMin = new ClipperLib.LocalMinima();\n        locMin.Next = null;\n        locMin.Y = E.Bot.Y;\n        locMin.LeftBound = null;\n        locMin.RightBound = E;\n        locMin.RightBound.WindDelta = 0;\n        Result = this.ProcessBound(locMin.RightBound, IsClockwise);\n        this.InsertLocalMinima(locMin);\n      }\n    }\n    return Result;\n  };\n  ClipperLib.ClipperBase.prototype.AddPath = function (pg, polyType, Closed)\n  {\n    if (use_lines)\n    {\n      if (!Closed && polyType == ClipperLib.PolyType.ptClip)\n        ClipperLib.Error(\"AddPath: Open paths must be subject.\");\n    }\n    else\n    {\n      if (!Closed)\n        ClipperLib.Error(\"AddPath: Open paths have been disabled.\");\n    }\n    var highI = pg.length - 1;\n    if (Closed)\n      while (highI > 0 && (ClipperLib.IntPoint.op_Equality(pg[highI], pg[0])))\n    --highI;\n    while (highI > 0 && (ClipperLib.IntPoint.op_Equality(pg[highI], pg[highI - 1])))\n    --highI;\n    if ((Closed && highI < 2) || (!Closed && highI < 1))\n      return false;\n    //create a new edge array ...\n    var edges = new Array();\n    for (var i = 0; i <= highI; i++)\n      edges.push(new ClipperLib.TEdge());\n    var IsFlat = true;\n    //1. Basic (first) edge initialization ...\n\n    //edges[1].Curr = pg[1];\n    edges[1].Curr.X = pg[1].X;\n    edges[1].Curr.Y = pg[1].Y;\n\n    var $1 = {Value: this.m_UseFullRange};\n    this.RangeTest(pg[0], $1);\n    this.m_UseFullRange = $1.Value;\n\n    $1.Value = this.m_UseFullRange;\n    this.RangeTest(pg[highI], $1);\n    this.m_UseFullRange = $1.Value;\n\n    this.InitEdge(edges[0], edges[1], edges[highI], pg[0]);\n    this.InitEdge(edges[highI], edges[0], edges[highI - 1], pg[highI]);\n    for (var i = highI - 1; i >= 1; --i)\n    {\n      $1.Value = this.m_UseFullRange;\n      this.RangeTest(pg[i], $1);\n      this.m_UseFullRange = $1.Value;\n\n      this.InitEdge(edges[i], edges[i + 1], edges[i - 1], pg[i]);\n    }\n\n    var eStart = edges[0];\n    //2. Remove duplicate vertices, and (when closed) collinear edges ...\n    var E = eStart,\n      eLoopStop = eStart;\n    for (;;)\n    {\n      if (ClipperLib.IntPoint.op_Equality(E.Curr, E.Next.Curr))\n      {\n        if (E == E.Next)\n          break;\n        if (E == eStart)\n          eStart = E.Next;\n        E = this.RemoveEdge(E);\n        eLoopStop = E;\n        continue;\n      }\n      if (E.Prev == E.Next)\n        break;\n      else if (Closed && ClipperLib.ClipperBase.SlopesEqual(E.Prev.Curr, E.Curr, E.Next.Curr, this.m_UseFullRange) && (!this.PreserveCollinear || !this.Pt2IsBetweenPt1AndPt3(E.Prev.Curr, E.Curr, E.Next.Curr)))\n      {\n        //Collinear edges are allowed for open paths but in closed paths\n        //the default is to merge adjacent collinear edges into a single edge.\n        //However, if the PreserveCollinear property is enabled, only overlapping\n        //collinear edges (ie spikes) will be removed from closed paths.\n        if (E == eStart)\n          eStart = E.Next;\n        E = this.RemoveEdge(E);\n        E = E.Prev;\n        eLoopStop = E;\n        continue;\n      }\n      E = E.Next;\n      if (E == eLoopStop)\n        break;\n    }\n    if ((!Closed && (E == E.Next)) || (Closed && (E.Prev == E.Next)))\n      return false;\n    if (!Closed)\n    {\n      this.m_HasOpenPaths = true;\n      eStart.Prev.OutIdx = ClipperLib.ClipperBase.Skip;\n    }\n    //3. Do second stage of edge initialization ...\n    var eHighest = eStart;\n    E = eStart;\n    do {\n      this.InitEdge2(E, polyType);\n      E = E.Next;\n      if (IsFlat && E.Curr.Y != eStart.Curr.Y)\n        IsFlat = false;\n    }\n    while (E != eStart)\n    //4. Finally, add edge bounds to LocalMinima list ...\n    //Totally flat paths must be handled differently when adding them\n    //to LocalMinima list to avoid endless loops etc ...\n    if (IsFlat)\n    {\n      if (Closed)\n        return false;\n      E.Prev.OutIdx = ClipperLib.ClipperBase.Skip;\n      if (E.Prev.Bot.X < E.Prev.Top.X)\n        this.ReverseHorizontal(E.Prev);\n      var locMin = new ClipperLib.LocalMinima();\n      locMin.Next = null;\n      locMin.Y = E.Bot.Y;\n      locMin.LeftBound = null;\n      locMin.RightBound = E;\n      locMin.RightBound.Side = ClipperLib.EdgeSide.esRight;\n      locMin.RightBound.WindDelta = 0;\n      while (E.Next.OutIdx != ClipperLib.ClipperBase.Skip)\n      {\n        E.NextInLML = E.Next;\n        if (E.Bot.X != E.Prev.Top.X)\n          this.ReverseHorizontal(E);\n        E = E.Next;\n      }\n      this.InsertLocalMinima(locMin);\n      this.m_edges.push(edges);\n      return true;\n    }\n    this.m_edges.push(edges);\n    var clockwise;\n    var EMin = null;\n    for (;;)\n    {\n      E = this.FindNextLocMin(E);\n      if (E == EMin)\n        break;\n      else if (EMin == null)\n        EMin = E;\n      //E and E.Prev now share a local minima (left aligned if horizontal).\n      //Compare their slopes to find which starts which bound ...\n      var locMin = new ClipperLib.LocalMinima();\n      locMin.Next = null;\n      locMin.Y = E.Bot.Y;\n      if (E.Dx < E.Prev.Dx)\n      {\n        locMin.LeftBound = E.Prev;\n        locMin.RightBound = E;\n        clockwise = false;\n        //Q.nextInLML = Q.prev\n      }\n      else\n      {\n        locMin.LeftBound = E;\n        locMin.RightBound = E.Prev;\n        clockwise = true;\n        //Q.nextInLML = Q.next\n      }\n      locMin.LeftBound.Side = ClipperLib.EdgeSide.esLeft;\n      locMin.RightBound.Side = ClipperLib.EdgeSide.esRight;\n      if (!Closed)\n        locMin.LeftBound.WindDelta = 0;\n      else if (locMin.LeftBound.Next == locMin.RightBound)\n        locMin.LeftBound.WindDelta = -1;\n      else\n        locMin.LeftBound.WindDelta = 1;\n      locMin.RightBound.WindDelta = -locMin.LeftBound.WindDelta;\n      E = this.ProcessBound(locMin.LeftBound, clockwise);\n      var E2 = this.ProcessBound(locMin.RightBound, !clockwise);\n      if (locMin.LeftBound.OutIdx == ClipperLib.ClipperBase.Skip)\n        locMin.LeftBound = null;\n      else if (locMin.RightBound.OutIdx == ClipperLib.ClipperBase.Skip)\n        locMin.RightBound = null;\n      this.InsertLocalMinima(locMin);\n      if (!clockwise)\n        E = E2;\n    }\n    return true;\n  };\n  ClipperLib.ClipperBase.prototype.AddPaths = function (ppg, polyType, closed)\n  {\n    //  console.log(\"-------------------------------------------\");\n    //  console.log(JSON.stringify(ppg));\n    var result = false;\n    for (var i = 0, ilen = ppg.length; i < ilen; ++i)\n      if (this.AddPath(ppg[i], polyType, closed))\n        result = true;\n    return result;\n  };\n  //------------------------------------------------------------------------------\n  ClipperLib.ClipperBase.prototype.Pt2IsBetweenPt1AndPt3 = function (pt1, pt2, pt3)\n  {\n    if ((ClipperLib.IntPoint.op_Equality(pt1, pt3)) || (ClipperLib.IntPoint.op_Equality(pt1, pt2)) ||\n      (ClipperLib.IntPoint.op_Equality(pt3, pt2)))\n      return false;\n    else if (pt1.X != pt3.X)\n      return (pt2.X > pt1.X) == (pt2.X < pt3.X);\n    else\n      return (pt2.Y > pt1.Y) == (pt2.Y < pt3.Y);\n  };\n  ClipperLib.ClipperBase.prototype.RemoveEdge = function (e)\n  {\n    //removes e from double_linked_list (but without removing from memory)\n    e.Prev.Next = e.Next;\n    e.Next.Prev = e.Prev;\n    var result = e.Next;\n    e.Prev = null; //flag as removed (see ClipperBase.Clear)\n    return result;\n  };\n  ClipperLib.ClipperBase.prototype.SetDx = function (e)\n  {\n    e.Delta.X = (e.Top.X - e.Bot.X);\n    e.Delta.Y = (e.Top.Y - e.Bot.Y);\n    if (e.Delta.Y === 0) e.Dx = ClipperLib.ClipperBase.horizontal;\n    else e.Dx = (e.Delta.X) / (e.Delta.Y);\n  };\n  ClipperLib.ClipperBase.prototype.InsertLocalMinima = function (newLm)\n  {\n    if (this.m_MinimaList === null)\n    {\n      this.m_MinimaList = newLm;\n    }\n    else if (newLm.Y >= this.m_MinimaList.Y)\n    {\n      newLm.Next = this.m_MinimaList;\n      this.m_MinimaList = newLm;\n    }\n    else\n    {\n      var tmpLm = this.m_MinimaList;\n      while (tmpLm.Next !== null && (newLm.Y < tmpLm.Next.Y))\n        tmpLm = tmpLm.Next;\n      newLm.Next = tmpLm.Next;\n      tmpLm.Next = newLm;\n    }\n  };\n  ClipperLib.ClipperBase.prototype.PopLocalMinima = function ()\n  {\n    if (this.m_CurrentLM === null)\n      return;\n    this.m_CurrentLM = this.m_CurrentLM.Next;\n  };\n  ClipperLib.ClipperBase.prototype.ReverseHorizontal = function (e)\n  {\n    //swap horizontal edges' top and bottom x's so they follow the natural\n    //progression of the bounds - ie so their xbots will align with the\n    //adjoining lower edge. [Helpful in the ProcessHorizontal() method.]\n    var tmp = e.Top.X;\n    e.Top.X = e.Bot.X;\n    e.Bot.X = tmp;\n    if (use_xyz)\n    {\n      tmp = e.Top.Z;\n      e.Top.Z = e.Bot.Z;\n      e.Bot.Z = tmp;\n    }\n  };\n  ClipperLib.ClipperBase.prototype.Reset = function ()\n  {\n    this.m_CurrentLM = this.m_MinimaList;\n    if (this.m_CurrentLM == null)\n      return;\n    //ie nothing to process\n    //reset all edges ...\n    var lm = this.m_MinimaList;\n    while (lm != null)\n    {\n      var e = lm.LeftBound;\n      if (e != null)\n      {\n        //e.Curr = e.Bot;\n        e.Curr.X = e.Bot.X;\n        e.Curr.Y = e.Bot.Y;\n        e.Side = ClipperLib.EdgeSide.esLeft;\n        e.OutIdx = ClipperLib.ClipperBase.Unassigned;\n      }\n      e = lm.RightBound;\n      if (e != null)\n      {\n        //e.Curr = e.Bot;\n        e.Curr.X = e.Bot.X;\n        e.Curr.Y = e.Bot.Y;\n        e.Side = ClipperLib.EdgeSide.esRight;\n        e.OutIdx = ClipperLib.ClipperBase.Unassigned;\n      }\n      lm = lm.Next;\n    }\n  };\n  ClipperLib.Clipper = function (InitOptions) // public Clipper(int InitOptions = 0)\n  {\n    if (typeof (InitOptions) == \"undefined\") InitOptions = 0;\n    this.m_PolyOuts = null;\n    this.m_ClipType = ClipperLib.ClipType.ctIntersection;\n    this.m_Scanbeam = null;\n    this.m_ActiveEdges = null;\n    this.m_SortedEdges = null;\n    this.m_IntersectList = null;\n    this.m_IntersectNodeComparer = null;\n    this.m_ExecuteLocked = false;\n    this.m_ClipFillType = ClipperLib.PolyFillType.pftEvenOdd;\n    this.m_SubjFillType = ClipperLib.PolyFillType.pftEvenOdd;\n    this.m_Joins = null;\n    this.m_GhostJoins = null;\n    this.m_UsingPolyTree = false;\n    this.ReverseSolution = false;\n    this.StrictlySimple = false;\n    ClipperLib.ClipperBase.call(this);\n    this.m_Scanbeam = null;\n    this.m_ActiveEdges = null;\n    this.m_SortedEdges = null;\n    this.m_IntersectList = new Array();\n    this.m_IntersectNodeComparer = ClipperLib.MyIntersectNodeSort.Compare;\n    this.m_ExecuteLocked = false;\n    this.m_UsingPolyTree = false;\n    this.m_PolyOuts = new Array();\n    this.m_Joins = new Array();\n    this.m_GhostJoins = new Array();\n    this.ReverseSolution = (1 & InitOptions) !== 0;\n    this.StrictlySimple = (2 & InitOptions) !== 0;\n    this.PreserveCollinear = (4 & InitOptions) !== 0;\n    if (use_xyz)\n    {\n      this.ZFillFunction = null; // function (IntPoint vert1, IntPoint vert2, ref IntPoint intersectPt);\n    }\n  };\n  ClipperLib.Clipper.ioReverseSolution = 1;\n  ClipperLib.Clipper.ioStrictlySimple = 2;\n  ClipperLib.Clipper.ioPreserveCollinear = 4;\n\n  ClipperLib.Clipper.prototype.Clear = function ()\n  {\n    if (this.m_edges.length === 0)\n      return;\n    //avoids problems with ClipperBase destructor\n    this.DisposeAllPolyPts();\n    ClipperLib.ClipperBase.prototype.Clear.call(this);\n  };\n\n  ClipperLib.Clipper.prototype.DisposeScanbeamList = function ()\n  {\n    while (this.m_Scanbeam !== null)\n    {\n      var sb2 = this.m_Scanbeam.Next;\n      this.m_Scanbeam = null;\n      this.m_Scanbeam = sb2;\n    }\n  };\n  ClipperLib.Clipper.prototype.Reset = function ()\n  {\n    ClipperLib.ClipperBase.prototype.Reset.call(this);\n    this.m_Scanbeam = null;\n    this.m_ActiveEdges = null;\n    this.m_SortedEdges = null;\n\n    var lm = this.m_MinimaList;\n    while (lm !== null)\n    {\n      this.InsertScanbeam(lm.Y);\n      lm = lm.Next;\n    }\n  };\n  ClipperLib.Clipper.prototype.InsertScanbeam = function (Y)\n  {\n    if (this.m_Scanbeam === null)\n    {\n      this.m_Scanbeam = new ClipperLib.Scanbeam();\n      this.m_Scanbeam.Next = null;\n      this.m_Scanbeam.Y = Y;\n    }\n    else if (Y > this.m_Scanbeam.Y)\n    {\n      var newSb = new ClipperLib.Scanbeam();\n      newSb.Y = Y;\n      newSb.Next = this.m_Scanbeam;\n      this.m_Scanbeam = newSb;\n    }\n    else\n    {\n      var sb2 = this.m_Scanbeam;\n      while (sb2.Next !== null && (Y <= sb2.Next.Y))\n        sb2 = sb2.Next;\n      if (Y == sb2.Y)\n        return;\n      //ie ignores duplicates\n      var newSb = new ClipperLib.Scanbeam();\n      newSb.Y = Y;\n      newSb.Next = sb2.Next;\n      sb2.Next = newSb;\n    }\n  };\n  // ************************************\n  ClipperLib.Clipper.prototype.Execute = function ()\n  {\n    var a = arguments,\n      alen = a.length,\n      ispolytree = a[1] instanceof ClipperLib.PolyTree;\n    if (alen == 4 && !ispolytree) // function (clipType, solution, subjFillType, clipFillType)\n    {\n      var clipType = a[0],\n        solution = a[1],\n        subjFillType = a[2],\n        clipFillType = a[3];\n      if (this.m_ExecuteLocked)\n        return false;\n      if (this.m_HasOpenPaths)\n        ClipperLib.Error(\"Error: PolyTree struct is need for open path clipping.\");\n      this.m_ExecuteLocked = true;\n      ClipperLib.Clear(solution);\n      this.m_SubjFillType = subjFillType;\n      this.m_ClipFillType = clipFillType;\n      this.m_ClipType = clipType;\n      this.m_UsingPolyTree = false;\n      try\n      {\n        var succeeded = this.ExecuteInternal();\n        //build the return polygons ...\n        if (succeeded) this.BuildResult(solution);\n      }\n      finally\n      {\n        this.DisposeAllPolyPts();\n        this.m_ExecuteLocked = false;\n      }\n      return succeeded;\n    }\n    else if (alen == 4 && ispolytree) // function (clipType, polytree, subjFillType, clipFillType)\n    {\n      var clipType = a[0],\n        polytree = a[1],\n        subjFillType = a[2],\n        clipFillType = a[3];\n      if (this.m_ExecuteLocked)\n        return false;\n      this.m_ExecuteLocked = true;\n      this.m_SubjFillType = subjFillType;\n      this.m_ClipFillType = clipFillType;\n      this.m_ClipType = clipType;\n      this.m_UsingPolyTree = true;\n      try\n      {\n        var succeeded = this.ExecuteInternal();\n        //build the return polygons ...\n        if (succeeded) this.BuildResult2(polytree);\n      }\n      finally\n      {\n        this.DisposeAllPolyPts();\n        this.m_ExecuteLocked = false;\n      }\n      return succeeded;\n    }\n    else if (alen == 2 && !ispolytree) // function (clipType, solution)\n    {\n      var clipType = a[0],\n        solution = a[1];\n      return this.Execute(clipType, solution, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\n    }\n    else if (alen == 2 && ispolytree) // function (clipType, polytree)\n    {\n      var clipType = a[0],\n        polytree = a[1];\n      return this.Execute(clipType, polytree, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\n    }\n  };\n  ClipperLib.Clipper.prototype.FixHoleLinkage = function (outRec)\n  {\n    //skip if an outermost polygon or\n    //already already points to the correct FirstLeft ...\n    if (outRec.FirstLeft === null || (outRec.IsHole != outRec.FirstLeft.IsHole && outRec.FirstLeft.Pts !== null))\n      return;\n    var orfl = outRec.FirstLeft;\n    while (orfl !== null && ((orfl.IsHole == outRec.IsHole) || orfl.Pts === null))\n      orfl = orfl.FirstLeft;\n    outRec.FirstLeft = orfl;\n  };\n  ClipperLib.Clipper.prototype.ExecuteInternal = function ()\n  {\n    try\n    {\n      this.Reset();\n      if (this.m_CurrentLM === null)\n        return false;\n      var botY = this.PopScanbeam();\n      do {\n        this.InsertLocalMinimaIntoAEL(botY);\n        ClipperLib.Clear(this.m_GhostJoins);\n        this.ProcessHorizontals(false);\n        if (this.m_Scanbeam === null)\n          break;\n        var topY = this.PopScanbeam();\n        //console.log(\"botY:\" + botY + \", topY:\" + topY);\n        if (!this.ProcessIntersections(botY, topY))\n          return false;\n        this.ProcessEdgesAtTopOfScanbeam(topY);\n        botY = topY;\n      }\n      while (this.m_Scanbeam !== null || this.m_CurrentLM !== null)\n      //fix orientations ...\n      for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n      {\n        var outRec = this.m_PolyOuts[i];\n        if (outRec.Pts === null || outRec.IsOpen)\n          continue;\n        if ((outRec.IsHole ^ this.ReverseSolution) == (this.Area(outRec) > 0))\n          this.ReversePolyPtLinks(outRec.Pts);\n      }\n      this.JoinCommonEdges();\n      for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n      {\n        var outRec = this.m_PolyOuts[i];\n        if (outRec.Pts !== null && !outRec.IsOpen)\n          this.FixupOutPolygon(outRec);\n      }\n      if (this.StrictlySimple)\n        this.DoSimplePolygons();\n      return true;\n    }\n    finally\n    {\n      ClipperLib.Clear(this.m_Joins);\n      ClipperLib.Clear(this.m_GhostJoins);\n    }\n  };\n  ClipperLib.Clipper.prototype.PopScanbeam = function ()\n  {\n    var Y = this.m_Scanbeam.Y;\n    var sb2 = this.m_Scanbeam;\n    this.m_Scanbeam = this.m_Scanbeam.Next;\n    sb2 = null;\n    return Y;\n  };\n  ClipperLib.Clipper.prototype.DisposeAllPolyPts = function ()\n  {\n    for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; ++i)\n      this.DisposeOutRec(i);\n    ClipperLib.Clear(this.m_PolyOuts);\n  };\n  ClipperLib.Clipper.prototype.DisposeOutRec = function (index)\n  {\n    var outRec = this.m_PolyOuts[index];\n    if (outRec.Pts !== null)\n      this.DisposeOutPts(outRec.Pts);\n    outRec = null;\n    this.m_PolyOuts[index] = null;\n  };\n  ClipperLib.Clipper.prototype.DisposeOutPts = function (pp)\n  {\n    if (pp === null)\n      return;\n    var tmpPp = null;\n    pp.Prev.Next = null;\n    while (pp !== null)\n    {\n      tmpPp = pp;\n      pp = pp.Next;\n      tmpPp = null;\n    }\n  };\n  ClipperLib.Clipper.prototype.AddJoin = function (Op1, Op2, OffPt)\n  {\n    var j = new ClipperLib.Join();\n    j.OutPt1 = Op1;\n    j.OutPt2 = Op2;\n    //j.OffPt = OffPt;\n    j.OffPt.X = OffPt.X;\n    j.OffPt.Y = OffPt.Y;\n    this.m_Joins.push(j);\n  };\n  ClipperLib.Clipper.prototype.AddGhostJoin = function (Op, OffPt)\n  {\n    var j = new ClipperLib.Join();\n    j.OutPt1 = Op;\n    //j.OffPt = OffPt;\n    j.OffPt.X = OffPt.X;\n    j.OffPt.Y = OffPt.Y;\n    this.m_GhostJoins.push(j);\n  };\n  if (use_xyz)\n  {\n    ClipperLib.Clipper.prototype.SetZ = function (pt, e)\n    {\n      pt.Z = 0;\n      if (this.ZFillFunction !== null)\n      {\n        //put the 'preferred' point as first parameter ...\n        if (e.OutIdx < 0)\n          this.ZFillFunction(e.Bot, e.Top, pt); //outside a path so presume entering\n        else\n          this.ZFillFunction(e.Top, e.Bot, pt); //inside a path so presume exiting\n      }\n    };\n    //------------------------------------------------------------------------------\n  }\n  ClipperLib.Clipper.prototype.InsertLocalMinimaIntoAEL = function (botY)\n  {\n    while (this.m_CurrentLM !== null && (this.m_CurrentLM.Y == botY))\n    {\n      var lb = this.m_CurrentLM.LeftBound;\n      var rb = this.m_CurrentLM.RightBound;\n      this.PopLocalMinima();\n      var Op1 = null;\n      if (lb === null)\n      {\n        this.InsertEdgeIntoAEL(rb, null);\n        this.SetWindingCount(rb);\n        if (this.IsContributing(rb))\n          Op1 = this.AddOutPt(rb, rb.Bot);\n      }\n      else if (rb == null)\n      {\n        this.InsertEdgeIntoAEL(lb, null);\n        this.SetWindingCount(lb);\n        if (this.IsContributing(lb))\n          Op1 = this.AddOutPt(lb, lb.Bot);\n        this.InsertScanbeam(lb.Top.Y);\n      }\n      else\n      {\n        this.InsertEdgeIntoAEL(lb, null);\n        this.InsertEdgeIntoAEL(rb, lb);\n        this.SetWindingCount(lb);\n        rb.WindCnt = lb.WindCnt;\n        rb.WindCnt2 = lb.WindCnt2;\n        if (this.IsContributing(lb))\n          Op1 = this.AddLocalMinPoly(lb, rb, lb.Bot);\n        this.InsertScanbeam(lb.Top.Y);\n      }\n      if (rb != null)\n      {\n        if (ClipperLib.ClipperBase.IsHorizontal(rb))\n          this.AddEdgeToSEL(rb);\n        else\n          this.InsertScanbeam(rb.Top.Y);\n      }\n      if (lb == null || rb == null) continue;\n      //if output polygons share an Edge with a horizontal rb, they'll need joining later ...\n      if (Op1 !== null && ClipperLib.ClipperBase.IsHorizontal(rb) && this.m_GhostJoins.length > 0 && rb.WindDelta !== 0)\n      {\n        for (var i = 0, ilen = this.m_GhostJoins.length; i < ilen; i++)\n        {\n          //if the horizontal Rb and a 'ghost' horizontal overlap, then convert\n          //the 'ghost' join to a real join ready for later ...\n          var j = this.m_GhostJoins[i];\n          if (this.HorzSegmentsOverlap(j.OutPt1.Pt, j.OffPt, rb.Bot, rb.Top))\n            this.AddJoin(j.OutPt1, Op1, j.OffPt);\n        }\n      }\n      if (lb.OutIdx >= 0 && lb.PrevInAEL !== null &&\n        lb.PrevInAEL.Curr.X == lb.Bot.X &&\n        lb.PrevInAEL.OutIdx >= 0 &&\n        ClipperLib.ClipperBase.SlopesEqual(lb.PrevInAEL, lb, this.m_UseFullRange) &&\n        lb.WindDelta !== 0 && lb.PrevInAEL.WindDelta !== 0)\n      {\n        var Op2 = this.AddOutPt(lb.PrevInAEL, lb.Bot);\n        this.AddJoin(Op1, Op2, lb.Top);\n      }\n      if (lb.NextInAEL != rb)\n      {\n        if (rb.OutIdx >= 0 && rb.PrevInAEL.OutIdx >= 0 &&\n          ClipperLib.ClipperBase.SlopesEqual(rb.PrevInAEL, rb, this.m_UseFullRange) &&\n          rb.WindDelta !== 0 && rb.PrevInAEL.WindDelta !== 0)\n        {\n          var Op2 = this.AddOutPt(rb.PrevInAEL, rb.Bot);\n          this.AddJoin(Op1, Op2, rb.Top);\n        }\n        var e = lb.NextInAEL;\n        if (e !== null)\n          while (e != rb)\n          {\n            //nb: For calculating winding counts etc, IntersectEdges() assumes\n            //that param1 will be to the right of param2 ABOVE the intersection ...\n            this.IntersectEdges(rb, e, lb.Curr, false);\n            //order important here\n            e = e.NextInAEL;\n          }\n      }\n    }\n  };\n  ClipperLib.Clipper.prototype.InsertEdgeIntoAEL = function (edge, startEdge)\n  {\n    if (this.m_ActiveEdges === null)\n    {\n      edge.PrevInAEL = null;\n      edge.NextInAEL = null;\n      this.m_ActiveEdges = edge;\n    }\n    else if (startEdge === null && this.E2InsertsBeforeE1(this.m_ActiveEdges, edge))\n    {\n      edge.PrevInAEL = null;\n      edge.NextInAEL = this.m_ActiveEdges;\n      this.m_ActiveEdges.PrevInAEL = edge;\n      this.m_ActiveEdges = edge;\n    }\n    else\n    {\n      if (startEdge === null)\n        startEdge = this.m_ActiveEdges;\n      while (startEdge.NextInAEL !== null && !this.E2InsertsBeforeE1(startEdge.NextInAEL, edge))\n        startEdge = startEdge.NextInAEL;\n      edge.NextInAEL = startEdge.NextInAEL;\n      if (startEdge.NextInAEL !== null)\n        startEdge.NextInAEL.PrevInAEL = edge;\n      edge.PrevInAEL = startEdge;\n      startEdge.NextInAEL = edge;\n    }\n  };\n  ClipperLib.Clipper.prototype.E2InsertsBeforeE1 = function (e1, e2)\n  {\n    if (e2.Curr.X == e1.Curr.X)\n    {\n      if (e2.Top.Y > e1.Top.Y)\n        return e2.Top.X < ClipperLib.Clipper.TopX(e1, e2.Top.Y);\n      else\n        return e1.Top.X > ClipperLib.Clipper.TopX(e2, e1.Top.Y);\n    }\n    else\n      return e2.Curr.X < e1.Curr.X;\n  };\n  ClipperLib.Clipper.prototype.IsEvenOddFillType = function (edge)\n  {\n    if (edge.PolyTyp == ClipperLib.PolyType.ptSubject)\n      return this.m_SubjFillType == ClipperLib.PolyFillType.pftEvenOdd;\n    else\n      return this.m_ClipFillType == ClipperLib.PolyFillType.pftEvenOdd;\n  };\n  ClipperLib.Clipper.prototype.IsEvenOddAltFillType = function (edge)\n  {\n    if (edge.PolyTyp == ClipperLib.PolyType.ptSubject)\n      return this.m_ClipFillType == ClipperLib.PolyFillType.pftEvenOdd;\n    else\n      return this.m_SubjFillType == ClipperLib.PolyFillType.pftEvenOdd;\n  };\n  ClipperLib.Clipper.prototype.IsContributing = function (edge)\n  {\n    var pft, pft2;\n    if (edge.PolyTyp == ClipperLib.PolyType.ptSubject)\n    {\n      pft = this.m_SubjFillType;\n      pft2 = this.m_ClipFillType;\n    }\n    else\n    {\n      pft = this.m_ClipFillType;\n      pft2 = this.m_SubjFillType;\n    }\n    switch (pft)\n    {\n    case ClipperLib.PolyFillType.pftEvenOdd:\n      if (edge.WindDelta === 0 && edge.WindCnt != 1)\n        return false;\n      break;\n    case ClipperLib.PolyFillType.pftNonZero:\n      if (Math.abs(edge.WindCnt) != 1)\n        return false;\n      break;\n    case ClipperLib.PolyFillType.pftPositive:\n      if (edge.WindCnt != 1)\n        return false;\n      break;\n    default:\n      if (edge.WindCnt != -1)\n        return false;\n      break;\n    }\n    switch (this.m_ClipType)\n    {\n    case ClipperLib.ClipType.ctIntersection:\n      switch (pft2)\n      {\n      case ClipperLib.PolyFillType.pftEvenOdd:\n      case ClipperLib.PolyFillType.pftNonZero:\n        return (edge.WindCnt2 !== 0);\n      case ClipperLib.PolyFillType.pftPositive:\n        return (edge.WindCnt2 > 0);\n      default:\n        return (edge.WindCnt2 < 0);\n      }\n    case ClipperLib.ClipType.ctUnion:\n      switch (pft2)\n      {\n      case ClipperLib.PolyFillType.pftEvenOdd:\n      case ClipperLib.PolyFillType.pftNonZero:\n        return (edge.WindCnt2 === 0);\n      case ClipperLib.PolyFillType.pftPositive:\n        return (edge.WindCnt2 <= 0);\n      default:\n        return (edge.WindCnt2 >= 0);\n      }\n    case ClipperLib.ClipType.ctDifference:\n      if (edge.PolyTyp == ClipperLib.PolyType.ptSubject)\n        switch (pft2)\n        {\n        case ClipperLib.PolyFillType.pftEvenOdd:\n        case ClipperLib.PolyFillType.pftNonZero:\n          return (edge.WindCnt2 === 0);\n        case ClipperLib.PolyFillType.pftPositive:\n          return (edge.WindCnt2 <= 0);\n        default:\n          return (edge.WindCnt2 >= 0);\n        }\n      else\n        switch (pft2)\n        {\n        case ClipperLib.PolyFillType.pftEvenOdd:\n        case ClipperLib.PolyFillType.pftNonZero:\n          return (edge.WindCnt2 !== 0);\n        case ClipperLib.PolyFillType.pftPositive:\n          return (edge.WindCnt2 > 0);\n        default:\n          return (edge.WindCnt2 < 0);\n        }\n    case ClipperLib.ClipType.ctXor:\n      if (edge.WindDelta === 0)\n        switch (pft2)\n        {\n        case ClipperLib.PolyFillType.pftEvenOdd:\n        case ClipperLib.PolyFillType.pftNonZero:\n          return (edge.WindCnt2 === 0);\n        case ClipperLib.PolyFillType.pftPositive:\n          return (edge.WindCnt2 <= 0);\n        default:\n          return (edge.WindCnt2 >= 0);\n        }\n      else\n        return true;\n    }\n    return true;\n  };\n  ClipperLib.Clipper.prototype.SetWindingCount = function (edge)\n  {\n    var e = edge.PrevInAEL;\n    //find the edge of the same polytype that immediately preceeds 'edge' in AEL\n    while (e !== null && ((e.PolyTyp != edge.PolyTyp) || (e.WindDelta === 0)))\n      e = e.PrevInAEL;\n    if (e === null)\n    {\n      edge.WindCnt = (edge.WindDelta === 0 ? 1 : edge.WindDelta);\n      edge.WindCnt2 = 0;\n      e = this.m_ActiveEdges;\n      //ie get ready to calc WindCnt2\n    }\n    else if (edge.WindDelta === 0 && this.m_ClipType != ClipperLib.ClipType.ctUnion)\n    {\n      edge.WindCnt = 1;\n      edge.WindCnt2 = e.WindCnt2;\n      e = e.NextInAEL;\n      //ie get ready to calc WindCnt2\n    }\n    else if (this.IsEvenOddFillType(edge))\n    {\n      //EvenOdd filling ...\n      if (edge.WindDelta === 0)\n      {\n        //are we inside a subj polygon ...\n        var Inside = true;\n        var e2 = e.PrevInAEL;\n        while (e2 !== null)\n        {\n          if (e2.PolyTyp == e.PolyTyp && e2.WindDelta !== 0)\n            Inside = !Inside;\n          e2 = e2.PrevInAEL;\n        }\n        edge.WindCnt = (Inside ? 0 : 1);\n      }\n      else\n      {\n        edge.WindCnt = edge.WindDelta;\n      }\n      edge.WindCnt2 = e.WindCnt2;\n      e = e.NextInAEL;\n      //ie get ready to calc WindCnt2\n    }\n    else\n    {\n      //nonZero, Positive or Negative filling ...\n      if (e.WindCnt * e.WindDelta < 0)\n      {\n        //prev edge is 'decreasing' WindCount (WC) toward zero\n        //so we're outside the previous polygon ...\n        if (Math.abs(e.WindCnt) > 1)\n        {\n          //outside prev poly but still inside another.\n          //when reversing direction of prev poly use the same WC \n          if (e.WindDelta * edge.WindDelta < 0)\n            edge.WindCnt = e.WindCnt;\n          else\n            edge.WindCnt = e.WindCnt + edge.WindDelta;\n        }\n        else\n          edge.WindCnt = (edge.WindDelta === 0 ? 1 : edge.WindDelta);\n      }\n      else\n      {\n        //prev edge is 'increasing' WindCount (WC) away from zero\n        //so we're inside the previous polygon ...\n        if (edge.WindDelta === 0)\n          edge.WindCnt = (e.WindCnt < 0 ? e.WindCnt - 1 : e.WindCnt + 1);\n        else if (e.WindDelta * edge.WindDelta < 0)\n          edge.WindCnt = e.WindCnt;\n        else\n          edge.WindCnt = e.WindCnt + edge.WindDelta;\n      }\n      edge.WindCnt2 = e.WindCnt2;\n      e = e.NextInAEL;\n      //ie get ready to calc WindCnt2\n    }\n    //update WindCnt2 ...\n    if (this.IsEvenOddAltFillType(edge))\n    {\n      //EvenOdd filling ...\n      while (e != edge)\n      {\n        if (e.WindDelta !== 0)\n          edge.WindCnt2 = (edge.WindCnt2 === 0 ? 1 : 0);\n        e = e.NextInAEL;\n      }\n    }\n    else\n    {\n      //nonZero, Positive or Negative filling ...\n      while (e != edge)\n      {\n        edge.WindCnt2 += e.WindDelta;\n        e = e.NextInAEL;\n      }\n    }\n  };\n  ClipperLib.Clipper.prototype.AddEdgeToSEL = function (edge)\n  {\n    //SEL pointers in PEdge are reused to build a list of horizontal edges.\n    //However, we don't need to worry about order with horizontal edge processing.\n    if (this.m_SortedEdges === null)\n    {\n      this.m_SortedEdges = edge;\n      edge.PrevInSEL = null;\n      edge.NextInSEL = null;\n    }\n    else\n    {\n      edge.NextInSEL = this.m_SortedEdges;\n      edge.PrevInSEL = null;\n      this.m_SortedEdges.PrevInSEL = edge;\n      this.m_SortedEdges = edge;\n    }\n  };\n  ClipperLib.Clipper.prototype.CopyAELToSEL = function ()\n  {\n    var e = this.m_ActiveEdges;\n    this.m_SortedEdges = e;\n    while (e !== null)\n    {\n      e.PrevInSEL = e.PrevInAEL;\n      e.NextInSEL = e.NextInAEL;\n      e = e.NextInAEL;\n    }\n  };\n  ClipperLib.Clipper.prototype.SwapPositionsInAEL = function (edge1, edge2)\n  {\n    //check that one or other edge hasn't already been removed from AEL ...\n    if (edge1.NextInAEL == edge1.PrevInAEL || edge2.NextInAEL == edge2.PrevInAEL)\n      return;\n    if (edge1.NextInAEL == edge2)\n    {\n      var next = edge2.NextInAEL;\n      if (next !== null)\n        next.PrevInAEL = edge1;\n      var prev = edge1.PrevInAEL;\n      if (prev !== null)\n        prev.NextInAEL = edge2;\n      edge2.PrevInAEL = prev;\n      edge2.NextInAEL = edge1;\n      edge1.PrevInAEL = edge2;\n      edge1.NextInAEL = next;\n    }\n    else if (edge2.NextInAEL == edge1)\n    {\n      var next = edge1.NextInAEL;\n      if (next !== null)\n        next.PrevInAEL = edge2;\n      var prev = edge2.PrevInAEL;\n      if (prev !== null)\n        prev.NextInAEL = edge1;\n      edge1.PrevInAEL = prev;\n      edge1.NextInAEL = edge2;\n      edge2.PrevInAEL = edge1;\n      edge2.NextInAEL = next;\n    }\n    else\n    {\n      var next = edge1.NextInAEL;\n      var prev = edge1.PrevInAEL;\n      edge1.NextInAEL = edge2.NextInAEL;\n      if (edge1.NextInAEL !== null)\n        edge1.NextInAEL.PrevInAEL = edge1;\n      edge1.PrevInAEL = edge2.PrevInAEL;\n      if (edge1.PrevInAEL !== null)\n        edge1.PrevInAEL.NextInAEL = edge1;\n      edge2.NextInAEL = next;\n      if (edge2.NextInAEL !== null)\n        edge2.NextInAEL.PrevInAEL = edge2;\n      edge2.PrevInAEL = prev;\n      if (edge2.PrevInAEL !== null)\n        edge2.PrevInAEL.NextInAEL = edge2;\n    }\n    if (edge1.PrevInAEL === null)\n      this.m_ActiveEdges = edge1;\n    else if (edge2.PrevInAEL === null)\n      this.m_ActiveEdges = edge2;\n  };\n  ClipperLib.Clipper.prototype.SwapPositionsInSEL = function (edge1, edge2)\n  {\n    if (edge1.NextInSEL === null && edge1.PrevInSEL === null)\n      return;\n    if (edge2.NextInSEL === null && edge2.PrevInSEL === null)\n      return;\n    if (edge1.NextInSEL == edge2)\n    {\n      var next = edge2.NextInSEL;\n      if (next !== null)\n        next.PrevInSEL = edge1;\n      var prev = edge1.PrevInSEL;\n      if (prev !== null)\n        prev.NextInSEL = edge2;\n      edge2.PrevInSEL = prev;\n      edge2.NextInSEL = edge1;\n      edge1.PrevInSEL = edge2;\n      edge1.NextInSEL = next;\n    }\n    else if (edge2.NextInSEL == edge1)\n    {\n      var next = edge1.NextInSEL;\n      if (next !== null)\n        next.PrevInSEL = edge2;\n      var prev = edge2.PrevInSEL;\n      if (prev !== null)\n        prev.NextInSEL = edge1;\n      edge1.PrevInSEL = prev;\n      edge1.NextInSEL = edge2;\n      edge2.PrevInSEL = edge1;\n      edge2.NextInSEL = next;\n    }\n    else\n    {\n      var next = edge1.NextInSEL;\n      var prev = edge1.PrevInSEL;\n      edge1.NextInSEL = edge2.NextInSEL;\n      if (edge1.NextInSEL !== null)\n        edge1.NextInSEL.PrevInSEL = edge1;\n      edge1.PrevInSEL = edge2.PrevInSEL;\n      if (edge1.PrevInSEL !== null)\n        edge1.PrevInSEL.NextInSEL = edge1;\n      edge2.NextInSEL = next;\n      if (edge2.NextInSEL !== null)\n        edge2.NextInSEL.PrevInSEL = edge2;\n      edge2.PrevInSEL = prev;\n      if (edge2.PrevInSEL !== null)\n        edge2.PrevInSEL.NextInSEL = edge2;\n    }\n    if (edge1.PrevInSEL === null)\n      this.m_SortedEdges = edge1;\n    else if (edge2.PrevInSEL === null)\n      this.m_SortedEdges = edge2;\n  };\n  ClipperLib.Clipper.prototype.AddLocalMaxPoly = function (e1, e2, pt)\n  {\n    this.AddOutPt(e1, pt);\n    if (e2.WindDelta == 0) this.AddOutPt(e2, pt);\n    if (e1.OutIdx == e2.OutIdx)\n    {\n      e1.OutIdx = -1;\n      e2.OutIdx = -1;\n    }\n    else if (e1.OutIdx < e2.OutIdx)\n      this.AppendPolygon(e1, e2);\n    else\n      this.AppendPolygon(e2, e1);\n  };\n  ClipperLib.Clipper.prototype.AddLocalMinPoly = function (e1, e2, pt)\n  {\n    var result;\n    var e, prevE;\n    if (ClipperLib.ClipperBase.IsHorizontal(e2) || (e1.Dx > e2.Dx))\n    {\n      result = this.AddOutPt(e1, pt);\n      e2.OutIdx = e1.OutIdx;\n      e1.Side = ClipperLib.EdgeSide.esLeft;\n      e2.Side = ClipperLib.EdgeSide.esRight;\n      e = e1;\n      if (e.PrevInAEL == e2)\n        prevE = e2.PrevInAEL;\n      else\n        prevE = e.PrevInAEL;\n    }\n    else\n    {\n      result = this.AddOutPt(e2, pt);\n      e1.OutIdx = e2.OutIdx;\n      e1.Side = ClipperLib.EdgeSide.esRight;\n      e2.Side = ClipperLib.EdgeSide.esLeft;\n      e = e2;\n      if (e.PrevInAEL == e1)\n        prevE = e1.PrevInAEL;\n      else\n        prevE = e.PrevInAEL;\n    }\n    if (prevE !== null && prevE.OutIdx >= 0 && (ClipperLib.Clipper.TopX(prevE, pt.Y) == ClipperLib.Clipper.TopX(e, pt.Y)) && ClipperLib.ClipperBase.SlopesEqual(e, prevE, this.m_UseFullRange) && (e.WindDelta !== 0) && (prevE.WindDelta !== 0))\n    {\n      var outPt = this.AddOutPt(prevE, pt);\n      this.AddJoin(result, outPt, e.Top);\n    }\n    return result;\n  };\n  ClipperLib.Clipper.prototype.CreateOutRec = function ()\n  {\n    var result = new ClipperLib.OutRec();\n    result.Idx = -1;\n    result.IsHole = false;\n    result.IsOpen = false;\n    result.FirstLeft = null;\n    result.Pts = null;\n    result.BottomPt = null;\n    result.PolyNode = null;\n    this.m_PolyOuts.push(result);\n    result.Idx = this.m_PolyOuts.length - 1;\n    return result;\n  };\n  ClipperLib.Clipper.prototype.AddOutPt = function (e, pt)\n  {\n    var ToFront = (e.Side == ClipperLib.EdgeSide.esLeft);\n    if (e.OutIdx < 0)\n    {\n      var outRec = this.CreateOutRec();\n      outRec.IsOpen = (e.WindDelta === 0);\n      var newOp = new ClipperLib.OutPt();\n      outRec.Pts = newOp;\n      newOp.Idx = outRec.Idx;\n      //newOp.Pt = pt;\n      newOp.Pt.X = pt.X;\n      newOp.Pt.Y = pt.Y;\n      newOp.Next = newOp;\n      newOp.Prev = newOp;\n      if (!outRec.IsOpen)\n        this.SetHoleState(e, outRec);\n      if (use_xyz)\n      {\n        if (ClipperLib.IntPoint.op_Equality(pt, e.Bot))\n        {\n          //newOp.Pt = e.Bot;\n          newOp.Pt.X = e.Bot.X;\n          newOp.Pt.Y = e.Bot.Y;\n          newOp.Pt.Z = e.Bot.Z;\n        }\n        else if (ClipperLib.IntPoint.op_Equality(pt, e.Top))\n        {\n          //newOp.Pt = e.Top;\n          newOp.Pt.X = e.Top.X;\n          newOp.Pt.Y = e.Top.Y;\n          newOp.Pt.Z = e.Top.Z;\n        }\n        else\n          this.SetZ(newOp.Pt, e);\n      }\n      e.OutIdx = outRec.Idx;\n      //nb: do this after SetZ !\n      return newOp;\n    }\n    else\n    {\n      var outRec = this.m_PolyOuts[e.OutIdx];\n      //OutRec.Pts is the 'Left-most' point & OutRec.Pts.Prev is the 'Right-most'\n      var op = outRec.Pts;\n      if (ToFront && ClipperLib.IntPoint.op_Equality(pt, op.Pt))\n        return op;\n      else if (!ToFront && ClipperLib.IntPoint.op_Equality(pt, op.Prev.Pt))\n        return op.Prev;\n      var newOp = new ClipperLib.OutPt();\n      newOp.Idx = outRec.Idx;\n      //newOp.Pt = pt;\n      newOp.Pt.X = pt.X;\n      newOp.Pt.Y = pt.Y;\n      newOp.Next = op;\n      newOp.Prev = op.Prev;\n      newOp.Prev.Next = newOp;\n      op.Prev = newOp;\n      if (ToFront)\n        outRec.Pts = newOp;\n      if (use_xyz)\n      {\n        if (ClipperLib.IntPoint.op_Equality(pt, e.Bot))\n        {\n          //newOp.Pt = e.Bot;\n          newOp.Pt.X = e.Bot.X;\n          newOp.Pt.Y = e.Bot.Y;\n          newOp.Pt.Z = e.Bot.Z;\n        }\n        else if (ClipperLib.IntPoint.op_Equality(pt, e.Top))\n        {\n          //newOp.Pt = e.Top;\n          newOp.Pt.X = e.Top.X;\n          newOp.Pt.Y = e.Top.Y;\n          newOp.Pt.Z = e.Top.Z;\n        }\n        else\n          this.SetZ(newOp.Pt, e);\n      }\n      return newOp;\n    }\n  };\n  ClipperLib.Clipper.prototype.SwapPoints = function (pt1, pt2)\n  {\n    var tmp = new ClipperLib.IntPoint(pt1.Value);\n    //pt1.Value = pt2.Value;\n    pt1.Value.X = pt2.Value.X;\n    pt1.Value.Y = pt2.Value.Y;\n    //pt2.Value = tmp;\n    pt2.Value.X = tmp.X;\n    pt2.Value.Y = tmp.Y;\n  };\n  ClipperLib.Clipper.prototype.HorzSegmentsOverlap = function (Pt1a, Pt1b, Pt2a, Pt2b)\n  {\n    //precondition: both segments are horizontal\n    if ((Pt1a.X > Pt2a.X) == (Pt1a.X < Pt2b.X))\n      return true;\n    else if ((Pt1b.X > Pt2a.X) == (Pt1b.X < Pt2b.X))\n      return true;\n    else if ((Pt2a.X > Pt1a.X) == (Pt2a.X < Pt1b.X))\n      return true;\n    else if ((Pt2b.X > Pt1a.X) == (Pt2b.X < Pt1b.X))\n      return true;\n    else if ((Pt1a.X == Pt2a.X) && (Pt1b.X == Pt2b.X))\n      return true;\n    else if ((Pt1a.X == Pt2b.X) && (Pt1b.X == Pt2a.X))\n      return true;\n    else\n      return false;\n  };\n  ClipperLib.Clipper.prototype.InsertPolyPtBetween = function (p1, p2, pt)\n  {\n    var result = new ClipperLib.OutPt();\n    //result.Pt = pt;\n    result.Pt.X = pt.X;\n    result.Pt.Y = pt.Y;\n    if (p2 == p1.Next)\n    {\n      p1.Next = result;\n      p2.Prev = result;\n      result.Next = p2;\n      result.Prev = p1;\n    }\n    else\n    {\n      p2.Next = result;\n      p1.Prev = result;\n      result.Next = p1;\n      result.Prev = p2;\n    }\n    return result;\n  };\n  ClipperLib.Clipper.prototype.SetHoleState = function (e, outRec)\n  {\n    var isHole = false;\n    var e2 = e.PrevInAEL;\n    while (e2 !== null)\n    {\n      if (e2.OutIdx >= 0 && e2.WindDelta != 0)\n      {\n        isHole = !isHole;\n        if (outRec.FirstLeft === null)\n          outRec.FirstLeft = this.m_PolyOuts[e2.OutIdx];\n      }\n      e2 = e2.PrevInAEL;\n    }\n    if (isHole)\n      outRec.IsHole = true;\n  };\n  ClipperLib.Clipper.prototype.GetDx = function (pt1, pt2)\n  {\n    if (pt1.Y == pt2.Y)\n      return ClipperLib.ClipperBase.horizontal;\n    else\n      return (pt2.X - pt1.X) / (pt2.Y - pt1.Y);\n  };\n  ClipperLib.Clipper.prototype.FirstIsBottomPt = function (btmPt1, btmPt2)\n  {\n    var p = btmPt1.Prev;\n    while ((ClipperLib.IntPoint.op_Equality(p.Pt, btmPt1.Pt)) && (p != btmPt1))\n      p = p.Prev;\n    var dx1p = Math.abs(this.GetDx(btmPt1.Pt, p.Pt));\n    p = btmPt1.Next;\n    while ((ClipperLib.IntPoint.op_Equality(p.Pt, btmPt1.Pt)) && (p != btmPt1))\n      p = p.Next;\n    var dx1n = Math.abs(this.GetDx(btmPt1.Pt, p.Pt));\n    p = btmPt2.Prev;\n    while ((ClipperLib.IntPoint.op_Equality(p.Pt, btmPt2.Pt)) && (p != btmPt2))\n      p = p.Prev;\n    var dx2p = Math.abs(this.GetDx(btmPt2.Pt, p.Pt));\n    p = btmPt2.Next;\n    while ((ClipperLib.IntPoint.op_Equality(p.Pt, btmPt2.Pt)) && (p != btmPt2))\n      p = p.Next;\n    var dx2n = Math.abs(this.GetDx(btmPt2.Pt, p.Pt));\n    return (dx1p >= dx2p && dx1p >= dx2n) || (dx1n >= dx2p && dx1n >= dx2n);\n  };\n  ClipperLib.Clipper.prototype.GetBottomPt = function (pp)\n  {\n    var dups = null;\n    var p = pp.Next;\n    while (p != pp)\n    {\n      if (p.Pt.Y > pp.Pt.Y)\n      {\n        pp = p;\n        dups = null;\n      }\n      else if (p.Pt.Y == pp.Pt.Y && p.Pt.X <= pp.Pt.X)\n      {\n        if (p.Pt.X < pp.Pt.X)\n        {\n          dups = null;\n          pp = p;\n        }\n        else\n        {\n          if (p.Next != pp && p.Prev != pp)\n            dups = p;\n        }\n      }\n      p = p.Next;\n    }\n    if (dups !== null)\n    {\n      //there appears to be at least 2 vertices at bottomPt so ...\n      while (dups != p)\n      {\n        if (!this.FirstIsBottomPt(p, dups))\n          pp = dups;\n        dups = dups.Next;\n        while (ClipperLib.IntPoint.op_Inequality(dups.Pt, pp.Pt))\n          dups = dups.Next;\n      }\n    }\n    return pp;\n  };\n  ClipperLib.Clipper.prototype.GetLowermostRec = function (outRec1, outRec2)\n  {\n    //work out which polygon fragment has the correct hole state ...\n    if (outRec1.BottomPt === null)\n      outRec1.BottomPt = this.GetBottomPt(outRec1.Pts);\n    if (outRec2.BottomPt === null)\n      outRec2.BottomPt = this.GetBottomPt(outRec2.Pts);\n    var bPt1 = outRec1.BottomPt;\n    var bPt2 = outRec2.BottomPt;\n    if (bPt1.Pt.Y > bPt2.Pt.Y)\n      return outRec1;\n    else if (bPt1.Pt.Y < bPt2.Pt.Y)\n      return outRec2;\n    else if (bPt1.Pt.X < bPt2.Pt.X)\n      return outRec1;\n    else if (bPt1.Pt.X > bPt2.Pt.X)\n      return outRec2;\n    else if (bPt1.Next == bPt1)\n      return outRec2;\n    else if (bPt2.Next == bPt2)\n      return outRec1;\n    else if (this.FirstIsBottomPt(bPt1, bPt2))\n      return outRec1;\n    else\n      return outRec2;\n  };\n  ClipperLib.Clipper.prototype.Param1RightOfParam2 = function (outRec1, outRec2)\n  {\n    do {\n      outRec1 = outRec1.FirstLeft;\n      if (outRec1 == outRec2)\n        return true;\n    }\n    while (outRec1 !== null)\n    return false;\n  };\n  ClipperLib.Clipper.prototype.GetOutRec = function (idx)\n  {\n    var outrec = this.m_PolyOuts[idx];\n    while (outrec != this.m_PolyOuts[outrec.Idx])\n      outrec = this.m_PolyOuts[outrec.Idx];\n    return outrec;\n  };\n  ClipperLib.Clipper.prototype.AppendPolygon = function (e1, e2)\n  {\n    //get the start and ends of both output polygons ...\n    var outRec1 = this.m_PolyOuts[e1.OutIdx];\n    var outRec2 = this.m_PolyOuts[e2.OutIdx];\n    var holeStateRec;\n    if (this.Param1RightOfParam2(outRec1, outRec2))\n      holeStateRec = outRec2;\n    else if (this.Param1RightOfParam2(outRec2, outRec1))\n      holeStateRec = outRec1;\n    else\n      holeStateRec = this.GetLowermostRec(outRec1, outRec2);\n    var p1_lft = outRec1.Pts;\n    var p1_rt = p1_lft.Prev;\n    var p2_lft = outRec2.Pts;\n    var p2_rt = p2_lft.Prev;\n    var side;\n    //join e2 poly onto e1 poly and delete pointers to e2 ...\n    if (e1.Side == ClipperLib.EdgeSide.esLeft)\n    {\n      if (e2.Side == ClipperLib.EdgeSide.esLeft)\n      {\n        //z y x a b c\n        this.ReversePolyPtLinks(p2_lft);\n        p2_lft.Next = p1_lft;\n        p1_lft.Prev = p2_lft;\n        p1_rt.Next = p2_rt;\n        p2_rt.Prev = p1_rt;\n        outRec1.Pts = p2_rt;\n      }\n      else\n      {\n        //x y z a b c\n        p2_rt.Next = p1_lft;\n        p1_lft.Prev = p2_rt;\n        p2_lft.Prev = p1_rt;\n        p1_rt.Next = p2_lft;\n        outRec1.Pts = p2_lft;\n      }\n      side = ClipperLib.EdgeSide.esLeft;\n    }\n    else\n    {\n      if (e2.Side == ClipperLib.EdgeSide.esRight)\n      {\n        //a b c z y x\n        this.ReversePolyPtLinks(p2_lft);\n        p1_rt.Next = p2_rt;\n        p2_rt.Prev = p1_rt;\n        p2_lft.Next = p1_lft;\n        p1_lft.Prev = p2_lft;\n      }\n      else\n      {\n        //a b c x y z\n        p1_rt.Next = p2_lft;\n        p2_lft.Prev = p1_rt;\n        p1_lft.Prev = p2_rt;\n        p2_rt.Next = p1_lft;\n      }\n      side = ClipperLib.EdgeSide.esRight;\n    }\n    outRec1.BottomPt = null;\n    if (holeStateRec == outRec2)\n    {\n      if (outRec2.FirstLeft != outRec1)\n        outRec1.FirstLeft = outRec2.FirstLeft;\n      outRec1.IsHole = outRec2.IsHole;\n    }\n    outRec2.Pts = null;\n    outRec2.BottomPt = null;\n    outRec2.FirstLeft = outRec1;\n    var OKIdx = e1.OutIdx;\n    var ObsoleteIdx = e2.OutIdx;\n    e1.OutIdx = -1;\n    //nb: safe because we only get here via AddLocalMaxPoly\n    e2.OutIdx = -1;\n    var e = this.m_ActiveEdges;\n    while (e !== null)\n    {\n      if (e.OutIdx == ObsoleteIdx)\n      {\n        e.OutIdx = OKIdx;\n        e.Side = side;\n        break;\n      }\n      e = e.NextInAEL;\n    }\n    outRec2.Idx = outRec1.Idx;\n  };\n  ClipperLib.Clipper.prototype.ReversePolyPtLinks = function (pp)\n  {\n    if (pp === null)\n      return;\n    var pp1;\n    var pp2;\n    pp1 = pp;\n    do {\n      pp2 = pp1.Next;\n      pp1.Next = pp1.Prev;\n      pp1.Prev = pp2;\n      pp1 = pp2;\n    }\n    while (pp1 != pp)\n  };\n  ClipperLib.Clipper.SwapSides = function (edge1, edge2)\n  {\n    var side = edge1.Side;\n    edge1.Side = edge2.Side;\n    edge2.Side = side;\n  };\n  ClipperLib.Clipper.SwapPolyIndexes = function (edge1, edge2)\n  {\n    var outIdx = edge1.OutIdx;\n    edge1.OutIdx = edge2.OutIdx;\n    edge2.OutIdx = outIdx;\n  };\n  ClipperLib.Clipper.prototype.IntersectEdges = function (e1, e2, pt, protect)\n  {\n    //e1 will be to the left of e2 BELOW the intersection. Therefore e1 is before\n    //e2 in AEL except when e1 is being inserted at the intersection point ...\n    var e1stops = !protect && e1.NextInLML === null &&\n      e1.Top.X == pt.X && e1.Top.Y == pt.Y;\n    var e2stops = !protect && e2.NextInLML === null &&\n      e2.Top.X == pt.X && e2.Top.Y == pt.Y;\n    var e1Contributing = (e1.OutIdx >= 0);\n    var e2Contributing = (e2.OutIdx >= 0);\n    if (use_lines)\n    {\n      //if either edge is on an OPEN path ...\n      if (e1.WindDelta === 0 || e2.WindDelta === 0)\n      {\n        //ignore subject-subject open path intersections UNLESS they\n        //are both open paths, AND they are both 'contributing maximas' ...\n        if (e1.WindDelta === 0 && e2.WindDelta === 0)\n        {\n          if ((e1stops || e2stops) && e1Contributing && e2Contributing)\n            this.AddLocalMaxPoly(e1, e2, pt);\n        }\n        //if intersecting a subj line with a subj poly ...\n        else if (e1.PolyTyp == e2.PolyTyp &&\n          e1.WindDelta != e2.WindDelta && this.m_ClipType == ClipperLib.ClipType.ctUnion)\n        {\n          if (e1.WindDelta === 0)\n          {\n            if (e2Contributing)\n            {\n              this.AddOutPt(e1, pt);\n              if (e1Contributing)\n                e1.OutIdx = -1;\n            }\n          }\n          else\n          {\n            if (e1Contributing)\n            {\n              this.AddOutPt(e2, pt);\n              if (e2Contributing)\n                e2.OutIdx = -1;\n            }\n          }\n        }\n        else if (e1.PolyTyp != e2.PolyTyp)\n        {\n          if ((e1.WindDelta === 0) && Math.abs(e2.WindCnt) == 1 &&\n            (this.m_ClipType != ClipperLib.ClipType.ctUnion || e2.WindCnt2 === 0))\n          {\n            this.AddOutPt(e1, pt);\n            if (e1Contributing)\n              e1.OutIdx = -1;\n          }\n          else if ((e2.WindDelta === 0) && (Math.abs(e1.WindCnt) == 1) &&\n            (this.m_ClipType != ClipperLib.ClipType.ctUnion || e1.WindCnt2 === 0))\n          {\n            this.AddOutPt(e2, pt);\n            if (e2Contributing)\n              e2.OutIdx = -1;\n          }\n        }\n        if (e1stops)\n          if (e1.OutIdx < 0)\n            this.DeleteFromAEL(e1);\n          else\n            ClipperLib.Error(\"Error intersecting polylines\");\n        if (e2stops)\n          if (e2.OutIdx < 0)\n            this.DeleteFromAEL(e2);\n          else\n            ClipperLib.Error(\"Error intersecting polylines\");\n        return;\n      }\n    }\n    //update winding counts...\n    //assumes that e1 will be to the Right of e2 ABOVE the intersection\n    if (e1.PolyTyp == e2.PolyTyp)\n    {\n      if (this.IsEvenOddFillType(e1))\n      {\n        var oldE1WindCnt = e1.WindCnt;\n        e1.WindCnt = e2.WindCnt;\n        e2.WindCnt = oldE1WindCnt;\n      }\n      else\n      {\n        if (e1.WindCnt + e2.WindDelta === 0)\n          e1.WindCnt = -e1.WindCnt;\n        else\n          e1.WindCnt += e2.WindDelta;\n        if (e2.WindCnt - e1.WindDelta === 0)\n          e2.WindCnt = -e2.WindCnt;\n        else\n          e2.WindCnt -= e1.WindDelta;\n      }\n    }\n    else\n    {\n      if (!this.IsEvenOddFillType(e2))\n        e1.WindCnt2 += e2.WindDelta;\n      else\n        e1.WindCnt2 = (e1.WindCnt2 === 0) ? 1 : 0;\n      if (!this.IsEvenOddFillType(e1))\n        e2.WindCnt2 -= e1.WindDelta;\n      else\n        e2.WindCnt2 = (e2.WindCnt2 === 0) ? 1 : 0;\n    }\n    var e1FillType, e2FillType, e1FillType2, e2FillType2;\n    if (e1.PolyTyp == ClipperLib.PolyType.ptSubject)\n    {\n      e1FillType = this.m_SubjFillType;\n      e1FillType2 = this.m_ClipFillType;\n    }\n    else\n    {\n      e1FillType = this.m_ClipFillType;\n      e1FillType2 = this.m_SubjFillType;\n    }\n    if (e2.PolyTyp == ClipperLib.PolyType.ptSubject)\n    {\n      e2FillType = this.m_SubjFillType;\n      e2FillType2 = this.m_ClipFillType;\n    }\n    else\n    {\n      e2FillType = this.m_ClipFillType;\n      e2FillType2 = this.m_SubjFillType;\n    }\n    var e1Wc, e2Wc;\n    switch (e1FillType)\n    {\n    case ClipperLib.PolyFillType.pftPositive:\n      e1Wc = e1.WindCnt;\n      break;\n    case ClipperLib.PolyFillType.pftNegative:\n      e1Wc = -e1.WindCnt;\n      break;\n    default:\n      e1Wc = Math.abs(e1.WindCnt);\n      break;\n    }\n    switch (e2FillType)\n    {\n    case ClipperLib.PolyFillType.pftPositive:\n      e2Wc = e2.WindCnt;\n      break;\n    case ClipperLib.PolyFillType.pftNegative:\n      e2Wc = -e2.WindCnt;\n      break;\n    default:\n      e2Wc = Math.abs(e2.WindCnt);\n      break;\n    }\n    if (e1Contributing && e2Contributing)\n    {\n      if (e1stops || e2stops || (e1Wc !== 0 && e1Wc != 1) || (e2Wc !== 0 && e2Wc != 1) ||\n        (e1.PolyTyp != e2.PolyTyp && this.m_ClipType != ClipperLib.ClipType.ctXor))\n        this.AddLocalMaxPoly(e1, e2, pt);\n      else\n      {\n        this.AddOutPt(e1, pt);\n        this.AddOutPt(e2, pt);\n        ClipperLib.Clipper.SwapSides(e1, e2);\n        ClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n      }\n    }\n    else if (e1Contributing)\n    {\n      if (e2Wc === 0 || e2Wc == 1)\n      {\n        this.AddOutPt(e1, pt);\n        ClipperLib.Clipper.SwapSides(e1, e2);\n        ClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n      }\n    }\n    else if (e2Contributing)\n    {\n      if (e1Wc === 0 || e1Wc == 1)\n      {\n        this.AddOutPt(e2, pt);\n        ClipperLib.Clipper.SwapSides(e1, e2);\n        ClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n      }\n    }\n    else if ((e1Wc === 0 || e1Wc == 1) &&\n      (e2Wc === 0 || e2Wc == 1) && !e1stops && !e2stops)\n    {\n      //neither edge is currently contributing ...\n      var e1Wc2, e2Wc2;\n      switch (e1FillType2)\n      {\n      case ClipperLib.PolyFillType.pftPositive:\n        e1Wc2 = e1.WindCnt2;\n        break;\n      case ClipperLib.PolyFillType.pftNegative:\n        e1Wc2 = -e1.WindCnt2;\n        break;\n      default:\n        e1Wc2 = Math.abs(e1.WindCnt2);\n        break;\n      }\n      switch (e2FillType2)\n      {\n      case ClipperLib.PolyFillType.pftPositive:\n        e2Wc2 = e2.WindCnt2;\n        break;\n      case ClipperLib.PolyFillType.pftNegative:\n        e2Wc2 = -e2.WindCnt2;\n        break;\n      default:\n        e2Wc2 = Math.abs(e2.WindCnt2);\n        break;\n      }\n      if (e1.PolyTyp != e2.PolyTyp)\n        this.AddLocalMinPoly(e1, e2, pt);\n      else if (e1Wc == 1 && e2Wc == 1)\n        switch (this.m_ClipType)\n        {\n        case ClipperLib.ClipType.ctIntersection:\n          if (e1Wc2 > 0 && e2Wc2 > 0)\n            this.AddLocalMinPoly(e1, e2, pt);\n          break;\n        case ClipperLib.ClipType.ctUnion:\n          if (e1Wc2 <= 0 && e2Wc2 <= 0)\n            this.AddLocalMinPoly(e1, e2, pt);\n          break;\n        case ClipperLib.ClipType.ctDifference:\n          if (((e1.PolyTyp == ClipperLib.PolyType.ptClip) && (e1Wc2 > 0) && (e2Wc2 > 0)) ||\n            ((e1.PolyTyp == ClipperLib.PolyType.ptSubject) && (e1Wc2 <= 0) && (e2Wc2 <= 0)))\n            this.AddLocalMinPoly(e1, e2, pt);\n          break;\n        case ClipperLib.ClipType.ctXor:\n          this.AddLocalMinPoly(e1, e2, pt);\n          break;\n        }\n      else\n        ClipperLib.Clipper.SwapSides(e1, e2);\n    }\n    if ((e1stops != e2stops) &&\n      ((e1stops && (e1.OutIdx >= 0)) || (e2stops && (e2.OutIdx >= 0))))\n    {\n      ClipperLib.Clipper.SwapSides(e1, e2);\n      ClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n    }\n    //finally, delete any non-contributing maxima edges  ...\n    if (e1stops)\n      this.DeleteFromAEL(e1);\n    if (e2stops)\n      this.DeleteFromAEL(e2);\n  };\n  ClipperLib.Clipper.prototype.DeleteFromAEL = function (e)\n  {\n    var AelPrev = e.PrevInAEL;\n    var AelNext = e.NextInAEL;\n    if (AelPrev === null && AelNext === null && (e != this.m_ActiveEdges))\n      return;\n    //already deleted\n    if (AelPrev !== null)\n      AelPrev.NextInAEL = AelNext;\n    else\n      this.m_ActiveEdges = AelNext;\n    if (AelNext !== null)\n      AelNext.PrevInAEL = AelPrev;\n    e.NextInAEL = null;\n    e.PrevInAEL = null;\n  };\n  ClipperLib.Clipper.prototype.DeleteFromSEL = function (e)\n  {\n    var SelPrev = e.PrevInSEL;\n    var SelNext = e.NextInSEL;\n    if (SelPrev === null && SelNext === null && (e != this.m_SortedEdges))\n      return;\n    //already deleted\n    if (SelPrev !== null)\n      SelPrev.NextInSEL = SelNext;\n    else\n      this.m_SortedEdges = SelNext;\n    if (SelNext !== null)\n      SelNext.PrevInSEL = SelPrev;\n    e.NextInSEL = null;\n    e.PrevInSEL = null;\n  };\n  ClipperLib.Clipper.prototype.UpdateEdgeIntoAEL = function (e)\n  {\n    if (e.NextInLML === null)\n      ClipperLib.Error(\"UpdateEdgeIntoAEL: invalid call\");\n    var AelPrev = e.PrevInAEL;\n    var AelNext = e.NextInAEL;\n    e.NextInLML.OutIdx = e.OutIdx;\n    if (AelPrev !== null)\n      AelPrev.NextInAEL = e.NextInLML;\n    else\n      this.m_ActiveEdges = e.NextInLML;\n    if (AelNext !== null)\n      AelNext.PrevInAEL = e.NextInLML;\n    e.NextInLML.Side = e.Side;\n    e.NextInLML.WindDelta = e.WindDelta;\n    e.NextInLML.WindCnt = e.WindCnt;\n    e.NextInLML.WindCnt2 = e.WindCnt2;\n    e = e.NextInLML;\n    //    e.Curr = e.Bot;\n    e.Curr.X = e.Bot.X;\n    e.Curr.Y = e.Bot.Y;\n    e.PrevInAEL = AelPrev;\n    e.NextInAEL = AelNext;\n    if (!ClipperLib.ClipperBase.IsHorizontal(e))\n      this.InsertScanbeam(e.Top.Y);\n    return e;\n  };\n  ClipperLib.Clipper.prototype.ProcessHorizontals = function (isTopOfScanbeam)\n  {\n    var horzEdge = this.m_SortedEdges;\n    while (horzEdge !== null)\n    {\n      this.DeleteFromSEL(horzEdge);\n      this.ProcessHorizontal(horzEdge, isTopOfScanbeam);\n      horzEdge = this.m_SortedEdges;\n    }\n  };\n  ClipperLib.Clipper.prototype.GetHorzDirection = function (HorzEdge, $var)\n  {\n    if (HorzEdge.Bot.X < HorzEdge.Top.X)\n    {\n        $var.Left = HorzEdge.Bot.X;\n        $var.Right = HorzEdge.Top.X;\n        $var.Dir = ClipperLib.Direction.dLeftToRight;\n    }\n    else\n    {\n        $var.Left = HorzEdge.Top.X;\n        $var.Right = HorzEdge.Bot.X;\n        $var.Dir = ClipperLib.Direction.dRightToLeft;\n    }\n  };\n  ClipperLib.Clipper.prototype.PrepareHorzJoins = function (horzEdge, isTopOfScanbeam)\n  {\n    //get the last Op for this horizontal edge\n    //the point may be anywhere along the horizontal ...\n    var outPt = this.m_PolyOuts[horzEdge.OutIdx].Pts;\n    if (horzEdge.Side != ClipperLib.EdgeSide.esLeft)\n      outPt = outPt.Prev;\n    //First, match up overlapping horizontal edges (eg when one polygon's\n    //intermediate horz edge overlaps an intermediate horz edge of another, or\n    //when one polygon sits on top of another) ...\n    //for (var i = 0, ilen = this.m_GhostJoins.length; i < ilen; ++i) {\n    //  var j = this.m_GhostJoins[i];\n    //  if (this.HorzSegmentsOverlap(j.OutPt1.Pt, j.OffPt, horzEdge.Bot, horzEdge.Top))\n    //    this.AddJoin(j.OutPt1, outPt, j.OffPt);\n    //}\n\n    //Also, since horizontal edges at the top of one SB are often removed from\n    //the AEL before we process the horizontal edges at the bottom of the next,\n    //we need to create 'ghost' Join records of 'contrubuting' horizontals that\n    //we can compare with horizontals at the bottom of the next SB.\n    if (isTopOfScanbeam)\n      if (ClipperLib.IntPoint.op_Equality(outPt.Pt, horzEdge.Top))\n        this.AddGhostJoin(outPt, horzEdge.Bot);\n      else\n        this.AddGhostJoin(outPt, horzEdge.Top);\n  };\n  ClipperLib.Clipper.prototype.ProcessHorizontal = function (horzEdge, isTopOfScanbeam)\n  {\n    var $var = {Dir: null, Left: null, Right: null};\n    this.GetHorzDirection(horzEdge, $var);\n    var dir = $var.Dir;\n    var horzLeft = $var.Left;\n    var horzRight = $var.Right;\n\n    var eLastHorz = horzEdge,\n      eMaxPair = null;\n    while (eLastHorz.NextInLML !== null && ClipperLib.ClipperBase.IsHorizontal(eLastHorz.NextInLML))\n      eLastHorz = eLastHorz.NextInLML;\n    if (eLastHorz.NextInLML === null)\n      eMaxPair = this.GetMaximaPair(eLastHorz);\n    for (;;)\n    {\n      var IsLastHorz = (horzEdge == eLastHorz);\n      var e = this.GetNextInAEL(horzEdge, dir);\n      while (e !== null)\n      {\n        //Break if we've got to the end of an intermediate horizontal edge ...\n        //nb: Smaller Dx's are to the right of larger Dx's ABOVE the horizontal.\n        if (e.Curr.X == horzEdge.Top.X && horzEdge.NextInLML !== null && e.Dx < horzEdge.NextInLML.Dx)\n          break;\n        var eNext = this.GetNextInAEL(e, dir);\n        //saves eNext for later\n        if ((dir == ClipperLib.Direction.dLeftToRight && e.Curr.X <= horzRight) || (dir == ClipperLib.Direction.dRightToLeft && e.Curr.X >= horzLeft))\n        {\n\n          if (horzEdge.OutIdx >= 0 && horzEdge.WindDelta != 0)\n            this.PrepareHorzJoins(horzEdge, isTopOfScanbeam);\n\n          //so far we're still in range of the horizontal Edge  but make sure\n          //we're at the last of consec. horizontals when matching with eMaxPair\n          if (e == eMaxPair && IsLastHorz)\n          {\n            if (dir == ClipperLib.Direction.dLeftToRight)\n              this.IntersectEdges(horzEdge, e, e.Top, false);\n            else\n              this.IntersectEdges(e, horzEdge, e.Top, false);\n            if (eMaxPair.OutIdx >= 0)\n              ClipperLib.Error(\"ProcessHorizontal error\");\n            return;\n          }\n          else if (dir == ClipperLib.Direction.dLeftToRight)\n          {\n            var Pt = new ClipperLib.IntPoint(e.Curr.X, horzEdge.Curr.Y);\n            this.IntersectEdges(horzEdge, e, Pt, true);\n          }\n          else\n          {\n            var Pt = new ClipperLib.IntPoint(e.Curr.X, horzEdge.Curr.Y);\n            this.IntersectEdges(e, horzEdge, Pt, true);\n          }\n          this.SwapPositionsInAEL(horzEdge, e);\n        }\n        else if ((dir == ClipperLib.Direction.dLeftToRight && e.Curr.X >= horzRight) || (dir == ClipperLib.Direction.dRightToLeft && e.Curr.X <= horzLeft))\n          break;\n        e = eNext;\n      }\n      //end while\n      if (horzEdge.OutIdx >= 0 && horzEdge.WindDelta !== 0)\n        this.PrepareHorzJoins(horzEdge, isTopOfScanbeam);\n      if (horzEdge.NextInLML !== null && ClipperLib.ClipperBase.IsHorizontal(horzEdge.NextInLML))\n      {\n        horzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n        if (horzEdge.OutIdx >= 0)\n          this.AddOutPt(horzEdge, horzEdge.Bot);\n          \n          var $var = {Dir: dir, Left: horzLeft, Right: horzRight};\n          this.GetHorzDirection(horzEdge, $var);\n          dir = $var.Dir;\n          horzLeft = $var.Left;\n          horzRight = $var.Right;\n      }\n      else\n        break;\n    }\n    //end for (;;)\n    if (horzEdge.NextInLML !== null)\n    {\n      if (horzEdge.OutIdx >= 0)\n      {\n        var op1 = this.AddOutPt(horzEdge, horzEdge.Top);\n        horzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n        if (horzEdge.WindDelta === 0)\n          return;\n        //nb: HorzEdge is no longer horizontal here\n        var ePrev = horzEdge.PrevInAEL;\n        var eNext = horzEdge.NextInAEL;\n        if (ePrev !== null && ePrev.Curr.X == horzEdge.Bot.X &&\n          ePrev.Curr.Y == horzEdge.Bot.Y && ePrev.WindDelta !== 0 &&\n          (ePrev.OutIdx >= 0 && ePrev.Curr.Y > ePrev.Top.Y &&\n            ClipperLib.ClipperBase.SlopesEqual(horzEdge, ePrev, this.m_UseFullRange)))\n        {\n          var op2 = this.AddOutPt(ePrev, horzEdge.Bot);\n          this.AddJoin(op1, op2, horzEdge.Top);\n        }\n        else if (eNext !== null && eNext.Curr.X == horzEdge.Bot.X &&\n          eNext.Curr.Y == horzEdge.Bot.Y && eNext.WindDelta !== 0 &&\n          eNext.OutIdx >= 0 && eNext.Curr.Y > eNext.Top.Y &&\n          ClipperLib.ClipperBase.SlopesEqual(horzEdge, eNext, this.m_UseFullRange))\n        {\n          var op2 = this.AddOutPt(eNext, horzEdge.Bot);\n          this.AddJoin(op1, op2, horzEdge.Top);\n        }\n      }\n      else horzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n    }\n    else if (eMaxPair !== null)\n    {\n      if (eMaxPair.OutIdx >= 0)\n      {\n        if (dir == ClipperLib.Direction.dLeftToRight)\n          this.IntersectEdges(horzEdge, eMaxPair, horzEdge.Top, false);\n        else\n          this.IntersectEdges(eMaxPair, horzEdge, horzEdge.Top, false);\n        if (eMaxPair.OutIdx >= 0)\n          ClipperLib.Error(\"ProcessHorizontal error\");\n      }\n      else\n      {\n        this.DeleteFromAEL(horzEdge);\n        this.DeleteFromAEL(eMaxPair);\n      }\n    }\n    else\n    {\n      if (horzEdge.OutIdx >= 0)\n        this.AddOutPt(horzEdge, horzEdge.Top);\n      this.DeleteFromAEL(horzEdge);\n    }\n  };\n  ClipperLib.Clipper.prototype.GetNextInAEL = function (e, Direction)\n  {\n    return Direction == ClipperLib.Direction.dLeftToRight ? e.NextInAEL : e.PrevInAEL;\n  };\n  ClipperLib.Clipper.prototype.IsMinima = function (e)\n  {\n    return e !== null && (e.Prev.NextInLML != e) && (e.Next.NextInLML != e);\n  };\n  ClipperLib.Clipper.prototype.IsMaxima = function (e, Y)\n  {\n    return (e !== null && e.Top.Y == Y && e.NextInLML === null);\n  };\n  ClipperLib.Clipper.prototype.IsIntermediate = function (e, Y)\n  {\n    return (e.Top.Y == Y && e.NextInLML !== null);\n  };\n  ClipperLib.Clipper.prototype.GetMaximaPair = function (e)\n  {\n    var result = null;\n    if ((ClipperLib.IntPoint.op_Equality(e.Next.Top, e.Top)) && e.Next.NextInLML === null)\n      result = e.Next;\n    else if ((ClipperLib.IntPoint.op_Equality(e.Prev.Top, e.Top)) && e.Prev.NextInLML === null)\n      result = e.Prev;\n    if (result !== null && (result.OutIdx == -2 || (result.NextInAEL == result.PrevInAEL && !ClipperLib.ClipperBase.IsHorizontal(result))))\n      return null;\n    return result;\n  };\n  ClipperLib.Clipper.prototype.ProcessIntersections = function (botY, topY)\n  {\n    if (this.m_ActiveEdges == null)\n      return true;\n    try\n    {\n      this.BuildIntersectList(botY, topY);\n      if (this.m_IntersectList.length == 0)\n        return true;\n      if (this.m_IntersectList.length == 1 || this.FixupIntersectionOrder())\n        this.ProcessIntersectList();\n      else\n        return false;\n    }\n    catch ($$e2)\n    {\n      this.m_SortedEdges = null;\n      this.m_IntersectList.length = 0;\n      ClipperLib.Error(\"ProcessIntersections error\");\n    }\n    this.m_SortedEdges = null;\n    return true;\n  };\n  ClipperLib.Clipper.prototype.BuildIntersectList = function (botY, topY)\n  {\n    if (this.m_ActiveEdges === null)\n      return;\n    //prepare for sorting ...\n    var e = this.m_ActiveEdges;\n    //console.log(JSON.stringify(JSON.decycle( e )));\n    this.m_SortedEdges = e;\n    while (e !== null)\n    {\n      e.PrevInSEL = e.PrevInAEL;\n      e.NextInSEL = e.NextInAEL;\n      e.Curr.X = ClipperLib.Clipper.TopX(e, topY);\n      e = e.NextInAEL;\n    }\n    //bubblesort ...\n    var isModified = true;\n    while (isModified && this.m_SortedEdges !== null)\n    {\n      isModified = false;\n      e = this.m_SortedEdges;\n      while (e.NextInSEL !== null)\n      {\n        var eNext = e.NextInSEL;\n        var pt = new ClipperLib.IntPoint();\n        //console.log(\"e.Curr.X: \" + e.Curr.X + \" eNext.Curr.X\" + eNext.Curr.X);\n        if (e.Curr.X > eNext.Curr.X)\n        {\n          if (!this.IntersectPoint(e, eNext, pt) && e.Curr.X > eNext.Curr.X + 1)\n          {\n            //console.log(\"e.Curr.X: \"+JSON.stringify(JSON.decycle( e.Curr.X )));\n            //console.log(\"eNext.Curr.X+1: \"+JSON.stringify(JSON.decycle( eNext.Curr.X+1)));\n            ClipperLib.Error(\"Intersection error\");\n          }\n          if (pt.Y > botY)\n          {\n            pt.Y = botY;\n            if (Math.abs(e.Dx) > Math.abs(eNext.Dx))\n              pt.X = ClipperLib.Clipper.TopX(eNext, botY);\n            else\n              pt.X = ClipperLib.Clipper.TopX(e, botY);\n          }\n          var newNode = new ClipperLib.IntersectNode();\n          newNode.Edge1 = e;\n          newNode.Edge2 = eNext;\n          //newNode.Pt = pt;\n          newNode.Pt.X = pt.X;\n          newNode.Pt.Y = pt.Y;\n          this.m_IntersectList.push(newNode);\n          this.SwapPositionsInSEL(e, eNext);\n          isModified = true;\n        }\n        else\n          e = eNext;\n      }\n      if (e.PrevInSEL !== null)\n        e.PrevInSEL.NextInSEL = null;\n      else\n        break;\n    }\n    this.m_SortedEdges = null;\n  };\n  ClipperLib.Clipper.prototype.EdgesAdjacent = function (inode)\n  {\n    return (inode.Edge1.NextInSEL == inode.Edge2) || (inode.Edge1.PrevInSEL == inode.Edge2);\n  };\n  ClipperLib.Clipper.IntersectNodeSort = function (node1, node2)\n  {\n    //the following typecast is safe because the differences in Pt.Y will\n    //be limited to the height of the scanbeam.\n    return (node2.Pt.Y - node1.Pt.Y);\n  };\n  ClipperLib.Clipper.prototype.FixupIntersectionOrder = function ()\n  {\n    //pre-condition: intersections are sorted bottom-most first.\n    //Now it's crucial that intersections are made only between adjacent edges,\n    //so to ensure this the order of intersections may need adjusting ...\n    this.m_IntersectList.sort(this.m_IntersectNodeComparer);\n    this.CopyAELToSEL();\n    var cnt = this.m_IntersectList.length;\n    for (var i = 0; i < cnt; i++)\n    {\n      if (!this.EdgesAdjacent(this.m_IntersectList[i]))\n      {\n        var j = i + 1;\n        while (j < cnt && !this.EdgesAdjacent(this.m_IntersectList[j]))\n          j++;\n        if (j == cnt)\n          return false;\n        var tmp = this.m_IntersectList[i];\n        this.m_IntersectList[i] = this.m_IntersectList[j];\n        this.m_IntersectList[j] = tmp;\n      }\n      this.SwapPositionsInSEL(this.m_IntersectList[i].Edge1, this.m_IntersectList[i].Edge2);\n    }\n    return true;\n  };\n  ClipperLib.Clipper.prototype.ProcessIntersectList = function ()\n  {\n    for (var i = 0, ilen = this.m_IntersectList.length; i < ilen; i++)\n    {\n      var iNode = this.m_IntersectList[i];\n      this.IntersectEdges(iNode.Edge1, iNode.Edge2, iNode.Pt, true);\n      this.SwapPositionsInAEL(iNode.Edge1, iNode.Edge2);\n    }\n    this.m_IntersectList.length = 0;\n  };\n  /*\n  --------------------------------\n  Round speedtest: http://jsperf.com/fastest-round\n  --------------------------------\n  */\n  var R1 = function (a)\n  {\n    return a < 0 ? Math.ceil(a - 0.5) : Math.round(a)\n  };\n  var R2 = function (a)\n  {\n    return a < 0 ? Math.ceil(a - 0.5) : Math.floor(a + 0.5)\n  };\n  var R3 = function (a)\n  {\n    return a < 0 ? -Math.round(Math.abs(a)) : Math.round(a)\n  };\n  var R4 = function (a)\n  {\n    if (a < 0)\n    {\n      a -= 0.5;\n      return a < -2147483648 ? Math.ceil(a) : a | 0;\n    }\n    else\n    {\n      a += 0.5;\n      return a > 2147483647 ? Math.floor(a) : a | 0;\n    }\n  };\n  if (browser.msie) ClipperLib.Clipper.Round = R1;\n  else if (browser.chromium) ClipperLib.Clipper.Round = R3;\n  else if (browser.safari) ClipperLib.Clipper.Round = R4;\n  else ClipperLib.Clipper.Round = R2; // eg. browser.chrome || browser.firefox || browser.opera\n  ClipperLib.Clipper.TopX = function (edge, currentY)\n  {\n    //if (edge.Bot == edge.Curr) alert (\"edge.Bot = edge.Curr\");\n    //if (edge.Bot == edge.Top) alert (\"edge.Bot = edge.Top\");\n    if (currentY == edge.Top.Y)\n      return edge.Top.X;\n    return edge.Bot.X + ClipperLib.Clipper.Round(edge.Dx * (currentY - edge.Bot.Y));\n  };\n  ClipperLib.Clipper.prototype.IntersectPoint = function (edge1, edge2, ip)\n  {\n    ip.X = 0;\n    ip.Y = 0;\n    var b1, b2;\n    //nb: with very large coordinate values, it's possible for SlopesEqual() to \n    //return false but for the edge.Dx value be equal due to double precision rounding.\n    if (ClipperLib.ClipperBase.SlopesEqual(edge1, edge2, this.m_UseFullRange) || edge1.Dx == edge2.Dx)\n    {\n      if (edge2.Bot.Y > edge1.Bot.Y)\n      {\n        ip.X = edge2.Bot.X;\n        ip.Y = edge2.Bot.Y;\n      }\n      else\n      {\n        ip.X = edge1.Bot.X;\n        ip.Y = edge1.Bot.Y;\n      }\n      return false;\n    }\n    else if (edge1.Delta.X === 0)\n    {\n      ip.X = edge1.Bot.X;\n      if (ClipperLib.ClipperBase.IsHorizontal(edge2))\n      {\n        ip.Y = edge2.Bot.Y;\n      }\n      else\n      {\n        b2 = edge2.Bot.Y - (edge2.Bot.X / edge2.Dx);\n        ip.Y = ClipperLib.Clipper.Round(ip.X / edge2.Dx + b2);\n      }\n    }\n    else if (edge2.Delta.X === 0)\n    {\n      ip.X = edge2.Bot.X;\n      if (ClipperLib.ClipperBase.IsHorizontal(edge1))\n      {\n        ip.Y = edge1.Bot.Y;\n      }\n      else\n      {\n        b1 = edge1.Bot.Y - (edge1.Bot.X / edge1.Dx);\n        ip.Y = ClipperLib.Clipper.Round(ip.X / edge1.Dx + b1);\n      }\n    }\n    else\n    {\n      b1 = edge1.Bot.X - edge1.Bot.Y * edge1.Dx;\n      b2 = edge2.Bot.X - edge2.Bot.Y * edge2.Dx;\n      var q = (b2 - b1) / (edge1.Dx - edge2.Dx);\n      ip.Y = ClipperLib.Clipper.Round(q);\n      if (Math.abs(edge1.Dx) < Math.abs(edge2.Dx))\n        ip.X = ClipperLib.Clipper.Round(edge1.Dx * q + b1);\n      else\n        ip.X = ClipperLib.Clipper.Round(edge2.Dx * q + b2);\n    }\n    if (ip.Y < edge1.Top.Y || ip.Y < edge2.Top.Y)\n    {\n      if (edge1.Top.Y > edge2.Top.Y)\n      {\n        ip.Y = edge1.Top.Y;\n        ip.X = ClipperLib.Clipper.TopX(edge2, edge1.Top.Y);\n        return ip.X < edge1.Top.X;\n      }\n      else\n        ip.Y = edge2.Top.Y;\n      if (Math.abs(edge1.Dx) < Math.abs(edge2.Dx))\n        ip.X = ClipperLib.Clipper.TopX(edge1, ip.Y);\n      else\n        ip.X = ClipperLib.Clipper.TopX(edge2, ip.Y);\n    }\n    return true;\n  };\n  ClipperLib.Clipper.prototype.ProcessEdgesAtTopOfScanbeam = function (topY)\n  {\n    var e = this.m_ActiveEdges;\n    while (e !== null)\n    {\n      //1. process maxima, treating them as if they're 'bent' horizontal edges,\n      //   but exclude maxima with horizontal edges. nb: e can't be a horizontal.\n      var IsMaximaEdge = this.IsMaxima(e, topY);\n      if (IsMaximaEdge)\n      {\n        var eMaxPair = this.GetMaximaPair(e);\n        IsMaximaEdge = (eMaxPair === null || !ClipperLib.ClipperBase.IsHorizontal(eMaxPair));\n      }\n      if (IsMaximaEdge)\n      {\n        var ePrev = e.PrevInAEL;\n        this.DoMaxima(e);\n        if (ePrev === null)\n          e = this.m_ActiveEdges;\n        else\n          e = ePrev.NextInAEL;\n      }\n      else\n      {\n        //2. promote horizontal edges, otherwise update Curr.X and Curr.Y ...\n        if (this.IsIntermediate(e, topY) && ClipperLib.ClipperBase.IsHorizontal(e.NextInLML))\n        {\n          e = this.UpdateEdgeIntoAEL(e);\n          if (e.OutIdx >= 0)\n            this.AddOutPt(e, e.Bot);\n          this.AddEdgeToSEL(e);\n        }\n        else\n        {\n          e.Curr.X = ClipperLib.Clipper.TopX(e, topY);\n          e.Curr.Y = topY;\n        }\n        if (this.StrictlySimple)\n        {\n          var ePrev = e.PrevInAEL;\n          if ((e.OutIdx >= 0) && (e.WindDelta !== 0) && ePrev !== null &&\n            (ePrev.OutIdx >= 0) && (ePrev.Curr.X == e.Curr.X) &&\n            (ePrev.WindDelta !== 0))\n          {\n            var op = this.AddOutPt(ePrev, e.Curr);\n            var op2 = this.AddOutPt(e, e.Curr);\n            this.AddJoin(op, op2, e.Curr);\n            //StrictlySimple (type-3) join\n          }\n        }\n        e = e.NextInAEL;\n      }\n    }\n    //3. Process horizontals at the Top of the scanbeam ...\n    this.ProcessHorizontals(true);\n    //4. Promote intermediate vertices ...\n    e = this.m_ActiveEdges;\n    while (e !== null)\n    {\n      if (this.IsIntermediate(e, topY))\n      {\n        var op = null;\n        if (e.OutIdx >= 0)\n          op = this.AddOutPt(e, e.Top);\n        e = this.UpdateEdgeIntoAEL(e);\n        //if output polygons share an edge, they'll need joining later ...\n        var ePrev = e.PrevInAEL;\n        var eNext = e.NextInAEL;\n        if (ePrev !== null && ePrev.Curr.X == e.Bot.X &&\n          ePrev.Curr.Y == e.Bot.Y && op !== null &&\n          ePrev.OutIdx >= 0 && ePrev.Curr.Y > ePrev.Top.Y &&\n          ClipperLib.ClipperBase.SlopesEqual(e, ePrev, this.m_UseFullRange) &&\n          (e.WindDelta !== 0) && (ePrev.WindDelta !== 0))\n        {\n          var op2 = this.AddOutPt(ePrev, e.Bot);\n          this.AddJoin(op, op2, e.Top);\n        }\n        else if (eNext !== null && eNext.Curr.X == e.Bot.X &&\n          eNext.Curr.Y == e.Bot.Y && op !== null &&\n          eNext.OutIdx >= 0 && eNext.Curr.Y > eNext.Top.Y &&\n          ClipperLib.ClipperBase.SlopesEqual(e, eNext, this.m_UseFullRange) &&\n          (e.WindDelta !== 0) && (eNext.WindDelta !== 0))\n        {\n          var op2 = this.AddOutPt(eNext, e.Bot);\n          this.AddJoin(op, op2, e.Top);\n        }\n      }\n      e = e.NextInAEL;\n    }\n  };\n  ClipperLib.Clipper.prototype.DoMaxima = function (e)\n  {\n    var eMaxPair = this.GetMaximaPair(e);\n    if (eMaxPair === null)\n    {\n      if (e.OutIdx >= 0)\n        this.AddOutPt(e, e.Top);\n      this.DeleteFromAEL(e);\n      return;\n    }\n    var eNext = e.NextInAEL;\n    var use_lines = true;\n    while (eNext !== null && eNext != eMaxPair)\n    {\n      this.IntersectEdges(e, eNext, e.Top, true);\n      this.SwapPositionsInAEL(e, eNext);\n      eNext = e.NextInAEL;\n    }\n    if (e.OutIdx == -1 && eMaxPair.OutIdx == -1)\n    {\n      this.DeleteFromAEL(e);\n      this.DeleteFromAEL(eMaxPair);\n    }\n    else if (e.OutIdx >= 0 && eMaxPair.OutIdx >= 0)\n    {\n      this.IntersectEdges(e, eMaxPair, e.Top, false);\n    }\n    else if (use_lines && e.WindDelta === 0)\n    {\n      if (e.OutIdx >= 0)\n      {\n        this.AddOutPt(e, e.Top);\n        e.OutIdx = -1;\n      }\n      this.DeleteFromAEL(e);\n      if (eMaxPair.OutIdx >= 0)\n      {\n        this.AddOutPt(eMaxPair, e.Top);\n        eMaxPair.OutIdx = -1;\n      }\n      this.DeleteFromAEL(eMaxPair);\n    }\n    else\n      ClipperLib.Error(\"DoMaxima error\");\n  };\n  ClipperLib.Clipper.ReversePaths = function (polys)\n  {\n    for (var i = 0, len = polys.length; i < len; i++)\n      polys[i].reverse();\n  };\n  ClipperLib.Clipper.Orientation = function (poly)\n  {\n    return ClipperLib.Clipper.Area(poly) >= 0;\n  };\n  ClipperLib.Clipper.prototype.PointCount = function (pts)\n  {\n    if (pts === null)\n      return 0;\n    var result = 0;\n    var p = pts;\n    do {\n      result++;\n      p = p.Next;\n    }\n    while (p != pts)\n    return result;\n  };\n  ClipperLib.Clipper.prototype.BuildResult = function (polyg)\n  {\n    ClipperLib.Clear(polyg);\n    for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n    {\n      var outRec = this.m_PolyOuts[i];\n      if (outRec.Pts === null)\n        continue;\n      var p = outRec.Pts.Prev;\n      var cnt = this.PointCount(p);\n      if (cnt < 2)\n        continue;\n      var pg = new Array(cnt);\n      for (var j = 0; j < cnt; j++)\n      {\n        pg[j] = p.Pt;\n        p = p.Prev;\n      }\n      polyg.push(pg);\n    }\n  };\n  ClipperLib.Clipper.prototype.BuildResult2 = function (polytree)\n  {\n    polytree.Clear();\n    //add each output polygon/contour to polytree ...\n    //polytree.m_AllPolys.set_Capacity(this.m_PolyOuts.length);\n    for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n    {\n      var outRec = this.m_PolyOuts[i];\n      var cnt = this.PointCount(outRec.Pts);\n      if ((outRec.IsOpen && cnt < 2) || (!outRec.IsOpen && cnt < 3))\n        continue;\n      this.FixHoleLinkage(outRec);\n      var pn = new ClipperLib.PolyNode();\n      polytree.m_AllPolys.push(pn);\n      outRec.PolyNode = pn;\n      pn.m_polygon.length = cnt;\n      var op = outRec.Pts.Prev;\n      for (var j = 0; j < cnt; j++)\n      {\n        pn.m_polygon[j] = op.Pt;\n        op = op.Prev;\n      }\n    }\n    //fixup PolyNode links etc ...\n    //polytree.m_Childs.set_Capacity(this.m_PolyOuts.length);\n    for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n    {\n      var outRec = this.m_PolyOuts[i];\n      if (outRec.PolyNode === null)\n        continue;\n      else if (outRec.IsOpen)\n      {\n        outRec.PolyNode.IsOpen = true;\n        polytree.AddChild(outRec.PolyNode);\n      }\n      else if (outRec.FirstLeft !== null && outRec.FirstLeft.PolyNode != null)\n        outRec.FirstLeft.PolyNode.AddChild(outRec.PolyNode);\n      else\n        polytree.AddChild(outRec.PolyNode);\n    }\n  };\n  ClipperLib.Clipper.prototype.FixupOutPolygon = function (outRec)\n  {\n    //FixupOutPolygon() - removes duplicate points and simplifies consecutive\n    //parallel edges by removing the middle vertex.\n    var lastOK = null;\n    outRec.BottomPt = null;\n    var pp = outRec.Pts;\n    for (;;)\n    {\n      if (pp.Prev == pp || pp.Prev == pp.Next)\n      {\n        this.DisposeOutPts(pp);\n        outRec.Pts = null;\n        return;\n      }\n      //test for duplicate points and collinear edges ...\n      if ((ClipperLib.IntPoint.op_Equality(pp.Pt, pp.Next.Pt)) || (ClipperLib.IntPoint.op_Equality(pp.Pt, pp.Prev.Pt)) ||\n        (ClipperLib.ClipperBase.SlopesEqual(pp.Prev.Pt, pp.Pt, pp.Next.Pt, this.m_UseFullRange) &&\n          (!this.PreserveCollinear || !this.Pt2IsBetweenPt1AndPt3(pp.Prev.Pt, pp.Pt, pp.Next.Pt))))\n      {\n        lastOK = null;\n        var tmp = pp;\n        pp.Prev.Next = pp.Next;\n        pp.Next.Prev = pp.Prev;\n        pp = pp.Prev;\n        tmp = null;\n      }\n      else if (pp == lastOK)\n        break;\n      else\n      {\n        if (lastOK === null)\n          lastOK = pp;\n        pp = pp.Next;\n      }\n    }\n    outRec.Pts = pp;\n  };\n  ClipperLib.Clipper.prototype.DupOutPt = function (outPt, InsertAfter)\n  {\n    var result = new ClipperLib.OutPt();\n    //result.Pt = outPt.Pt;\n    result.Pt.X = outPt.Pt.X;\n    result.Pt.Y = outPt.Pt.Y;\n    result.Idx = outPt.Idx;\n    if (InsertAfter)\n    {\n      result.Next = outPt.Next;\n      result.Prev = outPt;\n      outPt.Next.Prev = result;\n      outPt.Next = result;\n    }\n    else\n    {\n      result.Prev = outPt.Prev;\n      result.Next = outPt;\n      outPt.Prev.Next = result;\n      outPt.Prev = result;\n    }\n    return result;\n  };\n  ClipperLib.Clipper.prototype.GetOverlap = function (a1, a2, b1, b2, $val)\n  {\n    if (a1 < a2)\n    {\n      if (b1 < b2)\n      {\n        $val.Left = Math.max(a1, b1);\n        $val.Right = Math.min(a2, b2);\n      }\n      else\n      {\n        $val.Left = Math.max(a1, b2);\n        $val.Right = Math.min(a2, b1);\n      }\n    }\n    else\n    {\n      if (b1 < b2)\n      {\n        $val.Left = Math.max(a2, b1);\n        $val.Right = Math.min(a1, b2);\n      }\n      else\n      {\n        $val.Left = Math.max(a2, b2);\n        $val.Right = Math.min(a1, b1);\n      }\n    }\n    return $val.Left < $val.Right;\n  };\n  ClipperLib.Clipper.prototype.JoinHorz = function (op1, op1b, op2, op2b, Pt, DiscardLeft)\n  {\n    var Dir1 = (op1.Pt.X > op1b.Pt.X ? ClipperLib.Direction.dRightToLeft : ClipperLib.Direction.dLeftToRight);\n    var Dir2 = (op2.Pt.X > op2b.Pt.X ? ClipperLib.Direction.dRightToLeft : ClipperLib.Direction.dLeftToRight);\n    if (Dir1 == Dir2)\n      return false;\n    //When DiscardLeft, we want Op1b to be on the Left of Op1, otherwise we\n    //want Op1b to be on the Right. (And likewise with Op2 and Op2b.)\n    //So, to facilitate this while inserting Op1b and Op2b ...\n    //when DiscardLeft, make sure we're AT or RIGHT of Pt before adding Op1b,\n    //otherwise make sure we're AT or LEFT of Pt. (Likewise with Op2b.)\n    if (Dir1 == ClipperLib.Direction.dLeftToRight)\n    {\n      while (op1.Next.Pt.X <= Pt.X &&\n        op1.Next.Pt.X >= op1.Pt.X && op1.Next.Pt.Y == Pt.Y)\n        op1 = op1.Next;\n      if (DiscardLeft && (op1.Pt.X != Pt.X))\n        op1 = op1.Next;\n      op1b = this.DupOutPt(op1, !DiscardLeft);\n      if (ClipperLib.IntPoint.op_Inequality(op1b.Pt, Pt))\n      {\n        op1 = op1b;\n        //op1.Pt = Pt;\n        op1.Pt.X = Pt.X;\n        op1.Pt.Y = Pt.Y;\n        op1b = this.DupOutPt(op1, !DiscardLeft);\n      }\n    }\n    else\n    {\n      while (op1.Next.Pt.X >= Pt.X &&\n        op1.Next.Pt.X <= op1.Pt.X && op1.Next.Pt.Y == Pt.Y)\n        op1 = op1.Next;\n      if (!DiscardLeft && (op1.Pt.X != Pt.X))\n        op1 = op1.Next;\n      op1b = this.DupOutPt(op1, DiscardLeft);\n      if (ClipperLib.IntPoint.op_Inequality(op1b.Pt, Pt))\n      {\n        op1 = op1b;\n        //op1.Pt = Pt;\n        op1.Pt.X = Pt.X;\n        op1.Pt.Y = Pt.Y;\n        op1b = this.DupOutPt(op1, DiscardLeft);\n      }\n    }\n    if (Dir2 == ClipperLib.Direction.dLeftToRight)\n    {\n      while (op2.Next.Pt.X <= Pt.X &&\n        op2.Next.Pt.X >= op2.Pt.X && op2.Next.Pt.Y == Pt.Y)\n        op2 = op2.Next;\n      if (DiscardLeft && (op2.Pt.X != Pt.X))\n        op2 = op2.Next;\n      op2b = this.DupOutPt(op2, !DiscardLeft);\n      if (ClipperLib.IntPoint.op_Inequality(op2b.Pt, Pt))\n      {\n        op2 = op2b;\n        //op2.Pt = Pt;\n        op2.Pt.X = Pt.X;\n        op2.Pt.Y = Pt.Y;\n        op2b = this.DupOutPt(op2, !DiscardLeft);\n      }\n    }\n    else\n    {\n      while (op2.Next.Pt.X >= Pt.X &&\n        op2.Next.Pt.X <= op2.Pt.X && op2.Next.Pt.Y == Pt.Y)\n        op2 = op2.Next;\n      if (!DiscardLeft && (op2.Pt.X != Pt.X))\n        op2 = op2.Next;\n      op2b = this.DupOutPt(op2, DiscardLeft);\n      if (ClipperLib.IntPoint.op_Inequality(op2b.Pt, Pt))\n      {\n        op2 = op2b;\n        //op2.Pt = Pt;\n        op2.Pt.X = Pt.X;\n        op2.Pt.Y = Pt.Y;\n        op2b = this.DupOutPt(op2, DiscardLeft);\n      }\n    }\n    if ((Dir1 == ClipperLib.Direction.dLeftToRight) == DiscardLeft)\n    {\n      op1.Prev = op2;\n      op2.Next = op1;\n      op1b.Next = op2b;\n      op2b.Prev = op1b;\n    }\n    else\n    {\n      op1.Next = op2;\n      op2.Prev = op1;\n      op1b.Prev = op2b;\n      op2b.Next = op1b;\n    }\n    return true;\n  };\n  ClipperLib.Clipper.prototype.JoinPoints = function (j, outRec1, outRec2)\n  {\n    var op1 = j.OutPt1,\n      op1b = new ClipperLib.OutPt();\n    var op2 = j.OutPt2,\n      op2b = new ClipperLib.OutPt();\n    //There are 3 kinds of joins for output polygons ...\n    //1. Horizontal joins where Join.OutPt1 & Join.OutPt2 are a vertices anywhere\n    //along (horizontal) collinear edges (& Join.OffPt is on the same horizontal).\n    //2. Non-horizontal joins where Join.OutPt1 & Join.OutPt2 are at the same\n    //location at the Bottom of the overlapping segment (& Join.OffPt is above).\n    //3. StrictlySimple joins where edges touch but are not collinear and where\n    //Join.OutPt1, Join.OutPt2 & Join.OffPt all share the same point.\n    var isHorizontal = (j.OutPt1.Pt.Y == j.OffPt.Y);\n    if (isHorizontal && (ClipperLib.IntPoint.op_Equality(j.OffPt, j.OutPt1.Pt)) && (ClipperLib.IntPoint.op_Equality(j.OffPt, j.OutPt2.Pt)))\n    {\n      //Strictly Simple join ...\n      op1b = j.OutPt1.Next;\n      while (op1b != op1 && (ClipperLib.IntPoint.op_Equality(op1b.Pt, j.OffPt)))\n        op1b = op1b.Next;\n      var reverse1 = (op1b.Pt.Y > j.OffPt.Y);\n      op2b = j.OutPt2.Next;\n      while (op2b != op2 && (ClipperLib.IntPoint.op_Equality(op2b.Pt, j.OffPt)))\n        op2b = op2b.Next;\n      var reverse2 = (op2b.Pt.Y > j.OffPt.Y);\n      if (reverse1 == reverse2)\n        return false;\n      if (reverse1)\n      {\n        op1b = this.DupOutPt(op1, false);\n        op2b = this.DupOutPt(op2, true);\n        op1.Prev = op2;\n        op2.Next = op1;\n        op1b.Next = op2b;\n        op2b.Prev = op1b;\n        j.OutPt1 = op1;\n        j.OutPt2 = op1b;\n        return true;\n      }\n      else\n      {\n        op1b = this.DupOutPt(op1, true);\n        op2b = this.DupOutPt(op2, false);\n        op1.Next = op2;\n        op2.Prev = op1;\n        op1b.Prev = op2b;\n        op2b.Next = op1b;\n        j.OutPt1 = op1;\n        j.OutPt2 = op1b;\n        return true;\n      }\n    }\n    else if (isHorizontal)\n    {\n      //treat horizontal joins differently to non-horizontal joins since with\n      //them we're not yet sure where the overlapping is. OutPt1.Pt & OutPt2.Pt\n      //may be anywhere along the horizontal edge.\n      op1b = op1;\n      while (op1.Prev.Pt.Y == op1.Pt.Y && op1.Prev != op1b && op1.Prev != op2)\n        op1 = op1.Prev;\n      while (op1b.Next.Pt.Y == op1b.Pt.Y && op1b.Next != op1 && op1b.Next != op2)\n        op1b = op1b.Next;\n      if (op1b.Next == op1 || op1b.Next == op2)\n        return false;\n      //a flat 'polygon'\n      op2b = op2;\n      while (op2.Prev.Pt.Y == op2.Pt.Y && op2.Prev != op2b && op2.Prev != op1b)\n        op2 = op2.Prev;\n      while (op2b.Next.Pt.Y == op2b.Pt.Y && op2b.Next != op2 && op2b.Next != op1)\n        op2b = op2b.Next;\n      if (op2b.Next == op2 || op2b.Next == op1)\n        return false;\n      //a flat 'polygon'\n      //Op1 -. Op1b & Op2 -. Op2b are the extremites of the horizontal edges\n\n      var $val = {Left: null, Right: null};\n      if (!this.GetOverlap(op1.Pt.X, op1b.Pt.X, op2.Pt.X, op2b.Pt.X, $val))\n        return false;\n      var Left = $val.Left;\n      var Right = $val.Right;\n\n      //DiscardLeftSide: when overlapping edges are joined, a spike will created\n      //which needs to be cleaned up. However, we don't want Op1 or Op2 caught up\n      //on the discard Side as either may still be needed for other joins ...\n      var Pt = new ClipperLib.IntPoint();\n      var DiscardLeftSide;\n      if (op1.Pt.X >= Left && op1.Pt.X <= Right)\n      {\n        //Pt = op1.Pt;\n        Pt.X = op1.Pt.X;\n        Pt.Y = op1.Pt.Y;\n        DiscardLeftSide = (op1.Pt.X > op1b.Pt.X);\n      }\n      else if (op2.Pt.X >= Left && op2.Pt.X <= Right)\n      {\n        //Pt = op2.Pt;\n        Pt.X = op2.Pt.X;\n        Pt.Y = op2.Pt.Y;\n        DiscardLeftSide = (op2.Pt.X > op2b.Pt.X);\n      }\n      else if (op1b.Pt.X >= Left && op1b.Pt.X <= Right)\n      {\n        //Pt = op1b.Pt;\n        Pt.X = op1b.Pt.X;\n        Pt.Y = op1b.Pt.Y;\n        DiscardLeftSide = op1b.Pt.X > op1.Pt.X;\n      }\n      else\n      {\n        //Pt = op2b.Pt;\n        Pt.X = op2b.Pt.X;\n        Pt.Y = op2b.Pt.Y;\n        DiscardLeftSide = (op2b.Pt.X > op2.Pt.X);\n      }\n      j.OutPt1 = op1;\n      j.OutPt2 = op2;\n      return this.JoinHorz(op1, op1b, op2, op2b, Pt, DiscardLeftSide);\n    }\n    else\n    {\n      //nb: For non-horizontal joins ...\n      //    1. Jr.OutPt1.Pt.Y == Jr.OutPt2.Pt.Y\n      //    2. Jr.OutPt1.Pt > Jr.OffPt.Y\n      //make sure the polygons are correctly oriented ...\n      op1b = op1.Next;\n      while ((ClipperLib.IntPoint.op_Equality(op1b.Pt, op1.Pt)) && (op1b != op1))\n        op1b = op1b.Next;\n      var Reverse1 = ((op1b.Pt.Y > op1.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual(op1.Pt, op1b.Pt, j.OffPt, this.m_UseFullRange));\n      if (Reverse1)\n      {\n        op1b = op1.Prev;\n        while ((ClipperLib.IntPoint.op_Equality(op1b.Pt, op1.Pt)) && (op1b != op1))\n          op1b = op1b.Prev;\n        if ((op1b.Pt.Y > op1.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual(op1.Pt, op1b.Pt, j.OffPt, this.m_UseFullRange))\n          return false;\n      }\n      op2b = op2.Next;\n      while ((ClipperLib.IntPoint.op_Equality(op2b.Pt, op2.Pt)) && (op2b != op2))\n        op2b = op2b.Next;\n      var Reverse2 = ((op2b.Pt.Y > op2.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual(op2.Pt, op2b.Pt, j.OffPt, this.m_UseFullRange));\n      if (Reverse2)\n      {\n        op2b = op2.Prev;\n        while ((ClipperLib.IntPoint.op_Equality(op2b.Pt, op2.Pt)) && (op2b != op2))\n          op2b = op2b.Prev;\n        if ((op2b.Pt.Y > op2.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual(op2.Pt, op2b.Pt, j.OffPt, this.m_UseFullRange))\n          return false;\n      }\n      if ((op1b == op1) || (op2b == op2) || (op1b == op2b) ||\n        ((outRec1 == outRec2) && (Reverse1 == Reverse2)))\n        return false;\n      if (Reverse1)\n      {\n        op1b = this.DupOutPt(op1, false);\n        op2b = this.DupOutPt(op2, true);\n        op1.Prev = op2;\n        op2.Next = op1;\n        op1b.Next = op2b;\n        op2b.Prev = op1b;\n        j.OutPt1 = op1;\n        j.OutPt2 = op1b;\n        return true;\n      }\n      else\n      {\n        op1b = this.DupOutPt(op1, true);\n        op2b = this.DupOutPt(op2, false);\n        op1.Next = op2;\n        op2.Prev = op1;\n        op1b.Prev = op2b;\n        op2b.Next = op1b;\n        j.OutPt1 = op1;\n        j.OutPt2 = op1b;\n        return true;\n      }\n    }\n  };\n  ClipperLib.Clipper.GetBounds = function (paths)\n  {\n    var i = 0,\n      cnt = paths.length;\n    while (i < cnt && paths[i].length == 0) i++;\n    if (i == cnt) return new ClipperLib.IntRect(0, 0, 0, 0);\n    var result = new ClipperLib.IntRect();\n    result.left = paths[i][0].X;\n    result.right = result.left;\n    result.top = paths[i][0].Y;\n    result.bottom = result.top;\n    for (; i < cnt; i++)\n      for (var j = 0, jlen = paths[i].length; j < jlen; j++)\n      {\n        if (paths[i][j].X < result.left) result.left = paths[i][j].X;\n        else if (paths[i][j].X > result.right) result.right = paths[i][j].X;\n        if (paths[i][j].Y < result.top) result.top = paths[i][j].Y;\n        else if (paths[i][j].Y > result.bottom) result.bottom = paths[i][j].Y;\n      }\n    return result;\n  }\n  ClipperLib.Clipper.prototype.GetBounds2 = function (ops)\n  {\n    var opStart = ops;\n    var result = new ClipperLib.IntRect();\n    result.left = ops.Pt.X;\n    result.right = ops.Pt.X;\n    result.top = ops.Pt.Y;\n    result.bottom = ops.Pt.Y;\n    ops = ops.Next;\n    while (ops != opStart)\n    {\n      if (ops.Pt.X < result.left)\n        result.left = ops.Pt.X;\n      if (ops.Pt.X > result.right)\n        result.right = ops.Pt.X;\n      if (ops.Pt.Y < result.top)\n        result.top = ops.Pt.Y;\n      if (ops.Pt.Y > result.bottom)\n        result.bottom = ops.Pt.Y;\n      ops = ops.Next;\n    }\n    return result;\n  };\n\n  ClipperLib.Clipper.PointInPolygon = function (pt, path)\n  {\n    //returns 0 if false, +1 if true, -1 if pt ON polygon boundary\n    //http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.88.5498&rep=rep1&type=pdf\n    var result = 0,\n      cnt = path.length;\n    if (cnt < 3)\n      return 0;\n    var ip = path[0];\n    for (var i = 1; i <= cnt; ++i)\n    {\n      var ipNext = (i == cnt ? path[0] : path[i]);\n      if (ipNext.Y == pt.Y)\n      {\n        if ((ipNext.X == pt.X) || (ip.Y == pt.Y && ((ipNext.X > pt.X) == (ip.X < pt.X))))\n          return -1;\n      }\n      if ((ip.Y < pt.Y) != (ipNext.Y < pt.Y))\n      {\n        if (ip.X >= pt.X)\n        {\n          if (ipNext.X > pt.X)\n            result = 1 - result;\n          else\n          {\n            var d = (ip.X - pt.X) * (ipNext.Y - pt.Y) - (ipNext.X - pt.X) * (ip.Y - pt.Y);\n            if (d == 0)\n              return -1;\n            else if ((d > 0) == (ipNext.Y > ip.Y))\n              result = 1 - result;\n          }\n        }\n        else\n        {\n          if (ipNext.X > pt.X)\n          {\n            var d = (ip.X - pt.X) * (ipNext.Y - pt.Y) - (ipNext.X - pt.X) * (ip.Y - pt.Y);\n            if (d == 0)\n              return -1;\n            else if ((d > 0) == (ipNext.Y > ip.Y))\n              result = 1 - result;\n          }\n        }\n      }\n      ip = ipNext;\n    }\n    return result;\n  };\n      \n  ClipperLib.Clipper.prototype.PointInPolygon = function (pt, op)\n  {\n    //returns 0 if false, +1 if true, -1 if pt ON polygon boundary\n    //http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.88.5498&rep=rep1&type=pdf\n    var result = 0;\n    var startOp = op;\n    for (;;)\n    {\n      var poly0x = op.Pt.X,\n        poly0y = op.Pt.Y;\n      var poly1x = op.Next.Pt.X,\n        poly1y = op.Next.Pt.Y;\n      if (poly1y == pt.Y)\n      {\n        if ((poly1x == pt.X) || (poly0y == pt.Y && ((poly1x > pt.X) == (poly0x < pt.X))))\n          return -1;\n      }\n      if ((poly0y < pt.Y) != (poly1y < pt.Y))\n      {\n        if (poly0x >= pt.X)\n        {\n          if (poly1x > pt.X)\n            result = 1 - result;\n          else\n          {\n            var d = (poly0x - pt.X) * (poly1y - pt.Y) - (poly1x - pt.X) * (poly0y - pt.Y);\n            if (d == 0)\n              return -1;\n            if ((d > 0) == (poly1y > poly0y))\n              result = 1 - result;\n          }\n        }\n        else\n        {\n          if (poly1x > pt.X)\n          {\n            var d = (poly0x - pt.X) * (poly1y - pt.Y) - (poly1x - pt.X) * (poly0y - pt.Y);\n            if (d == 0)\n              return -1;\n            if ((d > 0) == (poly1y > poly0y))\n              result = 1 - result;\n          }\n        }\n      }\n      op = op.Next;\n      if (startOp == op)\n        break;\n    }\n    return result;\n  };\n\n  ClipperLib.Clipper.prototype.Poly2ContainsPoly1 = function (outPt1, outPt2)\n  {\n    var op = outPt1;\n    do {\n      var res = this.PointInPolygon(op.Pt, outPt2);\n      if (res >= 0)\n        return res != 0;\n      op = op.Next;\n    }\n    while (op != outPt1)\n    return true;\n  };\n  ClipperLib.Clipper.prototype.FixupFirstLefts1 = function (OldOutRec, NewOutRec)\n  {\n    for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n    {\n      var outRec = this.m_PolyOuts[i];\n      if (outRec.Pts !== null && outRec.FirstLeft == OldOutRec)\n      {\n        if (this.Poly2ContainsPoly1(outRec.Pts, NewOutRec.Pts))\n          outRec.FirstLeft = NewOutRec;\n      }\n    }\n  };\n  ClipperLib.Clipper.prototype.FixupFirstLefts2 = function (OldOutRec, NewOutRec)\n  {\n    for (var $i2 = 0, $t2 = this.m_PolyOuts, $l2 = $t2.length, outRec = $t2[$i2]; $i2 < $l2; $i2++, outRec = $t2[$i2])\n      if (outRec.FirstLeft == OldOutRec)\n        outRec.FirstLeft = NewOutRec;\n  };\n  ClipperLib.Clipper.ParseFirstLeft = function (FirstLeft)\n  {\n    while (FirstLeft != null && FirstLeft.Pts == null)\n      FirstLeft = FirstLeft.FirstLeft;\n    return FirstLeft;\n  };\n  ClipperLib.Clipper.prototype.JoinCommonEdges = function ()\n  {\n    for (var i = 0, ilen = this.m_Joins.length; i < ilen; i++)\n    {\n      var join = this.m_Joins[i];\n      var outRec1 = this.GetOutRec(join.OutPt1.Idx);\n      var outRec2 = this.GetOutRec(join.OutPt2.Idx);\n      if (outRec1.Pts == null || outRec2.Pts == null)\n        continue;\n      //get the polygon fragment with the correct hole state (FirstLeft)\n      //before calling JoinPoints() ...\n      var holeStateRec;\n      if (outRec1 == outRec2)\n        holeStateRec = outRec1;\n      else if (this.Param1RightOfParam2(outRec1, outRec2))\n        holeStateRec = outRec2;\n      else if (this.Param1RightOfParam2(outRec2, outRec1))\n        holeStateRec = outRec1;\n      else\n        holeStateRec = this.GetLowermostRec(outRec1, outRec2);\n\n      if (!this.JoinPoints(join, outRec1, outRec2)) continue;\n\n      if (outRec1 == outRec2)\n      {\n        //instead of joining two polygons, we've just created a new one by\n        //splitting one polygon into two.\n        outRec1.Pts = join.OutPt1;\n        outRec1.BottomPt = null;\n        outRec2 = this.CreateOutRec();\n        outRec2.Pts = join.OutPt2;\n        //update all OutRec2.Pts Idx's ...\n        this.UpdateOutPtIdxs(outRec2);\n        //We now need to check every OutRec.FirstLeft pointer. If it points\n        //to OutRec1 it may need to point to OutRec2 instead ...\n        if (this.m_UsingPolyTree)\n          for (var j = 0, jlen = this.m_PolyOuts.length; j < jlen - 1; j++)\n          {\n            var oRec = this.m_PolyOuts[j];\n            if (oRec.Pts == null || ClipperLib.Clipper.ParseFirstLeft(oRec.FirstLeft) != outRec1 || oRec.IsHole == outRec1.IsHole)\n              continue;\n            if (this.Poly2ContainsPoly1(oRec.Pts, join.OutPt2))\n              oRec.FirstLeft = outRec2;\n          }\n        if (this.Poly2ContainsPoly1(outRec2.Pts, outRec1.Pts))\n        {\n          //outRec2 is contained by outRec1 ...\n          outRec2.IsHole = !outRec1.IsHole;\n          outRec2.FirstLeft = outRec1;\n          //fixup FirstLeft pointers that may need reassigning to OutRec1\n          if (this.m_UsingPolyTree)\n            this.FixupFirstLefts2(outRec2, outRec1);\n          if ((outRec2.IsHole ^ this.ReverseSolution) == (this.Area(outRec2) > 0))\n            this.ReversePolyPtLinks(outRec2.Pts);\n        }\n        else if (this.Poly2ContainsPoly1(outRec1.Pts, outRec2.Pts))\n        {\n          //outRec1 is contained by outRec2 ...\n          outRec2.IsHole = outRec1.IsHole;\n          outRec1.IsHole = !outRec2.IsHole;\n          outRec2.FirstLeft = outRec1.FirstLeft;\n          outRec1.FirstLeft = outRec2;\n          //fixup FirstLeft pointers that may need reassigning to OutRec1\n          if (this.m_UsingPolyTree)\n            this.FixupFirstLefts2(outRec1, outRec2);\n          if ((outRec1.IsHole ^ this.ReverseSolution) == (this.Area(outRec1) > 0))\n            this.ReversePolyPtLinks(outRec1.Pts);\n        }\n        else\n        {\n          //the 2 polygons are completely separate ...\n          outRec2.IsHole = outRec1.IsHole;\n          outRec2.FirstLeft = outRec1.FirstLeft;\n          //fixup FirstLeft pointers that may need reassigning to OutRec2\n          if (this.m_UsingPolyTree)\n            this.FixupFirstLefts1(outRec1, outRec2);\n        }\n      }\n      else\n      {\n        //joined 2 polygons together ...\n        outRec2.Pts = null;\n        outRec2.BottomPt = null;\n        outRec2.Idx = outRec1.Idx;\n        outRec1.IsHole = holeStateRec.IsHole;\n        if (holeStateRec == outRec2)\n          outRec1.FirstLeft = outRec2.FirstLeft;\n        outRec2.FirstLeft = outRec1;\n        //fixup FirstLeft pointers that may need reassigning to OutRec1\n        if (this.m_UsingPolyTree)\n          this.FixupFirstLefts2(outRec2, outRec1);\n      }\n    }\n  };\n  ClipperLib.Clipper.prototype.UpdateOutPtIdxs = function (outrec)\n  {\n    var op = outrec.Pts;\n    do {\n      op.Idx = outrec.Idx;\n      op = op.Prev;\n    }\n    while (op != outrec.Pts)\n  };\n  ClipperLib.Clipper.prototype.DoSimplePolygons = function ()\n  {\n    var i = 0;\n    while (i < this.m_PolyOuts.length)\n    {\n      var outrec = this.m_PolyOuts[i++];\n      var op = outrec.Pts;\n      if (op === null)\n        continue;\n      do //for each Pt in Polygon until duplicate found do ...\n      {\n        var op2 = op.Next;\n        while (op2 != outrec.Pts)\n        {\n          if ((ClipperLib.IntPoint.op_Equality(op.Pt, op2.Pt)) && op2.Next != op && op2.Prev != op)\n          {\n            //split the polygon into two ...\n            var op3 = op.Prev;\n            var op4 = op2.Prev;\n            op.Prev = op4;\n            op4.Next = op;\n            op2.Prev = op3;\n            op3.Next = op2;\n            outrec.Pts = op;\n            var outrec2 = this.CreateOutRec();\n            outrec2.Pts = op2;\n            this.UpdateOutPtIdxs(outrec2);\n            if (this.Poly2ContainsPoly1(outrec2.Pts, outrec.Pts))\n            {\n              //OutRec2 is contained by OutRec1 ...\n              outrec2.IsHole = !outrec.IsHole;\n              outrec2.FirstLeft = outrec;\n            }\n            else if (this.Poly2ContainsPoly1(outrec.Pts, outrec2.Pts))\n            {\n              //OutRec1 is contained by OutRec2 ...\n              outrec2.IsHole = outrec.IsHole;\n              outrec.IsHole = !outrec2.IsHole;\n              outrec2.FirstLeft = outrec.FirstLeft;\n              outrec.FirstLeft = outrec2;\n            }\n            else\n            {\n              //the 2 polygons are separate ...\n              outrec2.IsHole = outrec.IsHole;\n              outrec2.FirstLeft = outrec.FirstLeft;\n            }\n            op2 = op;\n            //ie get ready for the next iteration\n          }\n          op2 = op2.Next;\n        }\n        op = op.Next;\n      }\n      while (op != outrec.Pts)\n    }\n  };\n  ClipperLib.Clipper.Area = function (poly)\n  {\n    var cnt = poly.length;\n    if (cnt < 3)\n      return 0;\n    var a = 0;\n    for (var i = 0, j = cnt - 1; i < cnt; ++i)\n    {\n      a += (poly[j].X + poly[i].X) * (poly[j].Y - poly[i].Y);\n      j = i;\n    }\n    return -a * 0.5;\n  };\n  ClipperLib.Clipper.prototype.Area = function (outRec)\n  {\n    var op = outRec.Pts;\n    if (op == null)\n      return 0;\n    var a = 0;\n    do {\n      a = a + (op.Prev.Pt.X + op.Pt.X) * (op.Prev.Pt.Y - op.Pt.Y);\n      op = op.Next;\n    }\n    while (op != outRec.Pts)\n    return a * 0.5;\n  };\n  if (use_deprecated)\n  {\n    ClipperLib.Clipper.OffsetPaths = function (polys, delta, jointype, endtype, MiterLimit)\n    {\n      var result = new ClipperLib.Paths();\n      var co = new ClipperLib.ClipperOffset(MiterLimit, MiterLimit);\n      co.AddPaths(polys, jointype, endtype);\n      co.Execute(result, delta);\n      return result;\n    };\n  }\n  ClipperLib.Clipper.SimplifyPolygon = function (poly, fillType)\n  {\n    var result = new Array();\n    var c = new ClipperLib.Clipper(0);\n    c.StrictlySimple = true;\n    c.AddPath(poly, ClipperLib.PolyType.ptSubject, true);\n    c.Execute(ClipperLib.ClipType.ctUnion, result, fillType, fillType);\n    return result;\n  };\n  ClipperLib.Clipper.SimplifyPolygons = function (polys, fillType)\n  {\n    if (typeof (fillType) == \"undefined\") fillType = ClipperLib.PolyFillType.pftEvenOdd;\n    var result = new Array();\n    var c = new ClipperLib.Clipper(0);\n    c.StrictlySimple = true;\n    c.AddPaths(polys, ClipperLib.PolyType.ptSubject, true);\n    c.Execute(ClipperLib.ClipType.ctUnion, result, fillType, fillType);\n    return result;\n  };\n  ClipperLib.Clipper.DistanceSqrd = function (pt1, pt2)\n  {\n    var dx = (pt1.X - pt2.X);\n    var dy = (pt1.Y - pt2.Y);\n    return (dx * dx + dy * dy);\n  };\n  ClipperLib.Clipper.DistanceFromLineSqrd = function (pt, ln1, ln2)\n  {\n    //The equation of a line in general form (Ax + By + C = 0)\n    //given 2 points (x¹,y¹) & (x²,y²) is ...\n    //(y¹ - y²)x + (x² - x¹)y + (y² - y¹)x¹ - (x² - x¹)y¹ = 0\n    //A = (y¹ - y²); B = (x² - x¹); C = (y² - y¹)x¹ - (x² - x¹)y¹\n    //perpendicular distance of point (x³,y³) = (Ax³ + By³ + C)/Sqrt(A² + B²)\n    //see http://en.wikipedia.org/wiki/Perpendicular_distance\n    var A = ln1.Y - ln2.Y;\n    var B = ln2.X - ln1.X;\n    var C = A * ln1.X + B * ln1.Y;\n    C = A * pt.X + B * pt.Y - C;\n    return (C * C) / (A * A + B * B);\n  };\n  ClipperLib.Clipper.SlopesNearCollinear = function (pt1, pt2, pt3, distSqrd)\n  {\n    return ClipperLib.Clipper.DistanceFromLineSqrd(pt2, pt1, pt3) < distSqrd;\n  };\n  ClipperLib.Clipper.PointsAreClose = function (pt1, pt2, distSqrd)\n  {\n    var dx = pt1.X - pt2.X;\n    var dy = pt1.Y - pt2.Y;\n    return ((dx * dx) + (dy * dy) <= distSqrd);\n  };\n  //------------------------------------------------------------------------------\n  ClipperLib.Clipper.ExcludeOp = function (op)\n  {\n    var result = op.Prev;\n    result.Next = op.Next;\n    op.Next.Prev = result;\n    result.Idx = 0;\n    return result;\n  };\n  ClipperLib.Clipper.CleanPolygon = function (path, distance)\n  {\n    if (typeof (distance) == \"undefined\") distance = 1.415;\n    //distance = proximity in units/pixels below which vertices will be stripped. \n    //Default ~= sqrt(2) so when adjacent vertices or semi-adjacent vertices have \n    //both x & y coords within 1 unit, then the second vertex will be stripped.\n    var cnt = path.length;\n    if (cnt == 0)\n      return new Array();\n    var outPts = new Array(cnt);\n    for (var i = 0; i < cnt; ++i)\n      outPts[i] = new ClipperLib.OutPt();\n    for (var i = 0; i < cnt; ++i)\n    {\n      outPts[i].Pt = path[i];\n      outPts[i].Next = outPts[(i + 1) % cnt];\n      outPts[i].Next.Prev = outPts[i];\n      outPts[i].Idx = 0;\n    }\n    var distSqrd = distance * distance;\n    var op = outPts[0];\n    while (op.Idx == 0 && op.Next != op.Prev)\n    {\n      if (ClipperLib.Clipper.PointsAreClose(op.Pt, op.Prev.Pt, distSqrd))\n      {\n        op = ClipperLib.Clipper.ExcludeOp(op);\n        cnt--;\n      }\n      else if (ClipperLib.Clipper.PointsAreClose(op.Prev.Pt, op.Next.Pt, distSqrd))\n      {\n        ClipperLib.Clipper.ExcludeOp(op.Next);\n        op = ClipperLib.Clipper.ExcludeOp(op);\n        cnt -= 2;\n      }\n      else if (ClipperLib.Clipper.SlopesNearCollinear(op.Prev.Pt, op.Pt, op.Next.Pt, distSqrd))\n      {\n        op = ClipperLib.Clipper.ExcludeOp(op);\n        cnt--;\n      }\n      else\n      {\n        op.Idx = 1;\n        op = op.Next;\n      }\n    }\n    if (cnt < 3)\n      cnt = 0;\n    var result = new Array(cnt);\n    for (var i = 0; i < cnt; ++i)\n    {\n      result[i] = new ClipperLib.IntPoint(op.Pt);\n      op = op.Next;\n    }\n    outPts = null;\n    return result;\n  };\n  ClipperLib.Clipper.CleanPolygons = function (polys, distance)\n  {\n    var result = new Array(polys.length);\n    for (var i = 0, ilen = polys.length; i < ilen; i++)\n      result[i] = ClipperLib.Clipper.CleanPolygon(polys[i], distance);\n    return result;\n  };\n  ClipperLib.Clipper.Minkowski = function (pattern, path, IsSum, IsClosed)\n  {\n    var delta = (IsClosed ? 1 : 0);\n    var polyCnt = pattern.length;\n    var pathCnt = path.length;\n    var result = new Array();\n    if (IsSum)\n      for (var i = 0; i < pathCnt; i++)\n      {\n        var p = new Array(polyCnt);\n        for (var j = 0, jlen = pattern.length, ip = pattern[j]; j < jlen; j++, ip = pattern[j])\n          p[j] = new ClipperLib.IntPoint(path[i].X + ip.X, path[i].Y + ip.Y);\n        result.push(p);\n      }\n    else\n      for (var i = 0; i < pathCnt; i++)\n      {\n        var p = new Array(polyCnt);\n        for (var j = 0, jlen = pattern.length, ip = pattern[j]; j < jlen; j++, ip = pattern[j])\n          p[j] = new ClipperLib.IntPoint(path[i].X - ip.X, path[i].Y - ip.Y);\n        result.push(p);\n      }\n    var quads = new Array();\n    for (var i = 0; i < pathCnt - 1 + delta; i++)\n      for (var j = 0; j < polyCnt; j++)\n      {\n        var quad = new Array();\n        quad.push(result[i % pathCnt][j % polyCnt]);\n        quad.push(result[(i + 1) % pathCnt][j % polyCnt]);\n        quad.push(result[(i + 1) % pathCnt][(j + 1) % polyCnt]);\n        quad.push(result[i % pathCnt][(j + 1) % polyCnt]);\n        if (!ClipperLib.Clipper.Orientation(quad))\n          quad.reverse();\n        quads.push(quad);\n      }\n    var c = new ClipperLib.Clipper(0);\n    c.AddPaths(quads, ClipperLib.PolyType.ptSubject, true);\n    c.Execute(ClipperLib.ClipType.ctUnion, result, ClipperLib.PolyFillType.pftNonZero, ClipperLib.PolyFillType.pftNonZero);\n    return result;\n  };\n\n  ClipperLib.Clipper.MinkowskiSum = function ()\n  {\n    var a = arguments,\n      alen = a.length;\n    if (alen == 3) // MinkowskiSum(Path pattern, path, pathIsClosed)\n    {\n      var pattern = a[0],\n        path = a[1],\n        pathIsClosed = a[2];\n      return ClipperLib.Clipper.Minkowski(pattern, path, true, pathIsClosed);\n    }\n    else if (alen == 4) // MinkowskiSum(pattern, paths, pathFillType, pathIsClosed)\n    {\n      var pattern = a[0],\n        paths = a[1],\n        pathFillType = a[2],\n        pathIsClosed = a[3];\n      var c = new ClipperLib.Clipper(),\n        tmp;\n      for (var i = 0, ilen = paths.length; i < ilen; ++i)\n      {\n        var tmp = ClipperLib.Clipper.Minkowski(pattern, paths[i], true, pathIsClosed);\n        c.AddPaths(tmp, ClipperLib.PolyType.ptSubject, true);\n      }\n      if (pathIsClosed) c.AddPaths(paths, ClipperLib.PolyType.ptClip, true);\n      var solution = new ClipperLib.Paths();\n      c.Execute(ClipperLib.ClipType.ctUnion, solution, pathFillType, pathFillType);\n      return solution;\n    }\n  };\n\n  ClipperLib.Clipper.MinkowskiDiff = function (pattern, path, pathIsClosed)\n  {\n    return ClipperLib.Clipper.Minkowski(pattern, path, false, pathIsClosed);\n  };\n\n  ClipperLib.Clipper.PolyTreeToPaths = function (polytree)\n  {\n    var result = new Array();\n    //result.set_Capacity(polytree.get_Total());\n    ClipperLib.Clipper.AddPolyNodeToPaths(polytree, ClipperLib.Clipper.NodeType.ntAny, result);\n    return result;\n  };\n  ClipperLib.Clipper.AddPolyNodeToPaths = function (polynode, nt, paths)\n  {\n    var match = true;\n    switch (nt)\n    {\n    case ClipperLib.Clipper.NodeType.ntOpen:\n      return;\n    case ClipperLib.Clipper.NodeType.ntClosed:\n      match = !polynode.IsOpen;\n      break;\n    default:\n      break;\n    }\n    if (polynode.m_polygon.length > 0 && match)\n      paths.push(polynode.m_polygon);\n    for (var $i3 = 0, $t3 = polynode.Childs(), $l3 = $t3.length, pn = $t3[$i3]; $i3 < $l3; $i3++, pn = $t3[$i3])\n      ClipperLib.Clipper.AddPolyNodeToPaths(pn, nt, paths);\n  };\n  ClipperLib.Clipper.OpenPathsFromPolyTree = function (polytree)\n  {\n    var result = new ClipperLib.Paths();\n    //result.set_Capacity(polytree.ChildCount());\n    for (var i = 0, ilen = polytree.ChildCount(); i < ilen; i++)\n      if (polytree.Childs()[i].IsOpen)\n        result.push(polytree.Childs()[i].m_polygon);\n    return result;\n  };\n  ClipperLib.Clipper.ClosedPathsFromPolyTree = function (polytree)\n  {\n    var result = new ClipperLib.Paths();\n    //result.set_Capacity(polytree.Total());\n    ClipperLib.Clipper.AddPolyNodeToPaths(polytree, ClipperLib.Clipper.NodeType.ntClosed, result);\n    return result;\n  };\n  Inherit(ClipperLib.Clipper, ClipperLib.ClipperBase);\n  ClipperLib.Clipper.NodeType = {\n    ntAny: 0,\n    ntOpen: 1,\n    ntClosed: 2\n  };\n  ClipperLib.ClipperOffset = function (miterLimit, arcTolerance)\n  {\n    if (typeof (miterLimit) == \"undefined\") miterLimit = 2;\n    if (typeof (arcTolerance) == \"undefined\") arcTolerance = ClipperLib.ClipperOffset.def_arc_tolerance;\n    this.m_destPolys = new ClipperLib.Paths();\n    this.m_srcPoly = new ClipperLib.Path();\n    this.m_destPoly = new ClipperLib.Path();\n    this.m_normals = new Array();\n    this.m_delta = 0;\n    this.m_sinA = 0;\n    this.m_sin = 0;\n    this.m_cos = 0;\n    this.m_miterLim = 0;\n    this.m_StepsPerRad = 0;\n    this.m_lowest = new ClipperLib.IntPoint();\n    this.m_polyNodes = new ClipperLib.PolyNode();\n    this.MiterLimit = miterLimit;\n    this.ArcTolerance = arcTolerance;\n    this.m_lowest.X = -1;\n  };\n  ClipperLib.ClipperOffset.two_pi = 6.28318530717959;\n  ClipperLib.ClipperOffset.def_arc_tolerance = 0.25;\n  ClipperLib.ClipperOffset.prototype.Clear = function ()\n  {\n    ClipperLib.Clear(this.m_polyNodes.Childs());\n    this.m_lowest.X = -1;\n  };\n  ClipperLib.ClipperOffset.Round = ClipperLib.Clipper.Round;\n  ClipperLib.ClipperOffset.prototype.AddPath = function (path, joinType, endType)\n  {\n    var highI = path.length - 1;\n    if (highI < 0)\n      return;\n    var newNode = new ClipperLib.PolyNode();\n    newNode.m_jointype = joinType;\n    newNode.m_endtype = endType;\n    //strip duplicate points from path and also get index to the lowest point ...\n    if (endType == ClipperLib.EndType.etClosedLine || endType == ClipperLib.EndType.etClosedPolygon)\n      while (highI > 0 && ClipperLib.IntPoint.op_Equality(path[0], path[highI]))\n        highI--;\n    //newNode.m_polygon.set_Capacity(highI + 1);\n    newNode.m_polygon.push(path[0]);\n    var j = 0,\n      k = 0;\n    for (var i = 1; i <= highI; i++)\n      if (ClipperLib.IntPoint.op_Inequality(newNode.m_polygon[j], path[i]))\n      {\n        j++;\n        newNode.m_polygon.push(path[i]);\n        if (path[i].Y > newNode.m_polygon[k].Y || (path[i].Y == newNode.m_polygon[k].Y && path[i].X < newNode.m_polygon[k].X))\n          k = j;\n      }\n    if ((endType == ClipperLib.EndType.etClosedPolygon && j < 2) || (endType != ClipperLib.EndType.etClosedPolygon && j < 0))\n      return;\n    this.m_polyNodes.AddChild(newNode);\n    //if this path's lowest pt is lower than all the others then update m_lowest\n    if (endType != ClipperLib.EndType.etClosedPolygon)\n      return;\n    if (this.m_lowest.X < 0)\n      this.m_lowest = new ClipperLib.IntPoint(0, k);\n    else\n    {\n      var ip = this.m_polyNodes.Childs()[this.m_lowest.X].m_polygon[this.m_lowest.Y];\n      if (newNode.m_polygon[k].Y > ip.Y || (newNode.m_polygon[k].Y == ip.Y && newNode.m_polygon[k].X < ip.X))\n        this.m_lowest = new ClipperLib.IntPoint(this.m_polyNodes.ChildCount() - 1, k);\n    }\n  };\n  ClipperLib.ClipperOffset.prototype.AddPaths = function (paths, joinType, endType)\n  {\n    for (var i = 0, ilen = paths.length; i < ilen; i++)\n      this.AddPath(paths[i], joinType, endType);\n  };\n  ClipperLib.ClipperOffset.prototype.FixOrientations = function ()\n  {\n    //fixup orientations of all closed paths if the orientation of the\n    //closed path with the lowermost vertex is wrong ...\n    if (this.m_lowest.X >= 0 && !ClipperLib.Clipper.Orientation(this.m_polyNodes.Childs()[this.m_lowest.X].m_polygon))\n    {\n      for (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n      {\n        var node = this.m_polyNodes.Childs()[i];\n        if (node.m_endtype == ClipperLib.EndType.etClosedPolygon || (node.m_endtype == ClipperLib.EndType.etClosedLine && ClipperLib.Clipper.Orientation(node.m_polygon)))\n          node.m_polygon.reverse();\n      }\n    }\n    else\n    {\n      for (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n      {\n        var node = this.m_polyNodes.Childs()[i];\n        if (node.m_endtype == ClipperLib.EndType.etClosedLine && !ClipperLib.Clipper.Orientation(node.m_polygon))\n          node.m_polygon.reverse();\n      }\n    }\n  };\n  ClipperLib.ClipperOffset.GetUnitNormal = function (pt1, pt2)\n  {\n    var dx = (pt2.X - pt1.X);\n    var dy = (pt2.Y - pt1.Y);\n    if ((dx == 0) && (dy == 0))\n      return new ClipperLib.DoublePoint(0, 0);\n    var f = 1 / Math.sqrt(dx * dx + dy * dy);\n    dx *= f;\n    dy *= f;\n    return new ClipperLib.DoublePoint(dy, -dx);\n  };\n  ClipperLib.ClipperOffset.prototype.DoOffset = function (delta)\n  {\n    this.m_destPolys = new Array();\n    this.m_delta = delta;\n    //if Zero offset, just copy any CLOSED polygons to m_p and return ...\n    if (ClipperLib.ClipperBase.near_zero(delta))\n    {\n      //this.m_destPolys.set_Capacity(this.m_polyNodes.ChildCount);\n      for (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n      {\n        var node = this.m_polyNodes.Childs()[i];\n        if (node.m_endtype == ClipperLib.EndType.etClosedPolygon)\n          this.m_destPolys.push(node.m_polygon);\n      }\n      return;\n    }\n    //see offset_triginometry3.svg in the documentation folder ...\n    if (this.MiterLimit > 2)\n      this.m_miterLim = 2 / (this.MiterLimit * this.MiterLimit);\n    else\n      this.m_miterLim = 0.5;\n    var y;\n    if (this.ArcTolerance <= 0)\n      y = ClipperLib.ClipperOffset.def_arc_tolerance;\n    else if (this.ArcTolerance > Math.abs(delta) * ClipperLib.ClipperOffset.def_arc_tolerance)\n      y = Math.abs(delta) * ClipperLib.ClipperOffset.def_arc_tolerance;\n    else\n      y = this.ArcTolerance;\n    //see offset_triginometry2.svg in the documentation folder ...\n    var steps = 3.14159265358979 / Math.acos(1 - y / Math.abs(delta));\n    this.m_sin = Math.sin(ClipperLib.ClipperOffset.two_pi / steps);\n    this.m_cos = Math.cos(ClipperLib.ClipperOffset.two_pi / steps);\n    this.m_StepsPerRad = steps / ClipperLib.ClipperOffset.two_pi;\n    if (delta < 0)\n      this.m_sin = -this.m_sin;\n    //this.m_destPolys.set_Capacity(this.m_polyNodes.ChildCount * 2);\n    for (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n    {\n      var node = this.m_polyNodes.Childs()[i];\n      this.m_srcPoly = node.m_polygon;\n      var len = this.m_srcPoly.length;\n      if (len == 0 || (delta <= 0 && (len < 3 || node.m_endtype != ClipperLib.EndType.etClosedPolygon)))\n        continue;\n      this.m_destPoly = new Array();\n      if (len == 1)\n      {\n        if (node.m_jointype == ClipperLib.JoinType.jtRound)\n        {\n          var X = 1,\n            Y = 0;\n          for (var j = 1; j <= steps; j++)\n          {\n            this.m_destPoly.push(new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X + X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y + Y * delta)));\n            var X2 = X;\n            X = X * this.m_cos - this.m_sin * Y;\n            Y = X2 * this.m_sin + Y * this.m_cos;\n          }\n        }\n        else\n        {\n          var X = -1,\n            Y = -1;\n          for (var j = 0; j < 4; ++j)\n          {\n            this.m_destPoly.push(new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X + X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y + Y * delta)));\n            if (X < 0)\n              X = 1;\n            else if (Y < 0)\n              Y = 1;\n            else\n              X = -1;\n          }\n        }\n        this.m_destPolys.push(this.m_destPoly);\n        continue;\n      }\n      //build m_normals ...\n      this.m_normals.length = 0;\n      //this.m_normals.set_Capacity(len);\n      for (var j = 0; j < len - 1; j++)\n        this.m_normals.push(ClipperLib.ClipperOffset.GetUnitNormal(this.m_srcPoly[j], this.m_srcPoly[j + 1]));\n      if (node.m_endtype == ClipperLib.EndType.etClosedLine || node.m_endtype == ClipperLib.EndType.etClosedPolygon)\n        this.m_normals.push(ClipperLib.ClipperOffset.GetUnitNormal(this.m_srcPoly[len - 1], this.m_srcPoly[0]));\n      else\n        this.m_normals.push(new ClipperLib.DoublePoint(this.m_normals[len - 2]));\n      if (node.m_endtype == ClipperLib.EndType.etClosedPolygon)\n      {\n        var k = len - 1;\n        for (var j = 0; j < len; j++)\n          k = this.OffsetPoint(j, k, node.m_jointype);\n        this.m_destPolys.push(this.m_destPoly);\n      }\n      else if (node.m_endtype == ClipperLib.EndType.etClosedLine)\n      {\n        var k = len - 1;\n        for (var j = 0; j < len; j++)\n          k = this.OffsetPoint(j, k, node.m_jointype);\n        this.m_destPolys.push(this.m_destPoly);\n        this.m_destPoly = new Array();\n        //re-build m_normals ...\n        var n = this.m_normals[len - 1];\n        for (var j = len - 1; j > 0; j--)\n          this.m_normals[j] = new ClipperLib.DoublePoint(-this.m_normals[j - 1].X, -this.m_normals[j - 1].Y);\n        this.m_normals[0] = new ClipperLib.DoublePoint(-n.X, -n.Y);\n        k = 0;\n        for (var j = len - 1; j >= 0; j--)\n          k = this.OffsetPoint(j, k, node.m_jointype);\n        this.m_destPolys.push(this.m_destPoly);\n      }\n      else\n      {\n        var k = 0;\n        for (var j = 1; j < len - 1; ++j)\n          k = this.OffsetPoint(j, k, node.m_jointype);\n        var pt1;\n        if (node.m_endtype == ClipperLib.EndType.etOpenButt)\n        {\n          var j = len - 1;\n          pt1 = new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[j].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[j].Y * delta));\n          this.m_destPoly.push(pt1);\n          pt1 = new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X - this.m_normals[j].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y - this.m_normals[j].Y * delta));\n          this.m_destPoly.push(pt1);\n        }\n        else\n        {\n          var j = len - 1;\n          k = len - 2;\n          this.m_sinA = 0;\n          this.m_normals[j] = new ClipperLib.DoublePoint(-this.m_normals[j].X, -this.m_normals[j].Y);\n          if (node.m_endtype == ClipperLib.EndType.etOpenSquare)\n            this.DoSquare(j, k);\n          else\n            this.DoRound(j, k);\n        }\n        //re-build m_normals ...\n        for (var j = len - 1; j > 0; j--)\n          this.m_normals[j] = new ClipperLib.DoublePoint(-this.m_normals[j - 1].X, -this.m_normals[j - 1].Y);\n        this.m_normals[0] = new ClipperLib.DoublePoint(-this.m_normals[1].X, -this.m_normals[1].Y);\n        k = len - 1;\n        for (var j = k - 1; j > 0; --j)\n          k = this.OffsetPoint(j, k, node.m_jointype);\n        if (node.m_endtype == ClipperLib.EndType.etOpenButt)\n        {\n          pt1 = new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X - this.m_normals[0].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y - this.m_normals[0].Y * delta));\n          this.m_destPoly.push(pt1);\n          pt1 = new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X + this.m_normals[0].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y + this.m_normals[0].Y * delta));\n          this.m_destPoly.push(pt1);\n        }\n        else\n        {\n          k = 1;\n          this.m_sinA = 0;\n          if (node.m_endtype == ClipperLib.EndType.etOpenSquare)\n            this.DoSquare(0, 1);\n          else\n            this.DoRound(0, 1);\n        }\n        this.m_destPolys.push(this.m_destPoly);\n      }\n    }\n  };\n  ClipperLib.ClipperOffset.prototype.Execute = function ()\n  {\n    var a = arguments,\n      ispolytree = a[0] instanceof ClipperLib.PolyTree;\n    if (!ispolytree) // function (solution, delta)\n    {\n      var solution = a[0],\n        delta = a[1];\n      ClipperLib.Clear(solution);\n      this.FixOrientations();\n      this.DoOffset(delta);\n      //now clean up 'corners' ...\n      var clpr = new ClipperLib.Clipper(0);\n      clpr.AddPaths(this.m_destPolys, ClipperLib.PolyType.ptSubject, true);\n      if (delta > 0)\n      {\n        clpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftPositive, ClipperLib.PolyFillType.pftPositive);\n      }\n      else\n      {\n        var r = ClipperLib.Clipper.GetBounds(this.m_destPolys);\n        var outer = new ClipperLib.Path();\n        outer.push(new ClipperLib.IntPoint(r.left - 10, r.bottom + 10));\n        outer.push(new ClipperLib.IntPoint(r.right + 10, r.bottom + 10));\n        outer.push(new ClipperLib.IntPoint(r.right + 10, r.top - 10));\n        outer.push(new ClipperLib.IntPoint(r.left - 10, r.top - 10));\n        clpr.AddPath(outer, ClipperLib.PolyType.ptSubject, true);\n        clpr.ReverseSolution = true;\n        clpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftNegative, ClipperLib.PolyFillType.pftNegative);\n        if (solution.length > 0)\n          solution.splice(0, 1);\n      }\n      //console.log(JSON.stringify(solution));\n    }\n    else // function (polytree, delta)\n    {\n      var solution = a[0],\n        delta = a[1];\n      solution.Clear();\n      this.FixOrientations();\n      this.DoOffset(delta);\n      //now clean up 'corners' ...\n      var clpr = new ClipperLib.Clipper(0);\n      clpr.AddPaths(this.m_destPolys, ClipperLib.PolyType.ptSubject, true);\n      if (delta > 0)\n      {\n        clpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftPositive, ClipperLib.PolyFillType.pftPositive);\n      }\n      else\n      {\n        var r = ClipperLib.Clipper.GetBounds(this.m_destPolys);\n        var outer = new ClipperLib.Path();\n        outer.push(new ClipperLib.IntPoint(r.left - 10, r.bottom + 10));\n        outer.push(new ClipperLib.IntPoint(r.right + 10, r.bottom + 10));\n        outer.push(new ClipperLib.IntPoint(r.right + 10, r.top - 10));\n        outer.push(new ClipperLib.IntPoint(r.left - 10, r.top - 10));\n        clpr.AddPath(outer, ClipperLib.PolyType.ptSubject, true);\n        clpr.ReverseSolution = true;\n        clpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftNegative, ClipperLib.PolyFillType.pftNegative);\n        //remove the outer PolyNode rectangle ...\n        if (solution.ChildCount() == 1 && solution.Childs()[0].ChildCount() > 0)\n        {\n          var outerNode = solution.Childs()[0];\n          //solution.Childs.set_Capacity(outerNode.ChildCount);\n          solution.Childs()[0] = outerNode.Childs()[0];\n          for (var i = 1; i < outerNode.ChildCount(); i++)\n            solution.AddChild(outerNode.Childs()[i]);\n        }\n        else\n          solution.Clear();\n      }\n    }\n  };\n  ClipperLib.ClipperOffset.prototype.OffsetPoint = function (j, k, jointype)\n  {\n    this.m_sinA = (this.m_normals[k].X * this.m_normals[j].Y - this.m_normals[j].X * this.m_normals[k].Y);\n    if (this.m_sinA < 0.00005 && this.m_sinA > -0.00005)\n      return k;\n    else if (this.m_sinA > 1)\n      this.m_sinA = 1.0;\n    else if (this.m_sinA < -1)\n      this.m_sinA = -1.0;\n    if (this.m_sinA * this.m_delta < 0)\n    {\n      this.m_destPoly.push(new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[k].X * this.m_delta),\n        ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[k].Y * this.m_delta)));\n      this.m_destPoly.push(new ClipperLib.IntPoint(this.m_srcPoly[j]));\n      this.m_destPoly.push(new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[j].X * this.m_delta),\n        ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[j].Y * this.m_delta)));\n    }\n    else\n      switch (jointype)\n      {\n      case ClipperLib.JoinType.jtMiter:\n        {\n          var r = 1 + (this.m_normals[j].X * this.m_normals[k].X + this.m_normals[j].Y * this.m_normals[k].Y);\n          if (r >= this.m_miterLim)\n            this.DoMiter(j, k, r);\n          else\n            this.DoSquare(j, k);\n          break;\n        }\n      case ClipperLib.JoinType.jtSquare:\n        this.DoSquare(j, k);\n        break;\n      case ClipperLib.JoinType.jtRound:\n        this.DoRound(j, k);\n        break;\n      }\n    k = j;\n    return k;\n  };\n  ClipperLib.ClipperOffset.prototype.DoSquare = function (j, k)\n  {\n    var dx = Math.tan(Math.atan2(this.m_sinA,\n      this.m_normals[k].X * this.m_normals[j].X + this.m_normals[k].Y * this.m_normals[j].Y) / 4);\n    this.m_destPoly.push(new ClipperLib.IntPoint(\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_delta * (this.m_normals[k].X - this.m_normals[k].Y * dx)),\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_delta * (this.m_normals[k].Y + this.m_normals[k].X * dx))));\n    this.m_destPoly.push(new ClipperLib.IntPoint(\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_delta * (this.m_normals[j].X + this.m_normals[j].Y * dx)),\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_delta * (this.m_normals[j].Y - this.m_normals[j].X * dx))));\n  };\n  ClipperLib.ClipperOffset.prototype.DoMiter = function (j, k, r)\n  {\n    var q = this.m_delta / r;\n    this.m_destPoly.push(new ClipperLib.IntPoint(\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + (this.m_normals[k].X + this.m_normals[j].X) * q),\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + (this.m_normals[k].Y + this.m_normals[j].Y) * q)));\n  };\n  ClipperLib.ClipperOffset.prototype.DoRound = function (j, k)\n  {\n    var a = Math.atan2(this.m_sinA,\n      this.m_normals[k].X * this.m_normals[j].X + this.m_normals[k].Y * this.m_normals[j].Y);\n    var steps = ClipperLib.Cast_Int32(ClipperLib.ClipperOffset.Round(this.m_StepsPerRad * Math.abs(a)));\n    var X = this.m_normals[k].X,\n      Y = this.m_normals[k].Y,\n      X2;\n    for (var i = 0; i < steps; ++i)\n    {\n      this.m_destPoly.push(new ClipperLib.IntPoint(\n        ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + X * this.m_delta),\n        ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + Y * this.m_delta)));\n      X2 = X;\n      X = X * this.m_cos - this.m_sin * Y;\n      Y = X2 * this.m_sin + Y * this.m_cos;\n    }\n    this.m_destPoly.push(new ClipperLib.IntPoint(\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[j].X * this.m_delta),\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[j].Y * this.m_delta)));\n  };\n  ClipperLib.Error = function (message)\n  {\n    try\n    {\n      throw new Error(message);\n    }\n    catch (err)\n    {\n      alert(err.message);\n    }\n  };\n  // ---------------------------------\n  // JS extension by Timo 2013\n  ClipperLib.JS = {};\n  ClipperLib.JS.AreaOfPolygon = function (poly, scale)\n  {\n    if (!scale) scale = 1;\n    return ClipperLib.Clipper.Area(poly) / (scale * scale);\n  };\n  ClipperLib.JS.AreaOfPolygons = function (poly, scale)\n  {\n    if (!scale) scale = 1;\n    var area = 0;\n    for (var i = 0; i < poly.length; i++)\n    {\n      area += ClipperLib.Clipper.Area(poly[i]);\n    }\n    return area / (scale * scale);\n  };\n  ClipperLib.JS.BoundsOfPath = function (path, scale)\n  {\n    return ClipperLib.JS.BoundsOfPaths([path], scale);\n  };\n  ClipperLib.JS.BoundsOfPaths = function (paths, scale)\n  {\n    if (!scale) scale = 1;\n    var bounds = ClipperLib.Clipper.GetBounds(paths);\n    bounds.left /= scale;\n    bounds.bottom /= scale;\n    bounds.right /= scale;\n    bounds.top /= scale;\n    return bounds;\n  };\n  // Clean() joins vertices that are too near each other\n  // and causes distortion to offsetted polygons without cleaning\n  ClipperLib.JS.Clean = function (polygon, delta)\n  {\n    if (!(polygon instanceof Array)) return [];\n    var isPolygons = polygon[0] instanceof Array;\n    var polygon = ClipperLib.JS.Clone(polygon);\n    if (typeof delta != \"number\" || delta === null)\n    {\n      ClipperLib.Error(\"Delta is not a number in Clean().\");\n      return polygon;\n    }\n    if (polygon.length === 0 || (polygon.length == 1 && polygon[0].length === 0) || delta < 0) return polygon;\n    if (!isPolygons) polygon = [polygon];\n    var k_length = polygon.length;\n    var len, poly, result, d, p, j, i;\n    var results = [];\n    for (var k = 0; k < k_length; k++)\n    {\n      poly = polygon[k];\n      len = poly.length;\n      if (len === 0) continue;\n      else if (len < 3)\n      {\n        result = poly;\n        results.push(result);\n        continue;\n      }\n      result = poly;\n      d = delta * delta;\n      //d = Math.floor(c_delta * c_delta);\n      p = poly[0];\n      j = 1;\n      for (i = 1; i < len; i++)\n      {\n        if ((poly[i].X - p.X) * (poly[i].X - p.X) +\n          (poly[i].Y - p.Y) * (poly[i].Y - p.Y) <= d)\n          continue;\n        result[j] = poly[i];\n        p = poly[i];\n        j++;\n      }\n      p = poly[j - 1];\n      if ((poly[0].X - p.X) * (poly[0].X - p.X) +\n        (poly[0].Y - p.Y) * (poly[0].Y - p.Y) <= d)\n        j--;\n      if (j < len)\n        result.splice(j, len - j);\n      if (result.length) results.push(result);\n    }\n    if (!isPolygons && results.length) results = results[0];\n    else if (!isPolygons && results.length === 0) results = [];\n    else if (isPolygons && results.length === 0) results = [\n      []\n    ];\n    return results;\n  }\n  // Make deep copy of Polygons or Polygon\n  // so that also IntPoint objects are cloned and not only referenced\n  // This should be the fastest way\n  ClipperLib.JS.Clone = function (polygon)\n  {\n    if (!(polygon instanceof Array)) return [];\n    if (polygon.length === 0) return [];\n    else if (polygon.length == 1 && polygon[0].length === 0) return [[]];\n    var isPolygons = polygon[0] instanceof Array;\n    if (!isPolygons) polygon = [polygon];\n    var len = polygon.length,\n      plen, i, j, result;\n    var results = new Array(len);\n    for (i = 0; i < len; i++)\n    {\n      plen = polygon[i].length;\n      result = new Array(plen);\n      for (j = 0; j < plen; j++)\n      {\n        result[j] = {\n          X: polygon[i][j].X,\n          Y: polygon[i][j].Y\n        };\n      }\n      results[i] = result;\n    }\n    if (!isPolygons) results = results[0];\n    return results;\n  };\n  // Removes points that doesn't affect much to the visual appearance.\n  // If middle point is at or under certain distance (tolerance) of the line segment between \n  // start and end point, the middle point is removed.\n  ClipperLib.JS.Lighten = function (polygon, tolerance)\n  {\n    if (!(polygon instanceof Array)) return [];\n    if (typeof tolerance != \"number\" || tolerance === null)\n    {\n      ClipperLib.Error(\"Tolerance is not a number in Lighten().\")\n      return ClipperLib.JS.Clone(polygon);\n    }\n    if (polygon.length === 0 || (polygon.length == 1 && polygon[0].length === 0) || tolerance < 0)\n    {\n      return ClipperLib.JS.Clone(polygon);\n    }\n    if (!(polygon[0] instanceof Array)) polygon = [polygon];\n    var i, j, poly, k, poly2, plen, A, B, P, d, rem, addlast;\n    var bxax, byay, l, ax, ay;\n    var len = polygon.length;\n    var toleranceSq = tolerance * tolerance;\n    var results = [];\n    for (i = 0; i < len; i++)\n    {\n      poly = polygon[i];\n      plen = poly.length;\n      if (plen == 0) continue;\n      for (k = 0; k < 1000000; k++) // could be forever loop, but wiser to restrict max repeat count\n      {\n        poly2 = [];\n        plen = poly.length;\n        // the first have to added to the end, if first and last are not the same\n        // this way we ensure that also the actual last point can be removed if needed\n        if (poly[plen - 1].X != poly[0].X || poly[plen - 1].Y != poly[0].Y)\n        {\n          addlast = 1;\n          poly.push(\n          {\n            X: poly[0].X,\n            Y: poly[0].Y\n          });\n          plen = poly.length;\n        }\n        else addlast = 0;\n        rem = []; // Indexes of removed points\n        for (j = 0; j < plen - 2; j++)\n        {\n          A = poly[j]; // Start point of line segment\n          P = poly[j + 1]; // Middle point. This is the one to be removed.\n          B = poly[j + 2]; // End point of line segment\n          ax = A.X;\n          ay = A.Y;\n          bxax = B.X - ax;\n          byay = B.Y - ay;\n          if (bxax !== 0 || byay !== 0) // To avoid Nan, when A==P && P==B. And to avoid peaks (A==B && A!=P), which have lenght, but not area.\n          {\n            l = ((P.X - ax) * bxax + (P.Y - ay) * byay) / (bxax * bxax + byay * byay);\n            if (l > 1)\n            {\n              ax = B.X;\n              ay = B.Y;\n            }\n            else if (l > 0)\n            {\n              ax += bxax * l;\n              ay += byay * l;\n            }\n          }\n          bxax = P.X - ax;\n          byay = P.Y - ay;\n          d = bxax * bxax + byay * byay;\n          if (d <= toleranceSq)\n          {\n            rem[j + 1] = 1;\n            j++; // when removed, transfer the pointer to the next one\n          }\n        }\n        // add all unremoved points to poly2\n        poly2.push(\n        {\n          X: poly[0].X,\n          Y: poly[0].Y\n        });\n        for (j = 1; j < plen - 1; j++)\n          if (!rem[j]) poly2.push(\n          {\n            X: poly[j].X,\n            Y: poly[j].Y\n          });\n        poly2.push(\n        {\n          X: poly[plen - 1].X,\n          Y: poly[plen - 1].Y\n        });\n        // if the first point was added to the end, remove it\n        if (addlast) poly.pop();\n        // break, if there was not anymore removed points\n        if (!rem.length) break;\n        // else continue looping using poly2, to check if there are points to remove\n        else poly = poly2;\n      }\n      plen = poly2.length;\n      // remove duplicate from end, if needed\n      if (poly2[plen - 1].X == poly2[0].X && poly2[plen - 1].Y == poly2[0].Y)\n      {\n        poly2.pop();\n      }\n      if (poly2.length > 2) // to avoid two-point-polygons\n        results.push(poly2);\n    }\n    if (!polygon[0] instanceof Array) results = results[0];\n    if (typeof (results) == \"undefined\") results = [\n      []\n    ];\n    return results;\n  }\n  ClipperLib.JS.PerimeterOfPath = function (path, closed, scale)\n  {\n    if (typeof (path) == \"undefined\") return 0;\n    var sqrt = Math.sqrt;\n    var perimeter = 0.0;\n    var p1, p2, p1x = 0.0,\n      p1y = 0.0,\n      p2x = 0.0,\n      p2y = 0.0;\n    var j = path.length;\n    if (j < 2) return 0;\n    if (closed)\n    {\n      path[j] = path[0];\n      j++;\n    }\n    while (--j)\n    {\n      p1 = path[j];\n      p1x = p1.X;\n      p1y = p1.Y;\n      p2 = path[j - 1];\n      p2x = p2.X;\n      p2y = p2.Y;\n      perimeter += sqrt((p1x - p2x) * (p1x - p2x) + (p1y - p2y) * (p1y - p2y));\n    }\n    if (closed) path.pop();\n    return perimeter / scale;\n  };\n  ClipperLib.JS.PerimeterOfPaths = function (paths, closed, scale)\n  {\n    if (!scale) scale = 1;\n    var perimeter = 0;\n    for (var i = 0; i < paths.length; i++)\n    {\n      perimeter += ClipperLib.JS.PerimeterOfPath(paths[i], closed, scale);\n    }\n    return perimeter;\n  };\n  ClipperLib.JS.ScaleDownPath = function (path, scale)\n  {\n    var i, p;\n    if (!scale) scale = 1;\n    i = path.length;\n    while (i--)\n    {\n      p = path[i];\n      p.X = p.X / scale;\n      p.Y = p.Y / scale;\n    }\n  };\n  ClipperLib.JS.ScaleDownPaths = function (paths, scale)\n  {\n    var i, j, p, round = Math.round;\n    if (!scale) scale = 1;\n    i = paths.length;\n    while (i--)\n    {\n      j = paths[i].length;\n      while (j--)\n      {\n        p = paths[i][j];\n        p.X = p.X / scale;\n        p.Y = p.Y / scale;\n      }\n    }\n  };\n  ClipperLib.JS.ScaleUpPath = function (path, scale)\n  {\n    var i, p, round = Math.round;\n    if (!scale) scale = 1;\n    i = path.length;\n    while (i--)\n    {\n      p = path[i];\n      p.X = round(p.X * scale);\n      p.Y = round(p.Y * scale);\n    }\n  };\n  ClipperLib.JS.ScaleUpPaths = function (paths, scale)\n  {\n    var i, j, p, round = Math.round;\n    if (!scale) scale = 1;\n    i = paths.length;\n    while (i--)\n    {\n      j = paths[i].length;\n      while (j--)\n      {\n        p = paths[i][j];\n        p.X = round(p.X * scale);\n        p.Y = round(p.Y * scale);\n      }\n    }\n  };\n  ClipperLib.ExPolygons = function ()\n  {\n    return [];\n  }\n  ClipperLib.ExPolygon = function ()\n  {\n    this.outer = null;\n    this.holes = null;\n  };\n  ClipperLib.JS.AddOuterPolyNodeToExPolygons = function (polynode, expolygons)\n  {\n    var ep = new ClipperLib.ExPolygon();\n    ep.outer = polynode.Contour();\n    var childs = polynode.Childs();\n    var ilen = childs.length;\n    ep.holes = new Array(ilen);\n    var node, n, i, j, childs2, jlen;\n    for (i = 0; i < ilen; i++)\n    {\n      node = childs[i];\n      ep.holes[i] = node.Contour();\n      //Add outer polygons contained by (nested within) holes ...\n      for (j = 0, childs2 = node.Childs(), jlen = childs2.length; j < jlen; j++)\n      {\n        n = childs2[j];\n        ClipperLib.JS.AddOuterPolyNodeToExPolygons(n, expolygons);\n      }\n    }\n    expolygons.push(ep);\n  };\n  ClipperLib.JS.ExPolygonsToPaths = function (expolygons)\n  {\n    var a, i, alen, ilen;\n    var paths = new ClipperLib.Paths();\n    for (a = 0, alen = expolygons.length; a < alen; a++)\n    {\n      paths.push(expolygons[a].outer);\n      for (i = 0, ilen = expolygons[a].holes.length; i < ilen; i++)\n      {\n        paths.push(expolygons[a].holes[i]);\n      }\n    }\n    return paths;\n  }\n  ClipperLib.JS.PolyTreeToExPolygons = function (polytree)\n  {\n    var expolygons = new ClipperLib.ExPolygons();\n    var node, i, childs, ilen;\n    for (i = 0, childs = polytree.Childs(), ilen = childs.length; i < ilen; i++)\n    {\n      node = childs[i];\n      ClipperLib.JS.AddOuterPolyNodeToExPolygons(node, expolygons);\n    }\n    return expolygons;\n  };\n})();\n\n},{}],2:[function(require,module,exports){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.opentype = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// Run-time checking of preconditions.\n\n'use strict';\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nexports.argument = function(predicate, message) {\n    if (!predicate) {\n        throw new Error(message);\n    }\n};\n\n// Precondition function that checks if the given assertion is true.\n// If not, it will throw an error.\nexports.assert = exports.argument;\n\n},{}],2:[function(require,module,exports){\n// Drawing utility functions.\n\n'use strict';\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexports.line = line;\n\n},{}],3:[function(require,module,exports){\n// Glyph encoding\n\n'use strict';\n\nvar cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nvar cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n// This is the encoding used for fonts created from scratch.\n// It loops through all glyphs and finds the appropriate unicode value.\n// Since it's linear time, other encodings will be faster.\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    var code = c.charCodeAt(0);\n    var glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs[i];\n            for (var j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    } else {\n        return null;\n    }\n};\n\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n};\n\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    var code = s.charCodeAt(0);\n    var charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction GlyphNames(post) {\n    var i;\n    switch (post.version) {\n    case 1:\n        this.names = exports.standardNames.slice();\n        break;\n    case 2:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] < exports.standardNames.length) {\n                this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n            } else {\n                this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n            }\n        }\n\n        break;\n    case 2.5:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n        }\n\n        break;\n    case 3:\n        this.names = [];\n        break;\n    }\n}\n\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNames(font) {\n    var glyph;\n    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    var charCodes = Object.keys(glyphIndexMap);\n    for (var i = 0; i < charCodes.length; i += 1) {\n        var c = charCodes[i];\n        var glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs[glyphIndex];\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs[i];\n        if (font.cffEncoding) {\n            glyph.name = font.cffEncoding.charset[i];\n        } else {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexports.cffStandardStrings = cffStandardStrings;\nexports.cffStandardEncoding = cffStandardEncoding;\nexports.cffExpertEncoding = cffExpertEncoding;\nexports.standardNames = standardNames;\nexports.DefaultEncoding = DefaultEncoding;\nexports.CmapEncoding = CmapEncoding;\nexports.CffEncoding = CffEncoding;\nexports.GlyphNames = GlyphNames;\nexports.addGlyphNames = addGlyphNames;\n\n},{}],4:[function(require,module,exports){\n// The Font object\n\n'use strict';\n\nvar path = require('./path');\nvar sfnt = require('./tables/sfnt');\nvar encoding = require('./encoding');\n\n// A Font represents a loaded OpenType font file.\n// It contains a set of glyphs and methods to draw text on a drawing context,\n// or to get a path representing the text.\nfunction Font(options) {\n    options = options || {};\n\n    // OS X will complain if the names are empty, so we put a single space everywhere by default.\n    this.familyName = options.familyName || ' ';\n    this.styleName = options.styleName || ' ';\n    this.designer = options.designer || ' ';\n    this.designerURL = options.designerURL || ' ';\n    this.manufacturer = options.manufacturer || ' ';\n    this.manufacturerURL = options.manufacturerURL || ' ';\n    this.license = options.license || ' ';\n    this.licenseURL = options.licenseURL || ' ';\n    this.version = options.version || 'Version 0.1';\n    this.description = options.description || ' ';\n    this.copyright = options.copyright || ' ';\n    this.trademark = options.trademark || ' ';\n    this.unitsPerEm = options.unitsPerEm || 1000;\n    this.ascender = options.ascender;\n    this.descender = options.descender;\n    this.supported = true;\n    this.glyphs = options.glyphs || [];\n    this.encoding = new encoding.DefaultEncoding(this);\n    this.tables = {};\n}\n\n// Check if the font has a glyph for the given character.\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n// Convert the given character to a single glyph index.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n// Convert the given character to a single Glyph object.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyph = function(c) {\n    var glyphIndex = this.charToGlyphIndex(c);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\n// Convert the given text to a list of Glyph objects.\n// Note that there is no strict one-to-one mapping between characters and\n// glyphs, so the list of returned glyphs can be larger or smaller than the\n// length of the given string.\nFont.prototype.stringToGlyphs = function(s) {\n    var glyphs = [];\n    for (var i = 0; i < s.length; i += 1) {\n        var c = s[i];\n        glyphs.push(this.charToGlyph(c));\n    }\n\n    return glyphs;\n};\n\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\nFont.prototype.nameToGlyph = function(name) {\n    var glyphIndex = this.nametoGlyphIndex(name);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n// Retrieve the value of the kerning pair between the left glyph (or its index)\n// and the right glyph (or its index). If no kerning pair is found, return 0.\n// The kerning value gets added to the advance width when calculating the spacing\n// between glyphs.\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.getGposKerningValue;\n    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n};\n\n// Helper function that invokes the given callback for each glyph in the given text.\n// The callback gets `(glyph, x, y, fontSize, options)`.\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    if (!this.supported) {\n        return;\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || {};\n    var kerning = options.kerning === undefined ? true : options.kerning;\n    var fontScale = 1 / this.unitsPerEm * fontSize;\n    var glyphs = this.stringToGlyphs(text);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        callback(glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (kerning && i < glyphs.length - 1) {\n            var kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n    }\n};\n\n// Create a Path object that represents the given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns a Path object.\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    var fullPath = new path.Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        fullPath.extend(glyphPath);\n    });\n\n    return fullPath;\n};\n\n// Draw the text on the given drawing context.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n// Draw the points of all glyphs in the text.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Draw lines indicating important font measurements for all glyphs in the text.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Validate\nFont.prototype.validate = function() {\n    var warnings = [];\n    var _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertStringAttribute(attrName) {\n        assert(_this[attrName] && _this[attrName].trim().length > 0, 'No ' + attrName + ' specified.');\n    }\n\n    // Identification information\n    assertStringAttribute('familyName');\n    assertStringAttribute('weightName');\n    assertStringAttribute('manufacturer');\n    assertStringAttribute('copyright');\n    assertStringAttribute('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n\nFont.prototype.toBuffer = function() {\n    var sfntTable = this.toTables();\n    var bytes = sfntTable.encode();\n    var buffer = new ArrayBuffer(bytes.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n// Initiate a download of the OpenType font.\nFont.prototype.download = function() {\n    var fileName = this.familyName.replace(/\\s/g, '') + '-' + this.styleName + '.otf';\n    var buffer = this.toBuffer();\n\n    window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n    window.requestFileSystem(window.TEMPORARY, buffer.byteLength, function(fs) {\n        fs.root.getFile(fileName, {create: true}, function(fileEntry) {\n            fileEntry.createWriter(function(writer) {\n                var dataView = new DataView(buffer);\n                var blob = new Blob([dataView], {type: 'font/opentype'});\n                writer.write(blob);\n\n                writer.addEventListener('writeend', function() {\n                    // Navigating to the file will download it.\n                    location.href = fileEntry.toURL();\n                }, false);\n            });\n        });\n    },\n\n    function(err) {\n        throw err;\n    });\n};\n\nexports.Font = Font;\n\n},{\"./encoding\":3,\"./path\":8,\"./tables/sfnt\":23}],5:[function(require,module,exports){\n// The Glyph object\n\n'use strict';\n\nvar check = require('./check');\nvar draw = require('./draw');\nvar path = require('./path');\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\nfunction Glyph(options) {\n    this.font = options.font || null;\n    this.index = options.index || 0;\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n    this.xMin = options.xMin || 0;\n    this.yMin = options.yMin || 0;\n    this.xMax = options.xMax || 0;\n    this.yMax = options.yMax || 0;\n    this.advanceWidth = options.advanceWidth || 0;\n    this.path = options.path || null;\n}\n\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n// Convert the glyph to a Path we can draw on a drawing context.\n//\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.getPath = function(x, y, fontSize) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n    var p = new path.Path();\n    var commands = this.path.commands;\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                               x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                      x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n                      x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n// Split the glyph into contours.\n// This function is here for backwards compatibility, and to\n// provide raw access to the TrueType glyph outlines.\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < this.points.length; i += 1) {\n        var pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n// Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\nGlyph.prototype.getMetrics = function() {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: 0\n    };\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// Draw the glyph on the given context.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.draw = function(ctx, x, y, fontSize) {\n    this.getPath(x, y, fontSize).draw(ctx);\n};\n\n// Draw the points of the glyph.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n\n    function drawCircles(l, x, y, scale) {\n        var PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (var j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n\n    var blueCircles = [];\n    var redCircles = [];\n    var path = this.path;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n// Draw lines indicating important font measurements.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    var scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (this.xMin * scale), -10000, x + (this.xMin * scale), 10000);\n    draw.line(ctx, x + (this.xMax * scale), -10000, x + (this.xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-this.yMin * scale), 10000, y + (-this.yMin * scale));\n    draw.line(ctx, -10000, y + (-this.yMax * scale), 10000, y + (-this.yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (this.advanceWidth * scale), -10000, x + (this.advanceWidth * scale), 10000);\n};\n\nexports.Glyph = Glyph;\n\n},{\"./check\":1,\"./draw\":2,\"./path\":8}],6:[function(require,module,exports){\n// opentype.js\n// https://github.com/nodebox/opentype.js\n// (c) 2014 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global ArrayBuffer, DataView, Uint8Array, XMLHttpRequest  */\n\n'use strict';\n\nvar encoding = require('./encoding');\nvar _font = require('./font');\nvar glyph = require('./glyph');\nvar parse = require('./parse');\nvar path = require('./path');\n\nvar cmap = require('./tables/cmap');\nvar cff = require('./tables/cff');\nvar glyf = require('./tables/glyf');\nvar gpos = require('./tables/gpos');\nvar head = require('./tables/head');\nvar hhea = require('./tables/hhea');\nvar hmtx = require('./tables/hmtx');\nvar kern = require('./tables/kern');\nvar loca = require('./tables/loca');\nvar maxp = require('./tables/maxp');\nvar _name = require('./tables/name');\nvar os2 = require('./tables/os2');\nvar post = require('./tables/post');\n\n// File loaders /////////////////////////////////////////////////////////\n\n// Convert a Node.js Buffer to an ArrayBuffer\nfunction toArrayBuffer(buffer) {\n    var arrayBuffer = new ArrayBuffer(buffer.length);\n    var data = new Uint8Array(arrayBuffer);\n    for (var i = 0; i < buffer.length; i += 1) {\n        data[i] = buffer[i];\n    }\n\n    return arrayBuffer;\n}\n\nfunction loadFromFile(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, toArrayBuffer(buffer));\n    });\n}\n\nfunction loadFromUrl(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.status !== 200) {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n\n        return callback(null, request.response);\n    };\n\n    request.send();\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n// Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n// If the file could not be parsed (most likely because it contains Postscript outlines)\n// we return an empty Font object with the `supported` flag set to `false`.\nfunction parseBuffer(buffer) {\n    var indexToLocFormat;\n    var hmtxOffset;\n    var glyfOffset;\n    var locaOffset;\n    var cffOffset;\n    var kernOffset;\n    var gposOffset;\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n\n    var font = new _font.Font();\n    var data = new DataView(buffer, 0);\n\n    var version = parse.getFixed(data, 0);\n    if (version === 1.0) {\n        font.outlinesFormat = 'truetype';\n    } else {\n        version = parse.getTag(data, 0);\n        if (version === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType version ' + version);\n        }\n    }\n\n    var numTables = parse.getUShort(data, 4);\n\n    // Offset into the table records.\n    var p = 12;\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var offset = parse.getULong(data, p + 8);\n        switch (tag) {\n        case 'cmap':\n            font.tables.cmap = cmap.parse(data, offset);\n            font.encoding = new encoding.CmapEncoding(font.tables.cmap);\n            if (!font.encoding) {\n                font.supported = false;\n            }\n\n            break;\n        case 'head':\n            font.tables.head = head.parse(data, offset);\n            font.unitsPerEm = font.tables.head.unitsPerEm;\n            indexToLocFormat = font.tables.head.indexToLocFormat;\n            break;\n        case 'hhea':\n            font.tables.hhea = hhea.parse(data, offset);\n            font.ascender = font.tables.hhea.ascender;\n            font.descender = font.tables.hhea.descender;\n            font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n            break;\n        case 'hmtx':\n            hmtxOffset = offset;\n            break;\n        case 'maxp':\n            font.tables.maxp = maxp.parse(data, offset);\n            font.numGlyphs = font.tables.maxp.numGlyphs;\n            break;\n        case 'name':\n            font.tables.name = _name.parse(data, offset);\n            font.familyName = font.tables.name.fontFamily;\n            font.styleName = font.tables.name.fontSubfamily;\n            break;\n        case 'OS/2':\n            font.tables.os2 = os2.parse(data, offset);\n            break;\n        case 'post':\n            font.tables.post = post.parse(data, offset);\n            font.glyphNames = new encoding.GlyphNames(font.tables.post);\n            break;\n        case 'glyf':\n            glyfOffset = offset;\n            break;\n        case 'loca':\n            locaOffset = offset;\n            break;\n        case 'CFF ':\n            cffOffset = offset;\n            break;\n        case 'kern':\n            kernOffset = offset;\n            break;\n        case 'GPOS':\n            gposOffset = offset;\n            break;\n        }\n        p += 16;\n    }\n\n    if (glyfOffset && locaOffset) {\n        var shortVersion = indexToLocFormat === 0;\n        var locaTable = loca.parse(data, locaOffset, font.numGlyphs, shortVersion);\n        font.glyphs = glyf.parse(data, glyfOffset, locaTable, font);\n        hmtx.parse(data, hmtxOffset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n        encoding.addGlyphNames(font);\n    } else if (cffOffset) {\n        cff.parse(data, cffOffset, font);\n        encoding.addGlyphNames(font);\n    } else {\n        font.supported = false;\n    }\n\n    if (font.supported) {\n        if (kernOffset) {\n            font.kerningPairs = kern.parse(data, kernOffset);\n        } else {\n            font.kerningPairs = {};\n        }\n\n        if (gposOffset) {\n            gpos.parse(data, gposOffset, font);\n        }\n    }\n\n    return font;\n}\n\n// Asynchronously load the font from a URL or a filesystem. When done, call the callback\n// with two arguments `(err, font)`. The `err` will be null on success,\n// the `font` is a Font object.\n//\n// We use the node.js callback convention so that\n// opentype.js can integrate with frameworks like async.js.\nfunction load(url, callback) {\n    var isNode = typeof window === 'undefined';\n    var loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function(err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n\n        var font = parseBuffer(arrayBuffer);\n        if (!font.supported) {\n            return callback('Font is not supported (is this a Postscript font?)');\n        }\n\n        return callback(null, font);\n    });\n}\n\nexports._parse = parse;\nexports.Font = _font.Font;\nexports.Glyph = glyph.Glyph;\nexports.Path = path.Path;\nexports.parse = parseBuffer;\nexports.load = load;\n\n},{\"./encoding\":3,\"./font\":4,\"./glyph\":5,\"./parse\":7,\"./path\":8,\"./tables/cff\":10,\"./tables/cmap\":11,\"./tables/glyf\":12,\"./tables/gpos\":13,\"./tables/head\":14,\"./tables/hhea\":15,\"./tables/hmtx\":16,\"./tables/kern\":17,\"./tables/loca\":18,\"./tables/maxp\":19,\"./tables/name\":20,\"./tables/os2\":21,\"./tables/post\":22,\"fs\":undefined}],7:[function(require,module,exports){\n// Parsing utility functions\n\n'use strict';\n\n// Retrieve an unsigned byte from the DataView.\nexports.getByte = function getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n};\n\nexports.getCard8 = exports.getByte;\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getUShort = function(dataView, offset) {\n    return dataView.getUint16(offset, false);\n};\n\nexports.getCard16 = exports.getUShort;\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getShort = function(dataView, offset) {\n    return dataView.getInt16(offset, false);\n};\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nexports.getULong = function(dataView, offset) {\n    return dataView.getUint32(offset, false);\n};\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nexports.getFixed = function(dataView, offset) {\n    var decimal = dataView.getInt16(offset, false);\n    var fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n};\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nexports.getTag = function(dataView, offset) {\n    var tag = '';\n    for (var i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n};\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nexports.getOffset = function(dataView, offset, offSize) {\n    var v = 0;\n    for (var i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n};\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nexports.getBytes = function(dataView, startOffset, endOffset) {\n    var bytes = [];\n    for (var i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n};\n\n// Convert the list of bytes to a string.\nexports.bytesToString = function(bytes) {\n    var s = '';\n    for (var i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n};\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    var offsets = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = exports.getUShort(dataView, offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\nParser.prototype.parseString = function(length) {\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    var string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\nParser.prototype.parseLongDateTime = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v / 65536;\n};\n\nParser.prototype.parseVersion = function() {\n    var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // This returns the correct number if minor = 0xN000 where N is 0-9\n    var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    return major + minor / 0x1000 / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\nexports.Parser = Parser;\n\n},{}],8:[function(require,module,exports){\n// Geometric objects\n\n'use strict';\n\n// A bézier path containing a set of path commands similar to a SVG path.\n// Paths can be drawn on a context using `draw`.\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n// Add the given path or list of commands to the commands of this path.\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n// Draw the path to a 2D context.\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n// Convert the Path to a string of path data instructions\n// See http://www.w3.org/TR/SVG/paths.html#PathData\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n// Convert the path to a SVG <path> element, as a string.\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toSVG = function(decimalPlaces) {\n    var svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill & this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\nexports.Path = Path;\n\n},{}],9:[function(require,module,exports){\n// Table metadata\n\n'use strict';\n\nvar check = require('./check');\nvar encode = require('./types').encode;\nvar sizeOf = require('./types').sizeOf;\n\nfunction Table(tableName, fields, options) {\n    var i;\n    for (i = 0; i < fields.length; i += 1) {\n        var field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        var optionKeys = Object.keys(options);\n        for (i = 0; i < optionKeys.length; i += 1) {\n            var k = optionKeys[i];\n            var v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\nTable.prototype.sizeOf = function() {\n    var v = 0;\n    for (var i = 0; i < this.fields.length; i += 1) {\n        var field = this.fields[i];\n        var value = this[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        if (typeof value.sizeOf === 'function') {\n            v += value.sizeOf();\n        } else {\n            var sizeOfFunction = sizeOf[field.type];\n            check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n            v += sizeOfFunction(value);\n        }\n    }\n\n    return v;\n};\n\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\nexports.Table = Table;\n\n},{\"./check\":1,\"./types\":24}],10:[function(require,module,exports){\n// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\nvar table = require('../table');\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (var i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    //var i, objectOffset, endOffset;\n    var offsets = [];\n    var objects = [];\n    var count = parse.getCard16(data, start);\n    var i;\n    var objectOffset;\n    var endOffset;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        var pos = start + 3;\n        for (i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (i = 0; i < offsets.length - 1; i += 1) {\n        var value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s = '';\n    var eof = 15;\n    var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        var b = parser.parseByte();\n        var n1 = b >> 4;\n        var n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1;\n    var b2;\n    var b3;\n    var b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o = {};\n    for (var i = 0; i < entries.length; i += 1) {\n        var key = entries[i][0];\n        var values = entries[i][1];\n        var value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key)) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    var parser = new parse.Parser(data, start);\n    var entries = [];\n    var operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        var op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = encoding.cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var newDict = {};\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (var i = 0; i < meta.length; i += 1) {\n        var m = meta[i];\n        var value = dict[m.op];\n        if (value === undefined) {\n            value = m.value !== undefined ? m.value : null;\n        }\n\n        if (m.type === 'SID') {\n            value = getCFFString(strings, value);\n        }\n\n        newDict[m.name] = value;\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n];\n\nvar PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var i;\n    var sid;\n    var count;\n    var parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    var charset = ['.notdef'];\n\n    var format = parser.parseCard8();\n    if (format === 0) {\n        for (i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var i;\n    var code;\n    var enc = {};\n    var parser = new parse.Parser(data, start);\n    var format = parser.parseCard8();\n    if (format === 0) {\n        var nCodes = parser.parseCard8();\n        for (i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        var nRanges = parser.parseCard8();\n        code = 1;\n        for (i = 0; i < nRanges; i += 1) {\n            var first = parser.parseCard8();\n            var nLeft = parser.parseCard8();\n            for (var j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new encoding.CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(code, font, index) {\n    var c1x;\n    var c1y;\n    var c2x;\n    var c2y;\n    var p = new path.Path();\n    var stack = [];\n    var nStems = 0;\n    var haveWidth = false;\n    var width = font.defaultWidthX;\n    var open = false;\n    var x = 0;\n    var y = 0;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + font.nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var b1;\n        var b2;\n        var b3;\n        var b4;\n        var codeIndex;\n        var subrCode;\n        var jpx;\n        var jpy;\n        var c3x;\n        var c3y;\n        var c4x;\n        var c4y;\n\n        var i = 0;\n        while (i < code.length) {\n            var v = code[i];\n            i += 1;\n            switch (v) {\n            case 1: // hstem\n                parseStems();\n                break;\n            case 3: // vstem\n                parseStems();\n                break;\n            case 4: // vmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                newContour(x, y);\n                break;\n            case 5: // rlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 6: // hlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 7: // vlineto\n                while (stack.length > 0) {\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 8: // rrcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 10: // callsubr\n                codeIndex = stack.pop() + font.subrsBias;\n                subrCode = font.subrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 11: // return\n                return;\n            case 12: // flex operators\n                v = code[i];\n                i += 1;\n                switch (v) {\n                case 35: // flex\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    y = c4y + stack.shift();      // dy6\n                    stack.shift();                // flex depth\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 34: // hflex\n                    // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y;                      // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = y;                      // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 36: // hflex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 37: // flex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                        x = c4x + stack.shift();\n                    } else {\n                        y = c4y + stack.shift();\n                    }\n\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                default:\n                    console.log('Glyph ' + index + ': unknown operator ' + 1200 + v);\n                    stack.length = 0;\n                }\n                break;\n            case 14: // endchar\n                if (stack.length > 0 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                if (open) {\n                    p.closePath();\n                    open = false;\n                }\n\n                break;\n            case 18: // hstemhm\n                parseStems();\n                break;\n            case 19: // hintmask\n            case 20: // cntrmask\n                parseStems();\n                i += (nStems + 7) >> 3;\n                break;\n            case 21: // rmoveto\n                if (stack.length > 2 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 22: // hmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 23: // vstemhm\n                parseStems();\n                break;\n            case 24: // rcurveline\n                while (stack.length > 2) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                x += stack.shift();\n                y += stack.shift();\n                p.lineTo(x, y);\n                break;\n            case 25: // rlinecurve\n                while (stack.length > 6) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                break;\n            case 26: // vvcurveto\n                if (stack.length % 2) {\n                    x += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x;\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 27: // hhcurveto\n                if (stack.length % 2) {\n                    y += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y;\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 28: // shortint\n                b1 = code[i];\n                b2 = code[i + 1];\n                stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                i += 2;\n                break;\n            case 29: // callgsubr\n                codeIndex = stack.pop() + font.gsubrsBias;\n                subrCode = font.gsubrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 30: // vhcurveto\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 31: // hvcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            default:\n                if (v < 32) {\n                    console.log('Glyph ' + index + ': unknown operator ' + v);\n                } else if (v < 247) {\n                    stack.push(v - 139);\n                } else if (v < 251) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push((v - 247) * 256 + b1 + 108);\n                } else if (v < 255) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push(-(v - 251) * 256 - b1 - 108);\n                } else {\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    b3 = code[i + 2];\n                    b4 = code[i + 3];\n                    i += 4;\n                    stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                }\n            }\n        }\n    }\n\n    parse(code);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.path = p;\n    glyph.advanceWidth = width;\n    return glyph;\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    font.tables.cff = {};\n    var header = parseCFFHeader(data, start);\n    var nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    var stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n    var topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n    font.tables.cff.topDict = topDict;\n\n    var privateDictOffset = start + topDict['private'][1];\n    var privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        var subrOffset = privateDictOffset + privateDict.subrs;\n        var subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    var charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    var charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) { // Standard encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) { // Expert encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = [];\n    for (var i = 0; i < font.nGlyphs; i += 1) {\n        var charString = charStringsIndex.objects[i];\n        font.glyphs.push(parseCFFCharstring(charString, font, i));\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    var sid;\n\n    // Is the string in the CFF standard strings?\n    var i = encoding.cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + encoding.cffStandardStrings.length;\n    } else {\n        sid = encoding.cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Table('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    var t = new table.Table('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (var i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    var m = {};\n    for (var i = 0; i < meta.length; i += 1) {\n        var entry = meta[i];\n        var value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    var t = new table.Table('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    var t = new table.Table('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    var t = new table.Table('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (var i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Table('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    var t = new table.Table('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (var i = 0; i < glyphNames.length; i += 1) {\n        var glyphName = glyphNames[i];\n        var glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    var ops = [];\n    var path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    var x = 0;\n    var y = 0;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var dx;\n        var dy;\n        var cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            var _13 = 1 / 3;\n            var _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            var dx1 = Math.round(cmd.x1 - x);\n            var dy1 = Math.round(cmd.y1 - y);\n            var dx2 = Math.round(cmd.x2 - cmd.x1);\n            var dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    var t = new table.Table('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    var t = new table.Table('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makePrivateDictIndex(privateDict) {\n    var t = new table.Table('Private DICT INDEX', [\n        {name: 'privateDicts', type: 'INDEX', value: []}\n    ]);\n    t.privateDicts = [{name: 'privateDict_0', type: 'TABLE', value: privateDict}];\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    var t = new table.Table('CFF ', [\n        {name: 'header', type: 'TABLE'},\n        {name: 'nameIndex', type: 'TABLE'},\n        {name: 'topDictIndex', type: 'TABLE'},\n        {name: 'stringIndex', type: 'TABLE'},\n        {name: 'globalSubrIndex', type: 'TABLE'},\n        {name: 'charsets', type: 'TABLE'},\n        {name: 'charStringsIndex', type: 'TABLE'},\n        {name: 'privateDictIndex', type: 'TABLE'}\n    ]);\n\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    var attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    var privateAttrs = {};\n\n    var glyphNames = [];\n\n    // Skip first glyph (.notdef)\n    for (var i = 1; i < glyphs.length; i += 1) {\n        glyphNames.push(glyphs[i].name);\n    }\n\n    var strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    var topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    var privateDict = makePrivateDict(privateAttrs, strings);\n    t.privateDictIndex = makePrivateDictIndex(privateDict);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    var startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexports.parse = parseCFFTable;\nexports.make = makeCFFTable;\n\n},{\"../encoding\":3,\"../glyph\":5,\"../parse\":7,\"../path\":8,\"../table\":9}],11:[function(require,module,exports){\n// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var i;\n    var cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 3\" table. This is a Windows format.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    var offset = -1;\n    for (i = 0; i < cmap.numTables; i += 1) {\n        var platformId = parse.getUShort(data, start + 4 + (i * 8));\n        var encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support, so return null.\n        // This font will be marked as unsupported.\n        return null;\n    }\n\n    var p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n    check.argument(cmap.format === 4, 'Only format 4 cmap tables are supported.');\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    var segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n\n    var endCountParser = new parse.Parser(data, start + offset + 14);\n    var startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    var idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    var idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    var glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (i = 0; i < segCount - 1; i += 1) {\n        var glyphIndex;\n        var endCount = endCountParser.parseUShort();\n        var startCount = startCountParser.parseUShort();\n        var idDelta = idDeltaParser.parseShort();\n        var idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (var c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\nfunction makeCmapTable(glyphs) {\n    var i;\n    var t = new table.Table('cmap', [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: 1},\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: 12},\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        for (var j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function(a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    var segCount;\n    segCount = t.segments.length;\n    t.segCountX2 = segCount * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    // Set up parallel segment arrays.\n    var endCounts = [];\n    var startCounts = [];\n    var idDeltas = [];\n    var idRangeOffsets = [];\n    var glyphIds = [];\n\n    for (i = 0; i < segCount; i += 1) {\n        var segment = t.segments[i];\n        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n        if (segment.glyphId !== undefined) {\n            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n        }\n    }\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    return t;\n}\n\nexports.parse = parseCmapTable;\nexports.make = makeCmapTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],12:[function(require,module,exports){\n// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\n'use strict';\n\nvar check = require('../check');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(data, start, index, font) {\n    //var p, glyph, flag, i, j, flags,\n    //    endPointIndices, numberOfCoordinates, repeatCount, points, point, px, py,\n    //    component, moreComponents;\n    var p = new parse.Parser(data, start);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.numberOfContours = p.parseShort();\n    glyph.xMin = p.parseShort();\n    glyph.yMin = p.parseShort();\n    glyph.xMax = p.parseShort();\n    glyph.yMax = p.parseShort();\n    var flags;\n    var flag;\n    if (glyph.numberOfContours > 0) {\n        var i;\n        // This glyph is not a composite.\n        var endPointIndices = glyph.endPointIndices = [];\n        for (i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                var repeatCount = p.parseByte();\n                for (var j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            var points = [];\n            var point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                var px = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                var py = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        var moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            var component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                component.dx = p.parseShort();\n                component.dy = p.parseShort();\n            } else {\n                // The arguments are bytes\n                component.dx = p.parseChar();\n                component.dy = p.parseChar();\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n    }\n\n    return glyph;\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        var newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p = new path.Path();\n    if (!points) {\n        return p;\n    }\n\n    var contours = getContours(points);\n    for (var i = 0; i < contours.length; i += 1) {\n        var contour = contours[i];\n        var firstPt = contour[0];\n        var lastPt = contour[contour.length - 1];\n        var curvePt;\n        var realFirstPoint;\n        if (firstPt.onCurve) {\n            curvePt = null;\n            // The first point will be consumed by the moveTo command,\n            // so skip it in the loop.\n            realFirstPoint = true;\n        } else {\n            if (lastPt.onCurve) {\n                // If the first point is off-curve and the last point is on-curve,\n                // start at the last point.\n                firstPt = lastPt;\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n            }\n\n            curvePt = firstPt;\n            // The first point is synthesized, so don't skip the real first point.\n            realFirstPoint = false;\n        }\n\n        p.moveTo(firstPt.x, firstPt.y);\n\n        for (var j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n            var pt = contour[j];\n            var prevPt = j === 0 ? firstPt : contour[j - 1];\n            if (prevPt.onCurve && pt.onCurve) {\n                // This is a straight line.\n                p.lineTo(pt.x, pt.y);\n            } else if (prevPt.onCurve && !pt.onCurve) {\n                curvePt = pt;\n            } else if (!prevPt.onCurve && !pt.onCurve) {\n                var midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n                p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n                curvePt = pt;\n            } else if (!prevPt.onCurve && pt.onCurve) {\n                // Previous point off-curve, this point on-curve.\n                p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                curvePt = null;\n            } else {\n                throw new Error('Invalid state.');\n            }\n        }\n\n        if (firstPt !== lastPt) {\n            // Connect the last and first points\n            if (curvePt) {\n                p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            } else {\n                p.lineTo(firstPt.x, firstPt.y);\n            }\n        }\n    }\n\n    p.closePath();\n    return p;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    var glyphs = [];\n    var i;\n    // The last element of the loca table is invalid.\n    for (i = 0; i < loca.length - 1; i += 1) {\n        var offset = loca[i];\n        var nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(parseGlyph(data, start + offset, i, font));\n        } else {\n            glyphs.push(new _glyph.Glyph({font: font, index: i}));\n        }\n    }\n    // Go over the glyphs again, resolving the composite glyphs.\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        if (glyph.isComposite) {\n            for (var j = 0; j < glyph.components.length; j += 1) {\n                var component = glyph.components[j];\n                var componentGlyph = glyphs[component.glyphIndex];\n                if (componentGlyph.points) {\n                    var transformedPoints = transformPoints(componentGlyph.points, component);\n                    glyph.points = glyph.points.concat(transformedPoints);\n                }\n            }\n        }\n\n        glyph.path = getPath(glyph.points);\n    }\n\n    return glyphs;\n}\n\nexports.parse = parseGlyfTable;\n\n},{\"../check\":1,\"../glyph\":5,\"../parse\":7,\"../path\":8}],13:[function(require,module,exports){\n// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n// These lists are unused by now, this function is just the basis for a real parsing.\nfunction parseTaggedListTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var n = p.parseUShort();\n    var list = [];\n    for (var i = 0; i < n; i++) {\n        list[p.parseTag()] = { offset: p.parseUShort() };\n    }\n\n    return list;\n}\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// Format 1 is a simple list of glyph ids,\n// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\nfunction parseCoverageTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    var count =  p.parseUShort();\n    if (format === 1) {\n        return p.parseUShortList(count);\n    }\n    else if (format === 2) {\n        var coverage = [];\n        for (; count--;) {\n            var begin = p.parseUShort();\n            var end = p.parseUShort();\n            var index = p.parseUShort();\n            for (var i = begin; i <= end; i++) {\n                coverage[index++] = i;\n            }\n        }\n\n        return coverage;\n    }\n}\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// Returns a function that gets a class value from a glyph ID.\nfunction parseClassDefTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    if (format === 1) {\n        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n        var startGlyph = p.parseUShort();\n        var glyphCount = p.parseUShort();\n        var classes = p.parseUShortList(glyphCount);\n        return function(glyphID) {\n            return classes[glyphID - startGlyph] || 0;\n        };\n    }\n    else if (format === 2) {\n        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n        var rangeCount = p.parseUShort();\n        var startGlyphs = [];\n        var endGlyphs = [];\n        var classValues = [];\n        for (var i = 0; i < rangeCount; i++) {\n            startGlyphs[i] = p.parseUShort();\n            endGlyphs[i] = p.parseUShort();\n            classValues[i] = p.parseUShort();\n        }\n\n        return function(glyphID) {\n            var l = 0;\n            var r = startGlyphs.length - 1;\n            while (l < r) {\n                var c = (l + r + 1) >> 1;\n                if (glyphID < startGlyphs[c]) {\n                    r = c - 1;\n                } else {\n                    l = c;\n                }\n            }\n\n            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                return classValues[l] || 0;\n            }\n\n            return 0;\n        };\n    }\n}\n\n// Parse a pair adjustment positioning subtable, format 1 or format 2\n// The subtable is returned in the form of a lookup function.\nfunction parsePairPosSubTable(data, start) {\n    var p = new parse.Parser(data, start);\n    // This part is common to format 1 and format 2 subtables\n    var format = p.parseUShort();\n    var coverageOffset = p.parseUShort();\n    var coverage = parseCoverageTable(data, start + coverageOffset);\n    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n    // Only valueFormat1=4 and valueFormat2=0 is supported.\n    var valueFormat1 = p.parseUShort();\n    var valueFormat2 = p.parseUShort();\n    var value1;\n    var value2;\n    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n    var sharedPairSets = {};\n    if (format === 1) {\n        // Pair Positioning Adjustment: Format 1\n        var pairSetCount = p.parseUShort();\n        var pairSet = [];\n        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n        var pairSetOffsets = p.parseOffset16List(pairSetCount);\n        for (var firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n            var pairSetOffset = pairSetOffsets[firstGlyph];\n            var sharedPairSet = sharedPairSets[pairSetOffset];\n            if (!sharedPairSet) {\n                // Parse a pairset table in a pair adjustment subtable format 1\n                sharedPairSet = {};\n                p.relativeOffset = pairSetOffset;\n                var pairValueCount = p.parseUShort();\n                for (; pairValueCount--;) {\n                    var secondGlyph = p.parseUShort();\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) value2 = p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    sharedPairSet[secondGlyph] = value1;\n                }\n            }\n\n            pairSet[coverage[firstGlyph]] = sharedPairSet;\n        }\n\n        return function(leftGlyph, rightGlyph) {\n            var pairs = pairSet[leftGlyph];\n            if (pairs) return pairs[rightGlyph];\n        };\n    }\n    else if (format === 2) {\n        // Pair Positioning Adjustment: Format 2\n        var classDef1Offset = p.parseUShort();\n        var classDef2Offset = p.parseUShort();\n        var class1Count = p.parseUShort();\n        var class2Count = p.parseUShort();\n        var getClass1 = parseClassDefTable(data, start + classDef1Offset);\n        var getClass2 = parseClassDefTable(data, start + classDef2Offset);\n\n        // Parse kerning values by class pair.\n        var kerningMatrix = [];\n        for (var i = 0; i < class1Count; i++) {\n            var kerningRow = kerningMatrix[i] = [];\n            for (var j = 0; j < class2Count; j++) {\n                if (valueFormat1) value1 = p.parseShort();\n                if (valueFormat2) value2 = p.parseShort();\n                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                // so value1 is the XAdvance and value2 is empty.\n                kerningRow[j] = value1;\n            }\n        }\n\n        // Convert coverage list to a hash\n        var covered = {};\n        for (i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\n        // Get the kerning value for a specific glyph pair.\n        return function(leftGlyph, rightGlyph) {\n            if (!covered[leftGlyph]) return;\n            var class1 = getClass1(leftGlyph);\n            var class2 = getClass2(rightGlyph);\n            var kerningRow = kerningMatrix[class1];\n\n            if (kerningRow) {\n                return kerningRow[class2];\n            }\n        };\n    }\n}\n\n// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\nfunction parseLookupTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var lookupType = p.parseUShort();\n    var lookupFlag = p.parseUShort();\n    var useMarkFilteringSet = lookupFlag & 0x10;\n    var subTableCount = p.parseUShort();\n    var subTableOffsets = p.parseOffset16List(subTableCount);\n    var table = {\n        lookupType: lookupType,\n        lookupFlag: lookupFlag,\n        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n    };\n    // LookupType 2, Pair adjustment\n    if (lookupType === 2) {\n        var subtables = [];\n        for (var i = 0; i < subTableCount; i++) {\n            subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n        }\n        // Return a function which finds the kerning values in the subtables.\n        table.getKerningValue = function(leftGlyph, rightGlyph) {\n            for (var i = subtables.length; i--;) {\n                var value = subtables[i](leftGlyph, rightGlyph);\n                if (value !== undefined) return value;\n            }\n\n            return 0;\n        };\n    }\n\n    return table;\n}\n\n// Parse the `GPOS` table which contains, among other things, kerning pairs.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\nfunction parseGposTable(data, start, font) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseFixed();\n    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n    // ScriptList and FeatureList - ignored for now\n    parseTaggedListTable(data, start + p.parseUShort());\n    // 'kern' is the feature we are looking for.\n    parseTaggedListTable(data, start + p.parseUShort());\n\n    // LookupList\n    var lookupListOffset = p.parseUShort();\n    p.relativeOffset = lookupListOffset;\n    var lookupCount = p.parseUShort();\n    var lookupTableOffsets = p.parseOffset16List(lookupCount);\n    var lookupListAbsoluteOffset = start + lookupListOffset;\n    for (var i = 0; i < lookupCount; i++) {\n        var table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n    }\n}\n\nexports.parse = parseGposTable;\n\n},{\"../check\":1,\"../parse\":7}],14:[function(require,module,exports){\n// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {};\n    var p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();     // 50\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: 0},\n        {name: 'modified', type: 'LONGDATETIME', value: 0},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHeadTable;\nexports.make = makeHeadTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],15:[function(require,module,exports){\n// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {};\n    var p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHheaTable;\nexports.make = makeHheaTable;\n\n},{\"../parse\":7,\"../table\":9}],16:[function(require,module,exports){\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    var advanceWidth;\n    var leftSideBearing;\n    var p = new parse.Parser(data, start);\n    for (var i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        var glyph = glyphs[i];\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    var t = new table.Table('hmtx', []);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var advanceWidth = glyph.advanceWidth || 0;\n        var leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexports.parse = parseHmtxTable;\nexports.make = makeHmtxTable;\n\n},{\"../parse\":7,\"../table\":9}],17:[function(require,module,exports){\n// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var pairs = {};\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseUShort();\n    check.argument(tableVersion === 0, 'Unsupported kern table version.');\n    // Skip nTables.\n    p.skip('uShort', 1);\n    var subTableVersion = p.parseUShort();\n    check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subTableLength, subTableCoverage\n    p.skip('uShort', 2);\n    var nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (var i = 0; i < nPairs; i += 1) {\n        var leftIndex = p.parseUShort();\n        var rightIndex = p.parseUShort();\n        var value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n\n    return pairs;\n}\n\nexports.parse = parseKernTable;\n\n},{\"../check\":1,\"../parse\":7}],18:[function(require,module,exports){\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\n'use strict';\n\nvar parse = require('../parse');\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p = new parse.Parser(data, start);\n    var parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    var glyphOffsets = [];\n    for (var i = 0; i < numGlyphs + 1; i += 1) {\n        var glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexports.parse = parseLocaTable;\n\n},{\"../parse\":7}],19:[function(require,module,exports){\n// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {};\n    var p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexports.parse = parseMaxpTable;\nexports.make = makeMaxpTable;\n\n},{\"../parse\":7,\"../table\":9}],20:[function(require,module,exports){\n// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\n'use strict';\n\nvar encode = require('../types').encode;\nvar parse = require('../parse');\nvar table = require('../table');\n\n// NameIDs for the name table.\nvar nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'licence',                // 13\n    'licenceURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\n// Parse the naming `name` table\n// Only Windows Unicode English names are supported.\n// Format 1 additional fields are not supported\nfunction parseNameTable(data, start) {\n    var name = {};\n    var p = new parse.Parser(data, start);\n    name.format = p.parseUShort();\n    var count = p.parseUShort();\n    var stringOffset = p.offset + p.parseUShort();\n    var unknownCount = 0;\n    for (var i = 0; i < count; i++) {\n        var platformID = p.parseUShort();\n        var encodingID = p.parseUShort();\n        var languageID = p.parseUShort();\n        var nameID = p.parseUShort();\n        var property = nameTableNames[nameID];\n        var byteLength = p.parseUShort();\n        var offset = p.parseUShort();\n        // platformID - encodingID - languageID standard combinations :\n        // 1 - 0 - 0 : Macintosh, Roman, English\n        // 3 - 1 - 0x409 : Windows, Unicode BMP (UCS-2), en-US\n        if (platformID === 3 && encodingID === 1 && languageID === 0x409) {\n            var codePoints = [];\n            var length = byteLength / 2;\n            for (var j = 0; j < length; j++, offset += 2) {\n                codePoints[j] = parse.getShort(data, stringOffset + offset);\n            }\n\n            var str = String.fromCharCode.apply(null, codePoints);\n            if (property) {\n                name[property] = str;\n            }\n            else {\n                unknownCount++;\n                name['unknown' + unknownCount] = str;\n            }\n        }\n\n    }\n\n    if (name.format === 1) {\n        name.langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Table('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\nfunction addMacintoshNameRecord(t, recordID, s, offset) {\n    // Macintosh, Roman, English\n    var stringBytes = encode.STRING(s);\n    t.records.push(makeNameRecord(1, 0, 0, recordID, stringBytes.length, offset));\n    t.strings.push(stringBytes);\n    offset += stringBytes.length;\n    return offset;\n}\n\nfunction addWindowsNameRecord(t, recordID, s, offset) {\n    // Windows, Unicode BMP (UCS-2), US English\n    var utf16Bytes = encode.UTF16(s);\n    t.records.push(makeNameRecord(3, 1, 0x0409, recordID, utf16Bytes.length, offset));\n    t.strings.push(utf16Bytes);\n    offset += utf16Bytes.length;\n    return offset;\n}\n\nfunction makeNameTable(options) {\n    var t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: 0},\n        {name: 'stringOffset', type: 'USHORT', value: 0}\n    ]);\n    t.records = [];\n    t.strings = [];\n    var offset = 0;\n    var i;\n    var s;\n    // Add Macintosh records first\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addMacintoshNameRecord(t, i, s, offset);\n        }\n    }\n    // Then add Windows records\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addWindowsNameRecord(t, i, s, offset);\n        }\n    }\n\n    t.count = t.records.length;\n    t.stringOffset = 6 + t.count * 12;\n    for (i = 0; i < t.records.length; i += 1) {\n        t.fields.push({name: 'record_' + i, type: 'TABLE', value: t.records[i]});\n    }\n\n    for (i = 0; i < t.strings.length; i += 1) {\n        t.fields.push({name: 'string_' + i, type: 'LITERAL', value: t.strings[i]});\n    }\n\n    return t;\n}\n\nexports.parse = parseNameTable;\nexports.make = makeNameTable;\n\n},{\"../parse\":7,\"../table\":9,\"../types\":24}],21:[function(require,module,exports){\n// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\nvar unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (var i = 0; i < unicodeRanges.length; i += 1) {\n        var range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {};\n    var p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.unicodeRanges = unicodeRanges;\nexports.getUnicodeRange = getUnicodeRange;\nexports.parse = parseOS2Table;\nexports.make = makeOS2Table;\n\n},{\"../parse\":7,\"../table\":9}],22:[function(require,module,exports){\n// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {};\n    var p = new parse.Parser(data, start);\n    var i;\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n    case 1:\n        post.names = encoding.standardNames.slice();\n        break;\n    case 2:\n        post.numberOfGlyphs = p.parseUShort();\n        post.glyphNameIndex = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.glyphNameIndex[i] = p.parseUShort();\n        }\n\n        post.names = [];\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n                var nameLength = p.parseChar();\n                post.names.push(p.parseString(nameLength));\n            }\n        }\n\n        break;\n    case 2.5:\n        post.numberOfGlyphs = p.parseUShort();\n        post.offset = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.offset[i] = p.parseChar();\n        }\n\n        break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexports.parse = parsePostTable;\nexports.make = makePostTable;\n\n},{\"../encoding\":3,\"../parse\":7,\"../table\":9}],23:[function(require,module,exports){\n// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\n'use strict';\n\nvar check = require('../check');\nvar table = require('../table');\n\nvar cmap = require('./cmap');\nvar cff = require('./cff');\nvar head = require('./head');\nvar hhea = require('./hhea');\nvar hmtx = require('./hmtx');\nvar maxp = require('./maxp');\nvar _name = require('./name');\nvar os2 = require('./os2');\nvar post = require('./post');\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    var sum = 0;\n    for (var i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Table('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    var sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    var recordFields = [];\n    var tableFields = [];\n\n    var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (var i = 0; i < tables.length; i += 1) {\n        var t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        var tableLength = t.sizeOf();\n        var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (var i = 0; i < chars.length; i += 1) {\n        var glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            var glyph = font.glyphs[glyphIndex];\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    var sum = 0;\n    for (var i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    var xMins = [];\n    var yMins = [];\n    var xMaxs = [];\n    var yMaxs = [];\n    var advanceWidths = [];\n    var leftSideBearings = [];\n    var rightSideBearings = [];\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    for (var i = 0; i < font.glyphs.length; i += 1) {\n        var glyph = font.glyphs[i];\n        var unicode = glyph.unicode | 0;\n        if (firstCharIndex > unicode || firstCharIndex === null) {\n            firstCharIndex = unicode;\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        var position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        var metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    var globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n    globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\n    var headTable = head.make({\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax\n    });\n\n    var hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    var maxpTable = maxp.make(font.glyphs.length);\n\n    var os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: 500, // Medium FIXME Make this configurable\n        usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.ascender,\n        usWinDescent: -globals.descender,\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: 0}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n    var hmtxTable = hmtx.make(font.glyphs);\n    var cmapTable = cmap.make(font.glyphs);\n\n    var fullName = font.familyName + ' ' + font.styleName;\n    var postScriptName = font.familyName.replace(/\\s/g, '') + '-' + font.styleName;\n    var nameTable = _name.make({\n        copyright: font.copyright,\n        fontFamily: font.familyName,\n        fontSubfamily: font.styleName,\n        uniqueID: font.manufacturer + ':' + fullName,\n        fullName: fullName,\n        version: font.version,\n        postScriptName: postScriptName,\n        trademark: font.trademark,\n        manufacturer: font.manufacturer,\n        designer: font.designer,\n        description: font.description,\n        manufacturerURL: font.manufacturerURL,\n        designerURL: font.designerURL,\n        license: font.license,\n        licenseURL: font.licenseURL,\n        preferredFamily: font.familyName,\n        preferredSubfamily: font.styleName\n    });\n    var postTable = post.make();\n    var cffTable = cff.make(font.glyphs, {\n        version: font.version,\n        fullName: fullName,\n        familyName: font.familyName,\n        weightName: font.styleName,\n        postScriptName: postScriptName\n    });\n    // Order the tables according to the the OpenType specification 1.4.\n    var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n\n    var sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    var bytes = sfntTable.encode();\n    var checkSum = computeCheckSum(bytes);\n    var tableFields = sfntTable.fields;\n    var checkSumAdjusted = false;\n    for (i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexports.computeCheckSum = computeCheckSum;\nexports.make = makeSfntTable;\nexports.fontToTable = fontToSfntTable;\n\n},{\"../check\":1,\"../table\":9,\"./cff\":10,\"./cmap\":11,\"./head\":14,\"./hhea\":15,\"./hmtx\":16,\"./maxp\":19,\"./name\":20,\"./os2\":21,\"./post\":22}],24:[function(require,module,exports){\n// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = require('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\nvar decode = {};\nvar encode = {};\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n// Convert an 8-bit unsigned integer to a list of 1 byte.\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert a 8-bit signed integer to a list of 1 byte.\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert an ASCII string to a list of bytes.\nencode.CHARARRAY = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n// Convert a 16-bit unsigned integer to a list of 2 bytes.\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.USHORT = constant(2);\n\n// Convert a 16-bit signed integer to a list of 2 bytes.\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.SHORT = constant(2);\n\n// Convert a 24-bit unsigned integer to a list of 3 bytes.\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.UINT24 = constant(3);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.ULONG = constant(4);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n// FIXME Implement LONGDATETIME\nencode.LONGDATETIME = function() {\n    return [0, 0, 0, 0, 0, 0, 0, 0];\n};\n\nsizeOf.LONGDATETIME = constant(8);\n\n// Convert a 4-char tag to a list of 4 bytes.\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n// Convert a signed number between -32768 and +32767 to a three-byte value.\n// This ensures we always use three bytes, but is not the most compact format.\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER16 = constant(2);\n\n// Convert a signed number between -(2^31) and +(2^31-1) to a four-byte value.\n// This is useful if you want to be sure you always use four bytes,\n// at the expense of wasting a few bytes for smaller numbers.\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER32 = constant(4);\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n// Convert a ASCII string to a list of UTF16 bytes.\nencode.UTF16 = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(0);\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\nencode.INDEX = function(l) {\n    var i;\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    dataSize, i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    var offset = 1; // First offset is always 1.\n    var offsets = [offset];\n    var data = [];\n    var dataSize = 0;\n    for (i = 0; i < l.length; i += 1) {\n        var v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        dataSize += v.length;\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    var encodedOffsets = [];\n    var offSize = (1 + Math.floor(Math.log(dataSize) / Math.log(2)) / 8) | 0;\n    var offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        var encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n// Convert an object to a CFF DICT structure.\n// The keys should be numeric.\n// The values should be objects containing name / type / value.\nencode.DICT = function(m) {\n    var d = [];\n    var keys = Object.keys(m);\n    var length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\nencode.OPERAND = function(v, type) {\n    var d = [];\n    if (Array.isArray(type)) {\n        for (var i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else {\n            // FIXME Add support for booleans\n            d = d.concat(encode.NUMBER(v));\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n// Convert a list of CharString operations to bytes.\nencode.CHARSTRING = function(ops) {\n    if (wmm && wmm.has(ops)) {\n        return wmm.get(ops);\n    }\n\n    var d = [];\n    var length = ops.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n// Convert an object containing name / type / value to bytes.\nencode.OBJECT = function(v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n// Convert a table object to bytes.\n// A table contains a list of fields containing the metadata (name, type and default value).\n// The table itself has the field values set as attributes.\nencode.TABLE = function(table) {\n    var d = [];\n    var length = table.fields.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        var bytes = encodingFunction(value);\n        d = d.concat(bytes);\n    }\n\n    return d;\n};\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n\n},{\"./check\":1}]},{},[6])(6)\n});\n},{}],3:[function(require,module,exports){\n/*!\n * Paper.js v0.9.22 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Wed Mar 18 10:25:56 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\n\t\t  var noCanvas =\n\t\t\t  ( typeof process === 'object' && process.browser !== true ) ||\n\t\t\t  ( typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope );\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && (!exclude || !exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tctor.prototype = create(this.prototype);\n\t\t\tctor.base = base;\n\t\t\tdefine(ctor.prototype, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\treturn arguments.length ? this.inject.apply(ctor, arguments) : ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function() {\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\t\tif (arguments[i] !== undefined)\n\t\t\t\t\t\treturn arguments[i];\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar orig = props._filtering || props;\n\t\t\tfor (var key in orig) {\n\t\t\t\tif (orig.hasOwnProperty(key) && !(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tfunction checkKeys(o1, o2) {\n\t\t\t\tfor (var i in o1)\n\t\t\t\t\tif (o1.hasOwnProperty(i) && !o2.hasOwnProperty(i))\n\t\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\tif (obj1.length !== obj2.length)\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i = 0, l = obj1.length; i < l; i++) {\n\t\t\t\t\tif (!Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 && typeof obj1 === 'object'\n\t\t\t\t\t&& obj2 && typeof obj2 === 'object') {\n\t\t\t\tif (!checkKeys(obj1, obj2) || !checkKeys(obj2, obj1))\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i in obj1) {\n\t\t\t\t\tif (obj1.hasOwnProperty(i)\n\t\t\t\t\t\t\t&& !Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var i in obj)\n\t\t\t\t\tif (obj.hasOwnProperty(i))\n\t\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\t\tdictionary);\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (!isDictionary) {\n\t\t\t\t\tif (_data.dictionary && json.length == 1 && /^#/.test(type))\n\t\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\t\ttype = Base.exports[type];\n\t\t\t\t}\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data));\n\t\t\t\tif (isDictionary) {\n\t\t\t\t\t_data.dictionary = res[0];\n\t\t\t\t} else if (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar entry = this._eventTypes[type];\n\t\t\tif (entry) {\n\t\t\t\tvar handlers = this._callbacks = this._callbacks || {};\n\t\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\t\thandlers.push(func);\n\t\t\t\t\tif (entry.install && handlers.length == 1)\n\t\t\t\t\t\tentry.install.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar entry = this._eventTypes[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (entry && handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false\n\t\t\t\t\t&& event && event.stop) {\n\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar entry = this._eventTypes[type],\n\t\t\t\t\tfunc = entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif ( noCanvas ) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar browser = proto.browser = {};\n\t\t\tnavigator.userAgent.toLowerCase().replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: '0.9.22',\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tTOLERANCE = 1e-6,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\treturn {\n\t\tTOLERANCE: TOLERANCE,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn abs(val) <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= 2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar pow = Math.pow,\n\t\t\t\t\tgmC = pow(abs(a*b*c), 1/3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\t/*\n\t\t\t\t\t * we multiply with a factor to normalize the\n\t\t\t\t\t * coefficients. The factor is just the nearest exponent\n\t\t\t\t\t * of 10, big enough to raise all the coefficients to\n\t\t\t\t\t * nearly [-1, +1] range.\n\t\t\t\t\t */\n\t\t\t\t\tvar mult = pow(10, abs(\n\t\t\t\t\t\tMath.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < MACHINE_EPSILON) {\n\t\t\t\tif (abs(B) < MACHINE_EPSILON)\n\t\t\t\t\treturn abs(c) < MACHINE_EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else {\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tD = D < 0 ? 0 : D;\n\t\t\t\t\tvar R = sqrt(D);\n\t\t\t\t\tif (b >= MACHINE_EPSILON && b <= MACHINE_EPSILON) {\n\t\t\t\t\t\tx1 = abs(a) >= abs(c) ? R / a : -c / R;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar q = -(b + (b < 0 ? -1 : 1) * R);\n\t\t\t\t\t\tx1 = q / a;\n\t\t\t\t\t\tx2 = c / q;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 >= min && x1 <= max))\n\t\t\t\troots[count++] = x1;\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 >= min && x2 <= max))\n\t\t\t\troots[count++] = x2;\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar x, b1, c2, count = 0;\n\t\t\tif (a === 0) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (d === 0) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x >= min && x <= max))\n\t\t\t\troots[count++] = x;\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\ts = Math.sin(angle),\n\t\t\tc = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * c - point.y * s,\n\t\t\tpoint.x * s + point.y * c\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function(point, tolerance) {\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisColinear: function(point) {\n\t\treturn Math.abs(this.cross(point)) < 1e-12;\n\t},\n\n\tisOrthogonal: function(point) {\n\t\treturn Math.abs(this.dot(point)) < 1e-12;\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments);\n\t\tif (point.isZero()) {\n\t\t\treturn new Point(0, 0);\n\t\t} else {\n\t\t\tvar scale = this.dot(point) / point.dot(point);\n\t\t\treturn new Point(\n\t\t\t\tpoint.x * scale,\n\t\t\t\tpoint.y * scale\n\t\t\t);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n}, new function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = coords.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tstatics: {\n\t\tintersect: function(apx, apy, avx, avy, bpx, bpy, bvx, bvy, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tavx -= apx;\n\t\t\t\tavy -= apy;\n\t\t\t\tbvx -= bpx;\n\t\t\t\tbvy -= bpy;\n\t\t\t}\n\t\t\tvar cross = avx * bvy - avy * bvx;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = apx - bpx,\n\t\t\t\t\tdy = apy - bpy,\n\t\t\t\t\tta = (bvx * dy - bvy * dx) / cross,\n\t\t\t\t\ttb = (avx * dy - avy * dx) / cross;\n\t\t\t\tif (isInfinite || 0 <= ta && ta <= 1 && 0 <= tb && tb <= 1)\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\t\tapx + ta * avx,\n\t\t\t\t\t\t\t\tapy + ta * avy);\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0) {\n\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\tif (ccw > 0) {\n\t\t\t\t\tv2x -= vx;\n\t\t\t\t\tv2y -= vy;\n\t\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\t\tif (ccw < 0)\n\t\t\t\t\t\tccw = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn Numerical.isZero(vx)\n\t\t\t\t\t? vy >= 0 ? px - x : x - px\n\t\t\t\t\t: Numerical.isZero(vy)\n\t\t\t\t\t\t? vx >= 0 ? y - py : py - y\n\t\t\t\t\t\t: (vx * (y - py) - vy * (x - px)) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = Symbol._id = (Symbol._id || 0) + 1;\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = Item._id = (Item._id || 0) + 1;\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, parent: true }, true);\n\t\treturn hasProps;\n\t},\n\n\t_events: new function() {\n\n\t\tvar mouseFlags = {\n\t\t\tmousedown: {\n\t\t\t\tmousedown: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmouseup: {\n\t\t\t\tmouseup: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmousemove: {\n\t\t\t\tmousedrag: 1,\n\t\t\t\tmousemove: 1,\n\t\t\t\tmouseenter: 1,\n\t\t\t\tmouseleave: 1\n\t\t\t}\n\t\t};\n\n\t\tvar mouseEvent = {\n\t\t\tinstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tuninstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = mouseEvent;\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis._animateItem(true);\n\t\t\t\t\t},\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis._animateItem(false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {}\n\t\t\t}\n\t\t);\n\t},\n\n\t_animateItem: function(animate) {\n\t\tthis.getView()._animateItem(this, animate);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments);\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n\n\tgetRegistration: '#getPivot',\n\tsetRegistration: '#setPivot'\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tvar cacheParent = this._parent || this._parentSymbol;\n\t\tif (cacheParent) {\n\t\t\tvar id = cacheItem._id,\n\t\t\t\tref = cacheParent._boundsCache = cacheParent._boundsCache || {\n\t\t\t\t\tids: {},\n\t\t\t\t\tlist: []\n\t\t\t\t};\n\t\t\tif (!ref.ids[id]) {\n\t\t\t\tref.list.push(cacheItem);\n\t\t\t\tref.ids[id] = cacheItem;\n\t\t\t}\n\t\t}\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++) {\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function(matrix) {\n\t\tthis._matrix.initialize(matrix);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert) {\n\t\tcopy.setStyle(this._style);\n\t\tif (this._children) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tcopy.addChild(this._children[i].clone(false), true);\n\t\t}\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide', '_applyMatrix'];\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tcopy.setSelected(this._selected);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(),\n\t\t\t\t_matrix || item._matrix).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 0.000001)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tif (typeof name === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param) {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect =\tbounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: rect,\n\t\t\t\t\toverlapping: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param.items,\n\t\t\t\tinside = param.inside,\n\t\t\t\toverlapping = param.overlapping;\n\t\t\tmatrix = inside && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (inside) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!inside.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(inside && inside.contains(bounds)) && !(overlapping\n\t\t\t\t\t\t\t&& overlapping.intersects(child, childMatrix)))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2;\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t});\n\t\tpath.setStyle(this._style);\n\t\tpath.transform(this._matrix);\n\t\tif (insert || insert === undefined)\n\t\t\tpath.insertAbove(this);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rect' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\t\timage = document.getElementById(src) || new Image();\n\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, {\n\t\t\t\tload: loaded\n\t\t\t});\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL() : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif (arg0.point) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.isLinear() ? this._point\n\t\t\t\t: [this._point, this._handleIn, this._handleOut],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._handleIn.isZero() && this._handleOut.isZero();\n\t},\n\n\tsetLinear: function(linear) {\n\t\tif (linear) {\n\t\t\tthis._handleIn.set(0, 0);\n\t\t\tthis._handleOut.set(0, 0);\n\t\t} else {\n\t\t}\n\t},\n\n\tisColinear: function(segment) {\n\t\tvar next1 = this.getNext(),\n\t\t\tnext2 = segment.getNext();\n\t\treturn this._handleOut.isZero() && next1._handleIn.isZero()\n\t\t\t\t&& segment._handleOut.isZero() && next2._handleIn.isZero()\n\t\t\t\t&& next1._point.subtract(this._point).isColinear(\n\t\t\t\t\tnext2._point.subtract(segment._point));\n\t},\n\n\tisOrthogonal: function() {\n\t\tvar prev = this.getPrevious(),\n\t\t\tnext = this.getNext();\n\t\treturn prev._handleOut.isZero() && this._handleIn.isZero()\n\t\t\t&& this._handleOut.isZero() && next._handleIn.isZero()\n\t\t\t&& this._point.subtract(prev._point).isOrthogonal(\n\t\t\t\t\tnext._point.subtract(this._point));\n\t},\n\n\tisArc: function() {\n\t\tvar next = this.getNext(),\n\t\t\thandle1 = this._handleOut,\n\t\t\thandle2 = next._handleIn,\n\t\t\tkappa = 0.5522847498307936;\n\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\tvar from = this._point,\n\t\t\t\tto = next._point,\n\t\t\t\tcorner = new Line(from, handle1, true).intersect(\n\t\t\t\t\t\tnew Line(to, handle2, true), true);\n\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\tcorner.subtract(from).getLength() - kappa)\n\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\tcorner.subtract(to).getLength() - kappa);\n\t\t}\n\t\treturn false;\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\treverse: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(segment0, segment1, coef) {\n\t\tvar dxPoint = segment1._point._x - segment0._point._x,\n\t\t\tdyPoint = segment1._point._y - segment0._point._y,\n\t\t\tdxHandleIn = segment1._handleIn._x - segment0._handleIn._x,\n\t\t\tdyHandleIn = segment1._handleIn._y - segment0._handleIn._y,\n\t\t\tdxHandleOut = segment1._handleOut._x - segment0._handleOut._x,\n\t\t\tdyHandleOut = segment1._handleOut._y - segment0._handleOut._y;\n\n\t\tthis._point._x = segment0._point._x + dxPoint * coef;\n\t\tthis._point._y = segment0._point._y + dyPoint * coef;\n\t\tthis._handleIn._x = segment0._handleIn._x + dxHandleIn * coef;\n\t\tthis._handleIn._y = segment0._handleIn._y + dyHandleIn * coef;\n\t\tthis._handleOut._x = segment0._handleOut._x + dxHandleOut * coef;\n\t\tthis._handleOut._y = segment0._handleOut._y + dyHandleOut * coef;\n\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tthis._segment1 = arg1;\n\t\t\tthis._segment2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tthis._segment1 = new Segment();\n\t\t\tthis._segment2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tthis._segment1 = new Segment(arg0.segment1);\n\t\t\tthis._segment2 = new Segment(arg0.segment2);\n\t\t} else if (count === 2) {\n\t\t\tthis._segment1 = new Segment(arg0);\n\t\t\tthis._segment2 = new Segment(arg1);\n\t\t} else {\n\t\t\tvar point1, handle1, handle2, point2;\n\t\t\tif (count === 4) {\n\t\t\t\tpoint1 = arg0;\n\t\t\t\thandle1 = arg1;\n\t\t\t\thandle2 = arg2;\n\t\t\t\tpoint2 = arg3;\n\t\t\t} else if (count === 8) {\n\t\t\t\tpoint1 = [arg0, arg1];\n\t\t\t\tpoint2 = [arg6, arg7];\n\t\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t\t}\n\t\t\tthis._segment1 = new Segment(point1, null, handle1);\n\t\t\tthis._segment2 = new Segment(point2, handle2, null);\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tthis._length = this.isLinear()\n\t\t\t\t? this._segment2._point.getDistance(this._segment1._point)\n\t\t\t\t: Curve.getLength(this.getValues(), 0, 1);\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._segment1._handleOut.isZero()\n\t\t\t\t&& this._segment2._handleIn.isZero();\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve.filterIntersections(Curve.getIntersections(\n\t\t\t\tthis.getValues(), curve.getValues(), this, curve, []));\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, ignoreLinear) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttolerance = 0.000001,\n\t\t\tres = null;\n\t\tif (parameter > tolerance && parameter < 1 - tolerance) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tisLinear = ignoreLinear ? false : this.isLinear(),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1];\n\n\t\t\tif (!isLinear) {\n\t\t\t\tthis._segment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tthis._segment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\t!isLinear && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\t!isLinear && new Point(right[2] - x, right[3] - y));\n\n\t\t\tif (this._path) {\n\t\t\t\tif (this._segment1._index > 0 && this._segment2._index === 0) {\n\t\t\t\t\tthis._path.add(segment);\n\t\t\t\t} else {\n\t\t\t\t\tthis._path.insert(this._segment2._index, segment);\n\t\t\t\t}\n\t\t\t\tres = this;\n\t\t\t} else {\n\t\t\t\tvar end = this._segment2;\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, end);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treverse: function() {\n\t\treturn new Curve(this._segment2.reverse(), this._segment1.reverse());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tevaluate: function(v, t, type) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tolerance || t > 1 - tolerance)) {\n\t\t\tvar isZero = t < tolerance;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tolerance && c1x === p1x && c1y === p1y\n\t\t\t\t\t\t|| t > 1 - tolerance && c2x === p2x && c2y === p2y) {\n\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t} else if (t < tolerance) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > 1 - tolerance) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by;\n\t\t\t\t\treturn (x * y2 - y * x2) / Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b,\n\t\t\tisZero = Numerical.isZero;\n\t\tif (isZero(a) && isZero(b))\n\t\t\ta = b = 0;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, x, y) {\n\t\tvar tolerance = 0.000001;\n\t\tif (Math.abs(v[0] - x) < tolerance && Math.abs(v[1] - y) < tolerance)\n\t\t\treturn 0;\n\t\tif (Math.abs(v[6] - x) < tolerance && Math.abs(v[7] - y) < tolerance)\n\t\t\treturn 1;\n\t\tvar txs = [],\n\t\t\ttys = [],\n\t\t\tsx = Curve.solveCubic(v, 0, x, txs, 0, 1),\n\t\t\tsy = Curve.solveCubic(v, 1, y, tys, 0, 1),\n\t\t\ttx, ty;\n\t\tfor (var cx = 0;  sx == -1 || cx < sx;) {\n\t\t\tif (sx == -1 || (tx = txs[cx++]) >= 0 && tx <= 1) {\n\t\t\t\tfor (var cy = 0; sy == -1 || cy < sy;) {\n\t\t\t\t\tif (sy == -1 || (ty = tys[cy++]) >= 0 && ty <= 1) {\n\t\t\t\t\t\tif (sx == -1) tx = ty;\n\t\t\t\t\t\telse if (sy == -1) ty = tx;\n\t\t\t\t\t\tif (Math.abs(tx - ty) < tolerance)\n\t\t\t\t\t\t\treturn (tx + ty) * 0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sx == -1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn v;\n\t},\n\n\tisLinear: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]);\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn (  3.0 * c1y * p1x - 1.5 * c1y * c2x\n\t\t\t\t- 1.5 * c1y * p2x - 3.0 * p1y * c1x\n\t\t\t\t- 1.5 * p1y * c2x - 0.5 * p1y * p2x\n\t\t\t\t+ 1.5 * c2y * p1x + 1.5 * c2y * c1x\n\t\t\t\t- 3.0 * c2y * p2x + 0.5 * p2y * p1x\n\t\t\t\t+ 1.5 * p2y * c1x + 3.0 * p2y * c2x) / 10;\n\t},\n\n\tgetEdgeSum: function(v) {\n\t\treturn\t  (v[0] - v[2]) * (v[3] + v[1])\n\t\t\t\t+ (v[2] - v[4]) * (v[5] + v[3])\n\t\t\t\t+ (v[4] - v[6]) * (v[7] + v[5]);\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name]([this._segment1,\n\t\t\t\t\t\tthis._segment2], false, this._path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve.evaluate(values, isParameter\n\t\t\t\t\t? offset : Curve.getParameterAt(values, offset, 0), index);\n\t\t};\n\t\tthis[name] = function(parameter) {\n\t\t\treturn Curve.evaluate(this.getValues(), parameter, index);\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Curve.getParameterOf(this.getValues(), point.x, point.y);\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tif (!isParameter)\n\t\t\toffset = this.getParameterAt(offset);\n\t\treturn offset >= 0 && offset <= 1 && new CurveLocation(this, offset);\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tcount = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(\n\t\t\t\t\t\tCurve.evaluate(values, t, 0), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 0.000001) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\tvar pt = Curve.evaluate(values, minT, 0);\n\t\treturn new CurveLocation(this, minT, pt, null, null, null,\n\t\t\t\tpoint.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n}),\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\treturn {\n\t\tstatics: true,\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tvar isZero = Numerical.isZero;\n\t\t\tif (a === 0 && b === 1\n\t\t\t\t\t&& isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t\t&& isZero(v[6] - v[4]) && isZero(v[7] - v[5])) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar forward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (Math.abs(offset) >= rangeLength)\n\t\t\t\treturn forward ? b : a;\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 16,\n\t\t\t\t\t0.000001);\n\t\t}\n\t};\n}, new function() {\n\tfunction addLocation(locations, include, curve1, t1, point1, curve2, t2,\n\t\t\tpoint2) {\n\t\tvar loc = new CurveLocation(curve1, t1, point1, curve2, t2, point2);\n\t\tif (!include || include(loc))\n\t\t\tlocations.push(loc);\n\t}\n\n\tfunction addCurveIntersections(v1, v2, curve1, curve2, locations, include,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (recursion > 32)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]) || 0,\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]) || 0,\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\ttMinNew, tMaxNew, tDiff;\n\t\tif (q0x === q3x && uMax - uMin <= tolerance && recursion > 3) {\n\t\t\ttMaxNew = tMinNew = (tMax + tMin) / 2;\n\t\t\ttDiff = 0;\n\t\t} else {\n\t\t\tvar hull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\t\ttop = hull[0],\n\t\t\t\tbottom = hull[1],\n\t\t\t\ttMinClip, tMaxClip;\n\t\t\ttMinClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\ttop.reverse();\n\t\t\tbottom.reverse();\n\t\t\ttMaxClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\tif (tMinClip == null || tMaxClip == null)\n\t\t\t\treturn;\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\ttDiff = tMaxClip - tMinClip;\n\t\t\ttMinNew = tMax * tMinClip + tMin * (1 - tMinClip);\n\t\t\ttMaxNew = tMax * tMaxClip + tMin * (1 - tMaxClip);\n\t\t}\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, curve2, curve1, locations, include,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew) < tolerance) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tif (reverse) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0),\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0));\n\t\t\t} else {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t} else if (tDiff > 0) {\n\t\t\taddCurveIntersections(v2, v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\tdist1 = getSignedDistance(0, dq0, 1, dq3, 1 / 3, dq1),\n\t\t\tdist2 = getSignedDistance(0, dq0, 1, dq3, 2 / 3, dq2),\n\t\t\tflip = false,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t\tflip = dist1 < 0;\n\t\t} else {\n\t\t\tvar pmax, cross = 0,\n\t\t\t\tdistZero = dist1 === 0 || dist2 === 0;\n\t\t\tif (Math.abs(dist1) > Math.abs(dist2)) {\n\t\t\t\tpmax = p1;\n\t\t\t\tcross = (dq3 - dq2 - (dq3 - dq0) / 3)\n\t\t\t\t\t\t* (2 * (dq3 - dq2) - dq3 + dq1) / 3;\n\t\t\t} else {\n\t\t\t\tpmax = p2;\n\t\t\t\tcross = (dq1 - dq0 + (dq0 - dq3) / 3)\n\t\t\t\t\t\t* (-2 * (dq0 - dq1) + dq0 - dq2) / 3;\n\t\t\t}\n\t\t\thull = cross < 0 || distZero\n\t\t\t\t\t? [[p0, pmax, p3], [p0, p3]]\n\t\t\t\t\t: [[p0, p1, p2, p3], [p0, p3]];\n\t\t\tflip = dist1 ? dist1 < 0 : dist2 < 0;\n\t\t}\n\t\treturn flip ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold)\n\t\t\t\treturn px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, curve1, curve2, locations,\n\t\t\tinclude) {\n\t\tvar flip = Curve.isLinear(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trlx2 = ldx * cos - ldy * sin,\n\t\t\trvl = [0, 0, 0, 0, rlx2, 0, rlx2, 0],\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\ty * cos + x * sin);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tx = Curve.evaluate(rvc, tc, 0).x;\n\t\t\tif (x >= 0 && x <= rlx2) {\n\t\t\t\tvar tl = Curve.getParameterOf(rvl, x, 0),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, curve1, curve2, locations, include) {\n\t\tvar point = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (point) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tcurve1, Curve.getParameterOf(v1, x, y), point,\n\t\t\t\t\tcurve2, Curve.getParameterOf(v2, x, y), point);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\tgetIntersections: function(v1, v2, c1, c2, locations, include) {\n\t\t\tvar linear1 = Curve.isLinear(v1),\n\t\t\t\tlinear2 = Curve.isLinear(v2),\n\t\t\t\tc1p1 = c1.getPoint1(),\n\t\t\t\tc1p2 = c1.getPoint2(),\n\t\t\t\tc2p1 = c2.getPoint1(),\n\t\t\t\tc2p2 = c2.getPoint2(),\n\t\t\t\ttolerance = 0.000001;\n\t\t\tif (c1p1.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 0, c1p1);\n\t\t\tif (c1p1.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 1, c1p1);\n\t\t\t(linear1 && linear2\n\t\t\t\t? addLineIntersection\n\t\t\t\t: linear1 || linear2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, include,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (c1p2.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 0, c1p2);\n\t\t\tif (c1p2.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 1, c1p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\tfilterIntersections: function(locations, _expand) {\n\t\t\tvar last = locations.length - 1,\n\t\t\t\ttMax = 1 - 0.000001;\n\t\t\tfor (var i = last; i >= 0; i--) {\n\t\t\t\tvar loc = locations[i],\n\t\t\t\t\tnext = loc._curve.getNext(),\n\t\t\t\t\tnext2 = loc._curve2.getNext();\n\t\t\t\tif (next && loc._parameter >= tMax) {\n\t\t\t\t\tloc._parameter = 0;\n\t\t\t\t\tloc._curve = next;\n\t\t\t\t}\n\t\t\t\tif (next2 && loc._parameter2 >= tMax) {\n\t\t\t\t\tloc._parameter2 = 0;\n\t\t\t\t\tloc._curve2 = next2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction compare(loc1, loc2) {\n\t\t\t\tvar path1 = loc1.getPath(),\n\t\t\t\t\tpath2 = loc2.getPath();\n\t\t\t\treturn path1 === path2\n\t\t\t\t\t\t? (loc1.getIndex() + loc1.getParameter())\n\t\t\t\t\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t\t\t: path1._id - path2._id;\n\t\t\t}\n\n\t\t\tif (last > 0) {\n\t\t\t\tlocations.sort(compare);\n\t\t\t\tfor (var i = last; i > 0; i--) {\n\t\t\t\t\tif (locations[i].equals(locations[i - 1])) {\n\t\t\t\t\t\tlocations.splice(i, 1);\n\t\t\t\t\t\tlast--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_expand) {\n\t\t\t\tfor (var i = last; i >= 0; i--)\n\t\t\t\t\tlocations.push(locations[i].getIntersection());\n\t\t\t\tlocations.sort(compare);\n\t\t\t}\n\t\t\treturn locations;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point, _curve2,\n\t\t\t_parameter2, _point2, _distance) {\n\t\tthis._id = CurveLocation._id = (CurveLocation._id || 0) + 1;\n\t\tthis._curve = curve;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t\tthis._parameter = parameter;\n\t\tthis._point = point;\n\t\tthis._curve2 = _curve2;\n\t\tthis._parameter2 = _parameter2;\n\t\tthis._point2 = _point2;\n\t\tthis._distance = _distance;\n\t},\n\n\tgetSegment: function(_preferFirst) {\n\t\tif (!this._segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this.getParameter();\n\t\t\tif (parameter === 1) {\n\t\t\t\tthis._segment = curve._segment2;\n\t\t\t} else if (parameter === 0 || _preferFirst) {\n\t\t\t\tthis._segment = curve._segment1;\n\t\t\t} else if (parameter == null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis._segment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t}\n\t\treturn this._segment;\n\t},\n\n\tgetCurve: function(_uncached) {\n\t\tif (!this._curve || _uncached) {\n\t\t\tthis._curve = this._segment1.getCurve();\n\t\t\tif (this._curve.getParameterOf(this._point) == null)\n\t\t\t\tthis._curve = this._segment2.getPrevious().getCurve();\n\t\t}\n\t\treturn this._curve;\n\t},\n\n\tgetIntersection: function() {\n\t\tvar intersection = this._intersection;\n\t\tif (!intersection && this._curve2) {\n\t\t\tvar param = this._parameter2;\n\t\t\tthis._intersection = intersection = new CurveLocation(\n\t\t\t\t\tthis._curve2, param, this._point2 || this._point, this);\n\t\t\tintersection._intersection = this;\n\t\t}\n\t\treturn intersection;\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetOffset: function() {\n\t\tvar path = this.getPath();\n\t\treturn path ? path._getOffset(this) : this.getCurveOffset();\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetParameter: function(_uncached) {\n\t\tif ((this._parameter == null || _uncached) && this._point) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._parameter = curve && curve.getParameterOf(this._point);\n\t\t}\n\t\treturn this._parameter;\n\t},\n\n\tgetPoint: function(_uncached) {\n\t\tif ((!this._point || _uncached) && this._parameter != null) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._point = curve && curve.getPointAt(this._parameter, true);\n\t\t}\n\t\treturn this._point;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.divide(this.getParameter(true), true);\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.split(this.getParameter(true), true);\n\t},\n\n\tequals: function(loc) {\n\t\tvar abs = Math.abs,\n\t\t\ttolerance = 0.000001;\n\t\treturn this === loc\n\t\t\t\t|| loc\n\t\t\t\t\t&& this._curve === loc._curve\n\t\t\t\t\t&& this._curve2 === loc._curve2\n\t\t\t\t\t&& abs(this._parameter - loc._parameter) <= tolerance\n\t\t\t\t\t&& abs(this._parameter2 - loc._parameter2) <= tolerance\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t}\n}, Base.each(['getTangent', 'getNormal', 'getCurvature'], function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {}));\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, _matrix, _expand) {\n\t\tif (this === path)\n\t\t\tpath = null;\n\t\tvar locations = [],\n\t\t\tcurves1 = this.getCurves(),\n\t\t\tcurves2 = path ? path.getCurves() : curves1,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = path ? (_matrix || path._matrix).orNullIfIdentity()\n\t\t\t\t: matrix1,\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = path ? curves2.length : length1,\n\t\t\tvalues2 = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tif (path && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = path ? curve1.getValues(matrix1) : values2[i];\n\t\t\tif (!path) {\n\t\t\t\tvar seg1 = curve1.getSegment1(),\n\t\t\t\t\tseg2 = curve1.getSegment2(),\n\t\t\t\t\th1 = seg1._handleOut,\n\t\t\t\t\th2 = seg2._handleIn;\n\t\t\t\tif (new Line(seg1._point.subtract(h1), h1.multiply(2), true)\n\t\t\t\t\t\t.intersect(new Line(seg2._point.subtract(h2),\n\t\t\t\t\t\th2.multiply(2), true), false)) {\n\t\t\t\t\tvar parts = Curve.subdivide(values1);\n\t\t\t\t\tCurve.getIntersections(\n\t\t\t\t\t\tparts[0], parts[1], curve1, curve1, locations,\n\t\t\t\t\t\tfunction(loc) {\n\t\t\t\t\t\t\tif (loc._parameter <= tMax) {\n\t\t\t\t\t\t\t\tloc._parameter /= 2;\n\t\t\t\t\t\t\t\tloc._parameter2 = 0.5 + loc._parameter2 / 2;\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var j = path ? 0 : i + 1; j < length2; j++) {\n\t\t\t\tCurve.getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curves2[j], locations,\n\t\t\t\t\t!path && (j === i + 1 || j === length2 - 1 && i === 0)\n\t\t\t\t\t\t&& function(loc) {\n\t\t\t\t\t\t\tvar t = loc._parameter;\n\t\t\t\t\t\t\treturn t >= tMin && t <= tMax;\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Curve.filterIntersections(locations, _expand);\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tif (move && previous && previous !== 'z')\n\t\t\t\t\tthis.closePath(true);\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._clockwise = undefined;\n\t\t\tif (this._curves && !(flags & 16)) {\n\t\t\t\tfor (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t\tthis._monoCurves = undefined;\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\tisPolygon: function() {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif (!this._segments[i].isLinear())\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves || segs._curves) {\n\t\t\tif (!curves)\n\t\t\t\tcurves = this._curves = [];\n\t\t\tvar from = index > 0 ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, this._countCurves());\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves();\n\t\t\tthis._length = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tthis._length += curves[i].getLength();\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar curves = this.getCurves();\n\t\tvar area = 0;\n\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\tarea += curves[i].getArea();\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.evaluate(pos, 0)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (curve.isLinear() && curve.getLength() === 0)\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tolerance = 0.000001;\n\t\tif (parameter >= 1 - tolerance) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter > tolerance) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = this._clone(new Path().insertAbove(this, true));\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn Path.isClockwise(this._segments);\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path.closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\tinterpolate: function(path0, path1, coef) {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif ( !path0._segments[i] || !path1._segments[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._segments[i].interpolate(\n\t\t\t\tpath0._segments[i],\n\t\t\t\tpath1._segments[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\n\t\tthis._changed(9);\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isColinear(i, j) {\n\t\t\treturn segments[i].isColinear(segments[j]);\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\treturn segments[i].isOrthogonal();\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\treturn segments[i].isArc();\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (this.isPolygon() && segments.length === 4\n\t\t\t\t&& isColinear(0, 2) && isColinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isColinear(1, 5) && isColinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t});\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\tshape.setStyle(this._style);\n\t\t\tif (insert || insert === undefined)\n\t\t\t\tshape.insertAbove(this);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\t_getOffset: function(location) {\n\t\tvar index = location && location.getIndex();\n\t\tif (index != null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\toffset = 0;\n\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\toffset += curves[i].getLength();\n\t\t\tvar curve = curves[index],\n\t\t\t\tparameter = location.getParameter();\n\t\t\tif (parameter > 0)\n\t\t\t\toffset += curve.getPartLength(0, parameter);\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset;\n\t\t\treturn curves[index].getLocationAt(offset - index, true);\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}), new function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n}, new function() {\n\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n}, new function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < epsilon)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tisClockwise: function(segments) {\n\t\tvar sum = 0;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsum += Curve.getEdgeSum(Curve.getValues(\n\t\t\t\t\tsegments[i], segments[i + 1 < l ? i + 1 : 0]));\n\t\treturn sum > 0;\n\t},\n\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isColinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().normalize(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tif (this._children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t} else {\n\t\t\treturn reduce.base.call(this);\n\t\t}\n\t},\n\n\tinterpolate: function(compoundpath0, compoundpath1, coef) {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\tif ( !compoundpath0._children[i] || !compoundpath1._children[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._children[i].interpolate(\n\t\t\t\tcompoundpath0._children[i],\n\t\t\t\tcompoundpath1._children[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : mx, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n}, new function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current : new Path();\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tvar operator = operators[operation];\n\t\tfunction preparePath(path) {\n\t\t\treturn path.clone(false).reduce().reorient().transform(null, true,\n\t\t\t\t\ttrue);\n\t\t}\n\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tsplitPath(_path1.getIntersections(_path2, null, true));\n\n\t\tvar chain = [],\n\t\t\tsegments = [],\n\t\t\tmonoCurves = [],\n\t\t\ttolerance = 0.000001;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tsegments.sort(function(a, b) {\n\t\t\tvar _a = a._intersection,\n\t\t\t\t_b = b._intersection;\n\t\t\treturn !_a && !_b || _a && _b ? 0 : _a ? -1 : 1;\n\t\t});\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding != null)\n\t\t\t\tcontinue;\n\t\t\tchain.length = 0;\n\t\t\tvar startSeg = segment,\n\t\t\t\ttotalLength = 0,\n\t\t\t\twindingSum = 0;\n\t\t\tdo {\n\t\t\t\tvar length = segment.getCurve().getLength();\n\t\t\t\tchain.push({ segment: segment, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t\tsegment = segment.getNext();\n\t\t\t} while (segment && !segment._intersection && segment !== startSeg);\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar length = totalLength * (j + 1) / 4;\n\t\t\t\tfor (k = 0, m = chain.length; k < m; k++) {\n\t\t\t\t\tvar node = chain[k],\n\t\t\t\t\t\tcurveLength = node.length;\n\t\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\t\tif (length <= tolerance\n\t\t\t\t\t\t\t\t|| curveLength - length <= tolerance)\n\t\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\t\tvar curve = node.segment.getCurve(),\n\t\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\t\thor = curve.isLinear() && Math.abs(curve\n\t\t\t\t\t\t\t\t\t.getTangentAt(0.5, true).y) <= tolerance,\n\t\t\t\t\t\t\tpath = curve._path;\n\t\t\t\t\t\tif (path._parent instanceof CompoundPath)\n\t\t\t\t\t\t\tpath = path._parent;\n\t\t\t\t\t\twindingSum += operation === 'subtract' && _path2\n\t\t\t\t\t\t\t&& (path === _path1 && _path2._getWinding(pt, hor)\n\t\t\t\t\t\t\t|| path === _path2 && !_path1._getWinding(pt, hor))\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlength -= curveLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar winding = Math.round(windingSum / 3);\n\t\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.insertAbove(path1);\n\t\tresult.addChildren(tracePaths(segments, operator), true);\n\t\tresult = result.reduce();\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction splitPath(intersections) {\n\t\tvar tMin = 0.000001,\n\t\t\ttMax = 1 - tMin,\n\t\t\tlinearHandles;\n\n\t\tfunction resetLinear() {\n\t\t\tfor (var i = 0, l = linearHandles.length; i < l; i++)\n\t\t\t\tlinearHandles[i].set(0, 0);\n\t\t}\n\n\t\tfor (var i = intersections.length - 1, curve, prev; i >= 0; i--) {\n\t\t\tvar loc = intersections[i],\n\t\t\t\tt = loc._parameter;\n\t\t\tif (prev && prev._curve === loc._curve && prev._parameter > 0) {\n\t\t\t\tt /= prev._parameter;\n\t\t\t} else {\n\t\t\t\tcurve = loc._curve;\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tresetLinear();\n\t\t\t\tlinearHandles = curve.isLinear() ? [\n\t\t\t\t\t\tcurve._segment1._handleOut,\n\t\t\t\t\t\tcurve._segment2._handleIn\n\t\t\t\t\t] : null;\n\t\t\t}\n\t\t\tvar newCurve,\n\t\t\t\tsegment;\n\t\t\tif (newCurve = curve.divide(t, true, true)) {\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tcurve = newCurve.getPrevious();\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tlinearHandles.push(segment._handleOut, segment._handleIn);\n\t\t\t} else {\n\t\t\t\tsegment = t < tMin\n\t\t\t\t\t? curve._segment1\n\t\t\t\t\t: t > tMax\n\t\t\t\t\t\t? curve._segment2\n\t\t\t\t\t\t: curve.getPartLength(0, t) < curve.getPartLength(t, 1)\n\t\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tsegment._intersection = loc.getIntersection();\n\t\t\tloc._segment = segment;\n\t\t\tprev = loc;\n\t\t}\n\t\tif (linearHandles)\n\t\t\tresetLinear();\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar tolerance = 0.000001,\n\t\t\ttMin = tolerance,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - tolerance,\n\t\t\t\tyAfter = py + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.evaluate(values, roots[j], 0).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves);\n\t\t} else {\n\t\t\tvar xBefore = px - tolerance,\n\t\t\t\txAfter = px + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding,\n\t\t\t\t\tprevT,\n\t\t\t\t\tprevX;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tx = Curve.evaluate(values, t, 0).x,\n\t\t\t\t\t\tslope = Curve.evaluate(values, t, 1).y;\n\t\t\t\t\tif (!(t > tMax\n\t\t\t\t\t\t\t&& (i === l - 1 || curve.next !== curves[i + 1])\n\t\t\t\t\t\t\t&& abs(Curve.evaluate(curve.next.values, 0, 0).x -x)\n\t\t\t\t\t\t\t\t<= tolerance\n\t\t\t\t\t\t|| i > 0 && curve.previous === curves[i - 1]\n\t\t\t\t\t\t\t&& abs(prevX - x) < tolerance\n\t\t\t\t\t\t\t&& prevT > tMax && t < tMin)) {\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isLinear(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0, 1).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprevT = t;\n\t\t\t\t\tprevX = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction tracePaths(segments, operator, selfOp) {\n\t\tvar paths = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0, seg, startSeg, l = segments.length; i < l; i++) {\n\t\t\tseg = startSeg = segments[i];\n\t\t\tif (seg._visited || !operator(seg._winding))\n\t\t\t\tcontinue;\n\t\t\tvar path = new Path(Item.NO_INSERT),\n\t\t\t\tinter = seg._intersection,\n\t\t\t\tstartInterSeg = inter && inter._segment,\n\t\t\t\tadded = false,\n\t\t\t\tdir = 1;\n\t\t\tdo {\n\t\t\t\tvar handleIn = dir > 0 ? seg._handleIn : seg._handleOut,\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn,\n\t\t\t\t\tinterSeg;\n\t\t\t\tif (added && (!operator(seg._winding) || selfOp)\n\t\t\t\t\t\t&& (inter = seg._intersection)\n\t\t\t\t\t\t&& (interSeg = inter._segment)\n\t\t\t\t\t\t&& interSeg !== startSeg) {\n\t\t\t\t\tif (selfOp) {\n\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar c1 = seg.getCurve();\n\t\t\t\t\t\tif (dir > 0)\n\t\t\t\t\t\t\tc1 = c1.getPrevious();\n\t\t\t\t\t\tvar t1 = c1.getTangentAt(dir < 1 ? tMin : tMax, true),\n\t\t\t\t\t\t\tc4 = interSeg.getCurve(),\n\t\t\t\t\t\t\tc3 = c4.getPrevious(),\n\t\t\t\t\t\t\tt3 = c3.getTangentAt(tMax, true),\n\t\t\t\t\t\t\tt4 = c4.getTangentAt(tMin, true),\n\t\t\t\t\t\t\tw3 = t1.cross(t3),\n\t\t\t\t\t\t\tw4 = t1.cross(t4);\n\t\t\t\t\t\tif (w3 * w4 !== 0) {\n\t\t\t\t\t\t\tvar curve = w3 < w4 ? c3 : c4,\n\t\t\t\t\t\t\t\tnextCurve = operator(curve._segment1._winding)\n\t\t\t\t\t\t\t\t\t? curve\n\t\t\t\t\t\t\t\t\t: w3 < w4 ? c4 : c3,\n\t\t\t\t\t\t\t\tnextSeg = nextCurve._segment1;\n\t\t\t\t\t\t\tdir = nextCurve === c3 ? -1 : 1;\n\t\t\t\t\t\t\tif (nextSeg._visited && seg._path !== nextSeg._path\n\t\t\t\t\t\t\t\t\t\t|| !operator(nextSeg._winding)) {\n\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\t\t\tif (nextSeg._visited)\n\t\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, added && handleIn, handleOut));\n\t\t\t\tadded = true;\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = dir > 0 ? seg.getNext() : seg. getPrevious();\n\t\t\t} while (seg && !seg._visited\n\t\t\t\t\t&& seg !== startSeg && seg !== startInterSeg\n\t\t\t\t\t&& (seg._intersection || operator(seg._winding)));\n\t\t\tif (seg && (seg === startSeg || seg === startInterSeg)) {\n\t\t\t\tpath.firstSegment.setHandleIn((seg === startInterSeg\n\t\t\t\t\t\t? startInterSeg : seg)._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else {\n\t\t\t\tpath.lastSegment._handleOut.set(0, 0);\n\t\t\t}\n\t\t\tif (path._segments.length >\n\t\t\t\t\t(path._closed ? path.isPolygon() ? 2 : 0 : 1))\n\t\t\t\tpaths.push(path);\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn new Group([this.subtract(path), this.intersect(path)]);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isLinear(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttolerance = 0.000001,\n\t\t\t\t\troots = [];\n\t\t\t\tvar count = Numerical.solveQuadratic(a, b, c, roots, tolerance,\n\t\t\t\t\t\t1 - tolerance);\n\t\t\t\tif (count === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.evaluate(values, roots[j], 0).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 0.000001) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tevaluate: function(offset, type) {\n\t\tvar param = this.getParameterAt(offset);\n\t\treturn Curve.evaluate(this.curves[param.index], param.value, type);\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\treturn this.evaluate(offset, index);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tthis.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1);\n\t\tepsilon *= segLength;\n\t\tif (alpha1 < epsilon || alpha2 < epsilon) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t}\n\n\t\treturn [pt1, pt1.add(tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 0.000001)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tvalue = parser.call(this, value);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tthis._components[index] = value;\n\t\t\t\t\tthis._changed();\n\t\t\t\t}\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type];\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tif (type === 'gradient')\n\t\t\t\tthis._id = Color._id = (Color._id || 0) + 1;\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n}, new function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nBase.each(Color._types, function(properties, type) {\n\tvar ctor = this[Base.capitalize(type) + 'Color'] = function(arg) {\n\t\t\tvar argType = arg != null && typeof arg,\n\t\t\t\tcomponents = argType === 'object' && arg.length != null\n\t\t\t\t\t? arg\n\t\t\t\t\t: argType === 'string'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: arguments;\n\t\t\treturn components\n\t\t\t\t\t? new Color(type, components)\n\t\t\t\t\t: new Color(arg);\n\t\t};\n\tif (type.length == 3) {\n\t\tvar acronym = type.toUpperCase();\n\t\tColor[acronym] = this[acronym + 'Color'] = ctor;\n\t}\n}, Base.exports);\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = Gradient._id = (Gradient._id || 0) + 1;\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = typeof window === 'object' &&\n\t\t\tDomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tif ( typeof window === 'object' ) {\n\t\tDomEvent.add(window, {\n\t\t\tfocus: function() {\n\t\t\t\tfocused = true;\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tfocused = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif ( !noCanvas ) {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchAction: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\tuserDrag: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\n\t\t\tfunction getSize(name) {\n\t\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t\t}\n\n\t\t\tfunction getCanvasSize() {\n\t\t\t\tvar size = DomElement.getSize(element);\n\t\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t\t: size;\n\t\t\t}\n\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._setViewSize(size = getCanvasSize());\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = 1;\n\t\t\tthis._id = 'view-' + View._id++;\n\t\t\tsize = new Size(element.width, element.height);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: {\n\t\tonFrame: {\n\t\t\tinstall: function() {\n\t\t\t\tthis.play();\n\t\t\t},\n\n\t\t\tuninstall: function() {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t},\n\n\t\tonResize: {}\n\t},\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n}, new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif ( !noCanvas ) {\n\t\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tif (size.isZero())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t\t}\n\t\t\tthis._context = canvas.getContext('2d');\n\t\t}\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!noCanvas && !/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font;\n\t\tctx.font = size + ' serif';\n\t\tsize = parseFloat(ctx.font);\n\t\tctx.font = prevFont;\n\t\treturn size;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function() {\n\t\tvar project = this._project;\n\t\tif (!project || !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n}, new function() {\n\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers)\n\t\t\tmodifiers[name] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = this._minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = distance;\n\t\tthis._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tvar maxDist = maxDistance != null ? maxDistance : 0;\n\t\t\t\tif (maxDist != 0) {\n\t\t\t\t\tif (distance > maxDist) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDist));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback) {\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, true);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif ( noCanvas ) {\n\t\t\treturn { getContext: function() {} };\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tif (options.matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (item.isPolygon()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (applyMatrix && item)\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n\n},{}],4:[function(require,module,exports){\nfunction Collection( args ) {\n\t// already a Collection? Job's done\n\tif ( arguments.length === 1 && args instanceof Collection ) {\n\t\treturn args;\n\n\t} else if ( arguments.length > 1 || !Array.isArray( args ) ) {\n\t\targs = [].slice.call( arguments, 0 );\n\t}\n\n\tthis.length = 0;\n\n\targs.forEach(function( arg ) {\n\t\t// unwrap any collection\n\t\tif ( arg instanceof Collection ) {\n\t\t\tfor ( var i = -1; ++i < arg.length; ) {\n\t\t\t\tthis[this.length++] = arg[i];\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis[this.length++] = arg;\n\t\t}\n\n\t}, this);\n\n\treturn this;\n}\n\nCollection.prototype.forEach = function(cb, scope) {\n\tfor ( var i = -1; ++i < this.length; ) {\n\t\tcb.call(scope || this[i], this[i], i, this);\n\t}\n\n\treturn this;\n};\n\nCollection.prototype.prop = function(name, val) {\n\tvar i;\n\n\t// object setter\n\tif ( typeof name === 'object' ) {\n\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\tthis[i].set( name );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// getter\n\tif ( val === undefined ) {\n\t\treturn this[0][name];\n\t}\n\n\t// simple setter\n\tfor ( i = -1; ++i < this.length; ) {\n\t\tthis[i][name] = val;\n\t}\n\n\treturn this;\n};\n\nfunction wrapConstructor( constructor, prototype, useConstructed ) {\n\treturn function wrapper() {\n\t\tvar c,\n\t\t\ttmp,\n\t\t\tarr = [];\n\n\t\t// constructor used with new\n\t\tif ( this instanceof wrapper ) {\n\t\t\t// proxy to paper native constructor\n\t\t\tc = Object.create(prototype);\n\t\t\ttmp = constructor.apply(c, arguments);\n\t\t\treturn useConstructed ?\n\t\t\t\ttmp : c;\n\n\t\t// without new, build a collection\n\t\t} else {\n\t\t\tif ( Array.isArray( arguments[0] ) ) {\n\t\t\t\targuments[0].forEach(function(params, i) {\n\t\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\t\tc = constructor.call( arr[i], params );\n\t\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\t\tarr[i] = c;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\tc = constructor.apply( arr[0], arguments );\n\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\tarr[0] = c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Collection( arr );\n\t\t}\n\t};\n}\n\nvar rconstructor = /(^|\\.)[A-Z][A-z]+$/;\nfunction constructorFilter( name ) {\n\treturn typeof this[name] === 'function' && rconstructor.test(name);\n}\n\n// unwrap a collection or array of collection\nfunction unwrapArg( arr, id, isPlural ) {\n\t// unwrap a single collection\n\tif ( arr && arr[id] instanceof Collection ) {\n\t\tarr[id] = isPlural ?\n\t\t\t[].slice.call( arr[id], 0 ) :\n\t\t\tarr[id][0];\n\n\t// unwrap an array of collection\n\t} else if ( arr && arr[id].length && arr[id][0] instanceof Collection ) {\n\t\tfor ( var i = -1; ++i < arr[id].length; ) {\n\t\t\tarr[id][i] = arr[id][i][0];\n\t\t}\n\t}\n}\n\nfunction unwrapArgs() {\n\tvar isPlural = this.isPlural,\n\t\targs = [].slice.call( arguments, 0 ),\n\t\tid,\n\t\ti;\n\n\t// first arg is an object and might have a collection or array of collection\n\t// Todo: objects should be unwrapped recursively\n\tif ( args[0] && args[0].constructor === Object ) {\n\t\tif ( 'children' in args[0] ) {\n\t\t\tid = 'children';\n\n\t\t} else if ( 'segments' in args[0] ) {\n\t\t\tid = 'segments';\n\n\t\t} else if ( 'nodes' in args[0] ) {\n\t\t\tid = 'nodes';\n\t\t}\n\n\t\tunwrapArg( args[0], id, true );\n\n\t// otherwise unwrap each arg\n\t} else {\n\t\tfor ( i = -1; ++i < args.length; ) {\n\t\t\t// if the method is plural (addChildren) and we're unwrapping\n\t\t\t// the last argument, we want to keep it in an array\n\t\t\tunwrapArg( args, i, i === args.length - 1 && isPlural );\n\t\t}\n\t}\n\n\treturn args;\n}\n\nCollection.proxy = function( paper ) {\n\tvar plumin = this;\n\n\tplumin.paper = paper;\n\n\tvar methodNames = {};\n\tObject.getOwnPropertyNames( paper.PaperScope.prototype )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype )\n\t\t.forEach(function(name) {\n\t\t\tplumin[name] = wrapConstructor( this[name], this[name].prototype );\n\n\t\t\t// we don't want to proxy methods of Collection\n\t\t\tif ( name === 'Collection' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tObject.getOwnPropertyNames( this[name].prototype )\n\t\t\t\t.forEach(function(_name) {\n\t\t\t\t\t// collect unique method names (first test avoids getters)\n\t\t\t\t\tif ( !Object.getOwnPropertyDescriptor(this, _name).get &&\n\t\t\t\t\t\t\ttypeof this[_name] === 'function' ) {\n\n\t\t\t\t\t\tmethodNames[_name] = true;\n\t\t\t\t\t}\n\n\t\t\t\t}, this[name].prototype);\n\n\t\t}, paper.PaperScope.prototype);\n\n\tObject.keys( paper.PaperScope.prototype.Path )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Path )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Path[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Path );\n\n\tObject.keys( paper.PaperScope.prototype.Shape )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Shape )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Shape[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Shape );\n\n\t// proxy the most commonly used method of paper\n\t// do it only after proxying constructors otherwise it's overwritten\n\tplumin.setup = paper.setup.bind(paper);\n\n\t// proxy all methods from every constructor\n\t// by default methods aren't chainable\n\tObject.keys( methodNames ).sort().forEach(function(name) {\n\t\t// please oh please, don't overwrite my constructor, I need it.\n\t\tif ( name === 'constructor' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(null, arguments),\n\t\t\t\ti,\n\t\t\t\tresult;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tresult = this[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// by default methods aren't chainable\n\t\t\t// return the last result\n\t\t\treturn result;\n\t\t};\n\t});\n\n\t\t// addChild( item ) and other methods with similar signatures\n\t\t// that we want to make chainable\n\tvar chain = [\n\t\t\t'set',\n\t\t\t'setX',\n\t\t\t'setY',\n\t\t\t'insertAbove',\n\t\t\t'insertBelow',\n\t\t\t'sendToBack',\n\t\t\t'bringToFront',\n\t\t\t'remove',\n\t\t\t'removeChildren',\n\t\t\t'reverseChildren',\n\n\t\t\t'translate',\n\t\t\t'rotate',\n\t\t\t'scale',\n\t\t\t'shear',\n\t\t\t'skew',\n\t\t\t'transform',\n\t\t\t'fitBounds',\n\t\t\t'emit',\n\n\t\t\t'activate',\n\n\t\t\t'setPixel',\n\n\t\t\t'smooth',\n\t\t\t'moveTo',\n\t\t\t'lineTo',\n\t\t\t'cubicCurveTo',\n\t\t\t'quadraticCurveTo',\n\t\t\t'curveTo',\n\t\t\t'arcTo',\n\t\t\t'closePath',\n\t\t\t'moveBy',\n\t\t\t'lineBy',\n\t\t\t'cubicCurveBy',\n\t\t\t'quadraticCurveBy',\n\t\t\t'curveBy',\n\t\t\t'arcBy',\n\n\t\t\t'removeSegments',\n\t\t\t'simplify',\n\t\t\t'reverse',\n\n\t\t\t// Rectangle\n\t\t\t'include',\n\t\t\t'expand',\n\t\t\t'scale',\n\t\t// ],\n\t\t// createAndChain = [\n\t\t\t'addChild',\n\t\t\t'insertChild',\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'replaceWith',\n\n\t\t\t'appendTop',\n\t\t\t'appendBottom',\n\n\t\t\t'add',\n\t\t\t'insert',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNode',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\n\t\t\t'addGlyph',\n\t\t\t'addGlyphs',\n\n\t\t\t'addContour',\n\t\t\t'insertContour',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addAnchor',\n\t\t\t'addAnchors',\n\t\t\t'addComponent',\n\t\t\t'addComponents',\n\n\t\t\t'addUnicode',\n\t\t\t'prepareOt',\n\t\t\t'addToFonts',\n\t\t\t'download'\n\t\t],\n\t\tplural = [\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\t\t\t'addGlyphs',\n\t\t\t'addAnchors',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addComponents'\n\t\t]/*,\n\t\tmathPoinFn = [\n\t\t\t'round',\n\t\t\t'ceil',\n\t\t\t'floor',\n\t\t\t'abs'\n\t\t],\n\t\tbooleanPathOp = [\n\t\t\t'unite',\n\t\t\t'intersect',\n\t\t\t'subtract',\n\t\t\t'exclude',\n\t\t\t'divide'\n\t\t]*/;\n\n\tchain.forEach(function(name) {\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(\n\t\t\t\t\t{ isPlural: plural.indexOf(name) !== -1 },\n\t\t\t\t\targuments\n\t\t\t\t),\n\t\t\t\ti;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tthis[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// make method chainable\n\t\t\treturn this;\n\t\t};\n\t});\n\n\t// singular chainable method\n};\n\nmodule.exports = Collection;\n\n},{}],5:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tGlyph = require('./Glyph.js');\n\nfunction Font( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\tif ( !args ) {\n\t\targs = {};\n\t}\n\n\tif ( !args.styleName ) {\n\t\targs.styleName = 'Regular';\n\t}\n\n\tif ( !args.unitsPerEm ) {\n\t\targs.unitsPerEm = 1024;\n\t}\n\n\tthis.fontinfo = this.ot = new opentype.Font( args );\n\n\tthis.glyphMap = {};\n\tthis.charMap = {};\n\tthis.altMap = {};\n\tthis._subset = false;\n\n\tthis.addGlyph(new Glyph({\n\t\tname: '.notdef',\n\t\tunicode: 0\n\t}));\n\n\tif ( args && args.glyphs ) {\n\t\tthis.addGlyphs( args.glyphs );\n\t}\n\n\tif ( typeof window === 'object' && window.document ) {\n\t\t// work around https://bugzilla.mozilla.org/show_bug.cgi?id=1100005\n\t\t// by using fonts.delete in batch, every 1 second\n\t\tif ( document.fonts ) {\n\t\t\tthis.addedFonts = [];\n\n\t\t\tsetInterval(function() {\n\t\t\t\twhile ( this.addedFonts.length > 1 ) {\n\t\t\t\t\tdocument.fonts.delete( this.addedFonts.shift() );\n\t\t\t\t}\n\t\t\t}.bind(this), 1000);\n\n\t\t} else {\n\t\t\tdocument.head.appendChild(\n\t\t\t\tthis.styleElement = document.createElement('style')\n\t\t\t);\n\t\t\t// let's find the corresponding CSSStyleSheet\n\t\t\t// (would be much easier with Array#find)\n\t\t\tthis.styleSheet = document.styleSheets[\n\t\t\t\t[].map.call(document.styleSheets, function(ss) {\n\t\t\t\t\treturn ss.ownerNode;\n\t\t\t\t}).indexOf(this.styleElement)\n\t\t\t];\n\t\t}\n\t}\n}\n\nFont.prototype = Object.create(paper.Group.prototype);\nFont.prototype.constructor = Font;\n\n// proxy .glyphs to .children\n// TODO: handle unicode updates\nObject.defineProperty(\n\tFont.prototype,\n\t'glyphs',\n\tObject.getOwnPropertyDescriptor( paper.Item.prototype, 'children' )\n);\n\n// TODO: proper proxying of ...Glyph[s] methods to ...Child[ren] methods\n// see Glyph.js\nFont.prototype.addGlyph = function( glyph ) {\n\tthis.addChild( glyph );\n\tthis.glyphMap[glyph.name] = glyph;\n\n\tif ( glyph.ot.unicode === undefined ) {\n\t\treturn glyph;\n\t}\n\n\t// build the default cmap\n\t// if multiple glyphs share the same unicode, use the glyph where unicode\n\t// and name are equal\n\tif ( !this.charMap[glyph.ot.unicode] ||\n\t\t\t( glyph.name.length === 1 &&\n\t\t\t\tglyph.name.charCodeAt(0) === glyph.ot.unicode ) ) {\n\n\t\tthis.charMap[glyph.ot.unicode] = glyph;\n\t}\n\n\t// build the alternates map\n\tif ( !this.altMap[glyph.ot.unicode] ) {\n\t\tthis.altMap[glyph.ot.unicode] = [];\n\t}\n\tthis.altMap[glyph.ot.unicode].push( glyph );\n\n\t// invalidate glyph subset cache\n\t// TODO: switch to immutable.js to avoid this maddness\n\tthis._lastSubset = undefined;\n\n\treturn glyph;\n};\n\nFont.prototype.addGlyphs = function( glyphs ) {\n\treturn glyphs.forEach(function( glyph ) {\n\t\tthis.addGlyph(glyph);\n\n\t}, this);\n};\n\nObject.defineProperty( Font.prototype, 'subset', {\n\tget: function() {\n\t\tif ( !this._subset ) {\n\t\t\tthis._subset = this.normalizeSubset( false );\n\t\t}\n\t\treturn this._subset;\n\t},\n\tset: function( set ) {\n\t\tthis._subset = this.normalizeSubset( set );\n\t}\n});\n\nFont.prototype.normalizeSubset = function( _set ) {\n\tvar set;\n\n\t// two cases where _set isn't an array\n\t// false set = all glyphs in the charMap\n\tif ( _set === false ) {\n\t\tset = Object.keys( this.charMap ).map(function( unicode ) {\n\t\t\treturn this.charMap[unicode];\n\t\t}.bind(this));\n\n\t// convert string to array of chars\n\t} else if ( typeof _set === 'string' ) {\n\t\tset = _set.split('').map(function(e) {\n\t\t\treturn e.charCodeAt(0);\n\t\t});\n\n\t} else {\n\t\tset = _set;\n\t}\n\n\t// convert array of number to array of glyphs\n\tif ( Array.isArray( set ) && typeof set[0] === 'number' ) {\n\t\tset = set.map(function( unicode ) {\n\t\t\treturn this.charMap[ unicode ];\n\t\t}.bind(this));\n\t}\n\n\t// always include .undef\n\tif ( set.indexOf( this.glyphMap['.notdef'] ) === -1 ) {\n\t\tset.unshift( this.glyphMap['.notdef'] );\n\t}\n\n\t// remove undefined glyphs and dedupe the set\n\treturn set.filter(function(e, i, arr) {\n\t\treturn e && arr.lastIndexOf(e) === i;\n\t});\n};\n\nFont.prototype.getGlyphSubset = function( _set ) {\n\treturn _set !== undefined ? this.normalizeSubset( _set ) : this.subset;\n};\n\nFont.prototype.interpolate = function( font0, font1, coef, set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\tglyph.interpolate(\n\t\t\tfont0.glyphMap[glyph.name],\n\t\t\tfont1.glyphMap[glyph.name],\n\t\t\tcoef\n\t\t);\n\t});\n\n\t// TODO: evaluate if taking subsetting into account makes kerning\n\t// interpolation faster or slower.\n\tif ( this.ot.kerningPairs ) {\n\t\tfor ( var i in this.ot.kerningPairs ) {\n\t\t\tthis.ot.kerningPairs[i] =\n\t\t\t\tfont0.ot.kerningPairs[i] +\n\t\t\t\t( font1.ot.kerningPairs[i] - font0.ot.kerningPairs[i] ) * coef;\n\t\t}\n\t}\n\n\tthis.ot.ascender =\n\t\tfont0.ot.ascender + ( font1.ot.ascender - font0.ot.ascender ) * coef;\n\tthis.ot.descender =\n\t\tfont0.ot.descender + ( font1.ot.descender - font0.ot.descender ) * coef;\n\n\treturn this;\n};\n\nFont.prototype.updateSVGData = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateSVGData();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.updateOTCommands = function( set, united ) {\n\tthis.ot.glyphs = this.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateOTCommands( null, united);\n\t});\n\n\treturn this;\n};\n\nFont.prototype.importOT = function( otFont ) {\n\tthis.ot = otFont;\n\n\totFont.glyphs.forEach(function( otGlyph ) {\n\t\tvar glyph = new Glyph({\n\t\t\t\tname: otGlyph.name,\n\t\t\t\tunicode: otGlyph.unicode\n\t\t\t});\n\n\t\tthis.addGlyph( glyph );\n\t\tglyph.importOT( otGlyph );\n\n\t}, this);\n\n\treturn this;\n};\n\nif ( typeof window === 'object' && window.document ) {\n\n\tvar _URL = window.URL || window.webkitURL;\n\tFont.prototype.addToFonts = document.fonts ?\n\t\t// CSS font loading, lightning fast\n\t\tfunction( buffer ) {\n\t\t\tvar fontface = new window.FontFace(\n\t\t\t\tthis.ot.familyName,\n\t\t\t\tbuffer || this.ot.toBuffer()\n\t\t\t);\n\n\t\t\tdocument.fonts.add( fontface );\n\t\t\tthis.addedFonts.push( fontface );\n\n\t\t\treturn this;\n\t\t} :\n\t\tfunction( buffer ) {\n\t\t\tvar url = _URL.createObjectURL(\n\t\t\t\t\tnew Blob(\n\t\t\t\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t\t\t\t{ type: 'font/opentype' }\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tif ( this.fontObjectURL ) {\n\t\t\t\t_URL.revokeObjectURL( this.fontObjectURL );\n\t\t\t\tthis.styleSheet.deleteRule(0);\n\t\t\t}\n\n\t\t\tthis.styleSheet.insertRule(\n\t\t\t\t'@font-face { font-family: \"' + this.ot.familyName + '\";' +\n\t\t\t\t'src: url(' + url + '); }',\n\t\t\t\t0\n\t\t\t);\n\t\t\tthis.fontObjectURL = url;\n\n\t\t\treturn this;\n\t\t};\n\n\tvar a = document.createElement('a');\n\tFont.prototype.download = function( buffer ) {\n\t\tvar reader = new FileReader(),\n\t\t\tfamilyName = this.ot.familyName;\n\n\t\treader.onloadend = function() {\n\t\t\ta.download = familyName + '.otf';\n\t\t\ta.href = reader.result;\n\t\t\ta.dispatchEvent(new MouseEvent('click'));\n\n\t\t\tsetTimeout(function() {\n\t\t\t\ta.href = '#';\n\t\t\t\t_URL.revokeObjectURL( reader.result );\n\t\t\t}, 100);\n\t\t};\n\n\t\treader.readAsDataURL(new Blob(\n\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t{ type: 'font/opentype' }\n\t\t));\n\n\t\treturn this;\n\t};\n\n}\n\nmodule.exports = Font;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":2,\"../node_modules/paper/dist/paper-core.js\":3,\"./Glyph.js\":6}],6:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tOutline = require('./Outline.js'),\n\tclipper = require('../node_modules/jsclipper/clipper_unminified.js');\n\nfunction Glyph( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\tif ( args && typeof args.unicode === 'string' ) {\n\t\targs.unicode = args.unicode.charCodeAt(0);\n\t}\n\n\tthis.ot = new opentype.Glyph( args );\n\tthis.ot.path = new opentype.Path();\n\n\tthis.name = args.name;\n\t// workaround opentype 'unicode === 0' bug\n\tthis.ot.unicode = args.unicode;\n\n\tthis.addChild( new Outline() );\n\t// the second child will hold all components\n\tthis.addChild( new paper.Group() );\n\t// Should all anchors and parentAnchors also leave in child groups?\n\tthis.anchors = ( args && args.anchors ) || [];\n\tthis.parentAnchors = ( args && args.parentAnchors ) || [];\n\n\t// each individual glyph must be explicitely made visible\n\tthis.visible = false;\n\t// default colors required to display the glyph in a canvas\n\tthis.fillColor = new paper.Color(0, 0, 0);\n\t// stroke won't be displayed unless strokeWidth is set to 1\n\tthis.strokeColor = new paper.Color(0, 0, 0);\n\tthis.strokeScaling = false;\n}\n\nGlyph.prototype = Object.create(paper.Group.prototype);\nGlyph.prototype.constructor = Glyph;\n\n// Todo: handle unicode updates\nObject.defineProperty(Glyph.prototype, 'unicode', {\n\tset: function( code ) {\n\t\tthis.ot.unicode = typeof code === 'string' ?\n\t\t\tcode.charCodeAt(0) :\n\t\t\tcode;\n\t},\n\tget: function() {\n\t\treturn this.ot.unicode;\n\t}\n});\n\n// proxy .contours to .children[0]\nObject.defineProperty( Glyph.prototype, 'contours', {\n\tget: function() {\n\t\treturn this.children[0].children;\n\t}\n});\n\n// proxy .components to .children[1]\nObject.defineProperty( Glyph.prototype, 'components', {\n\tget: function() {\n\t\treturn this.children[1].children;\n\t}\n});\n\n// proxy .visible to\n\n// proxy ...Contour[s] methods to children[0]...Child[ren] methods\n// and proxy ...Component[s] methods to children[1]...Child[ren] methods\nObject.getOwnPropertyNames( paper.Item.prototype ).forEach(function(name) {\n\tvar proto = this;\n\n\t// exclude getters and non-methods\n\tif ( Object.getOwnPropertyDescriptor(proto, name).get ||\n\t\t\ttypeof proto[name] !== 'function' ) {\n\t\treturn;\n\t}\n\n\tif ( name.indexOf('Children') !== -1 ) {\n\t\tproto[name.replace('Children', 'Contours')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Children', 'Components')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\n\t} else if ( name.indexOf('Child') !== -1 ) {\n\t\tproto[name.replace('Child', 'Contour')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Child', 'Component')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\t}\n\n}, paper.Item.prototype);\n\nGlyph.prototype.addAnchor = function( item ) {\n\tthis.anchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addAnchors = function( anchors ) {\n\treturn anchors.forEach(function(anchor) {\n\t\tthis.addAnchor(anchor);\n\t}, this);\n};\n\nGlyph.prototype.addParentAnchor = function( item ) {\n\tthis.parentAnchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addUnicode = function( code ) {\n\tthis.ot.addUnicode( code );\n\n\treturn this;\n};\n\nGlyph.prototype.interpolate = function( glyph0, glyph1, coef ) {\n\t// If we added an interpolate method to Group, we'd be able to just\n\t// interpolate all this.children directly.\n\t// instead we interpolate the outline first\n\tthis.children[0].interpolate( glyph0.children[0], glyph1.children[0] );\n\t// and then the components\n\tthis.children[1].children.forEach(function(component, j) {\n\t\tcomponent.interpolate(\n\t\t\tglyph0.children[1].children[j], glyph1.children[1].children[j], coef\n\t\t);\n\t});\n\n\tthis.ot.advanceWidth =\n\t\tglyph0.ot.advanceWidth +\n\t\t( glyph1.ot.advanceWidth - glyph0.ot.advanceWidth ) * coef;\n\tthis.ot.leftSideBearing =\n\t\tglyph0.ot.leftSideBearing +\n\t\t( glyph1.ot.leftSideBearing - glyph0.ot.leftSideBearing ) * coef;\n\tthis.ot.xMax =\n\t\tglyph0.ot.xMax + ( glyph1.ot.xMax - glyph0.ot.xMax ) * coef;\n\tthis.ot.xMin =\n\t\tglyph0.ot.xMin + ( glyph1.ot.xMin - glyph0.ot.xMin ) * coef;\n\tthis.ot.yMax =\n\t\tglyph0.ot.yMax + ( glyph1.ot.yMax - glyph0.ot.yMax ) * coef;\n\tthis.ot.yMin =\n\t\tglyph0.ot.yMin + ( glyph1.ot.yMin - glyph0.ot.yMin ) * coef;\n\n\treturn this;\n};\n\nGlyph.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children[0].updateSVGData( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateSVGData( path );\n\t});\n\n\treturn this.svgData;\n};\n\nGlyph.prototype.updateOTCommands = function( path, united ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n/* eslint-disable */\n\tif ( united ) {\n\n\t\tvar c = new clipper.Clipper();\n\t\tc.StriclySimple = true;\n\t\tvar solution = new clipper.Paths();\n\n\t\tvar solution = this.getPaths( solution );\n\n\t\tif ( solution.length > 0 ) {\n\t\t\tsolution = clipper.Clipper.CleanPolygons( solution, 0.1 );\n\t\t\tsolution = clipper.Clipper.SimplifyPolygons( solution, clipper.PolyFillType.pftNonZero );\n\n\t\t\tvar unionedPath = new Outline();\n\t\t\tsolution.forEach(function( path ) {\n\t\t\t\tvar constructedPath = new paper.Path();\n\n\t\t\t\tpath.forEach(function( point ) {\n\t\t\t\t\tconstructedPath.add( new paper.Point(point.X, point.Y ) );\n\t\t\t\t});\n\n\t\t\t\tunionedPath.addChild( constructedPath );\n\t\t\t});\n\n\t\t\tunionedPath.isPrepared = true;\n\n\t\t\tunionedPath.updateOTCommands( path );\n\t\t}\n\t} else {\n\n\t\tthis.children[0].updateOTCommands( path );\n\n\t\tthis.children[1].children.forEach(function( component ) {\n\t\t\tcomponent.updateOTCommands( path );\n\t\t});\n\n\t}\n/* eslint-enable */\n\n\treturn this.ot;\n};\n\nGlyph.prototype.getPaths = function( solution ) {\n\n\tsolution = this.children[0].getPaths( solution );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tsolution = component.getPaths( solution );\n\t});\n\n\treturn solution;\n};\n\nGlyph.prototype.importOT = function( otGlyph ) {\n\tvar current;\n\tthis.ot = otGlyph;\n\n\tif ( !otGlyph.path || !otGlyph.path.commands ) {\n\t\treturn this;\n\t}\n\n\tthis.ot.path.commands.forEach(function(command) {\n\t\tswitch ( command.type ) {\n\t\t\tcase 'M':\n\t\t\t\tcurrent = new paper.Path();\n\t\t\t\tthis.addContour( current );\n\n\t\t\t\tcurrent.moveTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tcurrent.lineTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tcurrent.cubicCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\t[ command.x2, command.y2 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tcurrent.quadraticCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\t// When the glyph has no contour,\n\t\t\t\t// they contain a single Z command in\n\t\t\t\t// opentype.js.\n\t\t\t\t// TODO: see how we should handle that\n\t\t\t\tif ( current ) {\n\t\t\t\t\tcurrent.closePath();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}, this);\n\n\treturn this;\n};\n\nmodule.exports = Glyph;\n\n},{\"../node_modules/jsclipper/clipper_unminified.js\":1,\"../node_modules/opentype.js/dist/opentype.js\":2,\"../node_modules/paper/dist/paper-core.js\":3,\"./Outline.js\":8}],7:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nObject.defineProperty( paper.Segment.prototype, 'x', {\n\tget: function() {\n\t\treturn this.point.x;\n\t},\n\tset: function( value ) {\n\t\tthis.point.x = value;\n\t}\n});\n\nObject.defineProperty( paper.Segment.prototype, 'y', {\n\tget: function() {\n\t\treturn this.point.y;\n\t},\n\tset: function( value ) {\n\t\tthis.point.y = value;\n\t}\n});\n\nmodule.exports = paper.Segment;\n\n},{\"../node_modules/paper/dist/paper-core.js\":3}],8:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nfunction Outline() {\n\tpaper.CompoundPath.prototype.constructor.apply( this );\n}\n\n// inehrit CompoundPath\nOutline.prototype = Object.create(paper.CompoundPath.prototype);\nOutline.prototype.constructor = Outline;\n\n// Fix two problems with CompoundPath#insertChildren:\n// - it arbitrarily changes the direction of paths\n// - it seems that it doesn't handle CompoundPath arguments\nOutline.prototype.insertChildren = function(index, items, _preserve) {\n\tif ( Array.isArray( items ) ) {\n\t\t// flatten items to handle CompoundPath children\n\t\titems = [].concat.apply([], items.map(function(item) {\n\t\t\treturn item instanceof paper.Path ? item : item.children;\n\t\t}));\n\t}\n\n\treturn paper.Item.prototype.insertChildren.call(\n\t\tthis, index, items, _preserve, paper.Path\n\t);\n};\n\nOutline.fromPath = function( path ) {\n\tvar result = new Outline();\n\treturn path._clone( result, false );\n};\n\nOutline.prototype.interpolate = function( outline0, outline1, coef ) {\n\tfor (var i = 0, l = this.contours.length; i < l; i++) {\n\t\t// The number of children should be the same everywhere,\n\t\t// but we're going to try our best anyway\n\t\tif ( !outline0.children[i] || !outline1.children[i] ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.children[i].interpolate(\n\t\t\toutline0.children[i],\n\t\t\toutline1.children[i],\n\t\t\tcoef\n\t\t);\n\t}\n\n\treturn this;\n};\n\nOutline.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateSVGData( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.svgData;\n};\n\nOutline.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateOTCommands( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.ot;\n};\n\nOutline.prototype.getPaths = function( solution ) {\n\tthis.children.forEach(function( contour ) {\n\t\tif ( contour.expandedFrom ) {\n\t\t\treturn solution;\n\t\t}\n\n\t\tif ( contour.skeleton !== true ) {\n\t\t\tsolution = contour.getPath( solution, contour.globalMatrix );\n\t\t} else if ( !contour.expandedTo[1] ) {\n\t\t\tsolution = contour.expandedTo[0].getPath( solution, contour.globalMatrix );\n\t\t} else {\n\t\t\tsolution.push( contour.expandedTo[0].getSimplePath( null, contour.globalMatrix ) );\n\t\t\tsolution.push( contour.expandedTo[1].getSimplePath( null, contour.globalMatrix ) );\n\t\t}\n\t});\n\n\treturn solution;\n};\n\nmodule.exports = Outline;\n\n},{\"../node_modules/paper/dist/paper-core.js\":3}],9:[function(require,module,exports){\n/* Extend the Path prototype to add OpenType conversion\n * and alias *segments methods and properties to *nodes\n */\nvar paper = require('../node_modules/paper/dist/paper-core.js'),\n\tclipper = require('../node_modules/jsclipper/clipper_unminified.js');\n\nvar proto = paper.PaperScope.prototype.Path.prototype;\n\n// alias *Segments methods to *Nodes equivalents\n[ 'add', 'insert', 'remove' ].forEach(function(name) {\n\tproto[name + 'Nodes'] =\n\t\tproto[name + 'Segments'];\n});\n\n// alias .segments to .nodes\nObject.defineProperties(proto, {\n\tnodes: Object.getOwnPropertyDescriptor( proto, 'segments' ),\n\tfirstNode: Object.getOwnPropertyDescriptor( proto, 'firstSegment' ),\n\tlastNode: Object.getOwnPropertyDescriptor( proto, 'lastSegment' )\n});\n\nproto._updateData = function( data, matrix, pushSimple, pushBezier ) {\n\tif ( this.visible === false || this.curves.length === 0) {\n\t\treturn data;\n\t}\n\n\t// prototypo needs to be able to change the direction of the updated data.\n\tvar reverse = this.exportReversed,\n\t\tcurves = this.curves,\n\t\tstart = curves[ reverse ? curves.length - 1 : 0 ]\n\t\t\t[ 'point' + ( reverse ? 2 : 1 ) ]\n\t\t\t.transform( matrix );\n\n\tpushSimple(\n\t\t'M',\n\t\tMath.round( start.x ) || 0,\n\t\tMath.round( start.y ) || 0\n\t);\n\n\tfor ( var i = -1, l = curves.length; ++i < l; ) {\n\t\tvar curve = curves[ reverse ? l - 1 - i : i ],\n\t\t\tend = curve['point' + ( reverse ? 1 : 2 ) ].transform( matrix );\n\n\t\tif ( curve.isLinear() ) {\n\t\t\tpushSimple(\n\t\t\t\t'L',\n\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\tMath.round( end.y ) || 0\n\t\t\t);\n\n\t\t} else {\n\t\t\tvar ctrl1 = new paper.Point(\n\t\t\t\t\tcurve.point1.x + curve.handle1.x,\n\t\t\t\t\tcurve.point1.y + curve.handle1.y\n\t\t\t\t).transform( matrix ),\n\t\t\t\tctrl2 = new paper.Point(\n\t\t\t\t\tcurve.point2.x + curve.handle2.x,\n\t\t\t\t\tcurve.point2.y + curve.handle2.y\n\t\t\t\t).transform( matrix );\n\n\t\t\tif ( reverse ) {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( this.closed ) {\n\t\tpushSimple('Z');\n\t}\n\n\treturn data;\n};\n\nproto.updateOTCommands = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx: arguments[1],\n\t\t\t\ty: arguments[2]\n\t\t\t});\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx1: arguments[1],\n\t\t\t\ty1: arguments[2],\n\t\t\t\tx2: arguments[3],\n\t\t\t\ty2: arguments[4],\n\t\t\t\tx: arguments[5],\n\t\t\t\ty: arguments[6]\n\t\t\t});\n\t\t}\n\t);\n};\n\nproto.updateSVGData = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t}\n\t);\n};\n\nproto.getSimplePath = function( precision, matrix ) {\n\tvar path = [],\n\t\toffset,\n\t\tlocationOnCurve;\n\t\tprecision = precision || 50;\n\n\tif ( this.visible === false ) {\n\t\t\treturn path;\n\t}\n\n\tif ( this.exportReversed ) {\n\t\tfor (var i = this.curves.length - 1; i >= 0; i--) {\n\t\t\tvar point2 = this.curves[i].point2.transform( matrix );\n\t\t\tpath.push( { X: point2.x, Y: point2.y } );\n\t\t\tfor (var j = precision - 1; j > 0; j--) {\n\t\t\t\toffset = j / precision;\n\n\t\t\t\tlocationOnCurve = this.curves[i].getLocationAt( offset, true ).point.transform( matrix );\n\t\t\t\tpath.push( { X: locationOnCurve.x, Y: locationOnCurve.y } );\n\t\t\t}\n\t\t}\n\t} else {\n\t\tthis.curves.forEach( function( item ) {\n\t\t\tvar point1 = item.point1.transform( matrix );\n\t\t\tpath.push( { X: point1.x, Y: point1.y } );\n\t\t\tfor (var k = 1; k < precision; k++) {\n\t\t\t\toffset = k / precision;\n\n\t\t\t\tlocationOnCurve = item.getLocationAt( offset, true ).point.transform( matrix );\n\t\t\t\tpath.push( { X: locationOnCurve.x, Y: locationOnCurve.y } );\n\t\t\t}\n\t\t});\n\t}\n\n\treturn path;\n};\n\nproto.getPath = function( solution, matrix ) {\n/* eslint-disable */\n\tvar path = this.getSimplePath( null, matrix );\n\tvar newPathToAdd = new clipper.Paths();\n\tvar c = new clipper.Clipper();\n\tc.StriclySimple = true;\n\n\tc.AddPaths( solution, clipper.PolyType.ptSubject, true );\n\tc.AddPath( path, clipper.PolyType.ptClip, true );\n\ttry {\n\t\tc.Execute( clipper.ClipType.ctUnion, newPathToAdd, clipper.PolyFillType.pftNonZero, clipper.PolyFillType.pftNonZero);\n\t} catch ( err ) {\n\t\tnewPathToAdd = solution;\n\t\tnewPathToAdd.push( path );\n\t}\n\n\treturn newPathToAdd;\n/* eslint-enable */\n};\n\nmodule.exports = paper.Path;\n\n},{\"../node_modules/jsclipper/clipper_unminified.js\":1,\"../node_modules/paper/dist/paper-core.js\":3}],10:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tFont = require('./Font.js'),\n\tGlyph = require('./Glyph.js'),\n\tOutline = require('./Outline'),\n\tPath = require('./Path.js'),\n\tNode = require('./Node.js'),\n\tCollection = require('./Collection.js');\n\npaper.PaperScope.prototype.Font = Font;\npaper.PaperScope.prototype.Glyph = Glyph;\npaper.PaperScope.prototype.Outline = Outline;\npaper.PaperScope.prototype.Path = Path;\npaper.PaperScope.prototype.Node = Node;\npaper.PaperScope.prototype.Collection = Collection;\n\nfunction plumin( arg ) {\n\tif ( arguments.length === 1 && arg instanceof Collection ) {\n\t\treturn arg;\n\t}\n\n\tvar c = Object.create( Collection.prototype );\n\tCollection.apply( c, arguments );\n\treturn c;\n}\n\nplumin.opentype = opentype;\n\nplumin.proxy = Collection.proxy.bind(plumin);\nplumin.proxy(paper);\n\nmodule.exports = plumin;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":2,\"../node_modules/paper/dist/paper-core.js\":3,\"./Collection.js\":4,\"./Font.js\":5,\"./Glyph.js\":6,\"./Node.js\":7,\"./Outline\":8,\"./Path.js\":9}]},{},[10,3])(10)\n});\n\n\n//# sourceMappingURL=plumin.js.map","var plumin = require('plumin.js'),\n\tDepTree = require('deptree'),\n\tclone = require('lodash/lang/clone'),\n\tassign = require('es6-object-assign').assign,\n\tupdateUtils = require('./updateUtils.js');\n\nvar paper = plumin.paper,\n\tUtils = updateUtils,\n\t_ = {\n\t\tclone: clone,\n\t\tassign: assign\n\t};\n\n// convert the glyph source from the ufo object model to the paper object model\n// this is the inverse operation done by jsufonify\nUtils.ufoToPaper = function( src ) {\n\tif ( src.parameter ) {\n\t\tsrc.parameters = src.parameter;\n\t\tdelete src.parameter;\n\t}\n\n\tif ( src.anchor ) {\n\t\tsrc.anchors = src.anchor;\n\t\tdelete src.anchor;\n\t}\n\n\tif ( src.outline && src.outline.contour ) {\n\t\tsrc.contours = src.outline.contour;\n\t\tdelete src.outline.contour;\n\t}\n\n\tif ( src.contours ) {\n\t\tsrc.contours.forEach(function(contour) {\n\t\t\tif ( contour.point ) {\n\t\t\t\tcontour.nodes = contour.point;\n\t\t\t\tdelete contour.point;\n\t\t\t}\n\t\t});\n\t}\n\n\tif ( src.outline && src.outline.component ) {\n\t\tsrc.components = src.outline.component;\n\n\t\tsrc.components.forEach(function(component) {\n\t\t\tif ( component.anchor ) {\n\t\t\t\tcomponent.parentAnchors = component.anchor;\n\t\t\t\tdelete component.anchor;\n\t\t\t}\n\n\t\t\tif ( component.parameter ) {\n\t\t\t\tcomponent.parentParameters = component.parameter;\n\t\t\t\tdelete component.parameter;\n\t\t\t}\n\t\t});\n\n\t\tdelete src.outline.component;\n\t}\n\n\tdelete src.outline;\n\n\tif ( src.lib && src.lib.transforms ) {\n\t\tsrc.transforms = src.lib.transforms;\n\t\tdelete src.lib.transforms;\n\t}\n\n\tif ( src.lib && src.lib.transformOrigin ) {\n\t\tsrc.transformOrigin = src.lib.transformOrigin;\n\t\tdelete src.lib.transformOrigin;\n\t}\n\n\tif ( src.lib && src.lib.parameters ) {\n\t\tsrc.parameters = src.lib.parameters;\n\t\tdelete src.lib.parameters;\n\t}\n\n\tif ( src.lib && src.lib.solvingOrder ) {\n\t\tsrc.solvingOrder = src.lib.solvingOrder;\n\t\tdelete src.lib.solvingOrder;\n\t}\n\n\treturn src;\n};\n\nUtils.fontFromSrc = function( src ) {\n\t// TODO: this, block is only here for backward compat\n\t// and should be removed at some point in the future\n\tif ( !src.fontinfo ) {\n\t\tsrc.fontinfo = src.info;\n\t}\n\n\tvar font = new paper.Font( src.fontinfo );\n\n\tfont.src = Utils.ufoToPaper( src );\n\n\tvar filteredSrc = _.assign( {}, src );\n\tdelete filteredSrc.controls;\n\tdelete filteredSrc.presets;\n\tdelete filteredSrc.glyphs;\n\n\tUtils.createUpdaters( filteredSrc, 'font_' + src.fontinfo.familyName );\n\n\tfont.parameters = {};\n\tUtils.mergeStatic( font.parameters, font.src.parameters );\n\n\t// solvingOrder might be already available (if this is a subcomponent,\n\t// or precomputed in a worker)\n\tfont.solvingOrder = font.src.solvingOrder;\n\n\tif ( !font.solvingOrder ) {\n\t\tfont.solvingOrder = filteredSrc.solvingOrder =\n\t\t\tUtils.solveDependencyTree( font, filteredSrc );\n\t}\n\n\treturn font;\n};\n\n// create Glyph instance and all its child items: anchors, contours\n// and components\n// var wmm = typeof WeakMap === 'function' && new WeakMap();\nUtils.glyphFromSrc = function( src, fontSrc, naive, embed ) {\n\tvar glyph = new paper.Glyph({\n\t\tname: src.name,\n\t\tunicode: src.unicode\n\t});\n\n\t// Clone glyph src to allow altering it without impacting components srcs.\n\t// if ( !wmm.has( src ) ) {\n\t// \twmm.set( src, JSON.stringify( src ) );\n\t// }\n\t// glyph.src = JSON.parse( wmm.get( src ) );\n\t// glyph.src = JSON.parse( JSON.stringify( src ) );\n\tglyph.src = _.clone( src, true );\n\t// turn ._operation strings to ._updaters functions\n\t// TODO: restore sourceURL pragma for debugging.\n\t// this should impact the way results are memoized\n\tUtils.createUpdaters( glyph.src/*, 'glyphs/glyph_' + name*/ );\n\tUtils.mergeStatic( glyph, glyph.src );\n\n\t// this will be used to hold local parameters that will be merged with\n\t// the font parameters\n\tglyph.parameters = {};\n\tUtils.mergeStatic( glyph.parameters, glyph.src.parameters );\n\n\t// solvingOrder might be already available (if this is a subcomponent,\n\t// or precomputed in a worker)\n\tglyph.solvingOrder = glyph.src.solvingOrder;\n\n\t(glyph.src.anchors || []).forEach(function(anchorSrc) {\n\t\tvar anchor = new paper.Node();\n\t\tanchor.src = anchorSrc;\n\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\tglyph.addAnchor( anchor );\n\t});\n\n\t(glyph.src.contours || []).forEach(function(contourSrc) {\n\t\tvar contour = new paper.Path();\n\t\tcontour.src = contourSrc;\n\t\tUtils.mergeStatic( contour, contourSrc );\n\n\t\tglyph.addContour( contour );\n\n\t\t// TODO: handle oncurve/offcurve points\n\t\tcontourSrc.nodes.forEach(function(nodeSrc) {\n\t\t\tvar node = new paper.Node();\n\t\t\tnode.src = nodeSrc;\n\t\t\tUtils.mergeStatic( node, nodeSrc );\n\n\t\t\tcontour.add( node );\n\t\t});\n\t});\n\n\tif ( !glyph.src.components ) {\n\t\treturn glyph;\n\t}\n\n\t// components can only be embedded once all glyphs have been generated\n\t// from source\n\tglyph.embedComponents = function() {\n\t\tglyph.src.components.forEach(function(componentSrc) {\n\t\t\t// components are glyphs, quite simply\n\t\t\tvar component = Utils.glyphFromSrc(\n\t\t\t\t\tfontSrc.glyphs[componentSrc.base],\n\t\t\t\t\tfontSrc,\n\t\t\t\t\tnaive,\n\t\t\t\t\t// components' subcomponents can be embedded immediatly\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\tcomponent.parentParameters = {};\n\t\t\tUtils.mergeStatic(\n\t\t\t\tcomponent.parentParameters,\n\t\t\t\tcomponentSrc.parentParameters\n\t\t\t);\n\n\t\t\tnaive.annotator( component );\n\t\t\tglyph.addComponent( component );\n\n\t\t\t(componentSrc.parentAnchors || []).forEach(function(anchorSrc) {\n\t\t\t\tvar anchor = new paper.Node();\n\t\t\t\tanchor.src = anchorSrc;\n\t\t\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\t\t\tcomponent.addParentAnchor( anchor );\n\t\t\t});\n\t\t});\n\n\t\tdelete glyph.embedComponents;\n\t};\n\n\tif ( embed ) {\n\t\tglyph.embedComponents();\n\t}\n\n\treturn glyph;\n};\n\n// build a full cursor from arguments\n// adds 'contours' and 'nodes' automagically when arguments start with a number\nUtils.cursor = function() {\n\tvar cursor = [];\n\n\tfor ( var i = -1; ++i < arguments.length; ) {\n\t\tif ( i === 0 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'contours' );\n\t\t}\n\t\tif ( i === 1 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'nodes' );\n\t\t}\n\t\tcursor.push( arguments[i] );\n\t}\n\n\treturn cursor.join('.');\n};\n\nUtils.propFromCursor = function( cursor, context, length ) {\n\tif ( length === undefined ) {\n\t\tlength = cursor.length;\n\t}\n\n\tfor ( var i = -1; ++i < length; ) {\n\t\tcontext = context[ cursor[i] ];\n\t}\n\n\treturn context;\n};\n\nUtils.mergeStatic = function( obj, src ) {\n\tfor ( var i in src ) {\n\t\tif ( typeof src[i] !== 'object' ) {\n\t\t\tobj[i] = src[i];\n\n\t\t// props that have empty dependencies and params are static\n\t\t} else if ( src[i]._dependencies && src[i]._dependencies.length === 0 &&\n\t\t\t\tsrc[i]._parameters.length === 0 ) {\n\n\t\t\tobj[i] = src[i]._updaters[0].apply(\n\t\t\t\tobj,\n\t\t\t\t[ null, null, null, null, Utils ]\n\t\t\t);\n\n\t\t\tdelete src[i];\n\t\t}\n\t}\n};\n\nUtils.createUpdaters = function( leaf, path ) {\n\tif ( leaf.constructor === Object && leaf._operation ) {\n\t\tleaf._updaters = [ Utils.createUpdater( leaf, path ) ];\n\n\t} else if ( leaf.constructor === Object ) {\n\t\tfor ( var i in leaf ) {\n\t\t\tUtils.createUpdaters( leaf[i], path + '.' + i );\n\t\t}\n\n\t} else if ( leaf.constructor === Array ) {\n\t\tleaf.forEach(function(child, j) {\n\t\t\tUtils.createUpdaters( child, path + '.' + j );\n\t\t});\n\t}\n};\n\nUtils.updaterCache = {};\nUtils.createUpdater = function( leaf/*, path*/ ) {\n\tvar sOperation = leaf._operation.toString(),\n\t\tcacheKey = ( leaf.parameters || [] ).join() + '#' + sOperation;\n\n\tif ( cacheKey in Utils.updaterCache ) {\n\t\treturn Utils.updaterCache[ cacheKey ];\n\t}\n\n\tUtils.updaterCache[ cacheKey ] = Function.apply( null, [\n\t\t\t'propName', 'contours', 'anchors', 'parentAnchors', 'Utils'\n\t\t]\n\t\t.concat( leaf._parameters || [] )\n\t\t.concat(\n\t\t\t( typeof leaf._operation === 'string' &&\n\t\t\t\t\tleaf._operation.indexOf('return ') === -1 ?\n\t\t\t\t'return ' : ''\n\t\t\t) +\n\t\t\t// The operation might be wrapped in a function (e.g. multi-\n\t\t\t// line code for debugging purpose). In this case, return\n\t\t\t// must be explicit\n\t\t\tsOperation\n\t\t\t\t// [\\s\\S] need to be used instead of . because\n\t\t\t\t// javascript doesn't have a dotall flag (s)\n\t\t\t\t.replace(/^function\\s*\\(\\)\\s*\\{([\\s\\S]*?)\\}$/, '$1')\n\t\t\t\t.trim()/* +\n\t\t\t// add sourceURL pragma to help debugging\n\t\t\t// TODO: restore sourceURL pragma if it proves necessary\n\t\t\t'\\n\\n//# sourceURL=' + path*/\n\t\t) );\n\n\treturn Utils.updaterCache[ cacheKey ];\n};\n\nUtils.solveDependencyTree = function( leaf, src ) {\n\tvar depTree = Utils.dependencyTree( src || leaf.src, null ),\n\t\torder = depTree.resolve().map(function( cursor ) {\n\t\t\treturn { cursor: cursor.split('.') };\n\t\t}),\n\t\tsimplified = Utils.simplifyResolutionOrder( leaf, order );\n\n\treturn simplified;\n};\n\nUtils.dependencyTree = function( parentSrc, cursor, depTree ) {\n\tif ( !depTree ) {\n\t\tdepTree = new DepTree();\n\t}\n\n\tObject.keys( parentSrc ).forEach(function( i ) {\n\t\t// don't inspect local parameters, private properties and non-object\n\t\tif ( i === 'parameters' || i.indexOf('_') === 0 ||\n\t\t\t\ttypeof parentSrc[i] !== 'object' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar leafSrc = parentSrc[i],\n\t\t\tcurrCursor = cursor ? cursor + '.' + i : i;\n\n\t\tif ( ( leafSrc._updaters && leafSrc._updaters.length ) ||\n\t\t\t\t( leafSrc._dependencies && leafSrc._dependencies.length ) ) {\n\n\t\t\tdepTree.add( currCursor,\n\t\t\t\tleafSrc._dependencies.filter(function(dep) {\n\t\t\t\t\t// parentAnchors are always here when you need them\n\t\t\t\t\treturn !/^parentAnchors/.test(dep);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif ( !leafSrc._operation ) {\n\t\t\tUtils.dependencyTree( leafSrc, currCursor, depTree );\n\t\t}\n\t});\n\n\treturn depTree;\n};\n\n// Simplify resolution order by removing cursors that don't point to objects\n// with updater functions\nUtils.simplifyResolutionOrder = function( leaf, depTree ) {\n\treturn depTree.filter(function( cursor ) {\n\t\tvar src = Utils.propFromCursor( cursor.cursor, leaf.src );\n\t\treturn src && src._updaters;\n\t});\n};\n\nvar rdeg = /deg$/;\nUtils.transformsToMatrix = function( transforms, origin ) {\n\tvar prev = new Float32Array(6),\n\t\tcurr = new Float32Array(6),\n\t\trslt = new Float32Array([ 1, 0, 0, 1, 0, 0 ]);\n\n\tif ( origin && Array.isArray( origin ) ) {\n\t\ttransforms.unshift([ 'translate', origin[0], origin[1] ]);\n\t\ttransforms.push([ 'translate', -origin[0], -origin[1] ]);\n\n\t} else if ( origin ) {\n\t\ttransforms.unshift([ 'translate', origin.x, origin.y ]);\n\t\ttransforms.push([ 'translate', -origin.x, -origin.y ]);\n\t}\n\n\ttransforms.forEach(function( transform ) {\n\t\tcurr[0] = curr[3] = 1;\n\t\tcurr[1] = curr[2] = curr[4] = curr[5] = 0;\n\n\t\t// convert degrees to radian\n\t\tfor ( var i = 1; i < transform.length; i++ ) {\n\t\t\tif ( transform[i] && typeof transform[i] === 'string' &&\n\t\t\t\t\trdeg.test(transform[i]) ) {\n\t\t\t\ttransform[i] = parseFloat(transform[i]) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\t\t}\n\n\t\tswitch ( transform[0] ) {\n\t\tcase 'translateX':\n\t\t\tcurr[4] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translateY':\n\t\t\tcurr[5] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translate':\n\t\t\tcurr[4] = transform[1];\n\t\t\tcurr[5] = transform[2] || 0;\n\t\t\tbreak;\n\n\t\tcase 'rotate':\n\t\t\tcurr[0] = Math.cos( transform[1] );\n\t\t\tcurr[1] = Math.sin( transform[1] );\n\t\t\tcurr[2] = -curr[1];\n\t\t\tcurr[3] = curr[0];\n\t\t\tbreak;\n\n\t\tcase 'scaleX':\n\t\t\tcurr[0] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scaleY':\n\t\t\tcurr[3] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scale':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[3] = transform.length > 2 ? transform[2] : transform[1];\n\t\t\tbreak;\n\n\t\tcase 'skewX':\n\t\t\t// stop parsing transform when encountering skewX(90)\n\t\t\t// see http://stackoverflow.com/questions/21094958/how-to-deal-with-infinity-in-a-2d-matrix\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[2] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'skewY':\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[1] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'matrix':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[1] = transform[2];\n\t\t\tcurr[2] = transform[3];\n\t\t\tcurr[3] = transform[4];\n\t\t\tcurr[4] = transform[5];\n\t\t\tcurr[5] = transform[6];\n\t\t\tbreak;\n\t\t}\n\n\t\tprev[0] = rslt[0];\n\t\tprev[1] = rslt[1];\n\t\tprev[2] = rslt[2];\n\t\tprev[3] = rslt[3];\n\t\tprev[4] = rslt[4];\n\t\tprev[5] = rslt[5];\n\n\t\trslt[0] = prev[0] * curr[0] + prev[2] * curr[1];\n\t\trslt[1] = prev[1] * curr[0] + prev[3] * curr[1];\n\t\trslt[2] = ( prev[0] * curr[2] || 0 ) + prev[2] * curr[3];\n\t\trslt[3] = ( prev[1] * curr[2] || 0 ) + prev[3] * curr[3];\n\t\trslt[4] = prev[0] * curr[4] + prev[2] * curr[5] + prev[4];\n\t\trslt[5] = prev[1] * curr[4] + prev[3] * curr[5] + prev[5];\n\t});\n\n\treturn new paper.Matrix(\n\t\trslt[0],\n\t\trslt[1],\n\t\trslt[2],\n\t\trslt[3],\n\t\trslt[4],\n\t\trslt[5]\n\t);\n};\n\nUtils.updateParameters = function( leaf, params ) {\n\tObject.keys( ( leaf.src && leaf.src.parameters ) || [] )\n\t\t.forEach(function( name ) {\n\t\t\tvar src = leaf.src.parameters[name];\n\n\t\t\tparams[name] = src._updaters ?\n\t\t\t\tsrc._updaters[0].apply( null, [\n\t\t\t\t\tname, [], [], leaf.parentAnchors, Utils\n\t\t\t\t].concat(\n\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\treturn params[_name];\n\t\t\t\t\t})\n\t\t\t\t)) :\n\t\t\t\tsrc;\n\t\t});\n};\n\nUtils.updateProperties = function( leaf, params ) {\n\tif ( !leaf.solvingOrder ) {\n\t\treturn;\n\t}\n\n\tleaf.solvingOrder.forEach(function(_cursor) {\n\t\tvar cursor = _cursor.cursor,\n\t\t\tpropName = cursor[ cursor.length - 1 ],\n\t\t\tsrc = _cursor.src || ( _cursor.src =\n\t\t\t\tUtils.propFromCursor( cursor, leaf.src ) ),\n\t\t\tobj = _cursor.obj || ( _cursor.obj =\n\t\t\t\tUtils.propFromCursor( cursor, leaf, cursor.length - 1 ) ),\n\t\t\t// TODO: one day we could allow multiple _updaters\n\t\t\tresult;\n\n\t\tif ( src && src._updaters ) {\n\t\t\ttry {\n\t\t\t\tresult = src._updaters[0].apply(\n\t\t\t\t\tobj,\n\t\t\t\t\t[\n\t\t\t\t\t\tpropName, leaf.contours, leaf.anchors,\n\t\t\t\t\t\tleaf.parentAnchors, Utils\n\t\t\t\t\t].concat(\n\t\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\t\treturn params[_name];\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(\n\t\t\t\t\t[\n\t\t\t\t\t\t'Cannot update property',\n\t\t\t\t\t\tcursor.join('.'),\n\t\t\t\t\t\t'from component',\n\t\t\t\t\t\tleaf.name\n\t\t\t\t\t].join(' '),\n\t\t\t\t\te\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Assume that updaters returning undefined have their own\n\t\t// assignment logic\n\t\tif ( result !== undefined ) {\n\t\t\tobj[propName] = result;\n\t\t}\n\t}, this);\n};\n\nmodule.exports = Utils;\n","var plumin = require('plumin.js'),\n\tassign = require('es6-object-assign').assign,\n\tUtils = require('./Utils.js');\n\nvar paper = plumin.paper,\n\tnaive = {},\n\t_ = { assign: assign };\n\nfunction autoExpandableNodeSrc( node, i, j, inSkeleton ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\tUtils.cursor( i, j, 'y' )\n\t\t] },\n\t\tall: { _dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\treturn Utils.cursor( i, j, key );\n\t\t}) },\n\t\t_dependencies: inSkeleton ?\n\t\t\t// nodes in skeleton are never fully calculated (we don't calculate\n\t\t\t// the position of handles because we never draw their contour).\n\t\t\t// So we don't care about their dependencies.\n\t\t\t[] :\n\t\t\t[ Utils.cursor( 'contours', i, 'all' ) ]\n\t};\n}\n\nfunction autoExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tx: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\ty: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\tpoint: {\n\t\t\t_dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'y' ),\n\t\t\t\tUtils.cursor( i, j, 'expand' )\n\t\t\t],\n\t\t\t_parameters: [ 'width' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar width = arguments[\n\t\t\t\t\t\targuments.length - 1\n\t\t\t\t\t];\n\n\t\t\t\tnaive.expandedNodeUpdater(\n\t\t\t\t\tnode.expandedTo[side], side === 0, width\n\t\t\t\t);\n\t\t\t} ]\n\t\t},\n\t\tall: {\n\t\t\t_dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\t\treturn Utils.cursor( i, j, key );\n\t\t\t}).concat([\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t\t]),\n\t\t\t_updaters: [ function() {\n\t\t\t\tnaive.skeletonCopier( node );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'all' )\n\t\t]\n\t};\n}\n\nfunction explicitExpandableNodeSrc( node, i, j ) {\n\treturn {\n\t\tpoint: { _dependencies: [] },\n\t\tall: { _dependencies: [ 0, 1 ].map(function( side ) {\n\t\t\treturn Utils.cursor( i, j, 'expandedTo', side, 'all' );\n\t\t}) },\n\t\t_dependencies: []\n\t};\n}\n\nfunction explicitExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'y' )\n\t\t] },\n\t\tall: { _dependencies:\n\t\t\tObject.keys( node.src.expandedTo[ side ] ).map(function( key ) {\n\t\t\t\treturn Utils.cursor( i, j, 'expandedTo', side, key );\n\t\t\t})\n\t\t},\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'all' )\n\t\t]\n\t};\n}\n\nfunction expandedContourSrc( contour, i, side ) {\n\tvar half = contour.nodes.length / 2;\n\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function(node, j) {\n\t\t\t\treturn side !== undefined ?\n\t\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'all' ) :\n\t\t\t\t\tUtils.cursor(\n\t\t\t\t\t\ti, j % half, 'expandedTo', ( j < half ? 0 : 1 ), 'all'\n\t\t\t\t\t);\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t// nodes: nodesSrc,\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo', side || 0, 'all' )\n\t\t]\n\t};\n}\n\nfunction contourSrc( contour, i ) {\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\t\treturn Utils.cursor( i, j, 'all' );\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\treturn Utils.cursor( i, j );\n\t\t})\n\t};\n}\n\n// default method to expand skeletons:\n// derives two additional node from every node with an .expand object\nnaive.annotator = function( glyph ) {\n\tvar additionalContours = [];\n\n\tglyph.contours.forEach(function( contour, i ) {\n\t\tif ( contour.skeleton !== true ) {\n\t\t\t// annotate nodes+points that aren't in a skeleton\n\t\t\tcontour.nodes.forEach(function( node, j ) {\n\t\t\t\t_.assign( node.src, autoExpandableNodeSrc( node, i, j ) );\n\t\t\t});\n\n\t\t\t_.assign( contour.src, contourSrc( contour, i ) );\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar leftContour,\n\t\t\trightContour,\n\t\t\tleftNodes = [],\n\t\t\trightNodes = [],\n\t\t\tleftNodesSrc = [],\n\t\t\trightNodesSrc = [],\n\t\t\tfirstNode,\n\t\t\tlastNode;\n\n\t\t// skeletons should be hidden\n\t\tcontour.visible = false;\n\n\t\tcontour.nodes.forEach(function( node, j ) {\n\n\t\t\tvar left = new paper.Node(),\n\t\t\t\tright = new paper.Node(),\n\t\t\t\tleftSrc,\n\t\t\t\trightSrc;\n\n\t\t\tleftNodes.push(left);\n\t\t\trightNodes.unshift(right);\n\t\t\tnode.expandedTo = [ left, right ];\n\t\t\tleft.expandedFrom = right.expandedFrom = node;\n\n\t\t\tif ( !node.src.expandedTo ) {\n\t\t\t\t// annotate nodes+points that are automatically expanded\n\t\t\t\tleftSrc = autoExpandedNodeSrc( node, i, j, 0, contour.closed );\n\t\t\t\trightSrc = autoExpandedNodeSrc( node, i, j, 1, contour.closed );\n\t\t\t\tnode.src.expandedTo = [ leftSrc, rightSrc ];\n\t\t\t\t_.assign( node.src,\n\t\t\t\t\tautoExpandableNodeSrc( node, i, j, !!'inSkeleton' ) );\n\n\t\t\t// the expanded node might have been defined explicitely\n\t\t\t} else if ( node.src.expandedTo[0] &&\n\t\t\t\t\t!node.src.expandedTo[0]._updaters ) {\n\t\t\t\tnode.src.expandedTo.forEach(function( src, k ) {\n\t\t\t\t\tUtils.mergeStatic( node.expandedTo[k], src );\n\t\t\t\t});\n\n\t\t\t\t// annotate nodes+points that are explicitely expanded\n\t\t\t\tleftSrc = _.assign( node.src.expandedTo[0],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 0, contour.closed )\n\t\t\t\t);\n\t\t\t\trightSrc = _.assign( node.src.expandedTo[1],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 1, contour.closed )\n\t\t\t\t);\n\n\t\t\t\t_.assign( node.src,\n\t\t\t\t\texplicitExpandableNodeSrc( node, i, j ) );\n\n\t\t\t\t// A leaf shouldn't appear twice during the recursive\n\t\t\t\t// dependency-tree building. Make the expanded nodes accessible\n\t\t\t\t// from expanded contours, and provide accessors on the\n\t\t\t\t// .expandedFrom node.\n\t\t\t\t// leftNodesSrc.push( leftSrc );\n\t\t\t\t// rightNodesSrc.push( rightSrc );\n\t\t\t}\n\n\t\t\t// if ( leftSrc && rightSrc ) {\n\t\t\t// \tObject.defineProperties( node.src.expandedTo = {}, {\n\t\t\t// \t\t0: { get: function() {\n\t\t\t// \t\t\treturn leftSrc;\n\t\t\t// \t\t}},\n\t\t\t// \t\t1: { get: function() {\n\t\t\t// \t\t\t\treturn rightSrc;\n\t\t\t// \t\t}}\n\t\t\t// \t});\n\t\t\t// }\n\t\t});\n\n\t\tif ( !contour.expandedTo && !contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes.concat(rightNodes)\n\t\t\t});\n\t\t\tcontour.expandedTo = [ leftContour ];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i\n\t\t\t\t\t//, 0, leftNodesSrc.concat( rightNodesSrc )\n\t\t\t\t)\n\t\t\t];\n\t\t\tleftContour.expandedFrom = contour;\n\t\t\tadditionalContours.push( leftContour );\n\n\t\t\tfirstNode = contour.firstNode;\n\t\t\tlastNode = contour.lastNode;\n\n\t\t\tfirstNode.type = 'corner';\n\t\t\tlastNode.type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].type = 'corner';\n\t\t\tfirstNode.expandedTo[1].type = 'corner';\n\t\t\tlastNode.expandedTo[0].type = 'corner';\n\t\t\tlastNode.expandedTo[1].type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].typeIn = 'line';\n\t\t\tfirstNode.expandedTo[1].typeOut = 'line';\n\t\t\tlastNode.expandedTo[0].typeOut = 'line';\n\t\t\tlastNode.expandedTo[1].typeIn = 'line';\n\n\t\t} else if ( !contour.expandedTo && contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes\n\t\t\t});\n\t\t\tadditionalContours.push( leftContour );\n\t\t\trightContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: rightNodes\n\t\t\t});\n\t\t\tadditionalContours.push( rightContour );\n\n\t\t\tcontour.expandedTo = [\n\t\t\t\tleftContour,\n\t\t\t\trightContour\n\t\t\t];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i, 0, leftNodesSrc ),\n\t\t\t\texpandedContourSrc( rightContour, i, 1, rightNodesSrc )\n\t\t\t];\n\t\t\tleftContour.expandedFrom = rightContour.expandedFrom = contour;\n\t\t}\n\t});\n\n\tglyph.addContours( additionalContours );\n};\n\n// Calculate expanded node position\nnaive.expandedNodeUpdater = function( node, isLeft, _width ) {\n\tvar origin = node.expandedFrom,\n\t\texpand = origin.expand,\n\t\twidth = expand && expand.width !== undefined ?\n\t\t\texpand.width : _width,\n\t\tcoef = expand && expand.distr !== undefined ?\n\t\t\t( isLeft ? expand.distr : 1 - expand.distr ) :\n\t\t\t0.5,\n\t\tangle = ( isLeft ? Math.PI : 0 ) +\n\t\t\t( expand && expand.angle !== undefined ?\n\t\t\t\texpand.angle :\n\t\t\t\t// We resort to using directions.\n\t\t\t\t// This is wrong, directions are not included in the\n\t\t\t\t// dependencies of the updater and might not be ready yet.\n\t\t\t\t// TODO: Fix this (always require angle to be specified?)\n\t\t\t\t( origin._dirOut !== undefined ?\n\t\t\t\t\torigin._dirOut - Math.PI / 2 :\n\t\t\t\t\torigin._dirIn + Math.PI / 2\n\t\t\t\t)\n\t\t\t);\n\n\t// position\n\tnode.point.x = origin.point.x + ( width * coef * Math.cos( angle ) );\n\tnode.point.y = origin.point.y + ( width * coef * Math.sin( angle ) );\n};\n\n// copy skeleton properties such as types, directions and tensions to expanded\n// nodes\nnaive.skeletonCopier = function( node ) {\n\tvar angle = node.expand && node.expand.angle || 0,\n\t\tleft = node.expandedTo[0],\n\t\tright = node.expandedTo[1];\n\n\t// node type\n\tif ( node.type !== undefined ) {\n\t\tleft.type = right.type = node.type;\n\t}\n\n\t// direction type\n\tif ( node.typeIn !== undefined ) {\n\t\tleft.typeIn = right.typeOut = node.typeIn;\n\t}\n\tif ( node.typeOut !== undefined ) {\n\t\tleft.typeOut = right.typeIn = node.typeOut;\n\t}\n\n\t// direction\n\tif ( node._dirIn !== undefined ) {\n\t\tleft._dirIn = right._dirOut = node._dirIn;\n\n\t\tif ( node.type === 'smooth' && node._dirOut === undefined ) {\n\t\t\tleft._dirOut = right._dirIn = node._dirIn + Math.PI;\n\t\t}\n\t}\n\tif ( node._dirOut !== undefined ) {\n\t\tleft._dirOut = right._dirIn = node._dirOut;\n\n\t\tif ( node.type === 'smooth' && node._dirIn === undefined ) {\n\t\t\tleft._dirIn = right._dirOut = node._dirOut + Math.PI;\n\t\t}\n\t}\n\t// use angle if direction isn't already defined\n\tif ( left._dirIn === undefined ) { // implies right._dirOut === undefined\n\t\tleft._dirIn = angle - Math.PI / 2;\n\t\tright._dirOut = angle + Math.PI / 2;\n\t}\n\tif ( left._dirOut === undefined ) { // implies right._dirIn === undefined\n\t\tleft._dirOut = angle + Math.PI / 2;\n\t\tright._dirIn = angle - Math.PI / 2;\n\t}\n\n\t// tension\n\tleft.tensionIn = right.tensionOut = node.tensionIn !== undefined ?\n\t\tnode.tensionIn :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n\tleft.tensionOut = right.tensionIn = node.tensionOut !== undefined ?\n\t\tnode.tensionOut :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n};\n\n// Make sure 'line' types are set on both side of segments\n// and if a smooth node is used in a straight segment, update the directions\n// appropriately this can only be done once the types, directions and position\n// of all nodes have been updated can be renamed #prepareLines if no other\n// operation is added\n// TODO: try doing it at the same time as updateContour (once we have more\n// complex glyphs)\nnaive.prepareContour = function( path ) {\n\tpath.nodes.forEach(function(node) {\n\t\tif ( node.typeIn === 'line' && node.previous ) {\n\t\t\tnode.previous.typeOut = 'line';\n\t\t}\n\n\t\tif ( node.typeOut === 'line' && node.next ) {\n\t\t\tnode.next.typeIn = 'line';\n\t\t}\n\t});\n\n\tpath.nodes.forEach(function(node) {\n\t\tif ( node.typeIn === 'line' && node.type === 'smooth' &&\n\t\t\t\tnode.previous ) {\n\n\t\t\tnode._dirIn = Utils.lineAngle(\n\t\t\t\tnode.point, node.previous.point\n\t\t\t);\n\t\t\tnode._dirOut = node._dirIn + Math.PI;\n\t\t}\n\n\t\tif ( node.typeOut === 'line' && node.type === 'smooth' &&\n\t\t\t\tnode.next ) {\n\n\t\t\tnode._dirOut = Utils.lineAngle(\n\t\t\t\tnode.point, node.next.point\n\t\t\t);\n\t\t\tnode._dirIn = node._dirOut + Math.PI;\n\t\t}\n\t});\n};\n\n// sets the position of control points\n// can be renamed #updateControls if no other operation is added\nnaive.updateContour = function( path, curviness ) {\n\tif ( curviness === undefined ) {\n\t\tcurviness = 2 / 3;\n\t}\n\n\tpath.nodes.forEach(function(node) {\n\t\tvar start = node,\n\t\t\tend,\n\t\t\tstartCtrl,\n\t\t\tendCtrl,\n\t\t\tstartType,\n\t\t\tendType,\n\t\t\tstartTension,\n\t\t\tendTension,\n\t\t\tstartDir,\n\t\t\tendDir,\n\t\t\trri;\n\n\t\tif ( !node.next ) {\n\t\t\treturn;\n\t\t}\n\n\t\tend = node.next;\n\t\tstartCtrl = start.handleOut;\n\t\tendCtrl = end.handleIn;\n\n\t\tstartType = start.typeOut;\n\t\tendType = end.typeIn;\n\n\t\tif ( startType === 'line' || endType === 'line' ) {\n\t\t\tstartCtrl.x = 0;\n\t\t\tstartCtrl.y = 0;\n\t\t\tendCtrl.x = 0;\n\t\t\tendCtrl.y = 0;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartTension = start.tensionOut !== undefined ?\n\t\t\tstart.tensionOut :\n\t\t\t( start.tension !== undefined ? start.tension : 1 );\n\t\tendTension = end.tensionIn !== undefined ?\n\t\t\tend.tensionIn :\n\t\t\t( end.tension !== undefined ? end.tension : 1 );\n\n\t\tstartDir = start._dirOut !== undefined ?\n\t\t\tstart._dirOut :\n\t\t\t( start.type === 'smooth' ? start._dirIn + Math.PI : 0 );\n\t\tendDir = end._dirIn !== undefined ?\n\t\t\tend._dirIn :\n\t\t\t( end.type === 'smooth' ? end._dirOut - Math.PI : 0 );\n\n\t\trri = Utils.rayRayIntersection(\n\t\t\tstart._point,\n\t\t\tstartDir,\n\t\t\tend._point,\n\t\t\tendDir\n\t\t);\n\n\t\t// direction of handles is parallel\n\t\tif ( rri === null ) {\n\t\t\tvar angle = Utils.lineAngle( start._point, end._point ),\n\t\t\t\tmiddle = {\n\t\t\t\t\tx: ( end._point.x - start._point.x ) / 2 + start._point.x,\n\t\t\t\t\ty: ( end._point.y - start._point.y ) / 2 + start._point.y\n\t\t\t\t},\n\t\t\t\tp0 = Utils.rayRayIntersection(\n\t\t\t\t\tstart._point, startDir, middle, angle - Math.PI / 2\n\t\t\t\t),\n\t\t\t\tp1 = Utils.rayRayIntersection(\n\t\t\t\t\tmiddle, angle + Math.PI / 2, end._point, endDir\n\t\t\t\t);\n\n\t\t\tif ( p0 === null ) {\n\t\t\t\tstartCtrl.x = 0;\n\t\t\t\tstartCtrl.y = 0;\n\t\t\t\tendCtrl.x = 0;\n\t\t\t\tendCtrl.y = 0;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstartCtrl.x = ( Math.round(p0[0]) - start._point.x ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tstartCtrl.y = ( Math.round(p0[1]) - start._point.y ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tendCtrl.x = ( Math.round(p1[0]) - end._point.x ) *\n\t\t\t\tcurviness * endTension;\n\t\t\tendCtrl.y = ( Math.round(p1[1]) - end._point.y ) *\n\t\t\t\tcurviness * endTension;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartCtrl.x = ( Math.round(rri[0]) - start.point.x ) *\n\t\t\tcurviness * startTension;\n\t\tstartCtrl.y = ( Math.round(rri[1]) - start.point.y ) *\n\t\t\tcurviness * startTension;\n\t\tendCtrl.x = ( Math.round(rri[0]) - end.point.x ) *\n\t\t\tcurviness * endTension;\n\t\tendCtrl.y = ( Math.round(rri[1]) - end.point.y ) *\n\t\t\tcurviness * endTension;\n\t});\n};\n\nvar rdeg = /deg$/;\nObject.defineProperties(paper.PaperScope.prototype.Segment.prototype, {\n\texpand: {\n\t\tget: function() {\n\t\t\treturn this._expand;\n\t\t},\n\t\tset: function( expand ) {\n\t\t\tif ( typeof expand.angle === 'string' && rdeg.test(expand.angle) ) {\n\t\t\t\texpand.angle = parseFloat(expand.angle) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\n\t\t\tthis._expand = expand;\n\t\t}\n\t},\n\tdirIn: {\n\t\tget: function() {\n\t\t\treturn this._dirIn;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirIn = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirIn = dir;\n\t\t\t}\n\t\t}\n\t},\n\tdirOut: {\n\t\tget: function() {\n\t\t\treturn this._dirOut;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirOut = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirOut = dir;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = naive;\n","/*jshint -W098 */\nvar plumin = require('plumin.js'),\n\tassign = require('es6-object-assign').assign,\n\tUtils = require('./Utils.js'),\n\tnaive = require('./naive.js');\n\nvar paper = plumin.paper,\n\t_ = { assign: assign };\n\nfunction parametricFont( src ) {\n\tvar font = Utils.fontFromSrc( src );\n\n\tObject.keys( src.glyphs ).forEach(function( name ) {\n\t\tvar glyphSrc = src.glyphs[name];\n\n\t\tUtils.ufoToPaper( glyphSrc );\n\n\t\tvar glyph = Utils.glyphFromSrc( glyphSrc, src, naive );\n\n\t\tfont.addGlyph( glyph );\n\n\t\t// Create additional paths for skeletons and set ._dependencies\n\t\t// appropriately\n\t\tnaive.annotator( glyph );\n\n\t\t// solvingOrder might be already available (if this is a subcomponent,\n\t\t// or precomputed in a worker)\n\t\tif ( !glyph.solvingOrder ) {\n\t\t\tglyph.solvingOrder = glyphSrc.solvingOrder =\n\t\t\t\tUtils.solveDependencyTree( glyph );\n\t\t}\n\t});\n\n\t// all glyphs are ready, embed components now\n\tfont.glyphs.forEach(function( _glyph ) {\n\t\tif ( _glyph.embedComponents ) {\n\t\t\t_glyph.embedComponents();\n\t\t}\n\t});\n\n\treturn font;\n}\n\nplumin.parametricFont = parametricFont;\nplumin.Utils = Utils;\nplumin.Utils.naive = naive;\n\npaper.PaperScope.prototype.Font.prototype.update = function( params, set ) {\n\tvar font = this,\n\t\tmatrix;\n\n\tUtils.updateParameters( font, params );\n\n\tUtils.updateProperties( font, params );\n\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.update( params );\n\t}, this);\n\n\tif ( font.transforms ) {\n\t\tmatrix = Utils.transformsToMatrix(\n\t\t\tfont.transforms.slice(0), font.transformOrigin\n\t\t);\n\n\t\tfont.applyMatrix = false;\n\t\tfont.matrix = matrix;\n\t}\n\n\treturn this;\n};\n\n/* Update the shape of the glyph, according to formula and parameters\n * 0. before running, nodes have already been created by ParametricFont\n *   (including expanded ones thanks to naive.expandSkeletons). And static\n *   properties have been copied over to those nodes\n * 1. We use the solving order to calculate all node properties\n * 2. transform contours\n * 3. Update components and transform them\n */\npaper.PaperScope.prototype.Glyph.prototype.update = function( _params ) {\n\tvar glyph = this,\n\t\tfont = glyph.parent,\n\t\tmatrix,\n\t\tparams;\n\n\t// 0. calculate local parameters\n\tparams = _.assign( {}, _params, glyph.parentParameters );\n\n\tUtils.updateParameters( glyph, params );\n\n\t// parentParameters always overwrite glyph parameters. Use aliases\n\t// (e.g. _width) to let glyph hav the final word\n\t_.assign( params, glyph.parentParameters );\n\n\t// 1. calculate node properties\n\tUtils.updateProperties( glyph, params );\n\n\t// 2. transform contours\n\tthis.contours.forEach(function(contour) {\n\t\t// a. transform the nodes\n\t\tcontour.nodes.forEach(function(node) {\n\t\t\tif ( node.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tnode.transforms.slice(0), node.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\t\t// We don't want to apply the transforms immediatly,\n\t\t\t\t\t// otherwise the transformation will add-up on each\n\t\t\t\t\t// update.\n\t\t\t\t\tnode.applyMatrix = false;\n\t\t\t\t\tnode.matrix = matrix;\n\n\t\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t\t// expanded items\n\t\t\t\t} else {\n\t\t\t\t\tnode.expandedTo.forEach(function( _node ) {\n\t\t\t\t\t\t_node.applyMatrix = false;\n\t\t\t\t\t\t_node.matrix = matrix;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// b. transform the contour\n\t\t// prepare and update outlines and expanded contours, but not\n\t\t// skeletons\n\t\tif ( contour.transforms ) {\n\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\tcontour.transforms.slice(0), contour.transformOrigin\n\t\t\t);\n\n\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\tcontour.applyMatrix = false;\n\t\t\t\tcontour.matrix = matrix;\n\n\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t// expanded items\n\t\t\t} else {\n\t\t\t\tcontour.expandedTo.forEach(function( _contour ) {\n\t\t\t\t\t_contour.applyMatrix = false;\n\t\t\t\t\t_contour.matrix = matrix;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, this);\n\n\t// 3. update components and transform components\n\tif ( this.components.length && font ) {\n\t\t// subcomponents have the parent component as their parent\n\t\t// so search for the font\n\t\twhile ( !('glyphs' in font) ) {\n\t\t\tfont = font.parent;\n\t\t}\n\n\t\tthis.components.forEach(function(component) {\n\t\t\tcomponent.update( params );\n\n\t\t\tif ( component.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tcomponent.transforms.slice(0), component.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tcomponent.applyMatrix = false;\n\t\t\t\tcomponent.matrix = matrix;\n\t\t\t}\n\t\t}, this);\n\t}\n\n\t// 4. transform whole glyph\n\tif ( glyph.transforms ) {\n\t\tmatrix = Utils.transformsToMatrix(\n\t\t\tglyph.transforms.slice(0), glyph.transformOrigin\n\t\t);\n\n\t\tglyph.applyMatrix = false;\n\t\tglyph.matrix = matrix;\n\t}\n\n\treturn this;\n};\n\n// Before updating SVG or OpenType data, we must determine paths exports\n// directions. Basically, everything needs to be clockwise.\n// this method needs to be called only after the first update, otherwise the\n// directions won't be known\npaper.PaperScope.prototype.Outline.prototype.prepareDataUpdate = function() {\n\tif ( this.isPrepared ) {\n\t\treturn;\n\t}\n\n\tthis.children.forEach(function(contour) {\n\t\t// expanded contours are handled from their skeleton\n\t\tif ( contour.expandedFrom ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( contour.skeleton !== true ) {\n\t\t\tcontour.exportReversed = !contour.isClockwise();\n\n\t\t} else if ( !contour.expandedTo[1] ) {\n\t\t\tcontour.expandedTo[0].exportReversed =\n\t\t\t\t!contour.expandedTo[0].isClockwise();\n\n\t\t} else {\n\t\t\tvar isClockwise = contour.isClockwise();\n\n\t\t\tcontour.expandedTo[0].exportReversed = !isClockwise;\n\t\t\tcontour.expandedTo[1].exportReversed = !isClockwise;\n\t\t}\n\t});\n\n\tthis.isPrepared = true;\n};\n\nvar updateSVGData =\n\t\tpaper.PaperScope.prototype.Outline.prototype.updateSVGData,\n\tupdateOTCommands =\n\t\tpaper.PaperScope.prototype.Outline.prototype.updateOTCommands;\n\npaper.PaperScope.prototype.Outline.prototype.updateSVGData = function() {\n\tif ( !this.isPrepared ) {\n\t\tthis.prepareDataUpdate();\n\t}\n\n\tupdateSVGData.apply( this, arguments );\n};\n\npaper.PaperScope.prototype.Outline.prototype.updateOTCommands = function() {\n\tif ( !this.isPrepared ) {\n\t\tthis.prepareDataUpdate();\n\t\tthis.isPrepared = true;\n\t}\n\n\tupdateOTCommands.apply( this, arguments );\n};\n\nmodule.exports = plumin;\n","var Utils = {};\n\n// The following function should be useless, thanks to paper\nUtils.lineLineIntersection = function( p1, p2, p3, p4 ) {\n\tvar x1 = p1.x,\n\t\ty1 = p1.y,\n\t\tx2 = p2.x,\n\t\ty2 = p2.y,\n\t\tx3 = p3.x,\n\t\ty3 = p3.y,\n\t\tx4 = p4.x,\n\t\ty4 = p4.y,\n\t\td = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n\tif ( d === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn new Float32Array([\n\t\t( (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4) ) /\n\t\td,\n\t\t( (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4) ) /\n\t\td\n\t]);\n};\n\n// Find the intersection of two rays.\n// A ray is defined by a point and an angle.\nUtils.rayRayIntersection = function( p1, a1, p2, a2 ) {\n\t// line equations\n\tvar a = Math.tan(a1),\n\t\tb = Math.tan(a2),\n\t\tc = p1.y - a * p1.x,\n\t\td = p2.y - b * p2.x,\n\t\tx,\n\t\ty;\n\n\t// When searching for lines intersection,\n\t// angles can be normalized to 0 < a < PI\n\t// This will be helpful in detecting special cases below.\n\ta1 = a1 % Math.PI;\n\tif ( a1 < 0 ) {\n\t\ta1 += Math.PI;\n\t}\n\ta2 = a2 % Math.PI;\n\tif ( a2 < 0 ) {\n\t\ta2 += Math.PI;\n\t}\n\n\t// no intersection\n\tif ( a1 === a2 ) {\n\t\treturn null;\n\t}\n\n\t// Optimize frequent and easy special cases.\n\t// Without optimization, results would be incorrect when cos(a) === 0\n\tif ( a1 === 0 ) {\n\t\ty = p1.y;\n\t} else if ( a1 === Math.PI / 2 ) {\n\t\tx = p1.x;\n\t}\n\tif ( a2 === 0 ) {\n\t\ty = p2.y;\n\t} else if ( a2 === Math.PI / 2 ) {\n\t\tx = p2.x;\n\t}\n\n\t// easiest case\n\tif ( x !== undefined && y !== undefined ) {\n\t\treturn new Float32Array([ x, y ]);\n\t}\n\n\t// other cases that can be optimized\n\tif ( a1 === 0 ) {\n\t\treturn new Float32Array([ ( y - d ) / b, y ]);\n\t}\n\tif ( a1 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, b * x + d ]);\n\t}\n\tif ( a2 === 0 ) {\n\t\treturn new Float32Array([ ( y - c ) / a, y ]);\n\t}\n\tif ( a2 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, a * x + c ]);\n\t}\n\n\t// intersection from two line equations\n\t// algo: http://en.wikipedia.org/wiki/Line–line_intersection#Given_the_equations_of_the_lines\n\treturn new Float32Array([\n\t\tx = (d - c) / (a - b),\n\t\t// this should work equally well with ax+c or bx+d\n\t\ta * x + c\n\t]);\n};\n\n// return the angle between two points\nUtils.lineAngle = function( p0, p1 ) {\n\treturn Math.atan2( p1.y - p0.y, p1.x - p0.x );\n};\n\nUtils.onLine = function( params ) {\n\tvar origin = params.on[0],\n\t\tvector = [\n\t\t\tparams.on[1].x - params.on[0].x,\n\t\t\tparams.on[1].y - params.on[0].y\n\t\t];\n\n\treturn 'x' in params ?\n\t\t( params.x - origin.x ) / vector[0] * vector[1] + origin.y :\n\t\t( params.y - origin.y ) / vector[1] * vector[0] + origin.x;\n};\n\nUtils.pointOnCurve = function(pointHandleOut,\n\tpointHandleIn,\n\tdistanceFromOut,\n\tinverseOrientation,\n\tlinePrecision) {\n\tlinePrecision = linePrecision || 3;\n\tvar length = 0;\n\tvar previousPoint;\n\n\tvar points;\n\tif (!inverseOrientation) {\n\t\tpoints = [\n\t\t\tpointHandleOut.point,\n\t\t\tpointHandleOut.point.add(pointHandleOut.handleOut),\n\t\t\tpointHandleIn.point.add(pointHandleIn.handleIn),\n\t\t\tpointHandleIn.point\n\t\t];\n\t} else {\n\t\tpoints = [\n\t\t\tpointHandleIn.point,\n\t\t\tpointHandleIn.point.add(pointHandleIn.handleIn),\n\t\t\tpointHandleOut.point.add(pointHandleOut.handleOut),\n\t\t\tpointHandleOut.point\n\t\t];\n\t}\n\n\tfor (var i = 0; i < linePrecision; i++) {\n\t\tvar point = Utils.deCasteljau(points,\n\t\t\t( i / ( linePrecision - 1 ) ) );\n\n\t\tif (previousPoint) {\n\t\t\tlength += Utils.distance(previousPoint.x,\n\t\t\t\tpreviousPoint.y,\n\t\t\t\tpoint.x,\n\t\t\t\tpoint.y);\n\n\t\t}\n\n\t\tpreviousPoint = point;\n\t}\n\n\tvar t = length === 0 ? 0 : distanceFromOut / length;\n\n\tt = Math.max(0.001, Math.min(1, t));\n\n    return Utils.deCasteljau(points, t);\n};\n\nUtils.deCasteljau = function(points, t) {\n\tvar newPoints = [];\n\tfor (var i = 1; i < points.length; i++) {\n\t\tnewPoints.push(\n\t\t\tpoints[i - 1]\n\t\t\t\t.multiply(1 - t)\n\t\t\t\t.add(\n\t\t\t\t\tpoints[i]\n\t\t\t\t\t\t.multiply(t)\n\t\t\t\t)\n\t\t\t);\n\t}\n\n\tif (newPoints.length === 1) {\n\t\tvar p0 = { x: 0, y: 0 },\n\t\t\tp1 = {\n\t\t\tx: points[1].x - points[0].x,\n\t\t\ty: points[1].y - points[0].y\n\t\t};\n\n\t\treturn {\n\t\t\tx: newPoints[0].x,\n\t\t\ty: newPoints[0].y,\n\t\t\tnormal: Utils.lineAngle(p0, p1)\n\t\t};\n\t} else {\n\t\treturn Utils.deCasteljau(newPoints, t);\n\t}\n};\n\nUtils.distance = function(x1, y1, x2, y2) {\n\treturn Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y1 - y2, 2));\n};\n\nUtils.log = function() {\n\tconsole.log.apply( console, arguments );\n\treturn arguments[0];\n};\n\nmodule.exports = Utils;\n"]}