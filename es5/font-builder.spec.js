define(['./font-builder.js'], function($__0) {
  "use strict";
  if (!$__0 || !$__0.__esModule)
    $__0 = {default: $__0};
  var xhr = new XMLHttpRequest(),
      fontSrc;
  xhr.open('GET', 'base/mock_font/font.json', false);
  xhr.send();
  fontSrc = JSON.parse(xhr.responseText);
  var fp = $__0.default;
  var build = fp.build,
      updater = fp.updater;
  describe('font parser', function() {
    var font = build(fontSrc);
    it('sets appropriate type to objects', function() {
      expect(font.glyphs.test0.type).to.be.equal('test');
      expect(font.glyphs.test0.contours[0].type).to.be.equal('open');
      expect(font.glyphs.test0.contours[0].nodes[0].type).to.be.equal('smooth');
    });
    it('can create an updater from an operation object', function() {
      var up = updater({
        operation: 'thickness * contrast',
        parameters: ['thickness', 'contrast'],
        dependencies: []
      });
      expect(up).to.be.instanceof(Function);
      expect(up({}, {}, {}, 2, 3)).to.be.equal(6);
    });
  });
  return {};
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB0cmFjZXVyL2dlbmVyYXRlZC9UZW1wbGF0ZVBhcnNlci82IiwiZm9udC1idWlsZGVyLnNwZWMuanMiLCJAdHJhY2V1ci9nZW5lcmF0ZWQvVGVtcGxhdGVQYXJzZXIvNSIsIkB0cmFjZXVyL2dlbmVyYXRlZC9UZW1wbGF0ZVBhcnNlci80IiwiQHRyYWNldXIvZ2VuZXJhdGVkL1RlbXBsYXRlUGFyc2VyLzMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsS0FBSyxBQUFDLEVDTVMsbUJBQWtCLEVDTmpDLFVBQVMsSUFBZ0I7O0FDQXpCLEtBQUksS0FBaUIsR0FBSyxFQUFDLGVBQTJCO0FBQzFDLFNBQW9CLEVBQUMsT0FBTSxNQUFtQixDQUFDLENBQUE7QUFBQSxBRkR2RCxJQUFBLENBQUEsR0FBRSxFQUFJLElBQUksZUFBYSxBQUFDLEVBQUM7QUFDNUIsWUFBTSxDQUFDO0FBQ1IsSUFBRSxLQUFLLEFBQUMsQ0FBQyxLQUFJLENBQUcsMkJBQXlCLENBQUcsTUFBSSxDQUFDLENBQUM7QUFDbEQsSUFBRSxLQUFLLEFBQUMsRUFBQyxDQUFDO0FBQ1YsUUFBTSxFQUFJLENBQUEsSUFBRyxNQUFNLEFBQUMsQ0FBRSxHQUFFLGFBQWEsQ0FBRSxDQUFDO0lBRWpDLEdBQUM7QUFDUixBQUFJLElBQUEsQ0FBQSxLQUFJLEVBQUksQ0FBQSxFQUFDLE1BQU07QUFDbEIsWUFBTSxFQUFJLENBQUEsRUFBQyxRQUFRLENBQUM7QUFFckIsU0FBTyxBQUFDLENBQUMsYUFBWSxDQUFHLFVBQVEsQUFBQyxDQUFFO0FBRWxDLEFBQUksTUFBQSxDQUFBLElBQUcsRUFBSSxDQUFBLEtBQUksQUFBQyxDQUFFLE9BQU0sQ0FBRSxDQUFDO0FBRTNCLEtBQUMsQUFBQyxDQUFDLGtDQUFpQyxDQUFHLFVBQVEsQUFBQyxDQUFFO0FBQ2pELFdBQUssQUFBQyxDQUFDLElBQUcsT0FBTyxNQUFNLEtBQUssQ0FBQyxHQUFHLEdBQUcsTUFBTSxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFDbEQsV0FBSyxBQUFDLENBQUMsSUFBRyxPQUFPLE1BQU0sU0FBUyxDQUFFLENBQUEsQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLE1BQU0sQUFBQyxDQUFDLE1BQUssQ0FBQyxDQUFDO0FBQzlELFdBQUssQUFBQyxDQUFDLElBQUcsT0FBTyxNQUFNLFNBQVMsQ0FBRSxDQUFBLENBQUMsTUFBTSxDQUFFLENBQUEsQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLE1BQU0sQUFBQyxDQUFDLFFBQU8sQ0FBQyxDQUFDO0lBQzFFLENBQUMsQ0FBQztBQUVGLEtBQUMsQUFBQyxDQUFDLGdEQUErQyxDQUFHLFVBQVEsQUFBQyxDQUFFO0FBQy9ELEFBQUksUUFBQSxDQUFBLEVBQUMsRUFBSSxDQUFBLE9BQU0sQUFBQyxDQUFDO0FBQ2hCLGdCQUFRLENBQUcsdUJBQXFCO0FBQ2hDLGlCQUFTLENBQUcsRUFBQyxXQUFVLENBQUcsV0FBUyxDQUFDO0FBQ3BDLG1CQUFXLENBQUcsR0FBQztBQUFBLE1BQ2hCLENBQUMsQ0FBQztBQUVGLFdBQUssQUFBQyxDQUFDLEVBQUMsQ0FBQyxHQUFHLEdBQUcsV0FBVyxBQUFDLENBQUMsUUFBTyxDQUFDLENBQUM7QUFDckMsV0FBSyxBQUFDLENBQUMsRUFBQyxBQUFDLENBQUUsRUFBQyxDQUFHLEdBQUMsQ0FBRyxHQUFDLENBQUcsRUFBQSxDQUFHLEVBQUEsQ0FBRSxDQUFDLEdBQUcsR0FBRyxNQUFNLEFBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQztJQUM5QyxDQUFDLENBQUM7RUFDSCxDQUFDLENBQUM7QUc5QkYsV0FBdUI7QUZFbkIsQ0ZGdUMsQ0FBQztBQzhCMUMiLCJmaWxlIjoiZm9udC1idWlsZGVyLnNwZWMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoJF9fcGxhY2Vob2xkZXJfXzAsICRfX3BsYWNlaG9sZGVyX18xKTsiLCJ2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCksXG5cdGZvbnRTcmM7XG54aHIub3BlbignR0VUJywgJ2Jhc2UvbW9ja19mb250L2ZvbnQuanNvbicsIGZhbHNlKTtcbnhoci5zZW5kKCk7XG5mb250U3JjID0gSlNPTi5wYXJzZSggeGhyLnJlc3BvbnNlVGV4dCApO1xuXG5pbXBvcnQgZnAgZnJvbSAnLi9mb250LWJ1aWxkZXIuanMnO1xudmFyIGJ1aWxkID0gZnAuYnVpbGQsXG5cdHVwZGF0ZXIgPSBmcC51cGRhdGVyO1xuXG5kZXNjcmliZSgnZm9udCBwYXJzZXInLCBmdW5jdGlvbigpIHtcblxuXHR2YXIgZm9udCA9IGJ1aWxkKCBmb250U3JjICk7XG5cblx0aXQoJ3NldHMgYXBwcm9wcmlhdGUgdHlwZSB0byBvYmplY3RzJywgZnVuY3Rpb24oKSB7XG5cdFx0ZXhwZWN0KGZvbnQuZ2x5cGhzLnRlc3QwLnR5cGUpLnRvLmJlLmVxdWFsKCd0ZXN0Jyk7XG5cdFx0ZXhwZWN0KGZvbnQuZ2x5cGhzLnRlc3QwLmNvbnRvdXJzWzBdLnR5cGUpLnRvLmJlLmVxdWFsKCdvcGVuJyk7XG5cdFx0ZXhwZWN0KGZvbnQuZ2x5cGhzLnRlc3QwLmNvbnRvdXJzWzBdLm5vZGVzWzBdLnR5cGUpLnRvLmJlLmVxdWFsKCdzbW9vdGgnKTtcblx0fSk7XG5cblx0aXQoJ2NhbiBjcmVhdGUgYW4gdXBkYXRlciBmcm9tIGFuIG9wZXJhdGlvbiBvYmplY3QnLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgdXAgPSB1cGRhdGVyKHtcblx0XHRcdG9wZXJhdGlvbjogJ3RoaWNrbmVzcyAqIGNvbnRyYXN0Jyxcblx0XHRcdHBhcmFtZXRlcnM6IFsndGhpY2tuZXNzJywgJ2NvbnRyYXN0J10sXG5cdFx0XHRkZXBlbmRlbmNpZXM6IFtdXG5cdFx0fSk7XG5cblx0XHRleHBlY3QodXApLnRvLmJlLmluc3RhbmNlb2YoRnVuY3Rpb24pO1xuXHRcdGV4cGVjdCh1cCgge30sIHt9LCB7fSwgMiwgMyApKS50by5iZS5lcXVhbCg2KTtcblx0fSk7XG59KTsiLCJmdW5jdGlvbigkX19wbGFjZWhvbGRlcl9fMCkge1xuICAgICAgJF9fcGxhY2Vob2xkZXJfXzFcbiAgICB9IiwiaWYgKCEkX19wbGFjZWhvbGRlcl9fMCB8fCAhJF9fcGxhY2Vob2xkZXJfXzEuX19lc01vZHVsZSlcbiAgICAgICAgICAgICRfX3BsYWNlaG9sZGVyX18yID0ge2RlZmF1bHQ6ICRfX3BsYWNlaG9sZGVyX18zfSIsInJldHVybiAkX19wbGFjZWhvbGRlcl9fMCJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==