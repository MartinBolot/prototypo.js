{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/deptree/index.js","node_modules/lodash.assign/index.js","node_modules/lodash.assign/node_modules/lodash._baseassign/index.js","node_modules/lodash.assign/node_modules/lodash._baseassign/node_modules/lodash._basecopy/index.js","node_modules/lodash.assign/node_modules/lodash._createassigner/index.js","node_modules/lodash.assign/node_modules/lodash._createassigner/node_modules/lodash._bindcallback/index.js","node_modules/lodash.assign/node_modules/lodash._createassigner/node_modules/lodash._isiterateecall/index.js","node_modules/lodash.assign/node_modules/lodash._createassigner/node_modules/lodash.restparam/index.js","node_modules/lodash.assign/node_modules/lodash.keys/index.js","node_modules/lodash.assign/node_modules/lodash.keys/node_modules/lodash._getnative/index.js","node_modules/lodash.assign/node_modules/lodash.keys/node_modules/lodash.isarguments/index.js","node_modules/lodash.assign/node_modules/lodash.keys/node_modules/lodash.isarray/index.js","node_modules/lodash.clone/index.js","node_modules/lodash.clone/node_modules/lodash._baseclone/index.js","node_modules/lodash.clone/node_modules/lodash._baseclone/node_modules/lodash._arraycopy/index.js","node_modules/lodash.clone/node_modules/lodash._baseclone/node_modules/lodash._arrayeach/index.js","node_modules/lodash.clone/node_modules/lodash._baseclone/node_modules/lodash._basefor/index.js","node_modules/plumin.js/dist/plumin.js","src/Utils.js","src/naive.js","src/prototypo.js","src/updateUtils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","prototypo","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"DepTree","nodes","prototype","add","node","dependants","Array","resolveNode","resolved","processing","deps","forEach","dep","indexOf","push","resolve","baseAssign","createAssigner","keys","assignWith","object","source","customizer","index","props","key","value","result","undefined","assign","baseCopy","bindCallback","isIterateeCall","restParam","assigner","sources","guard","thisArg","func","argCount","identity","collection","accumulator","other","apply","arguments","reIsUint","MAX_SAFE_INTEGER","baseProperty","getLength","isArrayLike","isLength","isIndex","test","isObject","type","FUNC_ERROR_TEXT","nativeMax","Math","max","start","TypeError","args","rest","otherArgs","getNative","isArguments","isArray","objectProto","Object","hasOwnProperty","nativeKeys","shimKeys","keysIn","propsLength","allowIndexes","Ctor","constructor","isProto","skipIndexes","funcTag","reRegExpChars","reHasRegExpChars","RegExp","reIsHostCtor","baseToString","isObjectLike","fnToString","Function","toString","objToString","reIsNative","escapeRegExp","replace","isNative","string","argsTag","arrayTag","nativeIsArray","baseClone","clone","isDeep","arrayCopy","arrayEach","baseFor","boolTag","dateTag","errorTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reFlags","cloneableTags","ArrayBuffer","bufferSlice","floor","Uint8Array","Float64Array","FLOAT64_BYTES_PER_ELEMENT","BYTES_PER_ELEMENT","stackA","stackB","isArr","initCloneArray","tag","isFunc","initCloneObject","initCloneByTag","baseForOwn","subValue","iteratee","bufferClone","buffer","constant","byteLength","floatLength","offset","view","set","array","input","byteOffset","exec","lastIndex","createBaseFor","fromRight","keysFunc","iterable","toObject","plumin","opentype","argument","predicate","message","assert",2,"line","ctx","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke",3,"cffStandardStrings","cffStandardEncoding","cffExpertEncoding","standardNames","DefaultEncoding","font","charToGlyphIndex","c","charCodeAt","glyphs","glyph","j","unicodes","CmapEncoding","cmap","glyphIndexMap","CffEncoding","encoding","charset","charName","GlyphNames","post","version","names","slice","numberOfGlyphs","glyphNameIndex","nameToGlyphIndex","name","glyphIndexToName","gid","addGlyphNames","tables","charCodes","glyphIndex","addUnicode","parseInt","cffEncoding","glyphNames",4,"path","sfnt","Font","options","familyName","styleName","designer","designerURL","manufacturer","manufacturerURL","license","licenseURL","description","copyright","trademark","unitsPerEm","ascender","descender","supported","hasChar","charToGlyph","stringToGlyphs","nameToGlyph","nametoGlyphIndex","getKerningValue","leftGlyph","rightGlyph","gposKerning","getGposKerningValue","kerningPairs","forEachGlyph","text","x","y","fontSize","callback","kerning","fontScale","advanceWidth","kerningValue","getPath","fullPath","Path","gX","gY","gFontSize","glyphPath","extend","draw","drawPoints","drawMetrics","validate","warnings","_this","assertStringAttribute","attrName","trim","toTables","fontToTable","toBuffer","sfntTable","bytes","encode","intArray","download","fileName","requestFileSystem","webkitRequestFileSystem","TEMPORARY","fs","root","getFile","create","fileEntry","createWriter","writer","dataView","DataView","blob","Blob","write","addEventListener","location","href","toURL","err","./encoding","./path","./tables/sfnt",5,"check","Glyph","unicode","xMin","yMin","xMax","yMax","scale","p","commands","cmd","quadraticCurveTo","curveTo","closePath","getContours","points","contours","currentContour","pt","lastPointOfContour","getMetrics","xCoords","yCoords","metrics","min","leftSideBearing","rightSideBearing","drawCircles","PI_SQ","PI","arc","fill","blueCircles","redCircles","fillStyle","lineWidth","strokeStyle","./check","./draw",6,"_font","parse","cff","glyf","gpos","head","hhea","hmtx","kern","loca","maxp","_name","os2","toArrayBuffer","arrayBuffer","data","loadFromFile","readFile","loadFromUrl","url","request","XMLHttpRequest","open","responseType","onload","status","statusText","response","send","parseBuffer","indexToLocFormat","hmtxOffset","glyfOffset","locaOffset","cffOffset","kernOffset","gposOffset","getFixed","outlinesFormat","getTag","numTables","getUShort","getULong","numberOfHMetrics","numGlyphs","fontFamily","fontSubfamily","shortVersion","locaTable","load","isNode","loadFn","_parse","./font","./glyph","./parse","./tables/cff","./tables/cmap","./tables/glyf","./tables/gpos","./tables/head","./tables/hhea","./tables/hmtx","./tables/kern","./tables/loca","./tables/maxp","./tables/name","./tables/os2","./tables/post",7,"getByte","getUint8","getCard8","getUint16","getCard16","getShort","getInt16","getUint32","decimal","fraction","String","fromCharCode","getInt8","getOffset","offSize","v","getBytes","startOffset","endOffset","bytesToString","typeOffsets","byte","uShort","short","uLong","fixed","longDateTime","Parser","relativeOffset","parseByte","parseChar","parseCard8","parseUShort","parseCard16","parseSID","parseOffset16","parseShort","parseF2Dot14","parseULong","parseFixed","parseOffset16List","parseUShortList","count","offsets","parseString","parseTag","parseLongDateTime","parseVersion","major","minor","skip","amount",8,"strokeWidth","bezierCurveTo","quadTo","close","pathOrCommands","toPathData","decimalPlaces","floatToString","round","toFixed","packValues","d","toSVG","svg",9,"sizeOf","Table","tableName","fields","field","optionKeys","k","sizeOfFunction","TABLE","./types",10,"_glyph","table","equals","b","parseCFFIndex","conversionFn","objects","objectOffset","offsetSize","pos","parseFloatOperand","parser","eof","lookup","n1","n2","parseFloat","parseOperand","b0","b1","b2","b3","b4","entriesToObject","entries","values","parseCFFDict","size","operands","op","getCFFString","strings","interpretDict","dict","meta","newDict","m","parseCFFHeader","header","formatMajor","formatMinor","TOP_DICT_META","PRIVATE_DICT_META","parseCFFTopDict","parseCFFPrivateDict","parseCFFCharset","nGlyphs","sid","format","parseCFFEncoding","enc","nCodes","nRanges","first","nLeft","parseCFFCharstring","c1x","c1y","c2x","c2y","stack","nStems","haveWidth","width","defaultWidthX","newContour","parseStems","hasWidthArg","shift","nominalWidthX","codeIndex","subrCode","jpx","jpy","c3x","c3y","c4x","c4y","pop","subrsBias","subrs","abs","console","log","gsubrsBias","gsubrs","calcCFFSubroutineBias","bias","parseCFFTable","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDictData","topDict","privateDictOffset","privateDict","subrOffset","subrIndex","charStringsIndex","charStrings","charString","encodeString","makeHeader","makeNameIndex","fontNames","makeDict","attrs","entry","makeTopDict","makeTopDictIndex","topDicts","makeStringIndex","makeGlobalSubrIndex","makeCharsets","glyphName","glyphSID","glyphToOps","ops","dx","dy","_13","_23","dx1","dy1","dx2","dy2","makeCharStringsIndex","makePrivateDict","makePrivateDictIndex","privateDicts","makeCFFTable","fullName","weight","weightName","private","privateAttrs","postScriptName","charsets","privateDictIndex","make","../encoding","../glyph","../parse","../path","../table",11,"parseCmapTable","platformId","encodingId","language","segCount","endCountParser","startCountParser","idDeltaParser","idRangeOffsetParser","glyphIndexOffset","endCount","startCount","idDelta","idRangeOffset","addSegment","segments","end","delta","addTerminatorSegment","makeCmapTable","sort","segCountX2","searchRange","pow","entrySelector","rangeShift","endCounts","startCounts","idDeltas","idRangeOffsets","glyphIds","segment","concat","glyphId","../check",12,"parseGlyphCoordinate","flag","previousValue","shortVectorBitMask","sameBitMask","parseGlyph","numberOfContours","flags","endPointIndices","instructionLength","instructions","numberOfCoordinates","repeatCount","point","onCurve","px","py","isComposite","components","moreComponents","component","xScale","scale01","scale10","yScale","transformPoints","transform","newPoints","newPt","contour","firstPt","lastPt","curvePt","realFirstPoint","prevPt","midPt","parseGlyfTable","nextOffset","componentGlyph","transformedPoints",13,"parseTaggedListTable","list","parseCoverageTable","coverage","begin","parseClassDefTable","startGlyph","glyphCount","classes","glyphID","rangeCount","startGlyphs","endGlyphs","classValues","parsePairPosSubTable","coverageOffset","valueFormat1","valueFormat2","value1","value2","sharedPairSets","pairSetCount","pairSet","pairSetOffsets","firstGlyph","pairSetOffset","sharedPairSet","pairValueCount","secondGlyph","pairs","classDef1Offset","classDef2Offset","class1Count","class2Count","getClass1","getClass2","kerningMatrix","kerningRow","covered","class1","class2","parseLookupTable","lookupType","lookupFlag","useMarkFilteringSet","subTableCount","subTableOffsets","markFilteringSet","subtables","parseGposTable","tableVersion","lookupListOffset","lookupCount","lookupTableOffsets","lookupListAbsoluteOffset",14,"parseHeadTable","fontRevision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","glyphDataFormat","makeHeadTable",15,"parseHheaTable","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","makeHheaTable",16,"parseHmtxTable","numMetrics","makeHmtxTable",17,"parseKernTable","subTableVersion","nPairs","leftIndex","rightIndex",18,"parseLocaTable","parseFn","glyphOffsets","glyphOffset",19,"parseMaxpTable","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","makeMaxpTable",20,"nameTableNames","parseNameTable","stringOffset","unknownCount","platformID","encodingID","languageID","nameID","property","codePoints","str","langTagCount","makeNameRecord","addMacintoshNameRecord","recordID","stringBytes","STRING","records","addWindowsNameRecord","utf16Bytes","UTF16","makeNameTable","../types",21,"unicodeRanges","getUnicodeRange","range","parseOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContent","makeOS2Table",22,"parsePostTable","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","nameLength","makePostTable",23,"log2","computeCheckSum","sum","makeTableRecord","checkSum","makeSfntTable","highestPowerOf2","recordFields","tableFields","tableLength","tableRecord","isNaN","r1","r2","metricsForChar","chars","notFoundMetrics","average","vs","fontToSfntTable","xMins","yMins","xMaxs","yMaxs","advanceWidths","leftSideBearings","rightSideBearings","firstCharIndex","lastCharIndex","position","globals","advanceWidthAvg","maxLeftSideBearing","headTable","hheaTable","maxpTable","os2Table","hmtxTable","cmapTable","nameTable","uniqueID","preferredFamily","preferredSubfamily","postTable","cffTable","checkSumAdjusted","./cff","./cmap","./head","./hhea","./hmtx","./maxp","./name","./os2","./post",24,"LIMIT16","LIMIT32","decode","BYTE","CHAR","CHARARRAY","USHORT","SHORT","UINT24","ULONG","LONG","FIXED","FWORD","UFWORD","LONGDATETIME","TAG","Card8","Card16","OffSize","SID","NUMBER","NUMBER16","NUMBER32","NAME","INDEX","dataSize","OBJECT","encodedOffsets","offsetEncoder","encodedOffset","DICT","OPERAND","OPERATOR","OP","wmm","WeakMap","CHARSTRING","has","get","encodingFunction","LITERAL","paper","noCanvas","process","browser","WorkerGlobalScope","Base","hidden","iter","bind","forIn","proto","__proto__","describe","getOwnPropertyDescriptor","obj","__lookupGetter__","__lookupSetter__","enumerable","configurable","writable","_define","defineProperty","desc","__defineGetter__","__defineSetter__","inject","dest","src","beans","preserve","beansNames","val","substring","res","prev","bean","base","match","toLowerCase","isPlainObject","part","each","exclude","statics","ctor","initialize","pick","_id","_class","Formatter","instance","number","join","getClassName","exportJSON","toJSON","serialize","_set","dontCheck","orig","_filtering","obj1","obj2","checkKeys","o1","o2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","formatter","precision","definitions","references","item","id","ref","unshift","_serialize","_compact","deserialize","json","_data","isRoot","isDictionary","JSON","stringify","importJSON","target","isTarget","Item","Layer","insert","splice","items","remove","append","_index","removed","capitalize","toUpperCase","camelize","all","chr","hyphenate","Emitter","on","_eventTypes","handlers","_callbacks","install","off","uninstall","once","emit","event","stop","responds","attach","detach","fire","_installEvents","events","_events","types","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","project","projects","tools","palettes","_scopes","support","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","navigator","userAgent","v1","v2","rv","chrome","versionNumber","webkit","atom","getView","getPaper","execute","PaperScript","View","updateFocus","scope","that","setup","element","Project","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","val1","val2","separator","height","rectangle","Numerical","abscissas","weights","sqrt","TOLERANCE","EPSILON","MACHINE_EPSILON","KAPPA","isZero","integrate","w","A","B","Ax","findRoot","df","tolerance","fx","nx","solveQuadratic","roots","Infinity","D","gmC","mult","LOG10E","isFinite","R","q","solveCubic","c2","ec","x0","qd","tmp","Point","arg0","arg1","hasY","angle","setAngle","setLength","_angle","cos","sin","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","atan2","div","NaN","dot","acos","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","current","rotate","center","subtract","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","contains","isClose","isColinear","isOrthogonal","point1","point2","random","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","to","next","rect","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","left","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","concatenate","a1","c1","d1","a2","d2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","bounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","apx","apy","avx","avy","bpx","bpy","bvx","bvy","ta","tb","vx","vy","v2x","v2y","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","_drawSelection","Symbol","dontCenter","setDefinition","_definition","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","PlacedSymbol","symbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","visible","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","parent","setParent","mouseFlags","mousedown","mousedrag","click","doubleclick","mouseup","mousemove","mouseenter","mouseleave","mouseEvent","counters","_eventCounters","onFrame","_animateItem","onLoad","animate","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","children","_children","namedChildren","_namedChildren","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getRegistration","setRegistration","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","child","setBounds","cache","_boundsCache","ids","cached","_internal","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","copy","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","ceil","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","getIntersections","guides","parentTotalMatrix","_totalMatrix","totalMatrix","tolerancePadding","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","class","checkBounds","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","matches","compare","matchObject","firstOnly","overlapping","inside","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","reduce","namedArray","notifyParent","replaceWith","reverseChildren","reverse","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","toCanvasStyle","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","getViewMatrix","normalBlend","nativeBlend","direct","dontStart","clip","_canComposite","mainCtx","itemOffset","prevOffset","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","getWindingRule","getCornerCenter","halfSize","dir","corner","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","getElement","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","modify","setContext","context","toDataURL","loaded","update","document","getElementById","Image","setTimeout","DomEvent","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","isLinear","_point","_handleIn","_handleOut","_path","curves","_curves","curve","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","setLinear","linear","next1","getNext","next2","getPrevious","isArc","handle1","handle2","_selectionState","state","oldState","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","removeSegment","interpolate","segment0","segment1","coef","dxPoint","dyPoint","dxHandleIn","dyHandleIn","dxHandleOut","dyHandleOut","change","Curve","arg6","arg7","_segment2","segment2","_length","getPoint1","setPoint1","getPoint2","setPoint2","getHandle1","setHandle1","getHandle2","setHandle2","getSegment1","getSegment2","getPoints","getPart","getPartLength","filterIntersections","_getParameter","isParameter","parameter","getParameterAt","ignoreLinear","subdivide","split","p1","h1","h2","p2","evaluate","p1x","p1y","p2x","p2y","bx","ax","by","ay","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","txs","tys","sx","sy","isFlatEnough","ux","uy","getEdgeSum","_addBounds","v0","v3","padding","tMin","tMax","getLocationAt","getLocationOf","getOffsetOf","loc","getNearestLocation","minDist","minT","refine","dist","step","getNearestPoint","getLengthIntegrand","getIterations","ds","forward","rangeLength","guess","addLocation","locations","curve1","t1","curve2","t2","addCurveIntersections","uMin","uMax","oldTDiff","recursion","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","tMinNew","tMaxNew","tDiff","hull","getConvexHull","tMinClip","tMaxClip","clipConvexHull","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","flip","pmax","distZero","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rlx2","rvl","rvc","tc","tl","addLineIntersection","linear1","linear2","c1p1","c1p2","c2p1","c2p2","_expand","last","_curve","_curve2","_parameter","_parameter2","loc1","loc2","path1","path2","getParameter","getIntersection","_point2","_distance","getSegment","_preferFirst","_segment","_uncached","intersection","_intersection","_getOffset","getCurveOffset","getPointAt","curves1","curves2","matrix1","matrix2","length1","length2","values2","values1","seg1","seg2","setPathData","relative","previous","control","getCoord","command","lower","move","cubicCurveTo","arcTo","winding","_getWinding","closed","setSegments","_clockwise","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","curX","curY","prevX","prevY","inX","inY","outX","outY","skipLine","isPolygon","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","simplify","fitter","PathFitter","fit","isClockwise","setClockwise","clockwise","last1","last2","first2","first1","path0","toShape","topCenter","shape","numSegments","strokePadding","cap","hitStroke","hitFill","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","_addBevelJoin","_addSquareCap","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","overlap","knots","f1","f2","ie","je","getCurrentSegment","moveBy","through","extent","vector","middle","large","epsilon","rxSq","rySq","xSq","ySq","l1","l2","throughSide","centerSide","ext","inc","z","out","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","prevCoords","processSegment","joinBounds","addRound","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getNormal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","compoundpath0","compoundpath1","paths","getCurrentPath","operators","computeBoolean","operation","operator","preparePath","reorient","_path1","_path2","splitPath","monoCurves","collect","_getMonoCurves","_winding","startSeg","totalLength","windingSum","curveLength","getTangentAt","getWinding","tracePaths","intersections","linearHandles","resetLinear","newCurve","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","prevT","slope","selfOp","_visited","inter","startInterSeg","added","interSeg","c4","c3","t3","t4","w3","w4","nextCurve","nextSeg","firstSegment","lastSegment","prevCurve","insertCurve","y0","handleCurve","y3","getInteriorPoint","xIntercepts","maxRecursion","minDifference","addCurve","computeParts","maxT","halfT","prevVal","prevLen","error","fitCubic","tan1","tan2","pt1","pt2","uPrime","chordLengthParameterize","maxError","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","C","X","detC0C1","alpha1","alpha2","detC0X","detXC1","c0","segLength","diff","degree","maxDist","P","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","gray","rgb","hsb","hsl","gradient","componentParsers","colorCache","colorCtx","fromCSS","hsbIndices","converters","rgb-hsb","h","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","hasOverlap","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","_stops","origin","destination","canvasGradient","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","acronym","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","nativeRequest","requested","callbacks","focused","timer","focus","blur","handleCallbacks","setInterval","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","getCanvasSize","_windowEvents","resize","setViewSize","_setViewSize","Stats","_stats","stats","domElement","appendChild","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","onResize","_time","_count","_requestFrame","_requested","_handleFrame","now","Date","_before","_handlingFrame","time","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tool","prevFocus","tempFocus","dragging","handleMouseMove","_handleEvent","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","HTMLCanvasElement","deviceRatio","backingStoreRatio","prevFont","measureText","downPoint","lastPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","callEvent","MouseEvent","isStopped","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","specialKeys",27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","space","charCodeMap","keyMap","downCode","handleKey","keyCode","charCode","specialKey","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","method","xhr","ActiveXObject","overrideMimeType","onreadystatechange","readyState","responseText","canvases","createElement","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","attribute","fromSVG","exportFilter","SVGNamespaces","xlink","setAttributes","namespace","setAttributeNS","createElementNS","getTransform","coordinates","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","exporters","applyStyle","visibility","svgs","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","map","importGroup","childNodes","isClip","currentStyle","applyAttributes","importSVG","importPoly","importPath","pathData","importGradient","isRadial","importers","#document","nextSibling","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","applyTransform","transforms","applyOpacity","attributes","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","styles","group","parentNode","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","onImport","expandShapes","Collection","cb","wrapConstructor","useConstructed","wrapper","arr","params","rconstructor","constructorFilter","unwrapArg","isPlural","unwrapArgs","proxy","methodNames","getOwnPropertyNames","filter","plural","ot","glyphMap","charMap","altMap","_subset","addGlyph","addGlyphs","fonts","addedFonts","delete","styleElement","styleSheet","styleSheets","ss","ownerNode","_lastSubset","normalizeSubset","getGlyphSubset","font0","font1","updateSVGData","updateOTCommands","importOT","otFont","otGlyph","_URL","URL","webkitURL","addToFonts","fontface","FontFace","createObjectURL","fontObjectURL","revokeObjectURL","deleteRule","insertRule","onloadend","readAsDataURL","lastIndexOf","../node_modules/opentype.js/dist/opentype.js","../node_modules/paper/dist/paper-core.js","./Glyph.js","Outline","anchors","parentAnchors","addAnchor","addAnchors","addParentAnchor","glyph0","glyph1","svgData","addContour","./Outline.js","outline0","outline1","defineProperties","firstNode","lastNode","_updateData","pushSimple","pushBezier","export","ctrl1","ctrl2","Node","./Collection.js","./Font.js","./Node.js","./Outline","./Path.js","updateUtils","Utils","_","ufoToPaper","parameters","outline","parentParameters","lib","transformList","solvingOrder","glyphFromSrc","fontSrc","naive","embed","mergeStatic","anchorSrc","contourSrc","nodeSrc","embedComponents","componentSrc","annotator","addComponent","cursor","propFromCursor","_dependencies","_parameters","_updaters","createUpdaters","leaf","_operation","solveDependencyTree","depTree","dependencyTree","order","simplified","simplifyResolutionOrder","parentSrc","leafSrc","currCursor","rdeg","transformsToMatrix","Float32Array","curr","rslt","inSkeleton","autoExpandedNodeSrc","side","expandedNodeUpdater","expandedTo","skeletonCopier","explicitExpandedNodeSrc","expandedContourSrc","curviness","prepareContour","updateContour","additionalContours","skeleton","leftContour","rightContour","leftNodes","rightNodes","leftNodesSrc","rightNodesSrc","leftSrc","rightSrc","expandedFrom","typeIn","typeOut","addContours","isLeft","distr","_dirOut","_dirIn","tensionIn","tensionOut","tension","lineAngle","startCtrl","endCtrl","startType","endType","startTension","endTension","startDir","endDir","rri","rayRayIntersection","dirIn","dirOut","parametricFont","fontinfo","info","glyphSrc","_params","propName","transformOrigin","_node","_contour","prepareDataUpdate","isPrepared","lineLineIntersection","p4","x3","x4","y4","onLine"],"mappings":"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AA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,KAAAjE,IAAA,OACAiE,MA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnntUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtnukdgjsourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var DepTree = function() {\n  this.nodes = {}; \n};\n\nDepTree.prototype.add = function(node, dependants) {\n  var self = this;\n\n  if (!dependants) {\n    dependants = [];\n  } else if (!(dependants instanceof Array)) {\n    dependants = [dependants];\n  }\n\n  this.nodes[node] = dependants;\n};\n\n\nDepTree.prototype.resolveNode = function(node, resolved, processing) {\n\n  var self = this;\n\n  resolved = resolved || [];\n  processing = processing || {};\n  var deps = this.nodes[node] || [];\n\n  processing[node] = true;\n\n  deps.forEach(function(dep) {\n    if (resolved.indexOf(dep) != -1) {\n      return;\n    }\n    if (processing[dep]) {\n      throw new Error('Circular dependency: '+dep);\n    }\n    self.resolveNode(dep, resolved, processing);\n  });\n\n  if (resolved.indexOf(node) == -1) {\n    processing[node] = false;\n    resolved.push(node);\n  }\n  return resolved;\n};\n\nDepTree.prototype.resolve = function() {\n\n  var resolved = [];\n  for (var node in this.nodes) {\n    this.resolveNode(node, resolved);\n  }\n\n  return resolved;\n\n};\n\n\nmodule.exports = DepTree;\n","/**\n * lodash 3.2.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseAssign = require('lodash._baseassign'),\n    createAssigner = require('lodash._createassigner'),\n    keys = require('lodash.keys');\n\n/**\n * A specialized version of `_.assign` for customizing assigned values without\n * support for argument juggling, multiple sources, and `this` binding `customizer`\n * functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n */\nfunction assignWith(object, source, customizer) {\n  var index = -1,\n      props = keys(source),\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index],\n        value = object[key],\n        result = customizer(value, source[key], key, object, source);\n\n    if ((result === result ? (result !== value) : (value === value)) ||\n        (value === undefined && !(key in object))) {\n      object[key] = result;\n    }\n  }\n  return object;\n}\n\n/**\n * Assigns own enumerable properties of source object(s) to the destination\n * object. Subsequent sources overwrite property assignments of previous sources.\n * If `customizer` is provided it is invoked to produce the assigned values.\n * The `customizer` is bound to `thisArg` and invoked with five arguments:\n * (objectValue, sourceValue, key, object, source).\n *\n * **Note:** This method mutates `object` and is based on\n * [`Object.assign`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).\n *\n * @static\n * @memberOf _\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n * // => { 'user': 'fred', 'age': 40 }\n *\n * // using a customizer callback\n * var defaults = _.partialRight(_.assign, function(value, other) {\n *   return _.isUndefined(value) ? other : value;\n * });\n *\n * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n * // => { 'user': 'barney', 'age': 36 }\n */\nvar assign = createAssigner(function(object, source, customizer) {\n  return customizer\n    ? assignWith(object, source, customizer)\n    : baseAssign(object, source);\n});\n\nmodule.exports = assign;\n","/**\n * lodash 3.2.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseCopy = require('lodash._basecopy'),\n    keys = require('lodash.keys');\n\n/**\n * The base implementation of `_.assign` without support for argument juggling,\n * multiple sources, and `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return source == null\n    ? object\n    : baseCopy(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @returns {Object} Returns `object`.\n */\nfunction baseCopy(source, props, object) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    object[key] = source[key];\n  }\n  return object;\n}\n\nmodule.exports = baseCopy;\n","/**\n * lodash 3.1.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar bindCallback = require('lodash._bindcallback'),\n    isIterateeCall = require('lodash._isiterateecall'),\n    restParam = require('lodash.restparam');\n\n/**\n * Creates a function that assigns properties of source object(s) to a given\n * destination object.\n *\n * **Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return restParam(function(object, sources) {\n    var index = -1,\n        length = object == null ? 0 : sources.length,\n        customizer = length > 2 ? sources[length - 2] : undefined,\n        guard = length > 2 ? sources[2] : undefined,\n        thisArg = length > 1 ? sources[length - 1] : undefined;\n\n    if (typeof customizer == 'function') {\n      customizer = bindCallback(customizer, thisArg, 5);\n      length -= 2;\n    } else {\n      customizer = typeof thisArg == 'function' ? thisArg : undefined;\n      length -= (customizer ? 1 : 0);\n    }\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = bindCallback;\n","/**\n * lodash 3.0.9 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isIterateeCall;\n","/**\n * lodash 3.6.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as an array.\n *\n * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.restParam(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction restParam(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        rest = Array(length);\n\n    while (++index < length) {\n      rest[index] = args[start + index];\n    }\n    switch (start) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, args[0], rest);\n      case 2: return func.call(this, args[0], args[1], rest);\n    }\n    var otherArgs = Array(start + 1);\n    index = -1;\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = rest;\n    return func.apply(this, otherArgs);\n  };\n}\n\nmodule.exports = restParam;\n","/**\n * lodash 3.1.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar getNative = require('lodash._getnative'),\n    isArguments = require('lodash.isarguments'),\n    isArray = require('lodash.isarray');\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = getNative(Object, 'keys');\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = !!length && isLength(length) &&\n    (isArray(object) || isArguments(object));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  var Ctor = object == null ? null : object.constructor;\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && isArrayLike(object))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n","/**\n * lodash 3.9.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/**\n * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n * In addition to special characters the forward slash is escaped to allow for\n * easier `eval` use and `Function` compilation.\n */\nvar reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n    reHasRegExpChars = RegExp(reRegExpChars.source);\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  if (typeof value == 'string') {\n    return value;\n  }\n  return value == null ? '' : (value + '');\n}\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  escapeRegExp(fnToString.call(hasOwnProperty))\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (objToString.call(value) == funcTag) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\n/**\n * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n */\nfunction escapeRegExp(string) {\n  string = baseToString(string);\n  return (string && reHasRegExpChars.test(string))\n    ? string.replace(reRegExpChars, '\\\\$&')\n    : string;\n}\n\nmodule.exports = getNative;\n","/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && isArrayLike(value) && objToString.call(value) == argsTag;\n}\n\nmodule.exports = isArguments;\n","/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]',\n    funcTag = '[object Function]';\n\n/**\n * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n * In addition to special characters the forward slash is escaped to allow for\n * easier `eval` use and `Function` compilation.\n */\nvar reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n    reHasRegExpChars = RegExp(reRegExpChars.source);\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  if (typeof value == 'string') {\n    return value;\n  }\n  return value == null ? '' : (value + '');\n}\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  escapeRegExp(fnToString.call(hasOwnProperty))\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (objToString.call(value) == funcTag) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\n/**\n * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n */\nfunction escapeRegExp(string) {\n  string = baseToString(string);\n  return (string && reHasRegExpChars.test(string))\n    ? string.replace(reRegExpChars, '\\\\$&')\n    : string;\n}\n\nmodule.exports = isArray;\n","/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseClone = require('lodash._baseclone'),\n    bindCallback = require('lodash._bindcallback'),\n    isIterateeCall = require('lodash._isiterateecall');\n\n/**\n * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n * otherwise they are assigned by reference. If `customizer` is provided it is\n * invoked to produce the cloned values. If `customizer` returns `undefined`\n * cloning is handled by the method instead. The `customizer` is bound to\n * `thisArg` and invoked with two argument; (value [, index|key, object]).\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n * The enumerable properties of `arguments` objects and objects created by\n * constructors other than `Object` are cloned to plain `Object` objects. An\n * empty object is returned for uncloneable values such as functions, DOM nodes,\n * Maps, Sets, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {*} Returns the cloned value.\n * @example\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * var shallow = _.clone(users);\n * shallow[0] === users[0];\n * // => true\n *\n * var deep = _.clone(users, true);\n * deep[0] === users[0];\n * // => false\n *\n * // using a customizer callback\n * var el = _.clone(document.body, function(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(false);\n *   }\n * });\n *\n * el === document.body\n * // => false\n * el.nodeName\n * // => BODY\n * el.childNodes.length;\n * // => 0\n */\nfunction clone(value, isDeep, customizer, thisArg) {\n  if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n    isDeep = false;\n  }\n  else if (typeof isDeep == 'function') {\n    thisArg = customizer;\n    customizer = isDeep;\n    isDeep = false;\n  }\n  return typeof customizer == 'function'\n    ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n    : baseClone(value, isDeep);\n}\n\nmodule.exports = clone;\n","/**\n * lodash 3.2.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar arrayCopy = require('lodash._arraycopy'),\n    arrayEach = require('lodash._arrayeach'),\n    baseAssign = require('lodash._baseassign'),\n    baseFor = require('lodash._basefor'),\n    getNative = require('lodash._getnative'),\n    isArray = require('lodash.isarray'),\n    keys = require('lodash.keys');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\ncloneableTags[dateTag] = cloneableTags[float32Tag] =\ncloneableTags[float64Tag] = cloneableTags[int8Tag] =\ncloneableTags[int16Tag] = cloneableTags[int32Tag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[stringTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[mapTag] = cloneableTags[setTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Native method references. */\nvar ArrayBuffer = getNative(global, 'ArrayBuffer'),\n    bufferSlice = getNative(ArrayBuffer && new ArrayBuffer(0), 'slice'),\n    floor = Math.floor,\n    Uint8Array = getNative(global, 'Uint8Array');\n\n/** Used to clone array buffers. */\nvar Float64Array = (function() {\n  // Safari 5 errors when using an array buffer to initialize a typed array\n  // where the array buffer's `byteLength` is not a multiple of the typed\n  // array's `BYTES_PER_ELEMENT`.\n  try {\n    var func = getNative(global, 'Float64Array'),\n        result = new func(new ArrayBuffer(10), 0, 1) && func;\n  } catch(e) {}\n  return result || null;\n}());\n\n/** Used as the size, in bytes, of each `Float64Array` element. */\nvar FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n/**\n * The base implementation of `_.clone` without support for argument juggling\n * and `this` binding `customizer` functions.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The object `value` belongs to.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates clones with source counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return arrayCopy(value, result);\n    }\n  } else {\n    var tag = objToString.call(value),\n        isFunc = tag == funcTag;\n\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return baseAssign(result, value);\n      }\n    } else {\n      return cloneableTags[tag]\n        ? initCloneByTag(value, tag, isDeep)\n        : (object ? value : {});\n    }\n  }\n  // Check for circular references and return corresponding clone.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == value) {\n      return stackB[length];\n    }\n  }\n  // Add the source value to the stack of traversed objects and associate it with its clone.\n  stackA.push(value);\n  stackB.push(result);\n\n  // Recursively populate clone (susceptible to call stack limits).\n  (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n    result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\n/**\n * Creates a clone of the given array buffer.\n *\n * @private\n * @param {ArrayBuffer} buffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction bufferClone(buffer) {\n  return bufferSlice.call(buffer, 0);\n}\nif (!bufferSlice) {\n  // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n  bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n    var byteLength = buffer.byteLength,\n        floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n        offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n        result = new ArrayBuffer(byteLength);\n\n    if (floatLength) {\n      var view = new Float64Array(result, 0, floatLength);\n      view.set(new Float64Array(buffer, 0, floatLength));\n    }\n    if (byteLength != offset) {\n      view = new Uint8Array(result, offset);\n      view.set(new Uint8Array(buffer, offset));\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add array properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  var Ctor = object.constructor;\n  if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n    Ctor = Object;\n  }\n  return new Ctor;\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return bufferClone(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      var buffer = object.buffer;\n      return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      var result = new Ctor(object.source, reFlags.exec(object));\n      result.lastIndex = object.lastIndex;\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var getter = _.constant(object);\n *\n * getter() === object;\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = baseClone;\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction arrayCopy(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayCopy;\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `_.forEach` for arrays without support for callback\n * shorthands or `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = baseFor;\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.plumin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.opentype = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// Run-time checking of preconditions.\n\n'use strict';\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nexports.argument = function(predicate, message) {\n    if (!predicate) {\n        throw new Error(message);\n    }\n};\n\n// Precondition function that checks if the given assertion is true.\n// If not, it will throw an error.\nexports.assert = exports.argument;\n\n},{}],2:[function(require,module,exports){\n// Drawing utility functions.\n\n'use strict';\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexports.line = line;\n\n},{}],3:[function(require,module,exports){\n// Glyph encoding\n\n'use strict';\n\nvar cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nvar cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n// This is the encoding used for fonts created from scratch.\n// It loops through all glyphs and finds the appropriate unicode value.\n// Since it's linear time, other encodings will be faster.\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    var code = c.charCodeAt(0);\n    var glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs[i];\n            for (var j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    } else {\n        return null;\n    }\n};\n\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n};\n\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    var code = s.charCodeAt(0);\n    var charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction GlyphNames(post) {\n    var i;\n    switch (post.version) {\n    case 1:\n        this.names = exports.standardNames.slice();\n        break;\n    case 2:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] < exports.standardNames.length) {\n                this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n            } else {\n                this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n            }\n        }\n\n        break;\n    case 2.5:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n        }\n\n        break;\n    case 3:\n        this.names = [];\n        break;\n    }\n}\n\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNames(font) {\n    var glyph;\n    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    var charCodes = Object.keys(glyphIndexMap);\n    for (var i = 0; i < charCodes.length; i += 1) {\n        var c = charCodes[i];\n        var glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs[glyphIndex];\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs[i];\n        if (font.cffEncoding) {\n            glyph.name = font.cffEncoding.charset[i];\n        } else {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexports.cffStandardStrings = cffStandardStrings;\nexports.cffStandardEncoding = cffStandardEncoding;\nexports.cffExpertEncoding = cffExpertEncoding;\nexports.standardNames = standardNames;\nexports.DefaultEncoding = DefaultEncoding;\nexports.CmapEncoding = CmapEncoding;\nexports.CffEncoding = CffEncoding;\nexports.GlyphNames = GlyphNames;\nexports.addGlyphNames = addGlyphNames;\n\n},{}],4:[function(require,module,exports){\n// The Font object\n\n'use strict';\n\nvar path = require('./path');\nvar sfnt = require('./tables/sfnt');\nvar encoding = require('./encoding');\n\n// A Font represents a loaded OpenType font file.\n// It contains a set of glyphs and methods to draw text on a drawing context,\n// or to get a path representing the text.\nfunction Font(options) {\n    options = options || {};\n\n    // OS X will complain if the names are empty, so we put a single space everywhere by default.\n    this.familyName = options.familyName || ' ';\n    this.styleName = options.styleName || ' ';\n    this.designer = options.designer || ' ';\n    this.designerURL = options.designerURL || ' ';\n    this.manufacturer = options.manufacturer || ' ';\n    this.manufacturerURL = options.manufacturerURL || ' ';\n    this.license = options.license || ' ';\n    this.licenseURL = options.licenseURL || ' ';\n    this.version = options.version || 'Version 0.1';\n    this.description = options.description || ' ';\n    this.copyright = options.copyright || ' ';\n    this.trademark = options.trademark || ' ';\n    this.unitsPerEm = options.unitsPerEm || 1000;\n    this.ascender = options.ascender;\n    this.descender = options.descender;\n    this.supported = true;\n    this.glyphs = options.glyphs || [];\n    this.encoding = new encoding.DefaultEncoding(this);\n    this.tables = {};\n}\n\n// Check if the font has a glyph for the given character.\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n// Convert the given character to a single glyph index.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n// Convert the given character to a single Glyph object.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyph = function(c) {\n    var glyphIndex = this.charToGlyphIndex(c);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\n// Convert the given text to a list of Glyph objects.\n// Note that there is no strict one-to-one mapping between characters and\n// glyphs, so the list of returned glyphs can be larger or smaller than the\n// length of the given string.\nFont.prototype.stringToGlyphs = function(s) {\n    var glyphs = [];\n    for (var i = 0; i < s.length; i += 1) {\n        var c = s[i];\n        glyphs.push(this.charToGlyph(c));\n    }\n\n    return glyphs;\n};\n\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\nFont.prototype.nameToGlyph = function(name) {\n    var glyphIndex = this.nametoGlyphIndex(name);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n// Retrieve the value of the kerning pair between the left glyph (or its index)\n// and the right glyph (or its index). If no kerning pair is found, return 0.\n// The kerning value gets added to the advance width when calculating the spacing\n// between glyphs.\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.getGposKerningValue;\n    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n};\n\n// Helper function that invokes the given callback for each glyph in the given text.\n// The callback gets `(glyph, x, y, fontSize, options)`.\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    if (!this.supported) {\n        return;\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || {};\n    var kerning = options.kerning === undefined ? true : options.kerning;\n    var fontScale = 1 / this.unitsPerEm * fontSize;\n    var glyphs = this.stringToGlyphs(text);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        callback(glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (kerning && i < glyphs.length - 1) {\n            var kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n    }\n};\n\n// Create a Path object that represents the given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns a Path object.\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    var fullPath = new path.Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        fullPath.extend(glyphPath);\n    });\n\n    return fullPath;\n};\n\n// Draw the text on the given drawing context.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n// Draw the points of all glyphs in the text.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Draw lines indicating important font measurements for all glyphs in the text.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Validate\nFont.prototype.validate = function() {\n    var warnings = [];\n    var _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertStringAttribute(attrName) {\n        assert(_this[attrName] && _this[attrName].trim().length > 0, 'No ' + attrName + ' specified.');\n    }\n\n    // Identification information\n    assertStringAttribute('familyName');\n    assertStringAttribute('weightName');\n    assertStringAttribute('manufacturer');\n    assertStringAttribute('copyright');\n    assertStringAttribute('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n\nFont.prototype.toBuffer = function() {\n    var sfntTable = this.toTables();\n    var bytes = sfntTable.encode();\n    var buffer = new ArrayBuffer(bytes.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n// Initiate a download of the OpenType font.\nFont.prototype.download = function() {\n    var fileName = this.familyName.replace(/\\s/g, '') + '-' + this.styleName + '.otf';\n    var buffer = this.toBuffer();\n\n    window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n    window.requestFileSystem(window.TEMPORARY, buffer.byteLength, function(fs) {\n        fs.root.getFile(fileName, {create: true}, function(fileEntry) {\n            fileEntry.createWriter(function(writer) {\n                var dataView = new DataView(buffer);\n                var blob = new Blob([dataView], {type: 'font/opentype'});\n                writer.write(blob);\n\n                writer.addEventListener('writeend', function() {\n                    // Navigating to the file will download it.\n                    location.href = fileEntry.toURL();\n                }, false);\n            });\n        });\n    },\n\n    function(err) {\n        throw err;\n    });\n};\n\nexports.Font = Font;\n\n},{\"./encoding\":3,\"./path\":8,\"./tables/sfnt\":23}],5:[function(require,module,exports){\n// The Glyph object\n\n'use strict';\n\nvar check = require('./check');\nvar draw = require('./draw');\nvar path = require('./path');\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\nfunction Glyph(options) {\n    this.font = options.font || null;\n    this.index = options.index || 0;\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n    this.xMin = options.xMin || 0;\n    this.yMin = options.yMin || 0;\n    this.xMax = options.xMax || 0;\n    this.yMax = options.yMax || 0;\n    this.advanceWidth = options.advanceWidth || 0;\n    this.path = options.path || null;\n}\n\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n// Convert the glyph to a Path we can draw on a drawing context.\n//\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.getPath = function(x, y, fontSize) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n    var p = new path.Path();\n    var commands = this.path.commands;\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                               x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                      x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n                      x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n// Split the glyph into contours.\n// This function is here for backwards compatibility, and to\n// provide raw access to the TrueType glyph outlines.\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < this.points.length; i += 1) {\n        var pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n// Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\nGlyph.prototype.getMetrics = function() {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: 0\n    };\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// Draw the glyph on the given context.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.draw = function(ctx, x, y, fontSize) {\n    this.getPath(x, y, fontSize).draw(ctx);\n};\n\n// Draw the points of the glyph.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n\n    function drawCircles(l, x, y, scale) {\n        var PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (var j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n\n    var blueCircles = [];\n    var redCircles = [];\n    var path = this.path;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n// Draw lines indicating important font measurements.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    var scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (this.xMin * scale), -10000, x + (this.xMin * scale), 10000);\n    draw.line(ctx, x + (this.xMax * scale), -10000, x + (this.xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-this.yMin * scale), 10000, y + (-this.yMin * scale));\n    draw.line(ctx, -10000, y + (-this.yMax * scale), 10000, y + (-this.yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (this.advanceWidth * scale), -10000, x + (this.advanceWidth * scale), 10000);\n};\n\nexports.Glyph = Glyph;\n\n},{\"./check\":1,\"./draw\":2,\"./path\":8}],6:[function(require,module,exports){\n// opentype.js\n// https://github.com/nodebox/opentype.js\n// (c) 2014 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global ArrayBuffer, DataView, Uint8Array, XMLHttpRequest  */\n\n'use strict';\n\nvar encoding = require('./encoding');\nvar _font = require('./font');\nvar glyph = require('./glyph');\nvar parse = require('./parse');\nvar path = require('./path');\n\nvar cmap = require('./tables/cmap');\nvar cff = require('./tables/cff');\nvar glyf = require('./tables/glyf');\nvar gpos = require('./tables/gpos');\nvar head = require('./tables/head');\nvar hhea = require('./tables/hhea');\nvar hmtx = require('./tables/hmtx');\nvar kern = require('./tables/kern');\nvar loca = require('./tables/loca');\nvar maxp = require('./tables/maxp');\nvar _name = require('./tables/name');\nvar os2 = require('./tables/os2');\nvar post = require('./tables/post');\n\n// File loaders /////////////////////////////////////////////////////////\n\n// Convert a Node.js Buffer to an ArrayBuffer\nfunction toArrayBuffer(buffer) {\n    var arrayBuffer = new ArrayBuffer(buffer.length);\n    var data = new Uint8Array(arrayBuffer);\n    for (var i = 0; i < buffer.length; i += 1) {\n        data[i] = buffer[i];\n    }\n\n    return arrayBuffer;\n}\n\nfunction loadFromFile(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, toArrayBuffer(buffer));\n    });\n}\n\nfunction loadFromUrl(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.status !== 200) {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n\n        return callback(null, request.response);\n    };\n\n    request.send();\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n// Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n// If the file could not be parsed (most likely because it contains Postscript outlines)\n// we return an empty Font object with the `supported` flag set to `false`.\nfunction parseBuffer(buffer) {\n    var indexToLocFormat;\n    var hmtxOffset;\n    var glyfOffset;\n    var locaOffset;\n    var cffOffset;\n    var kernOffset;\n    var gposOffset;\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n\n    var font = new _font.Font();\n    var data = new DataView(buffer, 0);\n\n    var version = parse.getFixed(data, 0);\n    if (version === 1.0) {\n        font.outlinesFormat = 'truetype';\n    } else {\n        version = parse.getTag(data, 0);\n        if (version === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType version ' + version);\n        }\n    }\n\n    var numTables = parse.getUShort(data, 4);\n\n    // Offset into the table records.\n    var p = 12;\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var offset = parse.getULong(data, p + 8);\n        switch (tag) {\n        case 'cmap':\n            font.tables.cmap = cmap.parse(data, offset);\n            font.encoding = new encoding.CmapEncoding(font.tables.cmap);\n            if (!font.encoding) {\n                font.supported = false;\n            }\n\n            break;\n        case 'head':\n            font.tables.head = head.parse(data, offset);\n            font.unitsPerEm = font.tables.head.unitsPerEm;\n            indexToLocFormat = font.tables.head.indexToLocFormat;\n            break;\n        case 'hhea':\n            font.tables.hhea = hhea.parse(data, offset);\n            font.ascender = font.tables.hhea.ascender;\n            font.descender = font.tables.hhea.descender;\n            font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n            break;\n        case 'hmtx':\n            hmtxOffset = offset;\n            break;\n        case 'maxp':\n            font.tables.maxp = maxp.parse(data, offset);\n            font.numGlyphs = font.tables.maxp.numGlyphs;\n            break;\n        case 'name':\n            font.tables.name = _name.parse(data, offset);\n            font.familyName = font.tables.name.fontFamily;\n            font.styleName = font.tables.name.fontSubfamily;\n            break;\n        case 'OS/2':\n            font.tables.os2 = os2.parse(data, offset);\n            break;\n        case 'post':\n            font.tables.post = post.parse(data, offset);\n            font.glyphNames = new encoding.GlyphNames(font.tables.post);\n            break;\n        case 'glyf':\n            glyfOffset = offset;\n            break;\n        case 'loca':\n            locaOffset = offset;\n            break;\n        case 'CFF ':\n            cffOffset = offset;\n            break;\n        case 'kern':\n            kernOffset = offset;\n            break;\n        case 'GPOS':\n            gposOffset = offset;\n            break;\n        }\n        p += 16;\n    }\n\n    if (glyfOffset && locaOffset) {\n        var shortVersion = indexToLocFormat === 0;\n        var locaTable = loca.parse(data, locaOffset, font.numGlyphs, shortVersion);\n        font.glyphs = glyf.parse(data, glyfOffset, locaTable, font);\n        hmtx.parse(data, hmtxOffset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n        encoding.addGlyphNames(font);\n    } else if (cffOffset) {\n        cff.parse(data, cffOffset, font);\n        encoding.addGlyphNames(font);\n    } else {\n        font.supported = false;\n    }\n\n    if (font.supported) {\n        if (kernOffset) {\n            font.kerningPairs = kern.parse(data, kernOffset);\n        } else {\n            font.kerningPairs = {};\n        }\n\n        if (gposOffset) {\n            gpos.parse(data, gposOffset, font);\n        }\n    }\n\n    return font;\n}\n\n// Asynchronously load the font from a URL or a filesystem. When done, call the callback\n// with two arguments `(err, font)`. The `err` will be null on success,\n// the `font` is a Font object.\n//\n// We use the node.js callback convention so that\n// opentype.js can integrate with frameworks like async.js.\nfunction load(url, callback) {\n    var isNode = typeof window === 'undefined';\n    var loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function(err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n\n        var font = parseBuffer(arrayBuffer);\n        if (!font.supported) {\n            return callback('Font is not supported (is this a Postscript font?)');\n        }\n\n        return callback(null, font);\n    });\n}\n\nexports._parse = parse;\nexports.Font = _font.Font;\nexports.Glyph = glyph.Glyph;\nexports.Path = path.Path;\nexports.parse = parseBuffer;\nexports.load = load;\n\n},{\"./encoding\":3,\"./font\":4,\"./glyph\":5,\"./parse\":7,\"./path\":8,\"./tables/cff\":10,\"./tables/cmap\":11,\"./tables/glyf\":12,\"./tables/gpos\":13,\"./tables/head\":14,\"./tables/hhea\":15,\"./tables/hmtx\":16,\"./tables/kern\":17,\"./tables/loca\":18,\"./tables/maxp\":19,\"./tables/name\":20,\"./tables/os2\":21,\"./tables/post\":22,\"fs\":undefined}],7:[function(require,module,exports){\n// Parsing utility functions\n\n'use strict';\n\n// Retrieve an unsigned byte from the DataView.\nexports.getByte = function getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n};\n\nexports.getCard8 = exports.getByte;\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getUShort = function(dataView, offset) {\n    return dataView.getUint16(offset, false);\n};\n\nexports.getCard16 = exports.getUShort;\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getShort = function(dataView, offset) {\n    return dataView.getInt16(offset, false);\n};\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nexports.getULong = function(dataView, offset) {\n    return dataView.getUint32(offset, false);\n};\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nexports.getFixed = function(dataView, offset) {\n    var decimal = dataView.getInt16(offset, false);\n    var fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n};\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nexports.getTag = function(dataView, offset) {\n    var tag = '';\n    for (var i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n};\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nexports.getOffset = function(dataView, offset, offSize) {\n    var v = 0;\n    for (var i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n};\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nexports.getBytes = function(dataView, startOffset, endOffset) {\n    var bytes = [];\n    for (var i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n};\n\n// Convert the list of bytes to a string.\nexports.bytesToString = function(bytes) {\n    var s = '';\n    for (var i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n};\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    var offsets = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = exports.getUShort(dataView, offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\nParser.prototype.parseString = function(length) {\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    var string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\nParser.prototype.parseLongDateTime = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v / 65536;\n};\n\nParser.prototype.parseVersion = function() {\n    var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // This returns the correct number if minor = 0xN000 where N is 0-9\n    var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    return major + minor / 0x1000 / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\nexports.Parser = Parser;\n\n},{}],8:[function(require,module,exports){\n// Geometric objects\n\n'use strict';\n\n// A bézier path containing a set of path commands similar to a SVG path.\n// Paths can be drawn on a context using `draw`.\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n// Add the given path or list of commands to the commands of this path.\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n// Draw the path to a 2D context.\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n// Convert the Path to a string of path data instructions\n// See http://www.w3.org/TR/SVG/paths.html#PathData\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n// Convert the path to a SVG <path> element, as a string.\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toSVG = function(decimalPlaces) {\n    var svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill & this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\nexports.Path = Path;\n\n},{}],9:[function(require,module,exports){\n// Table metadata\n\n'use strict';\n\nvar check = require('./check');\nvar encode = require('./types').encode;\nvar sizeOf = require('./types').sizeOf;\n\nfunction Table(tableName, fields, options) {\n    var i;\n    for (i = 0; i < fields.length; i += 1) {\n        var field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        var optionKeys = Object.keys(options);\n        for (i = 0; i < optionKeys.length; i += 1) {\n            var k = optionKeys[i];\n            var v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\nTable.prototype.sizeOf = function() {\n    var v = 0;\n    for (var i = 0; i < this.fields.length; i += 1) {\n        var field = this.fields[i];\n        var value = this[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        if (typeof value.sizeOf === 'function') {\n            v += value.sizeOf();\n        } else {\n            var sizeOfFunction = sizeOf[field.type];\n            check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n            v += sizeOfFunction(value);\n        }\n    }\n\n    return v;\n};\n\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\nexports.Table = Table;\n\n},{\"./check\":1,\"./types\":24}],10:[function(require,module,exports){\n// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\nvar table = require('../table');\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (var i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    //var i, objectOffset, endOffset;\n    var offsets = [];\n    var objects = [];\n    var count = parse.getCard16(data, start);\n    var i;\n    var objectOffset;\n    var endOffset;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        var pos = start + 3;\n        for (i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (i = 0; i < offsets.length - 1; i += 1) {\n        var value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s = '';\n    var eof = 15;\n    var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        var b = parser.parseByte();\n        var n1 = b >> 4;\n        var n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1;\n    var b2;\n    var b3;\n    var b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o = {};\n    for (var i = 0; i < entries.length; i += 1) {\n        var key = entries[i][0];\n        var values = entries[i][1];\n        var value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key)) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    var parser = new parse.Parser(data, start);\n    var entries = [];\n    var operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        var op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = encoding.cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var newDict = {};\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (var i = 0; i < meta.length; i += 1) {\n        var m = meta[i];\n        var value = dict[m.op];\n        if (value === undefined) {\n            value = m.value !== undefined ? m.value : null;\n        }\n\n        if (m.type === 'SID') {\n            value = getCFFString(strings, value);\n        }\n\n        newDict[m.name] = value;\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n];\n\nvar PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var i;\n    var sid;\n    var count;\n    var parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    var charset = ['.notdef'];\n\n    var format = parser.parseCard8();\n    if (format === 0) {\n        for (i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var i;\n    var code;\n    var enc = {};\n    var parser = new parse.Parser(data, start);\n    var format = parser.parseCard8();\n    if (format === 0) {\n        var nCodes = parser.parseCard8();\n        for (i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        var nRanges = parser.parseCard8();\n        code = 1;\n        for (i = 0; i < nRanges; i += 1) {\n            var first = parser.parseCard8();\n            var nLeft = parser.parseCard8();\n            for (var j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new encoding.CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(code, font, index) {\n    var c1x;\n    var c1y;\n    var c2x;\n    var c2y;\n    var p = new path.Path();\n    var stack = [];\n    var nStems = 0;\n    var haveWidth = false;\n    var width = font.defaultWidthX;\n    var open = false;\n    var x = 0;\n    var y = 0;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + font.nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var b1;\n        var b2;\n        var b3;\n        var b4;\n        var codeIndex;\n        var subrCode;\n        var jpx;\n        var jpy;\n        var c3x;\n        var c3y;\n        var c4x;\n        var c4y;\n\n        var i = 0;\n        while (i < code.length) {\n            var v = code[i];\n            i += 1;\n            switch (v) {\n            case 1: // hstem\n                parseStems();\n                break;\n            case 3: // vstem\n                parseStems();\n                break;\n            case 4: // vmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                newContour(x, y);\n                break;\n            case 5: // rlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 6: // hlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 7: // vlineto\n                while (stack.length > 0) {\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 8: // rrcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 10: // callsubr\n                codeIndex = stack.pop() + font.subrsBias;\n                subrCode = font.subrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 11: // return\n                return;\n            case 12: // flex operators\n                v = code[i];\n                i += 1;\n                switch (v) {\n                case 35: // flex\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    y = c4y + stack.shift();      // dy6\n                    stack.shift();                // flex depth\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 34: // hflex\n                    // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y;                      // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = y;                      // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 36: // hflex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 37: // flex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                        x = c4x + stack.shift();\n                    } else {\n                        y = c4y + stack.shift();\n                    }\n\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                default:\n                    console.log('Glyph ' + index + ': unknown operator ' + 1200 + v);\n                    stack.length = 0;\n                }\n                break;\n            case 14: // endchar\n                if (stack.length > 0 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                if (open) {\n                    p.closePath();\n                    open = false;\n                }\n\n                break;\n            case 18: // hstemhm\n                parseStems();\n                break;\n            case 19: // hintmask\n            case 20: // cntrmask\n                parseStems();\n                i += (nStems + 7) >> 3;\n                break;\n            case 21: // rmoveto\n                if (stack.length > 2 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 22: // hmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 23: // vstemhm\n                parseStems();\n                break;\n            case 24: // rcurveline\n                while (stack.length > 2) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                x += stack.shift();\n                y += stack.shift();\n                p.lineTo(x, y);\n                break;\n            case 25: // rlinecurve\n                while (stack.length > 6) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                break;\n            case 26: // vvcurveto\n                if (stack.length % 2) {\n                    x += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x;\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 27: // hhcurveto\n                if (stack.length % 2) {\n                    y += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y;\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 28: // shortint\n                b1 = code[i];\n                b2 = code[i + 1];\n                stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                i += 2;\n                break;\n            case 29: // callgsubr\n                codeIndex = stack.pop() + font.gsubrsBias;\n                subrCode = font.gsubrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 30: // vhcurveto\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 31: // hvcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            default:\n                if (v < 32) {\n                    console.log('Glyph ' + index + ': unknown operator ' + v);\n                } else if (v < 247) {\n                    stack.push(v - 139);\n                } else if (v < 251) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push((v - 247) * 256 + b1 + 108);\n                } else if (v < 255) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push(-(v - 251) * 256 - b1 - 108);\n                } else {\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    b3 = code[i + 2];\n                    b4 = code[i + 3];\n                    i += 4;\n                    stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                }\n            }\n        }\n    }\n\n    parse(code);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.path = p;\n    glyph.advanceWidth = width;\n    return glyph;\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    font.tables.cff = {};\n    var header = parseCFFHeader(data, start);\n    var nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    var stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n    var topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n    font.tables.cff.topDict = topDict;\n\n    var privateDictOffset = start + topDict['private'][1];\n    var privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        var subrOffset = privateDictOffset + privateDict.subrs;\n        var subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    var charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    var charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) { // Standard encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) { // Expert encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = [];\n    for (var i = 0; i < font.nGlyphs; i += 1) {\n        var charString = charStringsIndex.objects[i];\n        font.glyphs.push(parseCFFCharstring(charString, font, i));\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    var sid;\n\n    // Is the string in the CFF standard strings?\n    var i = encoding.cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + encoding.cffStandardStrings.length;\n    } else {\n        sid = encoding.cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Table('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    var t = new table.Table('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (var i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    var m = {};\n    for (var i = 0; i < meta.length; i += 1) {\n        var entry = meta[i];\n        var value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    var t = new table.Table('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    var t = new table.Table('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    var t = new table.Table('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (var i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Table('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    var t = new table.Table('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (var i = 0; i < glyphNames.length; i += 1) {\n        var glyphName = glyphNames[i];\n        var glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    var ops = [];\n    var path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    var x = 0;\n    var y = 0;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var dx;\n        var dy;\n        var cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            var _13 = 1 / 3;\n            var _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            var dx1 = Math.round(cmd.x1 - x);\n            var dy1 = Math.round(cmd.y1 - y);\n            var dx2 = Math.round(cmd.x2 - cmd.x1);\n            var dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    var t = new table.Table('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    var t = new table.Table('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makePrivateDictIndex(privateDict) {\n    var t = new table.Table('Private DICT INDEX', [\n        {name: 'privateDicts', type: 'INDEX', value: []}\n    ]);\n    t.privateDicts = [{name: 'privateDict_0', type: 'TABLE', value: privateDict}];\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    var t = new table.Table('CFF ', [\n        {name: 'header', type: 'TABLE'},\n        {name: 'nameIndex', type: 'TABLE'},\n        {name: 'topDictIndex', type: 'TABLE'},\n        {name: 'stringIndex', type: 'TABLE'},\n        {name: 'globalSubrIndex', type: 'TABLE'},\n        {name: 'charsets', type: 'TABLE'},\n        {name: 'charStringsIndex', type: 'TABLE'},\n        {name: 'privateDictIndex', type: 'TABLE'}\n    ]);\n\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    var attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    var privateAttrs = {};\n\n    var glyphNames = [];\n\n    // Skip first glyph (.notdef)\n    for (var i = 1; i < glyphs.length; i += 1) {\n        glyphNames.push(glyphs[i].name);\n    }\n\n    var strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    var topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    var privateDict = makePrivateDict(privateAttrs, strings);\n    t.privateDictIndex = makePrivateDictIndex(privateDict);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    var startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexports.parse = parseCFFTable;\nexports.make = makeCFFTable;\n\n},{\"../encoding\":3,\"../glyph\":5,\"../parse\":7,\"../path\":8,\"../table\":9}],11:[function(require,module,exports){\n// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var i;\n    var cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 3\" table. This is a Windows format.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    var offset = -1;\n    for (i = 0; i < cmap.numTables; i += 1) {\n        var platformId = parse.getUShort(data, start + 4 + (i * 8));\n        var encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support, so return null.\n        // This font will be marked as unsupported.\n        return null;\n    }\n\n    var p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n    check.argument(cmap.format === 4, 'Only format 4 cmap tables are supported.');\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    var segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n\n    var endCountParser = new parse.Parser(data, start + offset + 14);\n    var startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    var idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    var idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    var glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (i = 0; i < segCount - 1; i += 1) {\n        var glyphIndex;\n        var endCount = endCountParser.parseUShort();\n        var startCount = startCountParser.parseUShort();\n        var idDelta = idDeltaParser.parseShort();\n        var idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (var c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\nfunction makeCmapTable(glyphs) {\n    var i;\n    var t = new table.Table('cmap', [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: 1},\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: 12},\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        for (var j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function(a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    var segCount;\n    segCount = t.segments.length;\n    t.segCountX2 = segCount * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    // Set up parallel segment arrays.\n    var endCounts = [];\n    var startCounts = [];\n    var idDeltas = [];\n    var idRangeOffsets = [];\n    var glyphIds = [];\n\n    for (i = 0; i < segCount; i += 1) {\n        var segment = t.segments[i];\n        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n        if (segment.glyphId !== undefined) {\n            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n        }\n    }\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    return t;\n}\n\nexports.parse = parseCmapTable;\nexports.make = makeCmapTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],12:[function(require,module,exports){\n// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\n'use strict';\n\nvar check = require('../check');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(data, start, index, font) {\n    //var p, glyph, flag, i, j, flags,\n    //    endPointIndices, numberOfCoordinates, repeatCount, points, point, px, py,\n    //    component, moreComponents;\n    var p = new parse.Parser(data, start);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.numberOfContours = p.parseShort();\n    glyph.xMin = p.parseShort();\n    glyph.yMin = p.parseShort();\n    glyph.xMax = p.parseShort();\n    glyph.yMax = p.parseShort();\n    var flags;\n    var flag;\n    if (glyph.numberOfContours > 0) {\n        var i;\n        // This glyph is not a composite.\n        var endPointIndices = glyph.endPointIndices = [];\n        for (i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                var repeatCount = p.parseByte();\n                for (var j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            var points = [];\n            var point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                var px = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                var py = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        var moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            var component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                component.dx = p.parseShort();\n                component.dy = p.parseShort();\n            } else {\n                // The arguments are bytes\n                component.dx = p.parseChar();\n                component.dy = p.parseChar();\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n    }\n\n    return glyph;\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        var newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p = new path.Path();\n    if (!points) {\n        return p;\n    }\n\n    var contours = getContours(points);\n    for (var i = 0; i < contours.length; i += 1) {\n        var contour = contours[i];\n        var firstPt = contour[0];\n        var lastPt = contour[contour.length - 1];\n        var curvePt;\n        var realFirstPoint;\n        if (firstPt.onCurve) {\n            curvePt = null;\n            // The first point will be consumed by the moveTo command,\n            // so skip it in the loop.\n            realFirstPoint = true;\n        } else {\n            if (lastPt.onCurve) {\n                // If the first point is off-curve and the last point is on-curve,\n                // start at the last point.\n                firstPt = lastPt;\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n            }\n\n            curvePt = firstPt;\n            // The first point is synthesized, so don't skip the real first point.\n            realFirstPoint = false;\n        }\n\n        p.moveTo(firstPt.x, firstPt.y);\n\n        for (var j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n            var pt = contour[j];\n            var prevPt = j === 0 ? firstPt : contour[j - 1];\n            if (prevPt.onCurve && pt.onCurve) {\n                // This is a straight line.\n                p.lineTo(pt.x, pt.y);\n            } else if (prevPt.onCurve && !pt.onCurve) {\n                curvePt = pt;\n            } else if (!prevPt.onCurve && !pt.onCurve) {\n                var midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n                p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n                curvePt = pt;\n            } else if (!prevPt.onCurve && pt.onCurve) {\n                // Previous point off-curve, this point on-curve.\n                p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                curvePt = null;\n            } else {\n                throw new Error('Invalid state.');\n            }\n        }\n\n        if (firstPt !== lastPt) {\n            // Connect the last and first points\n            if (curvePt) {\n                p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            } else {\n                p.lineTo(firstPt.x, firstPt.y);\n            }\n        }\n    }\n\n    p.closePath();\n    return p;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    var glyphs = [];\n    var i;\n    // The last element of the loca table is invalid.\n    for (i = 0; i < loca.length - 1; i += 1) {\n        var offset = loca[i];\n        var nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(parseGlyph(data, start + offset, i, font));\n        } else {\n            glyphs.push(new _glyph.Glyph({font: font, index: i}));\n        }\n    }\n    // Go over the glyphs again, resolving the composite glyphs.\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        if (glyph.isComposite) {\n            for (var j = 0; j < glyph.components.length; j += 1) {\n                var component = glyph.components[j];\n                var componentGlyph = glyphs[component.glyphIndex];\n                if (componentGlyph.points) {\n                    var transformedPoints = transformPoints(componentGlyph.points, component);\n                    glyph.points = glyph.points.concat(transformedPoints);\n                }\n            }\n        }\n\n        glyph.path = getPath(glyph.points);\n    }\n\n    return glyphs;\n}\n\nexports.parse = parseGlyfTable;\n\n},{\"../check\":1,\"../glyph\":5,\"../parse\":7,\"../path\":8}],13:[function(require,module,exports){\n// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n// These lists are unused by now, this function is just the basis for a real parsing.\nfunction parseTaggedListTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var n = p.parseUShort();\n    var list = [];\n    for (var i = 0; i < n; i++) {\n        list[p.parseTag()] = { offset: p.parseUShort() };\n    }\n\n    return list;\n}\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// Format 1 is a simple list of glyph ids,\n// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\nfunction parseCoverageTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    var count =  p.parseUShort();\n    if (format === 1) {\n        return p.parseUShortList(count);\n    }\n    else if (format === 2) {\n        var coverage = [];\n        for (; count--;) {\n            var begin = p.parseUShort();\n            var end = p.parseUShort();\n            var index = p.parseUShort();\n            for (var i = begin; i <= end; i++) {\n                coverage[index++] = i;\n            }\n        }\n\n        return coverage;\n    }\n}\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// Returns a function that gets a class value from a glyph ID.\nfunction parseClassDefTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    if (format === 1) {\n        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n        var startGlyph = p.parseUShort();\n        var glyphCount = p.parseUShort();\n        var classes = p.parseUShortList(glyphCount);\n        return function(glyphID) {\n            return classes[glyphID - startGlyph] || 0;\n        };\n    }\n    else if (format === 2) {\n        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n        var rangeCount = p.parseUShort();\n        var startGlyphs = [];\n        var endGlyphs = [];\n        var classValues = [];\n        for (var i = 0; i < rangeCount; i++) {\n            startGlyphs[i] = p.parseUShort();\n            endGlyphs[i] = p.parseUShort();\n            classValues[i] = p.parseUShort();\n        }\n\n        return function(glyphID) {\n            var l = 0;\n            var r = startGlyphs.length - 1;\n            while (l < r) {\n                var c = (l + r + 1) >> 1;\n                if (glyphID < startGlyphs[c]) {\n                    r = c - 1;\n                } else {\n                    l = c;\n                }\n            }\n\n            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                return classValues[l] || 0;\n            }\n\n            return 0;\n        };\n    }\n}\n\n// Parse a pair adjustment positioning subtable, format 1 or format 2\n// The subtable is returned in the form of a lookup function.\nfunction parsePairPosSubTable(data, start) {\n    var p = new parse.Parser(data, start);\n    // This part is common to format 1 and format 2 subtables\n    var format = p.parseUShort();\n    var coverageOffset = p.parseUShort();\n    var coverage = parseCoverageTable(data, start + coverageOffset);\n    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n    // Only valueFormat1=4 and valueFormat2=0 is supported.\n    var valueFormat1 = p.parseUShort();\n    var valueFormat2 = p.parseUShort();\n    var value1;\n    var value2;\n    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n    var sharedPairSets = {};\n    if (format === 1) {\n        // Pair Positioning Adjustment: Format 1\n        var pairSetCount = p.parseUShort();\n        var pairSet = [];\n        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n        var pairSetOffsets = p.parseOffset16List(pairSetCount);\n        for (var firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n            var pairSetOffset = pairSetOffsets[firstGlyph];\n            var sharedPairSet = sharedPairSets[pairSetOffset];\n            if (!sharedPairSet) {\n                // Parse a pairset table in a pair adjustment subtable format 1\n                sharedPairSet = {};\n                p.relativeOffset = pairSetOffset;\n                var pairValueCount = p.parseUShort();\n                for (; pairValueCount--;) {\n                    var secondGlyph = p.parseUShort();\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) value2 = p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    sharedPairSet[secondGlyph] = value1;\n                }\n            }\n\n            pairSet[coverage[firstGlyph]] = sharedPairSet;\n        }\n\n        return function(leftGlyph, rightGlyph) {\n            var pairs = pairSet[leftGlyph];\n            if (pairs) return pairs[rightGlyph];\n        };\n    }\n    else if (format === 2) {\n        // Pair Positioning Adjustment: Format 2\n        var classDef1Offset = p.parseUShort();\n        var classDef2Offset = p.parseUShort();\n        var class1Count = p.parseUShort();\n        var class2Count = p.parseUShort();\n        var getClass1 = parseClassDefTable(data, start + classDef1Offset);\n        var getClass2 = parseClassDefTable(data, start + classDef2Offset);\n\n        // Parse kerning values by class pair.\n        var kerningMatrix = [];\n        for (var i = 0; i < class1Count; i++) {\n            var kerningRow = kerningMatrix[i] = [];\n            for (var j = 0; j < class2Count; j++) {\n                if (valueFormat1) value1 = p.parseShort();\n                if (valueFormat2) value2 = p.parseShort();\n                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                // so value1 is the XAdvance and value2 is empty.\n                kerningRow[j] = value1;\n            }\n        }\n\n        // Convert coverage list to a hash\n        var covered = {};\n        for (i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\n        // Get the kerning value for a specific glyph pair.\n        return function(leftGlyph, rightGlyph) {\n            if (!covered[leftGlyph]) return;\n            var class1 = getClass1(leftGlyph);\n            var class2 = getClass2(rightGlyph);\n            var kerningRow = kerningMatrix[class1];\n\n            if (kerningRow) {\n                return kerningRow[class2];\n            }\n        };\n    }\n}\n\n// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\nfunction parseLookupTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var lookupType = p.parseUShort();\n    var lookupFlag = p.parseUShort();\n    var useMarkFilteringSet = lookupFlag & 0x10;\n    var subTableCount = p.parseUShort();\n    var subTableOffsets = p.parseOffset16List(subTableCount);\n    var table = {\n        lookupType: lookupType,\n        lookupFlag: lookupFlag,\n        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n    };\n    // LookupType 2, Pair adjustment\n    if (lookupType === 2) {\n        var subtables = [];\n        for (var i = 0; i < subTableCount; i++) {\n            subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n        }\n        // Return a function which finds the kerning values in the subtables.\n        table.getKerningValue = function(leftGlyph, rightGlyph) {\n            for (var i = subtables.length; i--;) {\n                var value = subtables[i](leftGlyph, rightGlyph);\n                if (value !== undefined) return value;\n            }\n\n            return 0;\n        };\n    }\n\n    return table;\n}\n\n// Parse the `GPOS` table which contains, among other things, kerning pairs.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\nfunction parseGposTable(data, start, font) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseFixed();\n    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n    // ScriptList and FeatureList - ignored for now\n    parseTaggedListTable(data, start + p.parseUShort());\n    // 'kern' is the feature we are looking for.\n    parseTaggedListTable(data, start + p.parseUShort());\n\n    // LookupList\n    var lookupListOffset = p.parseUShort();\n    p.relativeOffset = lookupListOffset;\n    var lookupCount = p.parseUShort();\n    var lookupTableOffsets = p.parseOffset16List(lookupCount);\n    var lookupListAbsoluteOffset = start + lookupListOffset;\n    for (var i = 0; i < lookupCount; i++) {\n        var table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n    }\n}\n\nexports.parse = parseGposTable;\n\n},{\"../check\":1,\"../parse\":7}],14:[function(require,module,exports){\n// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {};\n    var p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();     // 50\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: 0},\n        {name: 'modified', type: 'LONGDATETIME', value: 0},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHeadTable;\nexports.make = makeHeadTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],15:[function(require,module,exports){\n// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {};\n    var p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHheaTable;\nexports.make = makeHheaTable;\n\n},{\"../parse\":7,\"../table\":9}],16:[function(require,module,exports){\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    var advanceWidth;\n    var leftSideBearing;\n    var p = new parse.Parser(data, start);\n    for (var i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        var glyph = glyphs[i];\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    var t = new table.Table('hmtx', []);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var advanceWidth = glyph.advanceWidth || 0;\n        var leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexports.parse = parseHmtxTable;\nexports.make = makeHmtxTable;\n\n},{\"../parse\":7,\"../table\":9}],17:[function(require,module,exports){\n// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var pairs = {};\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseUShort();\n    check.argument(tableVersion === 0, 'Unsupported kern table version.');\n    // Skip nTables.\n    p.skip('uShort', 1);\n    var subTableVersion = p.parseUShort();\n    check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subTableLength, subTableCoverage\n    p.skip('uShort', 2);\n    var nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (var i = 0; i < nPairs; i += 1) {\n        var leftIndex = p.parseUShort();\n        var rightIndex = p.parseUShort();\n        var value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n\n    return pairs;\n}\n\nexports.parse = parseKernTable;\n\n},{\"../check\":1,\"../parse\":7}],18:[function(require,module,exports){\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\n'use strict';\n\nvar parse = require('../parse');\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p = new parse.Parser(data, start);\n    var parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    var glyphOffsets = [];\n    for (var i = 0; i < numGlyphs + 1; i += 1) {\n        var glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexports.parse = parseLocaTable;\n\n},{\"../parse\":7}],19:[function(require,module,exports){\n// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {};\n    var p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexports.parse = parseMaxpTable;\nexports.make = makeMaxpTable;\n\n},{\"../parse\":7,\"../table\":9}],20:[function(require,module,exports){\n// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\n'use strict';\n\nvar encode = require('../types').encode;\nvar parse = require('../parse');\nvar table = require('../table');\n\n// NameIDs for the name table.\nvar nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'licence',                // 13\n    'licenceURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\n// Parse the naming `name` table\n// Only Windows Unicode English names are supported.\n// Format 1 additional fields are not supported\nfunction parseNameTable(data, start) {\n    var name = {};\n    var p = new parse.Parser(data, start);\n    name.format = p.parseUShort();\n    var count = p.parseUShort();\n    var stringOffset = p.offset + p.parseUShort();\n    var unknownCount = 0;\n    for (var i = 0; i < count; i++) {\n        var platformID = p.parseUShort();\n        var encodingID = p.parseUShort();\n        var languageID = p.parseUShort();\n        var nameID = p.parseUShort();\n        var property = nameTableNames[nameID];\n        var byteLength = p.parseUShort();\n        var offset = p.parseUShort();\n        // platformID - encodingID - languageID standard combinations :\n        // 1 - 0 - 0 : Macintosh, Roman, English\n        // 3 - 1 - 0x409 : Windows, Unicode BMP (UCS-2), en-US\n        if (platformID === 3 && encodingID === 1 && languageID === 0x409) {\n            var codePoints = [];\n            var length = byteLength / 2;\n            for (var j = 0; j < length; j++, offset += 2) {\n                codePoints[j] = parse.getShort(data, stringOffset + offset);\n            }\n\n            var str = String.fromCharCode.apply(null, codePoints);\n            if (property) {\n                name[property] = str;\n            }\n            else {\n                unknownCount++;\n                name['unknown' + unknownCount] = str;\n            }\n        }\n\n    }\n\n    if (name.format === 1) {\n        name.langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Table('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\nfunction addMacintoshNameRecord(t, recordID, s, offset) {\n    // Macintosh, Roman, English\n    var stringBytes = encode.STRING(s);\n    t.records.push(makeNameRecord(1, 0, 0, recordID, stringBytes.length, offset));\n    t.strings.push(stringBytes);\n    offset += stringBytes.length;\n    return offset;\n}\n\nfunction addWindowsNameRecord(t, recordID, s, offset) {\n    // Windows, Unicode BMP (UCS-2), US English\n    var utf16Bytes = encode.UTF16(s);\n    t.records.push(makeNameRecord(3, 1, 0x0409, recordID, utf16Bytes.length, offset));\n    t.strings.push(utf16Bytes);\n    offset += utf16Bytes.length;\n    return offset;\n}\n\nfunction makeNameTable(options) {\n    var t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: 0},\n        {name: 'stringOffset', type: 'USHORT', value: 0}\n    ]);\n    t.records = [];\n    t.strings = [];\n    var offset = 0;\n    var i;\n    var s;\n    // Add Macintosh records first\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addMacintoshNameRecord(t, i, s, offset);\n        }\n    }\n    // Then add Windows records\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addWindowsNameRecord(t, i, s, offset);\n        }\n    }\n\n    t.count = t.records.length;\n    t.stringOffset = 6 + t.count * 12;\n    for (i = 0; i < t.records.length; i += 1) {\n        t.fields.push({name: 'record_' + i, type: 'TABLE', value: t.records[i]});\n    }\n\n    for (i = 0; i < t.strings.length; i += 1) {\n        t.fields.push({name: 'string_' + i, type: 'LITERAL', value: t.strings[i]});\n    }\n\n    return t;\n}\n\nexports.parse = parseNameTable;\nexports.make = makeNameTable;\n\n},{\"../parse\":7,\"../table\":9,\"../types\":24}],21:[function(require,module,exports){\n// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\nvar unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (var i = 0; i < unicodeRanges.length; i += 1) {\n        var range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {};\n    var p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.unicodeRanges = unicodeRanges;\nexports.getUnicodeRange = getUnicodeRange;\nexports.parse = parseOS2Table;\nexports.make = makeOS2Table;\n\n},{\"../parse\":7,\"../table\":9}],22:[function(require,module,exports){\n// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {};\n    var p = new parse.Parser(data, start);\n    var i;\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n    case 1:\n        post.names = encoding.standardNames.slice();\n        break;\n    case 2:\n        post.numberOfGlyphs = p.parseUShort();\n        post.glyphNameIndex = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.glyphNameIndex[i] = p.parseUShort();\n        }\n\n        post.names = [];\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n                var nameLength = p.parseChar();\n                post.names.push(p.parseString(nameLength));\n            }\n        }\n\n        break;\n    case 2.5:\n        post.numberOfGlyphs = p.parseUShort();\n        post.offset = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.offset[i] = p.parseChar();\n        }\n\n        break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexports.parse = parsePostTable;\nexports.make = makePostTable;\n\n},{\"../encoding\":3,\"../parse\":7,\"../table\":9}],23:[function(require,module,exports){\n// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\n'use strict';\n\nvar check = require('../check');\nvar table = require('../table');\n\nvar cmap = require('./cmap');\nvar cff = require('./cff');\nvar head = require('./head');\nvar hhea = require('./hhea');\nvar hmtx = require('./hmtx');\nvar maxp = require('./maxp');\nvar _name = require('./name');\nvar os2 = require('./os2');\nvar post = require('./post');\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    var sum = 0;\n    for (var i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Table('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    var sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    var recordFields = [];\n    var tableFields = [];\n\n    var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (var i = 0; i < tables.length; i += 1) {\n        var t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        var tableLength = t.sizeOf();\n        var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (var i = 0; i < chars.length; i += 1) {\n        var glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            var glyph = font.glyphs[glyphIndex];\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    var sum = 0;\n    for (var i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    var xMins = [];\n    var yMins = [];\n    var xMaxs = [];\n    var yMaxs = [];\n    var advanceWidths = [];\n    var leftSideBearings = [];\n    var rightSideBearings = [];\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    for (var i = 0; i < font.glyphs.length; i += 1) {\n        var glyph = font.glyphs[i];\n        var unicode = glyph.unicode | 0;\n        if (firstCharIndex > unicode || firstCharIndex === null) {\n            firstCharIndex = unicode;\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        var position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        var metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    var globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n    globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\n    var headTable = head.make({\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax\n    });\n\n    var hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    var maxpTable = maxp.make(font.glyphs.length);\n\n    var os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: 500, // Medium FIXME Make this configurable\n        usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.ascender,\n        usWinDescent: -globals.descender,\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: 0}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n    var hmtxTable = hmtx.make(font.glyphs);\n    var cmapTable = cmap.make(font.glyphs);\n\n    var fullName = font.familyName + ' ' + font.styleName;\n    var postScriptName = font.familyName.replace(/\\s/g, '') + '-' + font.styleName;\n    var nameTable = _name.make({\n        copyright: font.copyright,\n        fontFamily: font.familyName,\n        fontSubfamily: font.styleName,\n        uniqueID: font.manufacturer + ':' + fullName,\n        fullName: fullName,\n        version: font.version,\n        postScriptName: postScriptName,\n        trademark: font.trademark,\n        manufacturer: font.manufacturer,\n        designer: font.designer,\n        description: font.description,\n        manufacturerURL: font.manufacturerURL,\n        designerURL: font.designerURL,\n        license: font.license,\n        licenseURL: font.licenseURL,\n        preferredFamily: font.familyName,\n        preferredSubfamily: font.styleName\n    });\n    var postTable = post.make();\n    var cffTable = cff.make(font.glyphs, {\n        version: font.version,\n        fullName: fullName,\n        familyName: font.familyName,\n        weightName: font.styleName,\n        postScriptName: postScriptName\n    });\n    // Order the tables according to the the OpenType specification 1.4.\n    var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n\n    var sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    var bytes = sfntTable.encode();\n    var checkSum = computeCheckSum(bytes);\n    var tableFields = sfntTable.fields;\n    var checkSumAdjusted = false;\n    for (i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexports.computeCheckSum = computeCheckSum;\nexports.make = makeSfntTable;\nexports.fontToTable = fontToSfntTable;\n\n},{\"../check\":1,\"../table\":9,\"./cff\":10,\"./cmap\":11,\"./head\":14,\"./hhea\":15,\"./hmtx\":16,\"./maxp\":19,\"./name\":20,\"./os2\":21,\"./post\":22}],24:[function(require,module,exports){\n// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = require('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\nvar decode = {};\nvar encode = {};\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n// Convert an 8-bit unsigned integer to a list of 1 byte.\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert a 8-bit signed integer to a list of 1 byte.\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert an ASCII string to a list of bytes.\nencode.CHARARRAY = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n// Convert a 16-bit unsigned integer to a list of 2 bytes.\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.USHORT = constant(2);\n\n// Convert a 16-bit signed integer to a list of 2 bytes.\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.SHORT = constant(2);\n\n// Convert a 24-bit unsigned integer to a list of 3 bytes.\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.UINT24 = constant(3);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.ULONG = constant(4);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n// FIXME Implement LONGDATETIME\nencode.LONGDATETIME = function() {\n    return [0, 0, 0, 0, 0, 0, 0, 0];\n};\n\nsizeOf.LONGDATETIME = constant(8);\n\n// Convert a 4-char tag to a list of 4 bytes.\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n// Convert a signed number between -32768 and +32767 to a three-byte value.\n// This ensures we always use three bytes, but is not the most compact format.\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER16 = constant(2);\n\n// Convert a signed number between -(2^31) and +(2^31-1) to a four-byte value.\n// This is useful if you want to be sure you always use four bytes,\n// at the expense of wasting a few bytes for smaller numbers.\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER32 = constant(4);\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n// Convert a ASCII string to a list of UTF16 bytes.\nencode.UTF16 = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(0);\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\nencode.INDEX = function(l) {\n    var i;\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    dataSize, i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    var offset = 1; // First offset is always 1.\n    var offsets = [offset];\n    var data = [];\n    var dataSize = 0;\n    for (i = 0; i < l.length; i += 1) {\n        var v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        dataSize += v.length;\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    var encodedOffsets = [];\n    var offSize = (1 + Math.floor(Math.log(dataSize) / Math.log(2)) / 8) | 0;\n    var offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        var encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n// Convert an object to a CFF DICT structure.\n// The keys should be numeric.\n// The values should be objects containing name / type / value.\nencode.DICT = function(m) {\n    var d = [];\n    var keys = Object.keys(m);\n    var length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\nencode.OPERAND = function(v, type) {\n    var d = [];\n    if (Array.isArray(type)) {\n        for (var i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else {\n            // FIXME Add support for booleans\n            d = d.concat(encode.NUMBER(v));\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n// Convert a list of CharString operations to bytes.\nencode.CHARSTRING = function(ops) {\n    if (wmm && wmm.has(ops)) {\n        return wmm.get(ops);\n    }\n\n    var d = [];\n    var length = ops.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n// Convert an object containing name / type / value to bytes.\nencode.OBJECT = function(v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n// Convert a table object to bytes.\n// A table contains a list of fields containing the metadata (name, type and default value).\n// The table itself has the field values set as attributes.\nencode.TABLE = function(table) {\n    var d = [];\n    var length = table.fields.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        var bytes = encodingFunction(value);\n        d = d.concat(bytes);\n    }\n\n    return d;\n};\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n\n},{\"./check\":1}]},{},[6])(6)\n});\n},{}],2:[function(require,module,exports){\n/*!\n * Paper.js v0.9.22 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Mon Mar 23 22:20:31 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\n\t\t  var noCanvas =\n\t\t\t  ( typeof process === 'object' && process.browser !== true ) ||\n\t\t\t  ( typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope );\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && (!exclude || !exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tctor.prototype = create(this.prototype);\n\t\t\tctor.base = base;\n\t\t\tdefine(ctor.prototype, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\treturn arguments.length ? this.inject.apply(ctor, arguments) : ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function() {\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\t\tif (arguments[i] !== undefined)\n\t\t\t\t\t\treturn arguments[i];\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar orig = props._filtering || props;\n\t\t\tfor (var key in orig) {\n\t\t\t\tif (orig.hasOwnProperty(key) && !(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tfunction checkKeys(o1, o2) {\n\t\t\t\tfor (var i in o1)\n\t\t\t\t\tif (o1.hasOwnProperty(i) && !o2.hasOwnProperty(i))\n\t\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\tif (obj1.length !== obj2.length)\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i = 0, l = obj1.length; i < l; i++) {\n\t\t\t\t\tif (!Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 && typeof obj1 === 'object'\n\t\t\t\t\t&& obj2 && typeof obj2 === 'object') {\n\t\t\t\tif (!checkKeys(obj1, obj2) || !checkKeys(obj2, obj1))\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i in obj1) {\n\t\t\t\t\tif (obj1.hasOwnProperty(i)\n\t\t\t\t\t\t\t&& !Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var i in obj)\n\t\t\t\t\tif (obj.hasOwnProperty(i))\n\t\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\t\tdictionary);\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (!isDictionary) {\n\t\t\t\t\tif (_data.dictionary && json.length == 1 && /^#/.test(type))\n\t\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\t\ttype = Base.exports[type];\n\t\t\t\t}\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data));\n\t\t\t\tif (isDictionary) {\n\t\t\t\t\t_data.dictionary = res[0];\n\t\t\t\t} else if (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar entry = this._eventTypes[type];\n\t\t\tif (entry) {\n\t\t\t\tvar handlers = this._callbacks = this._callbacks || {};\n\t\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\t\thandlers.push(func);\n\t\t\t\t\tif (entry.install && handlers.length == 1)\n\t\t\t\t\t\tentry.install.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar entry = this._eventTypes[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (entry && handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false\n\t\t\t\t\t&& event && event.stop) {\n\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar entry = this._eventTypes[type],\n\t\t\t\t\tfunc = entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif ( noCanvas ) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar browser = proto.browser = {};\n\t\t\tnavigator.userAgent.toLowerCase().replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: '0.9.22',\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tTOLERANCE = 1e-6,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\treturn {\n\t\tTOLERANCE: TOLERANCE,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn abs(val) <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= 2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar pow = Math.pow,\n\t\t\t\t\tgmC = pow(abs(a*b*c), 1/3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\t/*\n\t\t\t\t\t * we multiply with a factor to normalize the\n\t\t\t\t\t * coefficients. The factor is just the nearest exponent\n\t\t\t\t\t * of 10, big enough to raise all the coefficients to\n\t\t\t\t\t * nearly [-1, +1] range.\n\t\t\t\t\t */\n\t\t\t\t\tvar mult = pow(10, abs(\n\t\t\t\t\t\tMath.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < MACHINE_EPSILON) {\n\t\t\t\tif (abs(B) < MACHINE_EPSILON)\n\t\t\t\t\treturn abs(c) < MACHINE_EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else {\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tD = D < 0 ? 0 : D;\n\t\t\t\t\tvar R = sqrt(D);\n\t\t\t\t\tif (b >= MACHINE_EPSILON && b <= MACHINE_EPSILON) {\n\t\t\t\t\t\tx1 = abs(a) >= abs(c) ? R / a : -c / R;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar q = -(b + (b < 0 ? -1 : 1) * R);\n\t\t\t\t\t\tx1 = q / a;\n\t\t\t\t\t\tx2 = c / q;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 >= min && x1 <= max))\n\t\t\t\troots[count++] = x1;\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 >= min && x2 <= max))\n\t\t\t\troots[count++] = x2;\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar x, b1, c2, count = 0;\n\t\t\tif (a === 0) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (d === 0) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x >= min && x <= max))\n\t\t\t\troots[count++] = x;\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\ts = Math.sin(angle),\n\t\t\tc = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * c - point.y * s,\n\t\t\tpoint.x * s + point.y * c\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function(point, tolerance) {\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisColinear: function(point) {\n\t\treturn Math.abs(this.cross(point)) < 1e-12;\n\t},\n\n\tisOrthogonal: function(point) {\n\t\treturn Math.abs(this.dot(point)) < 1e-12;\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments);\n\t\tif (point.isZero()) {\n\t\t\treturn new Point(0, 0);\n\t\t} else {\n\t\t\tvar scale = this.dot(point) / point.dot(point);\n\t\t\treturn new Point(\n\t\t\t\tpoint.x * scale,\n\t\t\t\tpoint.y * scale\n\t\t\t);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n}, new function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = coords.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tstatics: {\n\t\tintersect: function(apx, apy, avx, avy, bpx, bpy, bvx, bvy, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tavx -= apx;\n\t\t\t\tavy -= apy;\n\t\t\t\tbvx -= bpx;\n\t\t\t\tbvy -= bpy;\n\t\t\t}\n\t\t\tvar cross = avx * bvy - avy * bvx;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = apx - bpx,\n\t\t\t\t\tdy = apy - bpy,\n\t\t\t\t\tta = (bvx * dy - bvy * dx) / cross,\n\t\t\t\t\ttb = (avx * dy - avy * dx) / cross;\n\t\t\t\tif (isInfinite || 0 <= ta && ta <= 1 && 0 <= tb && tb <= 1)\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\t\tapx + ta * avx,\n\t\t\t\t\t\t\t\tapy + ta * avy);\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0) {\n\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\tif (ccw > 0) {\n\t\t\t\t\tv2x -= vx;\n\t\t\t\t\tv2y -= vy;\n\t\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\t\tif (ccw < 0)\n\t\t\t\t\t\tccw = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn Numerical.isZero(vx)\n\t\t\t\t\t? vy >= 0 ? px - x : x - px\n\t\t\t\t\t: Numerical.isZero(vy)\n\t\t\t\t\t\t? vx >= 0 ? y - py : py - y\n\t\t\t\t\t\t: (vx * (y - py) - vy * (x - px)) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = Symbol._id = (Symbol._id || 0) + 1;\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = Item._id = (Item._id || 0) + 1;\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, parent: true }, true);\n\t\treturn hasProps;\n\t},\n\n\t_events: new function() {\n\n\t\tvar mouseFlags = {\n\t\t\tmousedown: {\n\t\t\t\tmousedown: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmouseup: {\n\t\t\t\tmouseup: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmousemove: {\n\t\t\t\tmousedrag: 1,\n\t\t\t\tmousemove: 1,\n\t\t\t\tmouseenter: 1,\n\t\t\t\tmouseleave: 1\n\t\t\t}\n\t\t};\n\n\t\tvar mouseEvent = {\n\t\t\tinstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tuninstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = mouseEvent;\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis._animateItem(true);\n\t\t\t\t\t},\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis._animateItem(false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {}\n\t\t\t}\n\t\t);\n\t},\n\n\t_animateItem: function(animate) {\n\t\tthis.getView()._animateItem(this, animate);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments);\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n\n\tgetRegistration: '#getPivot',\n\tsetRegistration: '#setPivot'\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tvar cacheParent = this._parent || this._parentSymbol;\n\t\tif (cacheParent) {\n\t\t\tvar id = cacheItem._id,\n\t\t\t\tref = cacheParent._boundsCache = cacheParent._boundsCache || {\n\t\t\t\t\tids: {},\n\t\t\t\t\tlist: []\n\t\t\t\t};\n\t\t\tif (!ref.ids[id]) {\n\t\t\t\tref.list.push(cacheItem);\n\t\t\t\tref.ids[id] = cacheItem;\n\t\t\t}\n\t\t}\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++) {\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function(matrix) {\n\t\tthis._matrix.initialize(matrix);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert) {\n\t\tcopy.setStyle(this._style);\n\t\tif (this._children) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tcopy.addChild(this._children[i].clone(false), true);\n\t\t}\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide', '_applyMatrix'];\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tcopy.setSelected(this._selected);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(),\n\t\t\t\t_matrix || item._matrix).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 0.000001)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tif (typeof name === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param) {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect =\tbounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: rect,\n\t\t\t\t\toverlapping: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param.items,\n\t\t\t\tinside = param.inside,\n\t\t\t\toverlapping = param.overlapping;\n\t\t\tmatrix = inside && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (inside) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!inside.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(inside && inside.contains(bounds)) && !(overlapping\n\t\t\t\t\t\t\t&& overlapping.intersects(child, childMatrix)))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2;\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t});\n\t\tpath.setStyle(this._style);\n\t\tpath.transform(this._matrix);\n\t\tif (insert || insert === undefined)\n\t\t\tpath.insertAbove(this);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rect' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\t\timage = document.getElementById(src) || new Image();\n\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, {\n\t\t\t\tload: loaded\n\t\t\t});\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL() : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif (arg0.point) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.isLinear() ? this._point\n\t\t\t\t: [this._point, this._handleIn, this._handleOut],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._handleIn.isZero() && this._handleOut.isZero();\n\t},\n\n\tsetLinear: function(linear) {\n\t\tif (linear) {\n\t\t\tthis._handleIn.set(0, 0);\n\t\t\tthis._handleOut.set(0, 0);\n\t\t} else {\n\t\t}\n\t},\n\n\tisColinear: function(segment) {\n\t\tvar next1 = this.getNext(),\n\t\t\tnext2 = segment.getNext();\n\t\treturn this._handleOut.isZero() && next1._handleIn.isZero()\n\t\t\t\t&& segment._handleOut.isZero() && next2._handleIn.isZero()\n\t\t\t\t&& next1._point.subtract(this._point).isColinear(\n\t\t\t\t\tnext2._point.subtract(segment._point));\n\t},\n\n\tisOrthogonal: function() {\n\t\tvar prev = this.getPrevious(),\n\t\t\tnext = this.getNext();\n\t\treturn prev._handleOut.isZero() && this._handleIn.isZero()\n\t\t\t&& this._handleOut.isZero() && next._handleIn.isZero()\n\t\t\t&& this._point.subtract(prev._point).isOrthogonal(\n\t\t\t\t\tnext._point.subtract(this._point));\n\t},\n\n\tisArc: function() {\n\t\tvar next = this.getNext(),\n\t\t\thandle1 = this._handleOut,\n\t\t\thandle2 = next._handleIn,\n\t\t\tkappa = 0.5522847498307936;\n\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\tvar from = this._point,\n\t\t\t\tto = next._point,\n\t\t\t\tcorner = new Line(from, handle1, true).intersect(\n\t\t\t\t\t\tnew Line(to, handle2, true), true);\n\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\tcorner.subtract(from).getLength() - kappa)\n\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\tcorner.subtract(to).getLength() - kappa);\n\t\t}\n\t\treturn false;\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\treverse: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(segment0, segment1, coef) {\n\t\tvar dxPoint = segment1._point._x - segment0._point._x,\n\t\t\tdyPoint = segment1._point._y - segment0._point._y,\n\t\t\tdxHandleIn = segment1._handleIn._x - segment0._handleIn._x,\n\t\t\tdyHandleIn = segment1._handleIn._y - segment0._handleIn._y,\n\t\t\tdxHandleOut = segment1._handleOut._x - segment0._handleOut._x,\n\t\t\tdyHandleOut = segment1._handleOut._y - segment0._handleOut._y;\n\n\t\tthis._point._x = segment0._point._x + dxPoint * coef;\n\t\tthis._point._y = segment0._point._y + dyPoint * coef;\n\t\tthis._handleIn._x = segment0._handleIn._x + dxHandleIn * coef;\n\t\tthis._handleIn._y = segment0._handleIn._y + dyHandleIn * coef;\n\t\tthis._handleOut._x = segment0._handleOut._x + dxHandleOut * coef;\n\t\tthis._handleOut._y = segment0._handleOut._y + dyHandleOut * coef;\n\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tthis._segment1 = arg1;\n\t\t\tthis._segment2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tthis._segment1 = new Segment();\n\t\t\tthis._segment2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tthis._segment1 = new Segment(arg0.segment1);\n\t\t\tthis._segment2 = new Segment(arg0.segment2);\n\t\t} else if (count === 2) {\n\t\t\tthis._segment1 = new Segment(arg0);\n\t\t\tthis._segment2 = new Segment(arg1);\n\t\t} else {\n\t\t\tvar point1, handle1, handle2, point2;\n\t\t\tif (count === 4) {\n\t\t\t\tpoint1 = arg0;\n\t\t\t\thandle1 = arg1;\n\t\t\t\thandle2 = arg2;\n\t\t\t\tpoint2 = arg3;\n\t\t\t} else if (count === 8) {\n\t\t\t\tpoint1 = [arg0, arg1];\n\t\t\t\tpoint2 = [arg6, arg7];\n\t\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t\t}\n\t\t\tthis._segment1 = new Segment(point1, null, handle1);\n\t\t\tthis._segment2 = new Segment(point2, handle2, null);\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tthis._length = this.isLinear()\n\t\t\t\t? this._segment2._point.getDistance(this._segment1._point)\n\t\t\t\t: Curve.getLength(this.getValues(), 0, 1);\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._segment1._handleOut.isZero()\n\t\t\t\t&& this._segment2._handleIn.isZero();\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve.filterIntersections(Curve.getIntersections(\n\t\t\t\tthis.getValues(), curve.getValues(), this, curve, []));\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, ignoreLinear) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttolerance = 0.000001,\n\t\t\tres = null;\n\t\tif (parameter > tolerance && parameter < 1 - tolerance) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tisLinear = ignoreLinear ? false : this.isLinear(),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1];\n\n\t\t\tif (!isLinear) {\n\t\t\t\tthis._segment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tthis._segment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\t!isLinear && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\t!isLinear && new Point(right[2] - x, right[3] - y));\n\n\t\t\tif (this._path) {\n\t\t\t\tif (this._segment1._index > 0 && this._segment2._index === 0) {\n\t\t\t\t\tthis._path.add(segment);\n\t\t\t\t} else {\n\t\t\t\t\tthis._path.insert(this._segment2._index, segment);\n\t\t\t\t}\n\t\t\t\tres = this;\n\t\t\t} else {\n\t\t\t\tvar end = this._segment2;\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, end);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treverse: function() {\n\t\treturn new Curve(this._segment2.reverse(), this._segment1.reverse());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tevaluate: function(v, t, type) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tolerance || t > 1 - tolerance)) {\n\t\t\tvar isZero = t < tolerance;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tolerance && c1x === p1x && c1y === p1y\n\t\t\t\t\t\t|| t > 1 - tolerance && c2x === p2x && c2y === p2y) {\n\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t} else if (t < tolerance) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > 1 - tolerance) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by;\n\t\t\t\t\treturn (x * y2 - y * x2) / Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b,\n\t\t\tisZero = Numerical.isZero;\n\t\tif (isZero(a) && isZero(b))\n\t\t\ta = b = 0;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, x, y) {\n\t\tvar tolerance = 0.000001;\n\t\tif (Math.abs(v[0] - x) < tolerance && Math.abs(v[1] - y) < tolerance)\n\t\t\treturn 0;\n\t\tif (Math.abs(v[6] - x) < tolerance && Math.abs(v[7] - y) < tolerance)\n\t\t\treturn 1;\n\t\tvar txs = [],\n\t\t\ttys = [],\n\t\t\tsx = Curve.solveCubic(v, 0, x, txs, 0, 1),\n\t\t\tsy = Curve.solveCubic(v, 1, y, tys, 0, 1),\n\t\t\ttx, ty;\n\t\tfor (var cx = 0;  sx == -1 || cx < sx;) {\n\t\t\tif (sx == -1 || (tx = txs[cx++]) >= 0 && tx <= 1) {\n\t\t\t\tfor (var cy = 0; sy == -1 || cy < sy;) {\n\t\t\t\t\tif (sy == -1 || (ty = tys[cy++]) >= 0 && ty <= 1) {\n\t\t\t\t\t\tif (sx == -1) tx = ty;\n\t\t\t\t\t\telse if (sy == -1) ty = tx;\n\t\t\t\t\t\tif (Math.abs(tx - ty) < tolerance)\n\t\t\t\t\t\t\treturn (tx + ty) * 0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sx == -1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn v;\n\t},\n\n\tisLinear: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]);\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn (  3.0 * c1y * p1x - 1.5 * c1y * c2x\n\t\t\t\t- 1.5 * c1y * p2x - 3.0 * p1y * c1x\n\t\t\t\t- 1.5 * p1y * c2x - 0.5 * p1y * p2x\n\t\t\t\t+ 1.5 * c2y * p1x + 1.5 * c2y * c1x\n\t\t\t\t- 3.0 * c2y * p2x + 0.5 * p2y * p1x\n\t\t\t\t+ 1.5 * p2y * c1x + 3.0 * p2y * c2x) / 10;\n\t},\n\n\tgetEdgeSum: function(v) {\n\t\treturn\t  (v[0] - v[2]) * (v[3] + v[1])\n\t\t\t\t+ (v[2] - v[4]) * (v[5] + v[3])\n\t\t\t\t+ (v[4] - v[6]) * (v[7] + v[5]);\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name]([this._segment1,\n\t\t\t\t\t\tthis._segment2], false, this._path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve.evaluate(values, isParameter\n\t\t\t\t\t? offset : Curve.getParameterAt(values, offset, 0), index);\n\t\t};\n\t\tthis[name] = function(parameter) {\n\t\t\treturn Curve.evaluate(this.getValues(), parameter, index);\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Curve.getParameterOf(this.getValues(), point.x, point.y);\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tif (!isParameter)\n\t\t\toffset = this.getParameterAt(offset);\n\t\treturn offset >= 0 && offset <= 1 && new CurveLocation(this, offset);\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tcount = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(\n\t\t\t\t\t\tCurve.evaluate(values, t, 0), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 0.000001) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\tvar pt = Curve.evaluate(values, minT, 0);\n\t\treturn new CurveLocation(this, minT, pt, null, null, null,\n\t\t\t\tpoint.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n}),\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\treturn {\n\t\tstatics: true,\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tvar isZero = Numerical.isZero;\n\t\t\tif (a === 0 && b === 1\n\t\t\t\t\t&& isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t\t&& isZero(v[6] - v[4]) && isZero(v[7] - v[5])) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar forward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (Math.abs(offset) >= rangeLength)\n\t\t\t\treturn forward ? b : a;\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 16,\n\t\t\t\t\t0.000001);\n\t\t}\n\t};\n}, new function() {\n\tfunction addLocation(locations, include, curve1, t1, point1, curve2, t2,\n\t\t\tpoint2) {\n\t\tvar loc = new CurveLocation(curve1, t1, point1, curve2, t2, point2);\n\t\tif (!include || include(loc))\n\t\t\tlocations.push(loc);\n\t}\n\n\tfunction addCurveIntersections(v1, v2, curve1, curve2, locations, include,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (recursion > 32)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]) || 0,\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]) || 0,\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\ttMinNew, tMaxNew, tDiff;\n\t\tif (q0x === q3x && uMax - uMin <= tolerance && recursion > 3) {\n\t\t\ttMaxNew = tMinNew = (tMax + tMin) / 2;\n\t\t\ttDiff = 0;\n\t\t} else {\n\t\t\tvar hull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\t\ttop = hull[0],\n\t\t\t\tbottom = hull[1],\n\t\t\t\ttMinClip, tMaxClip;\n\t\t\ttMinClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\ttop.reverse();\n\t\t\tbottom.reverse();\n\t\t\ttMaxClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\tif (tMinClip == null || tMaxClip == null)\n\t\t\t\treturn;\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\ttDiff = tMaxClip - tMinClip;\n\t\t\ttMinNew = tMax * tMinClip + tMin * (1 - tMinClip);\n\t\t\ttMaxNew = tMax * tMaxClip + tMin * (1 - tMaxClip);\n\t\t}\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, curve2, curve1, locations, include,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew) < tolerance) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tif (reverse) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0),\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0));\n\t\t\t} else {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t} else if (tDiff > 0) {\n\t\t\taddCurveIntersections(v2, v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\tdist1 = getSignedDistance(0, dq0, 1, dq3, 1 / 3, dq1),\n\t\t\tdist2 = getSignedDistance(0, dq0, 1, dq3, 2 / 3, dq2),\n\t\t\tflip = false,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t\tflip = dist1 < 0;\n\t\t} else {\n\t\t\tvar pmax, cross = 0,\n\t\t\t\tdistZero = dist1 === 0 || dist2 === 0;\n\t\t\tif (Math.abs(dist1) > Math.abs(dist2)) {\n\t\t\t\tpmax = p1;\n\t\t\t\tcross = (dq3 - dq2 - (dq3 - dq0) / 3)\n\t\t\t\t\t\t* (2 * (dq3 - dq2) - dq3 + dq1) / 3;\n\t\t\t} else {\n\t\t\t\tpmax = p2;\n\t\t\t\tcross = (dq1 - dq0 + (dq0 - dq3) / 3)\n\t\t\t\t\t\t* (-2 * (dq0 - dq1) + dq0 - dq2) / 3;\n\t\t\t}\n\t\t\thull = cross < 0 || distZero\n\t\t\t\t\t? [[p0, pmax, p3], [p0, p3]]\n\t\t\t\t\t: [[p0, p1, p2, p3], [p0, p3]];\n\t\t\tflip = dist1 ? dist1 < 0 : dist2 < 0;\n\t\t}\n\t\treturn flip ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold)\n\t\t\t\treturn px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, curve1, curve2, locations,\n\t\t\tinclude) {\n\t\tvar flip = Curve.isLinear(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trlx2 = ldx * cos - ldy * sin,\n\t\t\trvl = [0, 0, 0, 0, rlx2, 0, rlx2, 0],\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\ty * cos + x * sin);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tx = Curve.evaluate(rvc, tc, 0).x;\n\t\t\tif (x >= 0 && x <= rlx2) {\n\t\t\t\tvar tl = Curve.getParameterOf(rvl, x, 0),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, curve1, curve2, locations, include) {\n\t\tvar point = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (point) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tcurve1, Curve.getParameterOf(v1, x, y), point,\n\t\t\t\t\tcurve2, Curve.getParameterOf(v2, x, y), point);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\tgetIntersections: function(v1, v2, c1, c2, locations, include) {\n\t\t\tvar linear1 = Curve.isLinear(v1),\n\t\t\t\tlinear2 = Curve.isLinear(v2),\n\t\t\t\tc1p1 = c1.getPoint1(),\n\t\t\t\tc1p2 = c1.getPoint2(),\n\t\t\t\tc2p1 = c2.getPoint1(),\n\t\t\t\tc2p2 = c2.getPoint2(),\n\t\t\t\ttolerance = 0.000001;\n\t\t\tif (c1p1.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 0, c1p1);\n\t\t\tif (c1p1.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 1, c1p1);\n\t\t\t(linear1 && linear2\n\t\t\t\t? addLineIntersection\n\t\t\t\t: linear1 || linear2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, include,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (c1p2.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 0, c1p2);\n\t\t\tif (c1p2.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 1, c1p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\tfilterIntersections: function(locations, _expand) {\n\t\t\tvar last = locations.length - 1,\n\t\t\t\ttMax = 1 - 0.000001;\n\t\t\tfor (var i = last; i >= 0; i--) {\n\t\t\t\tvar loc = locations[i],\n\t\t\t\t\tnext = loc._curve.getNext(),\n\t\t\t\t\tnext2 = loc._curve2.getNext();\n\t\t\t\tif (next && loc._parameter >= tMax) {\n\t\t\t\t\tloc._parameter = 0;\n\t\t\t\t\tloc._curve = next;\n\t\t\t\t}\n\t\t\t\tif (next2 && loc._parameter2 >= tMax) {\n\t\t\t\t\tloc._parameter2 = 0;\n\t\t\t\t\tloc._curve2 = next2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction compare(loc1, loc2) {\n\t\t\t\tvar path1 = loc1.getPath(),\n\t\t\t\t\tpath2 = loc2.getPath();\n\t\t\t\treturn path1 === path2\n\t\t\t\t\t\t? (loc1.getIndex() + loc1.getParameter())\n\t\t\t\t\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t\t\t: path1._id - path2._id;\n\t\t\t}\n\n\t\t\tif (last > 0) {\n\t\t\t\tlocations.sort(compare);\n\t\t\t\tfor (var i = last; i > 0; i--) {\n\t\t\t\t\tif (locations[i].equals(locations[i - 1])) {\n\t\t\t\t\t\tlocations.splice(i, 1);\n\t\t\t\t\t\tlast--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_expand) {\n\t\t\t\tfor (var i = last; i >= 0; i--)\n\t\t\t\t\tlocations.push(locations[i].getIntersection());\n\t\t\t\tlocations.sort(compare);\n\t\t\t}\n\t\t\treturn locations;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point, _curve2,\n\t\t\t_parameter2, _point2, _distance) {\n\t\tthis._id = CurveLocation._id = (CurveLocation._id || 0) + 1;\n\t\tthis._curve = curve;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t\tthis._parameter = parameter;\n\t\tthis._point = point;\n\t\tthis._curve2 = _curve2;\n\t\tthis._parameter2 = _parameter2;\n\t\tthis._point2 = _point2;\n\t\tthis._distance = _distance;\n\t},\n\n\tgetSegment: function(_preferFirst) {\n\t\tif (!this._segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this.getParameter();\n\t\t\tif (parameter === 1) {\n\t\t\t\tthis._segment = curve._segment2;\n\t\t\t} else if (parameter === 0 || _preferFirst) {\n\t\t\t\tthis._segment = curve._segment1;\n\t\t\t} else if (parameter == null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis._segment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t}\n\t\treturn this._segment;\n\t},\n\n\tgetCurve: function(_uncached) {\n\t\tif (!this._curve || _uncached) {\n\t\t\tthis._curve = this._segment1.getCurve();\n\t\t\tif (this._curve.getParameterOf(this._point) == null)\n\t\t\t\tthis._curve = this._segment2.getPrevious().getCurve();\n\t\t}\n\t\treturn this._curve;\n\t},\n\n\tgetIntersection: function() {\n\t\tvar intersection = this._intersection;\n\t\tif (!intersection && this._curve2) {\n\t\t\tvar param = this._parameter2;\n\t\t\tthis._intersection = intersection = new CurveLocation(\n\t\t\t\t\tthis._curve2, param, this._point2 || this._point, this);\n\t\t\tintersection._intersection = this;\n\t\t}\n\t\treturn intersection;\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetOffset: function() {\n\t\tvar path = this.getPath();\n\t\treturn path ? path._getOffset(this) : this.getCurveOffset();\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetParameter: function(_uncached) {\n\t\tif ((this._parameter == null || _uncached) && this._point) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._parameter = curve && curve.getParameterOf(this._point);\n\t\t}\n\t\treturn this._parameter;\n\t},\n\n\tgetPoint: function(_uncached) {\n\t\tif ((!this._point || _uncached) && this._parameter != null) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._point = curve && curve.getPointAt(this._parameter, true);\n\t\t}\n\t\treturn this._point;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.divide(this.getParameter(true), true);\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.split(this.getParameter(true), true);\n\t},\n\n\tequals: function(loc) {\n\t\tvar abs = Math.abs,\n\t\t\ttolerance = 0.000001;\n\t\treturn this === loc\n\t\t\t\t|| loc\n\t\t\t\t\t&& this._curve === loc._curve\n\t\t\t\t\t&& this._curve2 === loc._curve2\n\t\t\t\t\t&& abs(this._parameter - loc._parameter) <= tolerance\n\t\t\t\t\t&& abs(this._parameter2 - loc._parameter2) <= tolerance\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t}\n}, Base.each(['getTangent', 'getNormal', 'getCurvature'], function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {}));\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, _matrix, _expand) {\n\t\tif (this === path)\n\t\t\tpath = null;\n\t\tvar locations = [],\n\t\t\tcurves1 = this.getCurves(),\n\t\t\tcurves2 = path ? path.getCurves() : curves1,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = path ? (_matrix || path._matrix).orNullIfIdentity()\n\t\t\t\t: matrix1,\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = path ? curves2.length : length1,\n\t\t\tvalues2 = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tif (path && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = path ? curve1.getValues(matrix1) : values2[i];\n\t\t\tif (!path) {\n\t\t\t\tvar seg1 = curve1.getSegment1(),\n\t\t\t\t\tseg2 = curve1.getSegment2(),\n\t\t\t\t\th1 = seg1._handleOut,\n\t\t\t\t\th2 = seg2._handleIn;\n\t\t\t\tif (new Line(seg1._point.subtract(h1), h1.multiply(2), true)\n\t\t\t\t\t\t.intersect(new Line(seg2._point.subtract(h2),\n\t\t\t\t\t\th2.multiply(2), true), false)) {\n\t\t\t\t\tvar parts = Curve.subdivide(values1);\n\t\t\t\t\tCurve.getIntersections(\n\t\t\t\t\t\tparts[0], parts[1], curve1, curve1, locations,\n\t\t\t\t\t\tfunction(loc) {\n\t\t\t\t\t\t\tif (loc._parameter <= tMax) {\n\t\t\t\t\t\t\t\tloc._parameter /= 2;\n\t\t\t\t\t\t\t\tloc._parameter2 = 0.5 + loc._parameter2 / 2;\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var j = path ? 0 : i + 1; j < length2; j++) {\n\t\t\t\tCurve.getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curves2[j], locations,\n\t\t\t\t\t!path && (j === i + 1 || j === length2 - 1 && i === 0)\n\t\t\t\t\t\t&& function(loc) {\n\t\t\t\t\t\t\tvar t = loc._parameter;\n\t\t\t\t\t\t\treturn t >= tMin && t <= tMax;\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Curve.filterIntersections(locations, _expand);\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tif (move && previous && previous !== 'z')\n\t\t\t\t\tthis.closePath(true);\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._clockwise = undefined;\n\t\t\tif (this._curves && !(flags & 16)) {\n\t\t\t\tfor (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t\tthis._monoCurves = undefined;\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\tisPolygon: function() {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif (!this._segments[i].isLinear())\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves || segs._curves) {\n\t\t\tif (!curves)\n\t\t\t\tcurves = this._curves = [];\n\t\t\tvar from = index > 0 ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, this._countCurves());\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves();\n\t\t\tthis._length = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tthis._length += curves[i].getLength();\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar curves = this.getCurves();\n\t\tvar area = 0;\n\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\tarea += curves[i].getArea();\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.evaluate(pos, 0)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (curve.isLinear() && curve.getLength() === 0)\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tolerance = 0.000001;\n\t\tif (parameter >= 1 - tolerance) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter > tolerance) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = this._clone(new Path().insertAbove(this, true));\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn Path.isClockwise(this._segments);\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path.closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\tinterpolate: function(path0, path1, coef) {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif ( !path0._segments[i] || !path1._segments[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._segments[i].interpolate(\n\t\t\t\tpath0._segments[i],\n\t\t\t\tpath1._segments[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\n\t\tthis._changed(9);\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isColinear(i, j) {\n\t\t\treturn segments[i].isColinear(segments[j]);\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\treturn segments[i].isOrthogonal();\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\treturn segments[i].isArc();\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (this.isPolygon() && segments.length === 4\n\t\t\t\t&& isColinear(0, 2) && isColinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isColinear(1, 5) && isColinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t});\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\tshape.setStyle(this._style);\n\t\t\tif (insert || insert === undefined)\n\t\t\t\tshape.insertAbove(this);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\t_getOffset: function(location) {\n\t\tvar index = location && location.getIndex();\n\t\tif (index != null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\toffset = 0;\n\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\toffset += curves[i].getLength();\n\t\t\tvar curve = curves[index],\n\t\t\t\tparameter = location.getParameter();\n\t\t\tif (parameter > 0)\n\t\t\t\toffset += curve.getPartLength(0, parameter);\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset;\n\t\t\treturn curves[index].getLocationAt(offset - index, true);\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}), new function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n}, new function() {\n\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n}, new function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < epsilon)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tisClockwise: function(segments) {\n\t\tvar sum = 0;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsum += Curve.getEdgeSum(Curve.getValues(\n\t\t\t\t\tsegments[i], segments[i + 1 < l ? i + 1 : 0]));\n\t\treturn sum > 0;\n\t},\n\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isColinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().normalize(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tif (this._children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t} else {\n\t\t\treturn reduce.base.call(this);\n\t\t}\n\t},\n\n\tinterpolate: function(compoundpath0, compoundpath1, coef) {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\tif ( !compoundpath0._children[i] || !compoundpath1._children[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._children[i].interpolate(\n\t\t\t\tcompoundpath0._children[i],\n\t\t\t\tcompoundpath1._children[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : mx, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n}, new function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current : new Path();\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tvar operator = operators[operation];\n\t\tfunction preparePath(path) {\n\t\t\treturn path.clone(false).reduce().reorient().transform(null, true,\n\t\t\t\t\ttrue);\n\t\t}\n\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tsplitPath(_path1.getIntersections(_path2, null, true));\n\n\t\tvar chain = [],\n\t\t\tsegments = [],\n\t\t\tmonoCurves = [],\n\t\t\ttolerance = 0.000001;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tsegments.sort(function(a, b) {\n\t\t\tvar _a = a._intersection,\n\t\t\t\t_b = b._intersection;\n\t\t\treturn !_a && !_b || _a && _b ? 0 : _a ? -1 : 1;\n\t\t});\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding != null)\n\t\t\t\tcontinue;\n\t\t\tchain.length = 0;\n\t\t\tvar startSeg = segment,\n\t\t\t\ttotalLength = 0,\n\t\t\t\twindingSum = 0;\n\t\t\tdo {\n\t\t\t\tvar length = segment.getCurve().getLength();\n\t\t\t\tchain.push({ segment: segment, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t\tsegment = segment.getNext();\n\t\t\t} while (segment && !segment._intersection && segment !== startSeg);\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar length = totalLength * (j + 1) / 4;\n\t\t\t\tfor (k = 0, m = chain.length; k < m; k++) {\n\t\t\t\t\tvar node = chain[k],\n\t\t\t\t\t\tcurveLength = node.length;\n\t\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\t\tif (length <= tolerance\n\t\t\t\t\t\t\t\t|| curveLength - length <= tolerance)\n\t\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\t\tvar curve = node.segment.getCurve(),\n\t\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\t\thor = curve.isLinear() && Math.abs(curve\n\t\t\t\t\t\t\t\t\t.getTangentAt(0.5, true).y) <= tolerance,\n\t\t\t\t\t\t\tpath = curve._path;\n\t\t\t\t\t\tif (path._parent instanceof CompoundPath)\n\t\t\t\t\t\t\tpath = path._parent;\n\t\t\t\t\t\twindingSum += operation === 'subtract' && _path2\n\t\t\t\t\t\t\t&& (path === _path1 && _path2._getWinding(pt, hor)\n\t\t\t\t\t\t\t|| path === _path2 && !_path1._getWinding(pt, hor))\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlength -= curveLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar winding = Math.round(windingSum / 3);\n\t\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.insertAbove(path1);\n\t\tresult.addChildren(tracePaths(segments, operator), true);\n\t\tresult = result.reduce();\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction splitPath(intersections) {\n\t\tvar tMin = 0.000001,\n\t\t\ttMax = 1 - tMin,\n\t\t\tlinearHandles;\n\n\t\tfunction resetLinear() {\n\t\t\tfor (var i = 0, l = linearHandles.length; i < l; i++)\n\t\t\t\tlinearHandles[i].set(0, 0);\n\t\t}\n\n\t\tfor (var i = intersections.length - 1, curve, prev; i >= 0; i--) {\n\t\t\tvar loc = intersections[i],\n\t\t\t\tt = loc._parameter;\n\t\t\tif (prev && prev._curve === loc._curve && prev._parameter > 0) {\n\t\t\t\tt /= prev._parameter;\n\t\t\t} else {\n\t\t\t\tcurve = loc._curve;\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tresetLinear();\n\t\t\t\tlinearHandles = curve.isLinear() ? [\n\t\t\t\t\t\tcurve._segment1._handleOut,\n\t\t\t\t\t\tcurve._segment2._handleIn\n\t\t\t\t\t] : null;\n\t\t\t}\n\t\t\tvar newCurve,\n\t\t\t\tsegment;\n\t\t\tif (newCurve = curve.divide(t, true, true)) {\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tcurve = newCurve.getPrevious();\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tlinearHandles.push(segment._handleOut, segment._handleIn);\n\t\t\t} else {\n\t\t\t\tsegment = t < tMin\n\t\t\t\t\t? curve._segment1\n\t\t\t\t\t: t > tMax\n\t\t\t\t\t\t? curve._segment2\n\t\t\t\t\t\t: curve.getPartLength(0, t) < curve.getPartLength(t, 1)\n\t\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tsegment._intersection = loc.getIntersection();\n\t\t\tloc._segment = segment;\n\t\t\tprev = loc;\n\t\t}\n\t\tif (linearHandles)\n\t\t\tresetLinear();\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar tolerance = 0.000001,\n\t\t\ttMin = tolerance,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - tolerance,\n\t\t\t\tyAfter = py + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.evaluate(values, roots[j], 0).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves);\n\t\t} else {\n\t\t\tvar xBefore = px - tolerance,\n\t\t\t\txAfter = px + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding,\n\t\t\t\t\tprevT,\n\t\t\t\t\tprevX;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tx = Curve.evaluate(values, t, 0).x,\n\t\t\t\t\t\tslope = Curve.evaluate(values, t, 1).y;\n\t\t\t\t\tif (!(t > tMax\n\t\t\t\t\t\t\t&& (i === l - 1 || curve.next !== curves[i + 1])\n\t\t\t\t\t\t\t&& abs(Curve.evaluate(curve.next.values, 0, 0).x -x)\n\t\t\t\t\t\t\t\t<= tolerance\n\t\t\t\t\t\t|| i > 0 && curve.previous === curves[i - 1]\n\t\t\t\t\t\t\t&& abs(prevX - x) < tolerance\n\t\t\t\t\t\t\t&& prevT > tMax && t < tMin)) {\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isLinear(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0, 1).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprevT = t;\n\t\t\t\t\tprevX = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction tracePaths(segments, operator, selfOp) {\n\t\tvar paths = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0, seg, startSeg, l = segments.length; i < l; i++) {\n\t\t\tseg = startSeg = segments[i];\n\t\t\tif (seg._visited || !operator(seg._winding))\n\t\t\t\tcontinue;\n\t\t\tvar path = new Path(Item.NO_INSERT),\n\t\t\t\tinter = seg._intersection,\n\t\t\t\tstartInterSeg = inter && inter._segment,\n\t\t\t\tadded = false,\n\t\t\t\tdir = 1;\n\t\t\tdo {\n\t\t\t\tvar handleIn = dir > 0 ? seg._handleIn : seg._handleOut,\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn,\n\t\t\t\t\tinterSeg;\n\t\t\t\tif (added && (!operator(seg._winding) || selfOp)\n\t\t\t\t\t\t&& (inter = seg._intersection)\n\t\t\t\t\t\t&& (interSeg = inter._segment)\n\t\t\t\t\t\t&& interSeg !== startSeg) {\n\t\t\t\t\tif (selfOp) {\n\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar c1 = seg.getCurve();\n\t\t\t\t\t\tif (dir > 0)\n\t\t\t\t\t\t\tc1 = c1.getPrevious();\n\t\t\t\t\t\tvar t1 = c1.getTangentAt(dir < 1 ? tMin : tMax, true),\n\t\t\t\t\t\t\tc4 = interSeg.getCurve(),\n\t\t\t\t\t\t\tc3 = c4.getPrevious(),\n\t\t\t\t\t\t\tt3 = c3.getTangentAt(tMax, true),\n\t\t\t\t\t\t\tt4 = c4.getTangentAt(tMin, true),\n\t\t\t\t\t\t\tw3 = t1.cross(t3),\n\t\t\t\t\t\t\tw4 = t1.cross(t4);\n\t\t\t\t\t\tif (w3 * w4 !== 0) {\n\t\t\t\t\t\t\tvar curve = w3 < w4 ? c3 : c4,\n\t\t\t\t\t\t\t\tnextCurve = operator(curve._segment1._winding)\n\t\t\t\t\t\t\t\t\t? curve\n\t\t\t\t\t\t\t\t\t: w3 < w4 ? c4 : c3,\n\t\t\t\t\t\t\t\tnextSeg = nextCurve._segment1;\n\t\t\t\t\t\t\tdir = nextCurve === c3 ? -1 : 1;\n\t\t\t\t\t\t\tif (nextSeg._visited && seg._path !== nextSeg._path\n\t\t\t\t\t\t\t\t\t\t|| !operator(nextSeg._winding)) {\n\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\t\t\tif (nextSeg._visited)\n\t\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, added && handleIn, handleOut));\n\t\t\t\tadded = true;\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = dir > 0 ? seg.getNext() : seg. getPrevious();\n\t\t\t} while (seg && !seg._visited\n\t\t\t\t\t&& seg !== startSeg && seg !== startInterSeg\n\t\t\t\t\t&& (seg._intersection || operator(seg._winding)));\n\t\t\tif (seg && (seg === startSeg || seg === startInterSeg)) {\n\t\t\t\tpath.firstSegment.setHandleIn((seg === startInterSeg\n\t\t\t\t\t\t? startInterSeg : seg)._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else {\n\t\t\t\tpath.lastSegment._handleOut.set(0, 0);\n\t\t\t}\n\t\t\tif (path._segments.length >\n\t\t\t\t\t(path._closed ? path.isPolygon() ? 2 : 0 : 1))\n\t\t\t\tpaths.push(path);\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn new Group([this.subtract(path), this.intersect(path)]);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isLinear(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttolerance = 0.000001,\n\t\t\t\t\troots = [];\n\t\t\t\tvar count = Numerical.solveQuadratic(a, b, c, roots, tolerance,\n\t\t\t\t\t\t1 - tolerance);\n\t\t\t\tif (count === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.evaluate(values, roots[j], 0).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 0.000001) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tevaluate: function(offset, type) {\n\t\tvar param = this.getParameterAt(offset);\n\t\treturn Curve.evaluate(this.curves[param.index], param.value, type);\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\treturn this.evaluate(offset, index);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tthis.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1);\n\t\tepsilon *= segLength;\n\t\tif (alpha1 < epsilon || alpha2 < epsilon) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t}\n\n\t\treturn [pt1, pt1.add(tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 0.000001)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tvalue = parser.call(this, value);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tthis._components[index] = value;\n\t\t\t\t\tthis._changed();\n\t\t\t\t}\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type];\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tif (type === 'gradient')\n\t\t\t\tthis._id = Color._id = (Color._id || 0) + 1;\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n}, new function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nBase.each(Color._types, function(properties, type) {\n\tvar ctor = this[Base.capitalize(type) + 'Color'] = function(arg) {\n\t\t\tvar argType = arg != null && typeof arg,\n\t\t\t\tcomponents = argType === 'object' && arg.length != null\n\t\t\t\t\t? arg\n\t\t\t\t\t: argType === 'string'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: arguments;\n\t\t\treturn components\n\t\t\t\t\t? new Color(type, components)\n\t\t\t\t\t: new Color(arg);\n\t\t};\n\tif (type.length == 3) {\n\t\tvar acronym = type.toUpperCase();\n\t\tColor[acronym] = this[acronym + 'Color'] = ctor;\n\t}\n}, Base.exports);\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = Gradient._id = (Gradient._id || 0) + 1;\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = typeof window === 'object' &&\n\t\t\tDomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tif ( typeof window === 'object' ) {\n\t\tDomEvent.add(window, {\n\t\t\tfocus: function() {\n\t\t\t\tfocused = true;\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tfocused = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif ( !noCanvas ) {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchAction: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\tuserDrag: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\n\t\t\tfunction getSize(name) {\n\t\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t\t}\n\n\t\t\tfunction getCanvasSize() {\n\t\t\t\tvar size = DomElement.getSize(element);\n\t\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t\t: size;\n\t\t\t}\n\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._setViewSize(size = getCanvasSize());\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = 1;\n\t\t\tthis._id = 'view-' + View._id++;\n\t\t\tsize = new Size(element.width, element.height);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: {\n\t\tonFrame: {\n\t\t\tinstall: function() {\n\t\t\t\tthis.play();\n\t\t\t},\n\n\t\t\tuninstall: function() {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t},\n\n\t\tonResize: {}\n\t},\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n}, new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif ( !noCanvas ) {\n\t\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tif (size.isZero())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t\t}\n\t\t\tthis._context = canvas.getContext('2d');\n\t\t}\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!noCanvas && !/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font;\n\t\tctx.font = size + ' serif';\n\t\tsize = parseFloat(ctx.font);\n\t\tctx.font = prevFont;\n\t\treturn size;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function() {\n\t\tvar project = this._project;\n\t\tif (!project || !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n}, new function() {\n\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers)\n\t\t\tmodifiers[name] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = this._minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = distance;\n\t\tthis._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tvar maxDist = maxDistance != null ? maxDistance : 0;\n\t\t\t\tif (maxDist != 0) {\n\t\t\t\t\tif (distance > maxDist) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDist));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback) {\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, true);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif ( noCanvas ) {\n\t\t\treturn { getContext: function() {} };\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tif (options.matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (item.isPolygon()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (applyMatrix && item)\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n\n},{}],3:[function(require,module,exports){\nfunction Collection( args ) {\n\t// already a Collection? Job's done\n\tif ( arguments.length === 1 && args instanceof Collection ) {\n\t\treturn args;\n\n\t} else if ( arguments.length > 1 || !Array.isArray( args ) ) {\n\t\targs = [].slice.call( arguments, 0 );\n\t}\n\n\tthis.length = 0;\n\n\targs.forEach(function( arg ) {\n\t\t// unwrap any collection\n\t\tif ( arg instanceof Collection ) {\n\t\t\tfor ( var i = -1; ++i < arg.length; ) {\n\t\t\t\tthis[this.length++] = arg[i];\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis[this.length++] = arg;\n\t\t}\n\n\t}, this);\n\n\treturn this;\n}\n\nCollection.prototype.forEach = function(cb, scope) {\n\tfor ( var i = -1; ++i < this.length; ) {\n\t\tcb.call(scope || this[i], this[i], i, this);\n\t}\n\n\treturn this;\n};\n\nCollection.prototype.prop = function(name, val) {\n\tvar i;\n\n\t// object setter\n\tif ( typeof name === 'object' ) {\n\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\tthis[i].set( name );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// getter\n\tif ( val === undefined ) {\n\t\treturn this[0][name];\n\t}\n\n\t// simple setter\n\tfor ( i = -1; ++i < this.length; ) {\n\t\tthis[i][name] = val;\n\t}\n\n\treturn this;\n};\n\nfunction wrapConstructor( constructor, prototype, useConstructed ) {\n\treturn function wrapper() {\n\t\tvar c,\n\t\t\ttmp,\n\t\t\tarr = [];\n\n\t\t// constructor used with new\n\t\tif ( this instanceof wrapper ) {\n\t\t\t// proxy to paper native constructor\n\t\t\tc = Object.create(prototype);\n\t\t\ttmp = constructor.apply(c, arguments);\n\t\t\treturn useConstructed ?\n\t\t\t\ttmp : c;\n\n\t\t// without new, build a collection\n\t\t} else {\n\t\t\tif ( Array.isArray( arguments[0] ) ) {\n\t\t\t\targuments[0].forEach(function(params, i) {\n\t\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\t\tc = constructor.call( arr[i], params );\n\t\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\t\tarr[i] = c;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\tc = constructor.apply( arr[0], arguments );\n\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\tarr[0] = c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Collection( arr );\n\t\t}\n\t};\n}\n\nvar rconstructor = /(^|\\.)[A-Z][A-z]+$/;\nfunction constructorFilter( name ) {\n\treturn typeof this[name] === 'function' && rconstructor.test(name);\n}\n\n// unwrap a collection or array of collection\nfunction unwrapArg( arr, id, isPlural ) {\n\t// unwrap a single collection\n\tif ( arr && arr[id] instanceof Collection ) {\n\t\tarr[id] = isPlural ?\n\t\t\t[].slice.call( arr[id], 0 ) :\n\t\t\tarr[id][0];\n\n\t// unwrap an array of collection\n\t} else if ( arr && arr[id].length && arr[id][0] instanceof Collection ) {\n\t\tfor ( var i = -1; ++i < arr[id].length; ) {\n\t\t\tarr[id][i] = arr[id][i][0];\n\t\t}\n\t}\n}\n\nfunction unwrapArgs() {\n\tvar isPlural = this.isPlural,\n\t\targs = [].slice.call( arguments, 0 ),\n\t\tid,\n\t\ti;\n\n\t// first arg is an object and might have a collection or array of collection\n\t// Todo: objects should be unwrapped recursively\n\tif ( args[0] && args[0].constructor === Object ) {\n\t\tif ( 'children' in args[0] ) {\n\t\t\tid = 'children';\n\n\t\t} else if ( 'segments' in args[0] ) {\n\t\t\tid = 'segments';\n\n\t\t} else if ( 'nodes' in args[0] ) {\n\t\t\tid = 'nodes';\n\t\t}\n\n\t\tunwrapArg( args[0], id, true );\n\n\t// otherwise unwrap each arg\n\t} else {\n\t\tfor ( i = -1; ++i < args.length; ) {\n\t\t\t// if the method is plural (addChildren) and we're unwrapping\n\t\t\t// the last argument, we want to keep it in an array\n\t\t\tunwrapArg( args, i, i === args.length - 1 && isPlural );\n\t\t}\n\t}\n\n\treturn args;\n}\n\nCollection.proxy = function( paper ) {\n\tvar plumin = this;\n\n\tplumin.paper = paper;\n\n\tvar methodNames = {};\n\tObject.getOwnPropertyNames( paper.PaperScope.prototype )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype )\n\t\t.forEach(function(name) {\n\t\t\tplumin[name] = wrapConstructor( this[name], this[name].prototype );\n\n\t\t\t// we don't want to proxy methods of Collection\n\t\t\tif ( name === 'Collection' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tObject.getOwnPropertyNames( this[name].prototype )\n\t\t\t\t.forEach(function(_name) {\n\t\t\t\t\t// collect unique method names (first test avoids getters)\n\t\t\t\t\tif ( !Object.getOwnPropertyDescriptor(this, _name).get &&\n\t\t\t\t\t\t\ttypeof this[_name] === 'function' ) {\n\n\t\t\t\t\t\tmethodNames[_name] = true;\n\t\t\t\t\t}\n\n\t\t\t\t}, this[name].prototype);\n\n\t\t}, paper.PaperScope.prototype);\n\n\tObject.keys( paper.PaperScope.prototype.Path )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Path )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Path[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Path );\n\n\tObject.keys( paper.PaperScope.prototype.Shape )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Shape )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Shape[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Shape );\n\n\t// proxy the most commonly used method of paper\n\t// do it only after proxying constructors otherwise it's overwritten\n\tplumin.setup = paper.setup.bind(paper);\n\n\t// proxy all methods from every constructor\n\t// by default methods aren't chainable\n\tObject.keys( methodNames ).sort().forEach(function(name) {\n\t\t// please oh please, don't overwrite my constructor, I need it.\n\t\tif ( name === 'constructor' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(null, arguments),\n\t\t\t\ti,\n\t\t\t\tresult;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tresult = this[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// by default methods aren't chainable\n\t\t\t// return the last result\n\t\t\treturn result;\n\t\t};\n\t});\n\n\t\t// addChild( item ) and other methods with similar signatures\n\t\t// that we want to make chainable\n\tvar chain = [\n\t\t\t'set',\n\t\t\t'setX',\n\t\t\t'setY',\n\t\t\t'insertAbove',\n\t\t\t'insertBelow',\n\t\t\t'sendToBack',\n\t\t\t'bringToFront',\n\t\t\t'remove',\n\t\t\t'removeChildren',\n\t\t\t'reverseChildren',\n\n\t\t\t'translate',\n\t\t\t'rotate',\n\t\t\t'scale',\n\t\t\t'shear',\n\t\t\t'skew',\n\t\t\t'transform',\n\t\t\t'fitBounds',\n\t\t\t'emit',\n\n\t\t\t'activate',\n\n\t\t\t'setPixel',\n\n\t\t\t'smooth',\n\t\t\t'moveTo',\n\t\t\t'lineTo',\n\t\t\t'cubicCurveTo',\n\t\t\t'quadraticCurveTo',\n\t\t\t'curveTo',\n\t\t\t'arcTo',\n\t\t\t'closePath',\n\t\t\t'moveBy',\n\t\t\t'lineBy',\n\t\t\t'cubicCurveBy',\n\t\t\t'quadraticCurveBy',\n\t\t\t'curveBy',\n\t\t\t'arcBy',\n\n\t\t\t'removeSegments',\n\t\t\t'simplify',\n\t\t\t'reverse',\n\n\t\t\t// Rectangle\n\t\t\t'include',\n\t\t\t'expand',\n\t\t\t'scale',\n\t\t// ],\n\t\t// createAndChain = [\n\t\t\t'addChild',\n\t\t\t'insertChild',\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'replaceWith',\n\n\t\t\t'appendTop',\n\t\t\t'appendBottom',\n\n\t\t\t'add',\n\t\t\t'insert',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNode',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\n\t\t\t'addGlyph',\n\t\t\t'addGlyphs',\n\n\t\t\t'addContour',\n\t\t\t'insertContour',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addAnchor',\n\t\t\t'addAnchors',\n\t\t\t'addComponent',\n\t\t\t'addComponents',\n\n\t\t\t'addUnicode',\n\t\t\t'prepareOt',\n\t\t\t'addToFonts',\n\t\t\t'download'\n\t\t],\n\t\tplural = [\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\t\t\t'addGlyphs',\n\t\t\t'addAnchors',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addComponents'\n\t\t]/*,\n\t\tmathPoinFn = [\n\t\t\t'round',\n\t\t\t'ceil',\n\t\t\t'floor',\n\t\t\t'abs'\n\t\t],\n\t\tbooleanPathOp = [\n\t\t\t'unite',\n\t\t\t'intersect',\n\t\t\t'subtract',\n\t\t\t'exclude',\n\t\t\t'divide'\n\t\t]*/;\n\n\tchain.forEach(function(name) {\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(\n\t\t\t\t\t{ isPlural: plural.indexOf(name) !== -1 },\n\t\t\t\t\targuments\n\t\t\t\t),\n\t\t\t\ti;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tthis[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// make method chainable\n\t\t\treturn this;\n\t\t};\n\t});\n\n\t// singular chainable method\n};\n\nmodule.exports = Collection;\n\n},{}],4:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tGlyph = require('./Glyph.js');\n\nfunction Font( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\tif ( !args ) {\n\t\targs = {};\n\t}\n\n\tif ( !args.styleName ) {\n\t\targs.styleName = 'Regular';\n\t}\n\n\tif ( !args.unitsPerEm ) {\n\t\targs.unitsPerEm = 1024;\n\t}\n\n\tthis.ot = new opentype.Font( args );\n\n\tthis.glyphMap = {};\n\tthis.charMap = {};\n\tthis.altMap = {};\n\tthis._subset = false;\n\n\tthis.addGlyph(new Glyph({\n\t\tname: '.notdef',\n\t\tunicode: 0\n\t}));\n\n\tif ( args && args.glyphs ) {\n\t\tthis.addGlyphs( args.glyphs );\n\t}\n\n\tif ( typeof window === 'object' && window.document ) {\n\t\t// work around https://bugzilla.mozilla.org/show_bug.cgi?id=1100005\n\t\t// by using fonts.delete in batch, every 1 second\n\t\tif ( document.fonts ) {\n\t\t\tthis.addedFonts = [];\n\n\t\t\tsetInterval(function() {\n\t\t\t\twhile ( this.addedFonts.length > 1 ) {\n\t\t\t\t\tdocument.fonts.delete( this.addedFonts.shift() );\n\t\t\t\t}\n\t\t\t}.bind(this), 1000);\n\n\t\t} else {\n\t\t\tdocument.head.appendChild(\n\t\t\t\tthis.styleElement = document.createElement('style')\n\t\t\t);\n\t\t\t// let's find the corresponding CSSStyleSheet\n\t\t\t// (would be much easier with Array#find)\n\t\t\tthis.styleSheet = document.styleSheets[\n\t\t\t\t[].map.call(document.styleSheets, function(ss) {\n\t\t\t\t\treturn ss.ownerNode;\n\t\t\t\t}).indexOf(this.styleElement)\n\t\t\t];\n\t\t}\n\t}\n}\n\nFont.prototype = Object.create(paper.Group.prototype);\nFont.prototype.constructor = Font;\n\n// proxy .glyphs to .children\n// Todo: handle unicode updates\nObject.defineProperty(\n\tFont.prototype,\n\t'glyphs',\n\tObject.getOwnPropertyDescriptor( paper.Item.prototype, 'children' )\n);\n\n// TODO: proper proxying of ...Glyph[s] methods to ...Child[ren] methods\n// see Glyph.js\nFont.prototype.addGlyph = function( glyph ) {\n\tthis.addChild( glyph );\n\tthis.glyphMap[glyph.name] = glyph;\n\n\tif ( glyph.ot.unicode === undefined ) {\n\t\treturn glyph;\n\t}\n\n\t// build the default cmap\n\t// if multiple glyphs share the same unicode, use the glyph where unicode\n\t// and name are equal\n\tif ( !this.charMap[glyph.ot.unicode] ||\n\t\t\t( glyph.name.length === 1 &&\n\t\t\t\tglyph.name.charCodeAt(0) === glyph.ot.unicode ) ) {\n\n\t\tthis.charMap[glyph.ot.unicode] = glyph;\n\t}\n\n\t// build the alternates map\n\tif ( !this.altMap[glyph.ot.unicode] ) {\n\t\tthis.altMap[glyph.ot.unicode] = [];\n\t}\n\tthis.altMap[glyph.ot.unicode].push( glyph );\n\n\t// invalidate glyph subset cache\n\t// TODO: switch to immutable.js to avoid this maddness\n\tthis._lastSubset = undefined;\n\n\treturn glyph;\n};\n\nFont.prototype.addGlyphs = function( glyphs ) {\n\treturn glyphs.forEach(function( glyph ) {\n\t\tthis.addGlyph(glyph);\n\n\t}, this);\n};\n\nObject.defineProperty( Font.prototype, 'subset', {\n\tget: function() {\n\t\treturn this._subset;\n\t},\n\tset: function( set ) {\n\t\tthis._subset = set === false ?\n\t\t\tfalse : Font.normalizeSubset( set );\n\n\t\treturn this._subset;\n\t}\n});\n\nFont.prototype.getGlyphSubset = function( set ) {\n\tif ( set === true ) {\n\t\treturn this.children;\n\t}\n\n\tset = set !== undefined ?\n\t\tFont.normalizeSubset( set ) :\n\t\tthis._subset;\n\n\t// reuse last subset if possible\n\t// TODO: implement caching using immutable.js\n\tif ( this._lastSubset &&\n\t\t\tthis._lastSubset[0] === ( this._subset || [] ).join() ) {\n\n\t\treturn this._lastSubset[1];\n\t}\n\n\t// memoize last subset\n\tthis._lastSubset = [\n\t\t( this._subset || [] ).join(),\n\t\tthis.children.filter(function( glyph ) {\n\t\t\tif ( this._subset === false &&\n\t\t\t\t\t( glyph.ot.unicode !== undefined ||\n\t\t\t\t\t( glyph.ot.unicodes && glyph.ot.unicodes.length ) ) ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( this._subset &&\n\t\t\t\t\tthis._subset.indexOf( glyph.ot.unicode ) !== -1 ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// TODO: handle multiple unicodes\n\t\t\treturn false;\n\n\t\t}, this)\n\t];\n\n\treturn this._lastSubset[1];\n};\n\nFont.prototype.interpolate = function( font0, font1, coef, set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\tglyph.interpolate(\n\t\t\tfont0.glyphMap[glyph.name],\n\t\t\tfont1.glyphMap[glyph.name],\n\t\t\tcoef\n\t\t);\n\t});\n\n\t// TODO: evaluate if taking subsetting into account makes kerning\n\t// interpolation faster or slower.\n\tif ( this.ot.kerningPairs ) {\n\t\tfor ( var i in this.ot.kerningPairs ) {\n\t\t\tthis.ot.kerningPairs[i] =\n\t\t\t\tfont0.ot.kerningPairs[i] +\n\t\t\t\t( font1.ot.kerningPairs[i] - font0.ot.kerningPairs[i] ) * coef;\n\t\t}\n\t}\n\n\tthis.ot.ascender =\n\t\tfont0.ot.ascender + ( font1.ot.ascender - font0.ot.ascender ) * coef;\n\tthis.ot.descender =\n\t\tfont0.ot.descender + ( font1.ot.descender - font0.ot.descender ) * coef;\n\n\treturn this;\n};\n\nFont.prototype.updateSVGData = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateSVGData();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.updateOTCommands = function( set ) {\n\tthis.ot.glyphs = this.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateOTCommands();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.importOT = function( otFont ) {\n\tthis.ot = otFont;\n\n\totFont.glyphs.forEach(function( otGlyph ) {\n\t\tvar glyph = new Glyph({\n\t\t\t\tname: otGlyph.name,\n\t\t\t\tunicode: otGlyph.unicode\n\t\t\t});\n\n\t\tthis.addGlyph( glyph );\n\t\tglyph.importOT( otGlyph );\n\n\t}, this);\n\n\treturn this;\n};\n\nif ( typeof window === 'object' && window.document ) {\n\n\tvar _URL = window.URL || window.webkitURL;\n\tFont.prototype.addToFonts = document.fonts ?\n\t\t// CSS font loading, lightning fast\n\t\tfunction( buffer ) {\n\t\t\tvar fontface = new window.FontFace(\n\t\t\t\tthis.ot.familyName,\n\t\t\t\tbuffer || this.ot.toBuffer()\n\t\t\t);\n\n\t\t\tdocument.fonts.add( fontface );\n\t\t\tthis.addedFonts.push( fontface );\n\n\t\t\treturn this;\n\t\t} :\n\t\tfunction( buffer ) {\n\t\t\tvar url = _URL.createObjectURL(\n\t\t\t\t\tnew Blob(\n\t\t\t\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t\t\t\t{ type: 'font/opentype' }\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tif ( this.fontObjectURL ) {\n\t\t\t\t_URL.revokeObjectURL( this.fontObjectURL );\n\t\t\t\tthis.styleSheet.deleteRule(0);\n\t\t\t}\n\n\t\t\tthis.styleSheet.insertRule(\n\t\t\t\t'@font-face { font-family: \"' + this.ot.familyName + '\";' +\n\t\t\t\t'src: url(' + url + '); }',\n\t\t\t\t0\n\t\t\t);\n\t\t\tthis.fontObjectURL = url;\n\n\t\t\treturn this;\n\t\t};\n\n\tFont.prototype.download = function( buffer ) {\n\t\tvar reader = new FileReader();\n\n\t\treader.onloadend = function() {\n\t\t\twindow.location = reader.result;\n\t\t};\n\n\t\treader.readAsDataURL(new Blob(\n\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t{ type: 'font/opentype' }\n\t\t));\n\n\t\treturn this;\n\t};\n\n}\n\nFont.normalizeSubset = function( set ) {\n\treturn ( typeof set === 'string' ?\n\t\t\tset.split('').map(function(e) {\n\t\t\t\treturn e.charCodeAt(0);\n\t\t\t}) :\n\t\t\tset\n\t\t)\n\t\t.filter(function(e, i, arr) {\n\t\t\treturn arr.lastIndexOf(e) === i;\n\t\t})\n\t\t.sort();\n};\n\nmodule.exports = Font;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Glyph.js\":5}],5:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tOutline = require('./Outline.js');\n\nfunction Glyph( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\tif ( args && typeof args.unicode === 'string' ) {\n\t\targs.unicode = args.unicode.charCodeAt(0);\n\t}\n\n\tthis.ot = new opentype.Glyph( args );\n\tthis.ot.path = new opentype.Path();\n\n\tthis.name = args.name;\n\t// workaround opentype 'unicode === 0' bug\n\tthis.ot.unicode = args.unicode;\n\n\tthis.addChild( new Outline() );\n\t// the second child will hold all components\n\tthis.addChild( new paper.Group() );\n\t// Should all anchors and parentAnchors also leave in child groups?\n\tthis.anchors = ( args && args.anchors ) || [];\n\tthis.parentAnchors = ( args && args.parentAnchors ) || [];\n\n\t// each individual glyph must be explicitely made visible\n\tthis.visible = false;\n\t// required to display the glyph properly in a canvas\n\tthis.fillColor = this.strokeColor = new paper.Color(0, 0, 0);\n\tthis.strokeScaling = false;\n}\n\nGlyph.prototype = Object.create(paper.Group.prototype);\nGlyph.prototype.constructor = Glyph;\n\n// Todo: handle unicode updates\nObject.defineProperty(Glyph.prototype, 'unicode', {\n\tset: function( code ) {\n\t\tthis.ot.unicode = typeof code === 'string' ?\n\t\t\tcode.charCodeAt(0) :\n\t\t\tcode;\n\t},\n\tget: function() {\n\t\treturn this.ot.unicode;\n\t}\n});\n\n// proxy .contours to .children[0]\nObject.defineProperty( Glyph.prototype, 'contours', {\n\tget: function() {\n\t\treturn this.children[0].children;\n\t}\n});\n\n// proxy .components to .children[1]\nObject.defineProperty( Glyph.prototype, 'components', {\n\tget: function() {\n\t\treturn this.children[1].children;\n\t}\n});\n\n// proxy .visible to\n\n// proxy ...Contour[s] methods to children[0]...Child[ren] methods\n// and proxy ...Component[s] methods to children[1]...Child[ren] methods\nObject.getOwnPropertyNames( paper.Item.prototype ).forEach(function(name) {\n\tvar proto = this;\n\n\t// exclude getters and non-methods\n\tif ( Object.getOwnPropertyDescriptor(proto, name).get ||\n\t\t\ttypeof proto[name] !== 'function' ) {\n\t\treturn;\n\t}\n\n\tif ( name.indexOf('Children') !== -1 ) {\n\t\tproto[name.replace('Children', 'Contours')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Children', 'Components')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\n\t} else if ( name.indexOf('Child') !== -1 ) {\n\t\tproto[name.replace('Child', 'Contour')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Child', 'Component')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\t}\n\n}, paper.Item.prototype);\n\nGlyph.prototype.addAnchor = function( item ) {\n\tthis.anchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addAnchors = function( anchors ) {\n\treturn anchors.forEach(function(anchor) {\n\t\tthis.addAnchor(anchor);\n\t}, this);\n};\n\nGlyph.prototype.addParentAnchor = function( item ) {\n\tthis.parentAnchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addUnicode = function( code ) {\n\tthis.ot.addUnicode( code );\n\n\treturn this;\n};\n\nGlyph.prototype.interpolate = function( glyph0, glyph1, coef ) {\n\t// If we added an interpolate method to Group, we'd be able to just\n\t// interpolate all this.children directly.\n\t// instead we interpolate the outline first\n\tthis.children[0].interpolate( glyph0.children[0], glyph1.children[0] );\n\t// and then the components\n\tthis.children[1].children.forEach(function(component, j) {\n\t\tcomponent.interpolate(\n\t\t\tglyph0.children[1].children[j], glyph1.children[1].children[j], coef\n\t\t);\n\t});\n\n\tthis.ot.advanceWidth =\n\t\tglyph0.ot.advanceWidth +\n\t\t( glyph1.ot.advanceWidth - glyph0.ot.advanceWidth ) * coef;\n\tthis.ot.leftSideBearing =\n\t\tglyph0.ot.leftSideBearing +\n\t\t( glyph1.ot.leftSideBearing - glyph0.ot.leftSideBearing ) * coef;\n\tthis.ot.xMax =\n\t\tglyph0.ot.xMax + ( glyph1.ot.xMax - glyph0.ot.xMax ) * coef;\n\tthis.ot.xMin =\n\t\tglyph0.ot.xMin + ( glyph1.ot.xMin - glyph0.ot.xMin ) * coef;\n\tthis.ot.yMax =\n\t\tglyph0.ot.yMax + ( glyph1.ot.yMax - glyph0.ot.yMax ) * coef;\n\tthis.ot.yMin =\n\t\tglyph0.ot.yMin + ( glyph1.ot.yMin - glyph0.ot.yMin ) * coef;\n\n\treturn this;\n};\n\nGlyph.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children[0].updateSVGData( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateSVGData( path );\n\t});\n\n\treturn this.svgData;\n};\n\nGlyph.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.children[0].updateOTCommands( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateOTCommands( path );\n\t});\n\n\treturn this.ot;\n};\n\nGlyph.prototype.importOT = function( otGlyph ) {\n\tvar current;\n\tthis.ot = otGlyph;\n\n\tif ( !otGlyph.path || !otGlyph.path.commands ) {\n\t\treturn this;\n\t}\n\n\tthis.ot.path.commands.forEach(function(command) {\n\t\tswitch ( command.type ) {\n\t\t\tcase 'M':\n\t\t\t\tcurrent = new paper.Path();\n\t\t\t\tthis.addContour( current );\n\n\t\t\t\tcurrent.moveTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tcurrent.lineTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tcurrent.cubicCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\t[ command.x2, command.y2 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tcurrent.quadraticCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\t// When the glyph has no contour,\n\t\t\t\t// they contain a single Z command in\n\t\t\t\t// opentype.js.\n\t\t\t\t// TODO: see how we should handle that\n\t\t\t\tif ( current ) {\n\t\t\t\t\tcurrent.closePath();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}, this);\n\n\treturn this;\n};\n\nmodule.exports = Glyph;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Outline.js\":7}],6:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nObject.defineProperty( paper.Segment.prototype, 'x', {\n\tget: function() {\n\t\treturn this.point.x;\n\t},\n\tset: function( value ) {\n\t\tthis.point.x = value;\n\t}\n});\n\nObject.defineProperty( paper.Segment.prototype, 'y', {\n\tget: function() {\n\t\treturn this.point.y;\n\t},\n\tset: function( value ) {\n\t\tthis.point.y = value;\n\t}\n});\n\nmodule.exports = paper.Segment;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],7:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nfunction Outline() {\n\tpaper.CompoundPath.prototype.constructor.apply( this );\n}\n\n// inehrit CompoundPath\nOutline.prototype = Object.create(paper.CompoundPath.prototype);\nOutline.prototype.constructor = Outline;\n\n// Fix two problems with CompoundPath#insertChildren:\n// - it arbitrarily changes the direction of paths\n// - it seems that it doesn't handle CompoundPath arguments\nOutline.prototype.insertChildren = function(index, items, _preserve) {\n\tif ( Array.isArray( items ) ) {\n\t\t// flatten items to handle CompoundPath children\n\t\titems = [].concat.apply([], items.map(function(item) {\n\t\t\treturn item instanceof paper.Path ? item : item.children;\n\t\t}));\n\t}\n\n\treturn paper.Item.prototype.insertChildren.call(\n\t\tthis, index, items, _preserve, paper.Path\n\t);\n};\n\nOutline.prototype.interpolate = function( outline0, outline1, coef ) {\n\tfor (var i = 0, l = this.contours.length; i < l; i++) {\n\t\t// The number of children should be the same everywhere,\n\t\t// but we're going to try our best anyway\n\t\tif ( !outline0.children[i] || !outline1.children[i] ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.children[i].interpolate(\n\t\t\toutline0.children[i],\n\t\t\toutline1.children[i],\n\t\t\tcoef\n\t\t);\n\t}\n\n\treturn this;\n};\n\nOutline.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateSVGData( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.svgData;\n};\n\nOutline.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateOTCommands( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.ot;\n};\n\nmodule.exports = Outline;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],8:[function(require,module,exports){\n/* Extend the Path prototype to add OpenType conversion\n * and alias *segments methods and properties to *nodes\n */\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nvar proto = paper.PaperScope.prototype.Path.prototype;\n\n// alias *Segments methods to *Nodes equivalents\n[ 'add', 'insert', 'remove' ].forEach(function(name) {\n\tproto[name + 'Nodes'] =\n\t\tproto[name + 'Segments'];\n});\n\n// alias .segments to .nodes\nObject.defineProperties(proto, {\n\tnodes: Object.getOwnPropertyDescriptor( proto, 'segments' ),\n\tfirstNode: Object.getOwnPropertyDescriptor( proto, 'firstSegment' ),\n\tlastNode: Object.getOwnPropertyDescriptor( proto, 'lastSegment' )\n});\n\nproto._updateData = function( data, matrix, pushSimple, pushBezier ) {\n\tif ( this.visible === false ) {\n\t\treturn data;\n\t}\n\n\t// prototypo needs to be able to change the direction of the updated data.\n\tvar reverse = ( this.export === 'clockwise' && !this.clockwise ) ||\n\t\t\t( this.export === 'anticlockwise' && this.clockwise ),\n\t\tcurves = this.curves,\n\t\tstart = curves[ reverse ? curves.length - 1 : 0 ]\n\t\t\t[ 'point' + ( reverse ? 2 : 1 ) ]\n\t\t\t.transform( matrix );\n\n\tpushSimple(\n\t\t'M',\n\t\tMath.round( start.x ) || 0,\n\t\tMath.round( start.y ) || 0\n\t);\n\n\tfor ( var i = -1, l = curves.length; ++i < l; ) {\n\t\tvar curve = curves[ reverse ? l - 1 - i : i ],\n\t\t\tend = curve['point' + ( reverse ? 1 : 2 ) ].transform( matrix );\n\n\t\tif ( curve.isLinear() ) {\n\t\t\tpushSimple(\n\t\t\t\t'L',\n\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\tMath.round( end.y ) || 0\n\t\t\t);\n\n\t\t} else {\n\t\t\tvar ctrl1 = new paper.Point(\n\t\t\t\t\tcurve.point1.x + curve.handle1.x,\n\t\t\t\t\tcurve.point1.y + curve.handle1.y\n\t\t\t\t).transform( matrix ),\n\t\t\t\tctrl2 = new paper.Point(\n\t\t\t\t\tcurve.point2.x + curve.handle2.x,\n\t\t\t\t\tcurve.point2.y + curve.handle2.y\n\t\t\t\t).transform( matrix );\n\n\t\t\tif ( reverse ) {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( this.closed ) {\n\t\tpushSimple('Z');\n\t}\n\n\treturn data;\n};\n\nproto.updateOTCommands = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx: arguments[1],\n\t\t\t\ty: arguments[2]\n\t\t\t});\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx1: arguments[1],\n\t\t\t\ty1: arguments[2],\n\t\t\t\tx2: arguments[3],\n\t\t\t\ty2: arguments[4],\n\t\t\t\tx: arguments[5],\n\t\t\t\ty: arguments[6]\n\t\t\t});\n\t\t}\n\t);\n};\n\nproto.updateSVGData = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t}\n\t);\n};\n\nmodule.exports = paper.Path;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],9:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tFont = require('./Font.js'),\n\tGlyph = require('./Glyph.js'),\n\tOutline = require('./Outline'),\n\tPath = require('./Path.js'),\n\tNode = require('./Node.js'),\n\tCollection = require('./Collection.js');\n\npaper.PaperScope.prototype.Font = Font;\npaper.PaperScope.prototype.Glyph = Glyph;\npaper.PaperScope.prototype.Outline = Outline;\npaper.PaperScope.prototype.Path = Path;\npaper.PaperScope.prototype.Node = Node;\npaper.PaperScope.prototype.Collection = Collection;\n\nfunction plumin( arg ) {\n\tif ( arguments.length === 1 && arg instanceof Collection ) {\n\t\treturn arg;\n\t}\n\n\tvar c = Object.create( Collection.prototype );\n\tCollection.apply( c, arguments );\n\treturn c;\n}\n\nplumin.opentype = opentype;\n\nplumin.proxy = Collection.proxy.bind(plumin);\nplumin.proxy(paper);\n\nmodule.exports = plumin;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Collection.js\":3,\"./Font.js\":4,\"./Glyph.js\":5,\"./Node.js\":6,\"./Outline\":7,\"./Path.js\":8}]},{},[9,2])(9)\n});\n\n\n//# sourceMappingURL=plumin.js.map","var plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tDepTree = require('../node_modules/deptree/index.js'),\n\tupdateUtils = require('./updateUtils.js'),\n\tclone = require('lodash.clone');\n\nvar paper = plumin.paper,\n\tUtils = updateUtils,\n\t_ = { clone: clone };\n\n// convert the glyph source from the ufo object model to the paper object model\n// this is the inverse operation done by jsufonify\nUtils.ufoToPaper = function( src ) {\n\tif ( src.parameter ) {\n\t\tsrc.parameters = src.parameter;\n\t\tdelete src.parameter;\n\t}\n\n\tif ( src.anchor ) {\n\t\tsrc.anchors = src.anchor;\n\t\tdelete src.anchor;\n\t}\n\n\tif ( src.outline && src.outline.contour ) {\n\t\tsrc.contours = src.outline.contour;\n\t\tdelete src.outline.contour;\n\t}\n\n\tsrc.contours.forEach(function(contour) {\n\t\tif ( contour.point ) {\n\t\t\tcontour.nodes = contour.point;\n\t\t\tdelete contour.point;\n\t\t}\n\t});\n\n\tif ( src.outline && src.outline.component ) {\n\t\tsrc.components = src.outline.component;\n\n\t\tsrc.components.forEach(function(component) {\n\t\t\tif ( component.anchor ) {\n\t\t\t\tcomponent.parentAnchors = component.anchor;\n\t\t\t\tdelete component.anchor;\n\t\t\t}\n\n\t\t\tif ( component.parameter ) {\n\t\t\t\tcomponent.parentParameters = component.parameter;\n\t\t\t\tdelete component.parameter;\n\t\t\t}\n\t\t});\n\n\t\tdelete src.outline.component;\n\t}\n\n\tdelete src.outline;\n\n\tif ( src.lib && src.lib.transformList ) {\n\t\tsrc.transformList = src.lib.transformList;\n\t\tdelete src.lib.transformList;\n\t}\n\n\tif ( src.lib && src.lib.solvingOrder ) {\n\t\tsrc.solvingOrder = src.lib.solvingOrder;\n\t\tdelete src.lib.solvingOrder;\n\t}\n\n\treturn src;\n};\n\n// create Glyph instance and all its child items: anchors, contours\n// and components\nUtils.glyphFromSrc = function( src, fontSrc, naive, embed ) {\n\tvar glyph = new paper.Glyph({\n\t\tname: src.name,\n\t\tunicode: src.unicode\n\t});\n\n\t// Clone glyph src to allow altering it without impacting components srcs.\n\tglyph.src = _.clone( src, true );\n\tUtils.mergeStatic( glyph, glyph.src );\n\n\t// this will be used to hold local parameters that will be merged with\n\t// the font parameters\n\tglyph.parameters = {};\n\tUtils.mergeStatic( glyph.parameters, glyph.src.parameters );\n\n\t// solvingOrder might be already available (if this is a subcomponent,\n\t// or precomputed in a worker)\n\tglyph.solvingOrder = glyph.src.solvingOrder;\n\n\t(glyph.src.anchors || []).forEach(function(anchorSrc) {\n\t\tvar anchor = new paper.Node();\n\t\tanchor.src = anchorSrc;\n\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\tglyph.addAnchor( anchor );\n\t});\n\n\t(glyph.src.contours || []).forEach(function(contourSrc) {\n\t\tvar contour = new paper.Path();\n\t\tcontour.src = contourSrc;\n\t\tUtils.mergeStatic( contour, contourSrc );\n\n\t\tglyph.addContour( contour );\n\n\t\t// TODO: handle oncurve/offcurve points\n\t\tcontourSrc.nodes.forEach(function(nodeSrc) {\n\t\t\tvar node = new paper.Node();\n\t\t\tnode.src = nodeSrc;\n\t\t\tUtils.mergeStatic( node, nodeSrc );\n\n\t\t\tcontour.add( node );\n\t\t});\n\t});\n\n\tif ( !glyph.src.components ) {\n\t\treturn glyph;\n\t}\n\n\t// components can only be embedded once all glyphs have been generated\n\t// from source\n\tglyph.embedComponents = function() {\n\t\tglyph.src.components.forEach(function(componentSrc) {\n\t\t\t// components are glyphs, quite simply\n\t\t\tvar component = Utils.glyphFromSrc(\n\t\t\t\t\tfontSrc.glyphs[componentSrc.base],\n\t\t\t\t\tfontSrc,\n\t\t\t\t\tnaive,\n\t\t\t\t\t// components' subcomponents can be embedded immediatly\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\tcomponent.parentParameters = {};\n\t\t\tUtils.mergeStatic(\n\t\t\t\tcomponent.parentParameters,\n\t\t\t\tcomponentSrc.parentParameters\n\t\t\t);\n\n\t\t\tnaive.annotator( component );\n\t\t\tglyph.addComponent( component );\n\n\t\t\t(componentSrc.parentAnchors || []).forEach(function(anchorSrc) {\n\t\t\t\tvar anchor = new paper.Node();\n\t\t\t\tanchor.src = anchorSrc;\n\t\t\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\t\t\tcomponent.addParentAnchor( anchor );\n\t\t\t});\n\t\t});\n\n\t\tdelete glyph.embedComponents;\n\t};\n\n\tif ( embed ) {\n\t\tglyph.embedComponents();\n\t}\n\n\treturn glyph;\n};\n\n// build a full cursor from arguments\n// adds 'contours' and 'nodes' automagically when arguments start with a number\nUtils.cursor = function() {\n\tvar cursor = [];\n\n\tfor ( var i = -1; ++i < arguments.length; ) {\n\t\tif ( i === 0 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'contours' );\n\t\t}\n\t\tif ( i === 1 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'nodes' );\n\t\t}\n\t\tcursor.push( arguments[i] );\n\t}\n\n\treturn cursor.join('.');\n};\n\nUtils.propFromCursor = function( cursor, context, length ) {\n\tif ( length === undefined ) {\n\t\tlength = cursor.length;\n\t}\n\n\tfor ( var i = -1; ++i < length; ) {\n\t\tcontext = context[ cursor[i] ];\n\t}\n\n\treturn context;\n};\n\nUtils.mergeStatic = function( obj, src ) {\n\tfor ( var i in src ) {\n\t\tif ( typeof src[i] !== 'object' ) {\n\t\t\tobj[i] = src[i];\n\n\t\t// props that have empty dependencies and params are static\n\t\t} else if ( src[i]._dependencies && src[i]._dependencies.length === 0 &&\n\t\t\t\tsrc[i]._parameters.length === 0 ) {\n\n\t\t\tobj[i] = src[i]._updaters[0].apply(\n\t\t\t\tobj,\n\t\t\t\t[ null, null, null, null, Utils ]\n\t\t\t);\n\n\t\t\tdelete src[i];\n\t\t}\n\t}\n};\n\nUtils.createUpdaters = function( leaf, path ) {\n\tif ( leaf.constructor === Object &&\n\t\t\t( typeof leaf._operation === 'string' ||\n\t\t\ttypeof leaf._operation === 'function' ) ) {\n\n\t\tvar args = [\n\t\t\t\t\t'propName', 'contours', 'anchors', 'parentAnchors', 'Utils'\n\t\t\t\t]\n\t\t\t\t.concat( leaf._parameters || [] )\n\t\t\t\t.concat(\n\t\t\t\t\t( typeof leaf._operation === 'string' &&\n\t\t\t\t\t\t\tleaf._operation.indexOf('return ') === -1 ?\n\t\t\t\t\t\t'return ' : ''\n\t\t\t\t\t) +\n\t\t\t\t\t// The operation might be wrapped in a function (e.g. multi-\n\t\t\t\t\t// line code for debugging purpose). In this case, return\n\t\t\t\t\t// must be explicit\n\t\t\t\t\tleaf._operation.toString()\n\t\t\t\t\t\t// [\\s\\S] need to be used instead of . because\n\t\t\t\t\t\t// javascript doesn't have a dotall flag (s)\n\t\t\t\t\t\t.replace(/function\\s*\\(\\)\\s*\\{([\\s\\S]*?)\\}$/, '$1')\n\t\t\t\t\t\t.trim() +\n\t\t\t\t\t// add sourceURL pragma to help debugging\n\t\t\t\t\t'\\n\\n//# sourceURL=' + path\n\t\t\t\t);\n\n\t\tleaf._updaters = [ Function.apply( null, args ) ];\n\t\treturn leaf._updaters;\n\t}\n\n\tif ( leaf.constructor === Object ) {\n\t\tfor ( var i in leaf ) {\n\t\t\tUtils.createUpdaters( leaf[i], path + '.' + i );\n\t\t}\n\t}\n\n\tif ( leaf.constructor === Array ) {\n\t\tleaf.forEach(function(child, j) {\n\t\t\tUtils.createUpdaters( child, path + '.' + j );\n\t\t});\n\t}\n};\n\nUtils.solveDependencyTree = function( glyph ) {\n\tvar depTree = Utils.dependencyTree( glyph.src, null ),\n\t\torder = depTree.resolve().map(function( cursor ) {\n\t\t\treturn cursor.split('.');\n\t\t}),\n\t\tsimplified = Utils.simplifyResolutionOrder( glyph, order );\n\n\treturn simplified;\n};\n\nUtils.dependencyTree = function( parentSrc, cursor, depTree ) {\n\tif ( !depTree ) {\n\t\tdepTree = new DepTree();\n\t}\n\n\tObject.keys( parentSrc ).forEach(function( i ) {\n\t\t// don't inspect local parameters, private properties and non-object\n\t\tif ( i === 'parameters' || i.indexOf('_') === 0 ||\n\t\t\t\ttypeof parentSrc[i] !== 'object' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar leafSrc = parentSrc[i],\n\t\t\tcurrCursor = cursor ? cursor + '.' + i : i;\n\n\t\tif ( ( leafSrc._updaters && leafSrc._updaters.length ) ||\n\t\t\t\t( leafSrc._dependencies && leafSrc._dependencies.length ) ) {\n\n\t\t\tdepTree.add( currCursor,\n\t\t\t\tleafSrc._dependencies.filter(function(dep) {\n\t\t\t\t\t// parentAnchors are always here when you need them\n\t\t\t\t\treturn !/^parentAnchors/.test(dep);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif ( !leafSrc._operation ) {\n\t\t\tUtils.dependencyTree( leafSrc, currCursor, depTree );\n\t\t}\n\t});\n\n\treturn depTree;\n};\n\n// Simplify resolution order by removing cursors that don't point to objects\n// with updater functions\nUtils.simplifyResolutionOrder = function( glyph, depTree ) {\n\treturn depTree.filter(function( cursor ) {\n\t\tvar src = Utils.propFromCursor( cursor, glyph.src );\n\t\treturn src && src._updaters;\n\t});\n};\n\nvar rdeg = /deg$/;\nUtils.transformsToMatrix = function( transforms, origin ) {\n\tvar prev = new Float32Array(6),\n\t\tcurr = new Float32Array(6),\n\t\trslt = new Float32Array([ 1, 0, 0, 1, 0, 0 ]);\n\n\tif ( origin && Array.isArray( origin ) ) {\n\t\ttransforms.unshift([ 'translate', origin[0], origin[1] ]);\n\t\ttransforms.push([ 'translate', -origin[0], -origin[1] ]);\n\n\t} else if ( origin ) {\n\t\ttransforms.unshift([ 'translate', origin.x, origin.y ]);\n\t\ttransforms.push([ 'translate', -origin.x, -origin.y ]);\n\t}\n\n\ttransforms.forEach(function( transform ) {\n\t\tcurr[0] = curr[3] = 1;\n\t\tcurr[1] = curr[2] = curr[4] = curr[5] = 0;\n\n\t\t// convert degrees to radian\n\t\tfor ( var i = 1; i < transform.length; i++ ) {\n\t\t\tif ( transform[i] && typeof transform[i] === 'string' &&\n\t\t\t\t\trdeg.test(transform[i]) ) {\n\t\t\t\ttransform[i] = parseFloat(transform[i]) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\t\t}\n\n\t\tswitch ( transform[0] ) {\n\t\tcase 'translateX':\n\t\t\tcurr[4] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translateY':\n\t\t\tcurr[5] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translate':\n\t\t\tcurr[4] = transform[1];\n\t\t\tcurr[5] = transform[2] || 0;\n\t\t\tbreak;\n\n\t\tcase 'rotate':\n\t\t\tcurr[0] = Math.cos( transform[1] );\n\t\t\tcurr[1] = Math.sin( transform[1] );\n\t\t\tcurr[2] = -curr[1];\n\t\t\tcurr[3] = curr[0];\n\t\t\tbreak;\n\n\t\tcase 'scaleX':\n\t\t\tcurr[0] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scaleY':\n\t\t\tcurr[3] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scale':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[3] = transform.length > 2 ? transform[2] : transform[1];\n\t\t\tbreak;\n\n\t\tcase 'skewX':\n\t\t\t// stop parsing transform when encountering skewX(90)\n\t\t\t// see http://stackoverflow.com/questions/21094958/how-to-deal-with-infinity-in-a-2d-matrix\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[2] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'skewY':\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[1] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'matrix':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[1] = transform[2];\n\t\t\tcurr[2] = transform[3];\n\t\t\tcurr[3] = transform[4];\n\t\t\tcurr[4] = transform[5];\n\t\t\tcurr[5] = transform[6];\n\t\t\tbreak;\n\t\t}\n\n\t\tprev[0] = rslt[0];\n\t\tprev[1] = rslt[1];\n\t\tprev[2] = rslt[2];\n\t\tprev[3] = rslt[3];\n\t\tprev[4] = rslt[4];\n\t\tprev[5] = rslt[5];\n\n\t\trslt[0] = prev[0] * curr[0] + prev[2] * curr[1];\n\t\trslt[1] = prev[1] * curr[0] + prev[3] * curr[1];\n\t\trslt[2] = ( prev[0] * curr[2] || 0 ) + prev[2] * curr[3];\n\t\trslt[3] = ( prev[1] * curr[2] || 0 ) + prev[3] * curr[3];\n\t\trslt[4] = prev[0] * curr[4] + prev[2] * curr[5] + prev[4];\n\t\trslt[5] = prev[1] * curr[4] + prev[3] * curr[5] + prev[5];\n\t});\n\n\treturn new paper.Matrix(\n\t\trslt[0],\n\t\trslt[1],\n\t\trslt[2],\n\t\trslt[3],\n\t\trslt[4],\n\t\trslt[5]\n\t);\n};\n\n// Utils.normalizeAngle = function( angle ) {\n// \treturn angle % ( 2 * Math.PI ) + ( angle < 0 ? 2 * Math.PI : 0 );\n// };\n\n// Utils.findUpdater = function( glyph, cursor ) {\n// \tvar steps = [ 'glyph' ].concat( cursor.split('.') ),\n// \t\tcontext = { glyph: glyph };\n//\n// \tfor ( var i = -1; ++i < steps.length; ) {\n// \t\tcontext = context[ steps[i] ];\n//\n// \t\tif ()\n// \t}\n// };\n\n// patterns that should be searched for in dependencies and expanded\n// This list is expandable by plugins, 'naive' uses this possibility\n// hashtag #expandableception\n// Utils.expandables = [\n// \t[ /\\.nodes\\.\\d+\\.point$/, function( dep ) {\n// \t\tdep = dep.replace(/\\.point$/, '');\n//\n// \t\treturn [\n// \t\t\tdep + '.x',\n// \t\t\tdep + '.y'\n// \t\t];\n// \t} ],\n// \t[ /\\.nodes\\.\\d+$/, function( dep ) {\n// \t\treturn [\n// \t\t\tdep + '.x',\n// \t\t\tdep + '.y',\n// \t\t\tdep + '.handleIn.point',\n// \t\t\tdep + '.handleOut.point'\n// \t\t];\n// \t} ]\n// ];\n// Utils.expandDependencies = function( glyphSrc, deps, excludeList ) {\n// \tdeps = deps.map(function(dep) {\n// \t\t// search for an expandable pattern and... expand the dependency\n// \t\tfor ( var i = -1, l = Utils.expandables.length; ++i < l; ) {\n// \t\t\tif ( Utils.expandables[i][0].test( dep ) ) {\n// \t\t\t\treturn Utils.expandables[i][1]( dep, glyphSrc );\n// \t\t\t}\n// \t\t}\n//\n// \t\treturn dep;\n// \t});\n//\n// \t// flatten deps array and remove items from excludeList\n// \treturn [].concat.apply([], deps).filter(function(dep) {\n// \t\treturn excludeList.indexOf( dep ) === -1;\n// \t});\n// };\n\nmodule.exports = Utils;\n","var plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tUtils = require('./Utils.js'),\n\tassign = require('lodash.assign');\n\nvar paper = plumin.paper,\n\tnaive = {},\n\t_ = { assign: assign };\n\nfunction nodeSrc( node, i, j, inSkeleton ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\tUtils.cursor( i, j, 'y' )\n\t\t] },\n\t\tall: { _dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\treturn Utils.cursor( i, j, key );\n\t\t}) },\n\t\t_dependencies: inSkeleton ?\n\t\t\t// nodes in skeleton are never fully calculated (we don't calculate\n\t\t\t// the position of handles because we never draw their contour).\n\t\t\t// So we don't care about their dependencies.\n\t\t\t[] :\n\t\t\t[ Utils.cursor( 'contours', i, 'all' ) ]\n\t};\n}\n\nfunction autoExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tx: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\ty: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\tpoint: {\n\t\t\t_dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'y' ),\n\t\t\t\tUtils.cursor( i, j, 'expand' )\n\t\t\t],\n\t\t\t_parameters: [ 'width' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar width = arguments[\n\t\t\t\t\t\targuments.length - 1\n\t\t\t\t\t];\n\n\t\t\t\tnaive.expandedNodeUpdater(\n\t\t\t\t\tnode.expandedTo[side], side === 0, width\n\t\t\t\t);\n\t\t\t} ]\n\t\t},\n\t\tall: {\n\t\t\t_dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\t\treturn Utils.cursor( i, j, key );\n\t\t\t}).concat([\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t\t]),\n\t\t\t_updaters: [ function() {\n\t\t\t\tnaive.skeletonCopier( node );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'all' )\n\t\t]\n\t};\n}\n\nfunction explicitExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'y' )\n\t\t] },\n\t\tall: { _dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\treturn Utils.cursor( i, j, 'expandedTo', side, key );\n\t\t}) },\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'points' )\n\t\t]\n\t};\n}\n\n//function expandedContourSrc( contour, i, side, nodesSrc ) {\nfunction expandedContourSrc( contour, i, side ) {\n\tvar half = contour.nodes.length / 2;\n\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function(node, j) {\n\t\t\t\treturn side !== undefined ?\n\t\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'all' ) :\n\t\t\t\t\tUtils.cursor(\n\t\t\t\t\t\ti, j % half, 'expandedTo', ( j < half ? 0 : 1 ), 'all'\n\t\t\t\t\t);\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t// nodes: nodesSrc,\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo', side || 0, 'all' )\n\t\t]\n\t};\n}\n\nfunction contourSrc( contour, i ) {\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\t\treturn Utils.cursor( i, j, 'all' );\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\treturn Utils.cursor( i, j );\n\t\t})\n\t};\n}\n\n// default method to expand skeletons:\n// derives two additional node from every node with an .expand object\nnaive.annotator = function( glyph ) {\n\tvar additionalContours = [];\n\n\tglyph.contours.forEach(function( contour, i ) {\n\t\tif ( contour.skeleton !== true ) {\n\t\t\t// annotate nodes+points that aren't in a skeleton\n\t\t\tcontour.nodes.forEach(function( node, j ) {\n\t\t\t\t_.assign( node.src, nodeSrc( node, i, j ) );\n\t\t\t});\n\n\t\t\t_.assign( contour.src, contourSrc( contour, i ) );\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar leftContour,\n\t\t\trightContour,\n\t\t\tleftNodes = [],\n\t\t\trightNodes = [],\n\t\t\tleftNodesSrc = [],\n\t\t\trightNodesSrc = [],\n\t\t\tfirstNode,\n\t\t\tlastNode;\n\n\t\t// skeletons should be hidden\n\t\tcontour.visible = false;\n\n\t\tcontour.nodes.forEach(function( node, j ) {\n\n\t\t\tvar left = new paper.Node(),\n\t\t\t\tright = new paper.Node(),\n\t\t\t\tleftSrc,\n\t\t\t\trightSrc;\n\n\t\t\tleftNodes.push(left);\n\t\t\trightNodes.unshift(right);\n\t\t\tnode.expandedTo = [ left, right ];\n\t\t\tleft.expandedFrom = right.expandedFrom = node;\n\n\t\t\tif ( !node.src.expandedTo ) {\n\t\t\t\t// annotate nodes+points that are automatically expanded\n\t\t\t\tleftSrc = autoExpandedNodeSrc( node, i, j, 0, contour.closed );\n\t\t\t\trightSrc = autoExpandedNodeSrc( node, i, j, 1, contour.closed );\n\t\t\t\tnode.src.expandedTo = [ leftSrc, rightSrc ];\n\t\t\t\t_.assign( node.src, nodeSrc( node, i, j, !!'inSkeleton' ) );\n\n\t\t\t// the expanded node might have been defined explicitely\n\t\t\t} else if ( node.src.expandedTo[0] &&\n\t\t\t\t\t!node.src.expandedTo[0]._updaters ) {\n\t\t\t\tnode.src.expandedTo.forEach(function( src, k ) {\n\t\t\t\t\tUtils.mergeStatic( node.expandedTo[k], src );\n\t\t\t\t});\n\n\t\t\t\t// annotate nodes+points that are explicitely expanded\n\t\t\t\tleftSrc = _.assign( node.src.expandedTo[0],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 0, contour.closed )\n\t\t\t\t);\n\t\t\t\trightSrc = _.assign( node.src.expandedTo[1],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 1, contour.closed )\n\t\t\t\t);\n\n\t\t\t\t// A leaf shouldn't appear twice during the recursive\n\t\t\t\t// dependency-tree building. Make the expanded nodes accessible\n\t\t\t\t// from expanded contours, and provide accessors on the\n\t\t\t\t// .expandedFrom node.\n\t\t\t\t// leftNodesSrc.push( leftSrc );\n\t\t\t\t// rightNodesSrc.push( rightSrc );\n\t\t\t}\n\n\t\t\t// if ( leftSrc && rightSrc ) {\n\t\t\t// \tObject.defineProperties( node.src.expandedTo = {}, {\n\t\t\t// \t\t0: { get: function() {\n\t\t\t// \t\t\treturn leftSrc;\n\t\t\t// \t\t}},\n\t\t\t// \t\t1: { get: function() {\n\t\t\t// \t\t\t\treturn rightSrc;\n\t\t\t// \t\t}}\n\t\t\t// \t});\n\t\t\t// }\n\t\t});\n\n\t\tif ( !contour.expandedTo && !contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes.concat(rightNodes)\n\t\t\t});\n\t\t\tcontour.expandedTo = [ leftContour ];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i\n\t\t\t\t\t//, 0, leftNodesSrc.concat( rightNodesSrc )\n\t\t\t\t)\n\t\t\t];\n\t\t\tleftContour.expandedFrom = contour;\n\t\t\tadditionalContours.push( leftContour );\n\n\t\t\tfirstNode = contour.firstNode;\n\t\t\tlastNode = contour.lastNode;\n\n\t\t\tfirstNode.type = 'corner';\n\t\t\tlastNode.type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].type = 'corner';\n\t\t\tfirstNode.expandedTo[1].type = 'corner';\n\t\t\tlastNode.expandedTo[0].type = 'corner';\n\t\t\tlastNode.expandedTo[1].type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].typeIn = 'line';\n\t\t\tfirstNode.expandedTo[1].typeOut = 'line';\n\t\t\tlastNode.expandedTo[0].typeOut = 'line';\n\t\t\tlastNode.expandedTo[1].typeIn = 'line';\n\n\t\t} else if ( !contour.expandedTo && contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes\n\t\t\t});\n\t\t\tadditionalContours.push( leftContour );\n\t\t\trightContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: rightNodes\n\t\t\t});\n\t\t\tadditionalContours.push( rightContour );\n\n\t\t\tcontour.expandedTo = [\n\t\t\t\tleftContour,\n\t\t\t\trightContour\n\t\t\t];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i, 0, leftNodesSrc ),\n\t\t\t\texpandedContourSrc( rightContour, i, 1, rightNodesSrc )\n\t\t\t];\n\t\t\tleftContour.expandedFrom = rightContour.expandedFrom = contour;\n\t\t}\n\t});\n\n\tglyph.addContours( additionalContours );\n};\n\n// Calculate expanded node position\nnaive.expandedNodeUpdater = function( node, isLeft, _width ) {\n\tvar origin = node.expandedFrom,\n\t\texpand = origin.expand,\n\t\twidth = expand && expand.width !== undefined ?\n\t\t\texpand.width : _width,\n\t\tcoef = expand && expand.distr !== undefined ?\n\t\t\t( isLeft ? expand.distr : 1 - expand.distr ) :\n\t\t\t0.5,\n\t\tangle = ( isLeft ? Math.PI : 0 ) +\n\t\t\t( expand && expand.angle !== undefined ?\n\t\t\t\texpand.angle :\n\t\t\t\t// We resort to using directions.\n\t\t\t\t// This is wrong, directions are not included in the\n\t\t\t\t// dependencies of the updater and might not be ready yet.\n\t\t\t\t// TODO: Fix this (always require angle to be specified?)\n\t\t\t\t( origin._dirOut !== undefined ?\n\t\t\t\t\torigin._dirOut - Math.PI / 2 :\n\t\t\t\t\torigin._dirIn + Math.PI / 2\n\t\t\t\t)\n\t\t\t);\n\n\t// position\n\tnode.point.x = origin.point.x + ( width * coef * Math.cos( angle ) );\n\tnode.point.y = origin.point.y + ( width * coef * Math.sin( angle ) );\n};\n\n// copy skeleton properties such as types, directions and tensions to expanded\n// nodes\nnaive.skeletonCopier = function( node ) {\n\tvar angle = node.expand && node.expand.angle || 0,\n\t\tleft = node.expandedTo[0],\n\t\tright = node.expandedTo[1];\n\n\t// node type\n\tif ( node.type !== undefined ) {\n\t\tleft.type = right.type = node.type;\n\t}\n\n\t// direction type\n\tif ( node.typeIn !== undefined ) {\n\t\tleft.typeIn = right.typeOut = node.typeIn;\n\t}\n\tif ( node.typeOut !== undefined ) {\n\t\tleft.typeOut = right.typeIn = node.typeOut;\n\t}\n\n\t// direction\n\tif ( node._dirIn !== undefined ) {\n\t\tleft._dirIn = right._dirOut = node._dirIn;\n\n\t\tif ( node.type === 'smooth' && node._dirOut === undefined ) {\n\t\t\tleft._dirOut = right._dirIn = node._dirIn + Math.PI;\n\t\t}\n\t}\n\tif ( node._dirOut !== undefined ) {\n\t\tleft._dirOut = right._dirIn = node._dirOut;\n\n\t\tif ( node.type === 'smooth' && node._dirIn === undefined ) {\n\t\t\tleft._dirIn = right._dirOut = node._dirOut + Math.PI;\n\t\t}\n\t}\n\t// use angle if direction isn't already defined\n\tif ( left._dirIn === undefined ) { // implies right._dirOut === undefined\n\t\tleft._dirIn = angle - Math.PI / 2;\n\t\tright._dirOut = angle + Math.PI / 2;\n\t}\n\tif ( left._dirOut === undefined ) { // implies right._dirIn === undefined\n\t\tleft._dirOut = angle + Math.PI / 2;\n\t\tright._dirIn = angle - Math.PI / 2;\n\t}\n\n\t// tension\n\tleft.tensionIn = right.tensionOut = node.tensionIn !== undefined ?\n\t\tnode.tensionIn :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n\tleft.tensionOut = right.tensionIn = node.tensionOut !== undefined ?\n\t\tnode.tensionOut :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n};\n\n// Make sure 'line' types are set on both side of segments\n// and if a smooth node is used in a straight segment, update the directions\n// appropriately this can only be done once the types, directions and position\n// of all nodes have been updated can be renamed #prepareLines if no other\n// operation is added\n// TODO: try doing it at the same time as updateContour (once we have more\n// complex glyphs)\nnaive.prepareContour = function( path ) {\n\tpath.nodes.forEach(function(node) {\n\t\tif ( node.typeIn === 'line' && node.previous ) {\n\t\t\tnode.previous.typeOut = 'line';\n\n\t\t\tif ( node.type === 'smooth' ) {\n\t\t\t\tnode._dirIn = Utils.lineAngle(\n\t\t\t\t\tnode.point, node.previous.point\n\t\t\t\t);\n\t\t\t\tnode._dirOut = node._dirIn + Math.PI;\n\t\t\t}\n\t\t}\n\n\t\tif ( node.typeOut === 'line' && node.next ) {\n\t\t\tnode.next.typeIn = 'line';\n\n\t\t\tif ( node.type === 'smooth' ) {\n\t\t\t\tnode._dirOut = Utils.lineAngle(\n\t\t\t\t\tnode.point, node.next.point\n\t\t\t\t);\n\t\t\t\tnode._dirIn = node._dirOut + Math.PI;\n\t\t\t}\n\t\t}\n\t});\n};\n\n// sets the position of control points\n// can be renamed #updateControls if no other operation is added\nnaive.updateContour = function( path, curviness ) {\n\tif ( curviness === undefined ) {\n\t\tcurviness = 2 / 3;\n\t}\n\n\tpath.nodes.forEach(function(node) {\n\t\tvar start = node,\n\t\t\tend,\n\t\t\tstartCtrl,\n\t\t\tendCtrl,\n\t\t\tstartType,\n\t\t\tendType,\n\t\t\tstartTension,\n\t\t\tendTension,\n\t\t\tstartDir,\n\t\t\tendDir,\n\t\t\trri;\n\n\t\tif ( !node.next ) {\n\t\t\treturn;\n\t\t}\n\n\t\tend = node.next;\n\t\tstartCtrl = start.handleOut;\n\t\tendCtrl = end.handleIn;\n\n\t\tstartType = start.typeOut;\n\t\tendType = end.typeIn;\n\n\t\tif ( startType === 'line' || endType === 'line' ) {\n\t\t\tstartCtrl.x = 0;\n\t\t\tstartCtrl.y = 0;\n\t\t\tendCtrl.x = 0;\n\t\t\tendCtrl.y = 0;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartTension = start.tensionOut !== undefined ?\n\t\t\tstart.tensionOut :\n\t\t\t( start.tension !== undefined ? start.tension : 1 );\n\t\tendTension = end.tensionIn !== undefined ?\n\t\t\tend.tensionIn :\n\t\t\t( end.tension !== undefined ? end.tension : 1 );\n\n\t\tstartDir = start._dirOut !== undefined ?\n\t\t\tstart._dirOut :\n\t\t\tstart.type === 'smooth' ? start._dirIn + Math.PI : 0;\n\t\tendDir = end._dirIn !== undefined ?\n\t\t\tend._dirIn :\n\t\t\tend.type === 'smooth' ? end._dirOut - Math.PI : 0;\n\n\t\trri = Utils.rayRayIntersection(\n\t\t\tstart._point,\n\t\t\tstartDir,\n\t\t\tend._point,\n\t\t\tendDir\n\t\t);\n\n\t\t// direction of handles is parallel\n\t\tif ( rri === null ) {\n\t\t\tvar angle = Utils.lineAngle( start._point, end._point ),\n\t\t\t\tmiddle = {\n\t\t\t\t\tx: ( end._point.x - start._point.x ) / 2 + start._point.x,\n\t\t\t\t\ty: ( end._point.y - start._point.y ) / 2 + start._point.y\n\t\t\t\t},\n\t\t\t\tp0 = Utils.rayRayIntersection(\n\t\t\t\t\tstart._point, startDir, middle, angle - Math.PI / 2\n\t\t\t\t),\n\t\t\t\tp1 = Utils.rayRayIntersection(\n\t\t\t\t\tmiddle, angle + Math.PI / 2, end._point, endDir\n\t\t\t\t);\n\n\t\t\tstartCtrl.x = ( Math.round(p0[0]) - start._point.x ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tstartCtrl.y = ( Math.round(p0[1]) - start._point.y ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tendCtrl.x = ( Math.round(p1[0]) - end._point.x ) *\n\t\t\t\tcurviness * endTension;\n\t\t\tendCtrl.y = ( Math.round(p1[1]) - end._point.y ) *\n\t\t\t\tcurviness * endTension;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartCtrl.x = ( Math.round(rri[0]) - start.point.x ) *\n\t\t\tcurviness * startTension;\n\t\tstartCtrl.y = ( Math.round(rri[1]) - start.point.y ) *\n\t\t\tcurviness * startTension;\n\t\tendCtrl.x = ( Math.round(rri[0]) - end.point.x ) *\n\t\t\tcurviness * endTension;\n\t\tendCtrl.y = ( Math.round(rri[1]) - end.point.y ) *\n\t\t\tcurviness * endTension;\n\t});\n};\n\nvar rdeg = /deg$/;\nObject.defineProperties(paper.PaperScope.prototype.Segment.prototype, {\n\texpand: {\n\t\tget: function() {\n\t\t\treturn this._expand;\n\t\t},\n\t\tset: function( expand ) {\n\t\t\tif ( typeof expand.angle === 'string' && rdeg.test(expand.angle) ) {\n\t\t\t\texpand.angle = parseFloat(expand.angle) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\n\t\t\tthis._expand = expand;\n\t\t}\n\t},\n\tdirIn: {\n\t\tget: function() {\n\t\t\treturn this._dirIn;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirIn = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirIn = dir;\n\t\t\t}\n\t\t}\n\t},\n\tdirOut: {\n\t\tget: function() {\n\t\t\treturn this._dirOut;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirOut = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirOut = dir;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = naive;\n","/*jshint -W098 */\nvar plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tUtils = require('./Utils.js'),\n\tnaive = require('./naive.js'),\n\tassign = require('lodash.assign');\n\nvar paper = plumin.paper,\n\t_ = { assign: assign };\n\nfunction parametricFont( src ) {\n\t// TODO: this, block is only here for backward compat\n\t// and should be removed at some point in the future\n\tif ( !src.fontinfo ) {\n\t\tsrc.fontinfo = src.info;\n\t}\n\n\tvar font = new paper.Font( src.fontinfo );\n\n\tfont.src = src;\n\n\tObject.keys( src.glyphs ).forEach(function( name ) {\n\t\tvar glyphSrc = src.glyphs[name];\n\n\t\tUtils.ufoToPaper( glyphSrc );\n\n\t\t// turn ._operation strings to ._updaters functions\n\t\tUtils.createUpdaters( glyphSrc, 'glyphs/glyph_' + name );\n\n\t\tvar glyph = Utils.glyphFromSrc( glyphSrc, src, naive );\n\n\t\tfont.addGlyph( glyph );\n\n\t\t// Create additional paths for skeletons and set ._dependencies\n\t\t// appropriately\n\t\tnaive.annotator( glyph );\n\n\t\t// solvingOrder might be already available (if this is a subcomponent,\n\t\t// or precomputed in a worker)\n\t\tif ( !glyph.solvingOrder ) {\n\t\t\tglyph.solvingOrder = glyphSrc.solvingOrder =\n\t\t\t\tUtils.solveDependencyTree( glyph );\n\t\t}\n\t});\n\n\t// all glyphs are ready, embed components now\n\tfont.glyphs.forEach(function( _glyph ) {\n\t\tif ( _glyph.embedComponents ) {\n\t\t\t_glyph.embedComponents();\n\t\t}\n\t});\n\n\treturn font;\n}\n\nplumin.parametricFont = parametricFont;\nplumin.Utils = Utils;\nplumin.Utils.naive = naive;\n\npaper.PaperScope.prototype.Font.prototype.update = function( params, set ) {\n\treturn this.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.update( params );\n\t}, this);\n};\n\n/* Update the shape of the glyph, according to formula and parameters\n * 0. before running, nodes have already been created by ParametricFont\n *   (including expanded ones thanks to naive.expandSkeletons). And static\n *   properties have been copied over to those nodes\n * 1. We use the solving order to calculate all node properties\n * 2. transform contours\n * 3. Update components and transform them\n */\npaper.PaperScope.prototype.Glyph.prototype.update = function( _params ) {\n\tvar glyph = this,\n\t\tfont = glyph.parent,\n\t\tmatrix,\n\t\tparams;\n\n\t// 0. calculate local parameters\n\tparams = _.assign( {}, _params, glyph.parentParameters );\n\n\tObject.keys( ( glyph.src && glyph.src.parameters ) || [] )\n\t\t.forEach(function( name ) {\n\t\t\tvar src = glyph.src.parameters[name];\n\n\t\t\tif ( src._updaters ) {\n\t\t\t\tparams[name] = src._updaters[0].apply( null, [\n\t\t\t\t\tname, [], [], glyph.parentAnchors, Utils\n\t\t\t\t].concat(\n\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\treturn params[_name];\n\t\t\t\t\t})\n\t\t\t\t));\n\t\t\t}\n\t\t});\n\n\t// 1. calculate node properties\n\t( glyph.solvingOrder || [] ).forEach(function(cursor) {\n\t\tvar propName = cursor[ cursor.length - 1 ],\n\t\t\tsrc = Utils.propFromCursor( cursor, glyph.src ),\n\t\t\tobj = Utils.propFromCursor( cursor, glyph, cursor.length - 1 ),\n\t\t\t// TODO: one day we could allow multiple _updaters\n\t\t\tresult = src && src._updaters && src._updaters[0].apply( obj, [\n\t\t\t\t\tpropName, glyph.contours, glyph.anchors,\n\t\t\t\t\tglyph.parentAnchors, Utils\n\t\t\t\t].concat(\n\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\treturn params[_name];\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\n\t\t// Assume that updaters returning undefined have their own\n\t\t// assignment logic\n\t\tif ( result !== undefined ) {\n\t\t\tobj[propName] = result;\n\t\t}\n\t}, this);\n\n\t// 2. transform contours\n\tthis.contours.forEach(function(contour) {\n\t\t// a. transform the nodes\n\t\tcontour.nodes.forEach(function(node) {\n\t\t\tif ( node.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tnode.transforms.slice(0), node.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\t\t// We don't want to apply the transforms immediatly,\n\t\t\t\t\t// otherwise the transformation will add-up on each\n\t\t\t\t\t// update.\n\t\t\t\t\tnode.applyMatrix = false;\n\t\t\t\t\tnode.matrix = matrix;\n\n\t\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t\t// expanded items\n\t\t\t\t} else {\n\t\t\t\t\tnode.expandedTo.forEach(function( _node ) {\n\t\t\t\t\t\t_node.applyMatrix = false;\n\t\t\t\t\t\t_node.matrix = matrix;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// b. transform the contour\n\t\t// prepare and update outlines and expanded contours, but not\n\t\t// skeletons\n\t\tif ( contour.transforms ) {\n\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\tcontour.transforms.slice(0), contour.transformOrigin\n\t\t\t);\n\n\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\tcontour.applyMatrix = false;\n\t\t\t\tcontour.matrix = matrix;\n\n\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t// expanded items\n\t\t\t} else {\n\t\t\t\tcontour.expandedTo.forEach(function( _contour ) {\n\t\t\t\t\t_contour.applyMatrix = false;\n\t\t\t\t\t_contour.matrix = matrix;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, this);\n\n\t// 3. update components and transform components\n\tif ( this.components.length && font ) {\n\t\t// subcomponents have the parent component as their parent\n\t\t// so search for the font\n\t\twhile ( !('glyphs' in font) ) {\n\t\t\tfont = font.parent;\n\t\t}\n\n\t\tthis.components.forEach(function(component) {\n\t\t\tcomponent.update( params );\n\n\t\t\tif ( component.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tcomponent.transforms.slice(0), component.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tcomponent.applyMatrix = false;\n\t\t\t\tcomponent.matrix = matrix;\n\t\t\t}\n\t\t}, this);\n\t}\n\n\t// 4. transform whole glyph\n\tif ( glyph.transforms ) {\n\t\tmatrix = Utils.transformsToMatrix(\n\t\t\tglyph.transforms.slice(0), glyph.transformOrigin\n\t\t);\n\n\t\tglyph.applyMatrix = false;\n\t\tglyph.matrix = matrix;\n\t}\n\n\treturn this;\n};\n\n// Before updating SVG or OpenType data, we must determine paths exports\n// directions. Basically, everything needs to be clockwise.\n// this method needs to be called only after the first update\npaper.PaperScope.prototype.Outline.prototype.prepareDataUpdate = function() {\n\tthis.children.forEach(function(contour) {\n\t\t// expanded contours are handled from their skeleton\n\t\tif ( contour.expandedFrom ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( contour.skeleton !== true ) {\n\t\t\tcontour.export = 'clockwise';\n\n\t\t} else {\n\t\t\tcontour.expandedTo[0].export = 'clockwise';\n\n\t\t\tif ( contour.expandedTo[1] ) {\n\t\t\t\tcontour.expandedTo[0].export = contour.clockwise ?\n\t\t\t\t\t'clockwise' :\n\t\t\t\t\t'anticlockwise';\n\n\t\t\t\tcontour.expandedTo[1].export = contour.clockwise ?\n\t\t\t\t\t'anticlockwise' :\n\t\t\t\t\t'clockwise';\n\t\t\t}\n\t\t}\n\t});\n};\n\nvar updateSVGData =\n\t\tpaper.PaperScope.prototype.Outline.prototype.updateSVGData,\n\tupdateOTCommands =\n\t\tpaper.PaperScope.prototype.Outline.prototype.updateOTCommands;\n\npaper.PaperScope.prototype.Outline.prototype.updateSVGData = function() {\n\tif ( !this.isPrepared ) {\n\t\tthis.prepareDataUpdate();\n\t\tthis.isPrepared = true;\n\t}\n\n\tupdateSVGData.apply( this, arguments );\n};\n\npaper.PaperScope.prototype.Outline.prototype.updateOTCommands = function() {\n\tif ( !this.isPrepared ) {\n\t\tthis.prepareDataUpdate();\n\t\tthis.isPrepared = true;\n\t}\n\n\tupdateOTCommands.apply( this, arguments );\n};\n\nmodule.exports = plumin;\n","var Utils = {};\n\n// The following function should be useless, thanks to paper\nUtils.lineLineIntersection = function( p1, p2, p3, p4 ) {\n\tvar x1 = p1.x,\n\t\ty1 = p1.y,\n\t\tx2 = p2.x,\n\t\ty2 = p2.y,\n\t\tx3 = p3.x,\n\t\ty3 = p3.y,\n\t\tx4 = p4.x,\n\t\ty4 = p4.y,\n\t\td = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n\tif ( d === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn new Float32Array([\n\t\t( (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4) ) /\n\t\td,\n\t\t( (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4) ) /\n\t\td\n\t]);\n};\n\n// Find the intersection of two rays.\n// A ray is defined by a point and an angle.\nUtils.rayRayIntersection = function( p1, a1, p2, a2 ) {\n\t// line equations\n\tvar a = Math.tan(a1),\n\t\tb = Math.tan(a2),\n\t\tc = p1.y - a * p1.x,\n\t\td = p2.y - b * p2.x,\n\t\tx,\n\t\ty;\n\n\t// When searching for lines intersection,\n\t// angles can be normalized to 0 < a < PI\n\t// This will be helpful in detecting special cases below.\n\ta1 = a1 % Math.PI;\n\tif ( a1 < 0 ) {\n\t\ta1 += Math.PI;\n\t}\n\ta2 = a2 % Math.PI;\n\tif ( a2 < 0 ) {\n\t\ta2 += Math.PI;\n\t}\n\n\t// no intersection\n\tif ( a1 === a2 ) {\n\t\treturn null;\n\t}\n\n\t// Optimize frequent and easy special cases.\n\t// Without optimization, results would be incorrect when cos(a) === 0\n\tif ( a1 === 0 ) {\n\t\ty = p1.y;\n\t} else if ( a1 === Math.PI / 2 ) {\n\t\tx = p1.x;\n\t}\n\tif ( a2 === 0 ) {\n\t\ty = p2.y;\n\t} else if ( a2 === Math.PI / 2 ) {\n\t\tx = p2.x;\n\t}\n\n\t// easiest case\n\tif ( x !== undefined && y !== undefined ) {\n\t\treturn new Float32Array([ x, y ]);\n\t}\n\n\t// other cases that can be optimized\n\tif ( a1 === 0 ) {\n\t\treturn new Float32Array([ ( y - d ) / b, y ]);\n\t}\n\tif ( a1 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, b * x + d ]);\n\t}\n\tif ( a2 === 0 ) {\n\t\treturn new Float32Array([ ( y - c ) / a, y ]);\n\t}\n\tif ( a2 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, a * x + c ]);\n\t}\n\n\t// intersection from two line equations\n\t// algo: http://en.wikipedia.org/wiki/Line–line_intersection#Given_the_equations_of_the_lines\n\treturn new Float32Array([\n\t\tx = (d - c) / (a - b),\n\t\t// this should work equally well with ax+c or bx+d\n\t\ta * x + c\n\t]);\n};\n\n// return the angle between two points\nUtils.lineAngle = function( p0, p1 ) {\n\treturn Math.atan2( p1.y - p0.y, p1.x - p0.x );\n};\n\nUtils.onLine = function( params ) {\n\tvar origin = params.on[0],\n\t\tvector = [\n\t\t\tparams.on[1].x - params.on[0].x,\n\t\t\tparams.on[1].y - params.on[0].y\n\t\t];\n\n\treturn 'x' in params ?\n\t\t( params.x - origin.x ) / vector[0] * vector[1] + origin.y :\n\t\t( params.y - origin.y ) / vector[1] * vector[0] + origin.x;\n};\n\nUtils.log = function() {\n\tconsole.log.apply( console, arguments );\n\treturn arguments[0];\n};\n\nmodule.exports = Utils;\n"]}