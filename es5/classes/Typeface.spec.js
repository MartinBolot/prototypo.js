define(['./Typeface.js'], function($__0) {
  "use strict";
  if (!$__0 || !$__0.__esModule)
    $__0 = {default: $__0};
  var Typeface = $__0.default;
  describe('Typeface structure', function() {
    it('has a working constructor', function() {
      var t = new Typeface({
        foo: true,
        bar: false,
        baz: 'hello'
      });
      expect(t.foo).to.be.true;
      expect(t.bar).to.be.false;
      expect(t.baz).to.equal('hello');
      expect(t.components).to.be.an('object');
      expect(t.components).to.be.empty;
      expect(t.characters).to.be.an('object');
      expect(t.characters).to.be.empty;
    });
  });
  return {};
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB0cmFjZXVyL2dlbmVyYXRlZC9UZW1wbGF0ZVBhcnNlci8yIiwiY2xhc3Nlcy9UeXBlZmFjZS5zcGVjLmpzIiwiQHRyYWNldXIvZ2VuZXJhdGVkL1RlbXBsYXRlUGFyc2VyLzEiLCJAdHJhY2V1ci9nZW5lcmF0ZWQvVGVtcGxhdGVQYXJzZXIvMTAiLCJAdHJhY2V1ci9nZW5lcmF0ZWQvVGVtcGxhdGVQYXJzZXIvMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEFBQUMsRUNFZSxlQUFjLEVDRm5DLFVBQVMsSUFBZ0I7O0FDQXpCLEtBQUksS0FBaUIsR0FBSyxFQUFDLGVBQTJCO0FBQzFDLFNBQW9CLEVBQUMsT0FBTSxNQUFtQixDQUFDLENBQUE7QUFBQSxJRkNwRCxTQUFPO0FBRWQsU0FBTyxBQUFDLENBQUMsb0JBQW1CLENBQUcsVUFBUSxBQUFDLENBQUU7QUFFekMsS0FBQyxBQUFDLENBQUMsMkJBQTBCLENBQUcsVUFBUSxBQUFDLENBQUU7QUFDMUMsQUFBSSxRQUFBLENBQUEsQ0FBQSxFQUFJLElBQUksU0FBTyxBQUFDLENBQUM7QUFBQyxVQUFFLENBQUcsS0FBRztBQUFHLFVBQUUsQ0FBRyxNQUFJO0FBQUcsVUFBRSxDQUFHLFFBQU07QUFBQSxNQUFDLENBQUMsQ0FBQztBQUUzRCxXQUFLLEFBQUMsQ0FBQyxDQUFBLElBQUksQ0FBQyxHQUFHLEdBQUcsS0FBSyxDQUFDO0FBQ3hCLFdBQUssQUFBQyxDQUFDLENBQUEsSUFBSSxDQUFDLEdBQUcsR0FBRyxNQUFNLENBQUM7QUFDekIsV0FBSyxBQUFDLENBQUMsQ0FBQSxJQUFJLENBQUMsR0FBRyxNQUFNLEFBQUMsQ0FBQyxPQUFNLENBQUMsQ0FBQztBQUUvQixXQUFLLEFBQUMsQ0FBQyxDQUFBLFdBQVcsQ0FBQyxHQUFHLEdBQUcsR0FBRyxBQUFDLENBQUMsUUFBTyxDQUFDLENBQUM7QUFDdkMsV0FBSyxBQUFDLENBQUMsQ0FBQSxXQUFXLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQztBQUNoQyxXQUFLLEFBQUMsQ0FBQyxDQUFBLFdBQVcsQ0FBQyxHQUFHLEdBQUcsR0FBRyxBQUFDLENBQUMsUUFBTyxDQUFDLENBQUM7QUFDdkMsV0FBSyxBQUFDLENBQUMsQ0FBQSxXQUFXLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQztJQUNqQyxDQUFDLENBQUM7RUFFSCxDQUFDLENBQUM7QUduQkYsV0FBdUI7QUZFbkIsQ0ZGdUMsQ0FBQztBQ21CMUMiLCJmaWxlIjoiY2xhc3Nlcy9UeXBlZmFjZS5zcGVjLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKCRfX3BsYWNlaG9sZGVyX18wLCAkX19wbGFjZWhvbGRlcl9fMSk7IiwiLypqc2hpbnQgLVcwMzAgKi9cblxuaW1wb3J0IFR5cGVmYWNlIGZyb20gJy4vVHlwZWZhY2UuanMnO1xuXG5kZXNjcmliZSgnVHlwZWZhY2Ugc3RydWN0dXJlJywgZnVuY3Rpb24oKSB7XG5cblx0aXQoJ2hhcyBhIHdvcmtpbmcgY29uc3RydWN0b3InLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgdCA9IG5ldyBUeXBlZmFjZSh7Zm9vOiB0cnVlLCBiYXI6IGZhbHNlLCBiYXo6ICdoZWxsbyd9KTtcblxuXHRcdGV4cGVjdCh0LmZvbykudG8uYmUudHJ1ZTtcblx0XHRleHBlY3QodC5iYXIpLnRvLmJlLmZhbHNlO1xuXHRcdGV4cGVjdCh0LmJheikudG8uZXF1YWwoJ2hlbGxvJyk7XG5cblx0XHRleHBlY3QodC5jb21wb25lbnRzKS50by5iZS5hbignb2JqZWN0Jyk7XG5cdFx0ZXhwZWN0KHQuY29tcG9uZW50cykudG8uYmUuZW1wdHk7XG5cdFx0ZXhwZWN0KHQuY2hhcmFjdGVycykudG8uYmUuYW4oJ29iamVjdCcpO1xuXHRcdGV4cGVjdCh0LmNoYXJhY3RlcnMpLnRvLmJlLmVtcHR5O1xuXHR9KTtcblxufSk7IiwiZnVuY3Rpb24oJF9fcGxhY2Vob2xkZXJfXzApIHtcbiAgICAgICRfX3BsYWNlaG9sZGVyX18xXG4gICAgfSIsImlmICghJF9fcGxhY2Vob2xkZXJfXzAgfHwgISRfX3BsYWNlaG9sZGVyX18xLl9fZXNNb2R1bGUpXG4gICAgICAgICAgICAkX19wbGFjZWhvbGRlcl9fMiA9IHtkZWZhdWx0OiAkX19wbGFjZWhvbGRlcl9fM30iLCJyZXR1cm4gJF9fcGxhY2Vob2xkZXJfXzAiXX0=