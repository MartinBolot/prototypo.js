{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/deptree/index.js","node_modules/lodash.merge/index.js","node_modules/lodash.merge/node_modules/lodash._arraycopy/index.js","node_modules/lodash.merge/node_modules/lodash._arrayeach/index.js","node_modules/lodash.merge/node_modules/lodash._basefor/index.js","node_modules/lodash.merge/node_modules/lodash._createassigner/index.js","node_modules/lodash.merge/node_modules/lodash._createassigner/node_modules/lodash._bindcallback/index.js","node_modules/lodash.merge/node_modules/lodash._createassigner/node_modules/lodash._isiterateecall/index.js","node_modules/lodash.merge/node_modules/lodash.isarguments/index.js","node_modules/lodash.merge/node_modules/lodash.isarray/index.js","node_modules/lodash.merge/node_modules/lodash.isnative/index.js","node_modules/lodash.merge/node_modules/lodash.isplainobject/index.js","node_modules/lodash.merge/node_modules/lodash.istypedarray/index.js","node_modules/lodash.merge/node_modules/lodash.keys/index.js","node_modules/lodash.merge/node_modules/lodash.keysin/index.js","node_modules/lodash.merge/node_modules/lodash.toplainobject/index.js","node_modules/lodash.merge/node_modules/lodash.toplainobject/node_modules/lodash._basecopy/index.js","node_modules/plumin.js/dist/plumin.js","src/Utils.js","src/naive.js","src/prototypo.js","src/updateUtils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","prototypo","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"DepTree","nodes","prototype","add","node","dependants","Array","resolveNode","resolved","processing","deps","forEach","dep","indexOf","push","resolve","arrayCopy","arrayEach","baseFor","createAssigner","isArguments","isArray","isNative","isPlainObject","isTypedArray","keys","keysIn","toPlainObject","isObjectLike","value","MAX_SAFE_INTEGER","Math","pow","baseForOwn","object","iteratee","baseMerge","source","customizer","stackA","stackB","isObject","isSrcArr","isLength","srcValue","key","baseMergeDeep","result","undefined","isCommon","mergeFunc","type","merge","array","index","createBaseFor","fromRight","keysFunc","iterable","toObject","props","Object","bindCallback","isIterateeCall","assigner","args","arguments","thisArg","guard","func","argCount","identity","collection","accumulator","other","apply","isIndex","prereq","argsTag","objectProto","objToString","toString","arrayTag","funcTag","reHostCtor","reRegExpChars","reHasRegExpChars","RegExp","baseToString","fnToString","Function","reNative","escapeRegExp","replace","nativeIsArray","test","string","objectTag","hasOwnProperty","getPrototypeOf","baseForIn","shimIsPlainObject","Ctor","constructor","subValue","valueOf","objProto","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","typedArrayTags","propertyIsEnumerable","nativeKeys","support","x","nonEnumArgs","shimKeys","propsLength","allowIndexes","isProto","skipIndexes","baseCopy","plumin","opentype","argument","predicate","message","assert",2,"line","ctx","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke",3,"cffStandardStrings","cffStandardEncoding","cffExpertEncoding","standardNames","DefaultEncoding","font","charToGlyphIndex","c","charCodeAt","glyphs","glyph","j","unicodes","CmapEncoding","cmap","glyphIndexMap","CffEncoding","encoding","charset","charName","GlyphNames","post","version","names","slice","numberOfGlyphs","glyphNameIndex","nameToGlyphIndex","name","glyphIndexToName","gid","addGlyphNames","tables","charCodes","glyphIndex","addUnicode","parseInt","cffEncoding","glyphNames",4,"path","sfnt","Font","options","familyName","styleName","designer","designerURL","manufacturer","manufacturerURL","license","licenseURL","description","copyright","trademark","unitsPerEm","ascender","descender","supported","hasChar","charToGlyph","stringToGlyphs","nameToGlyph","nametoGlyphIndex","getKerningValue","leftGlyph","rightGlyph","gposKerning","getGposKerningValue","kerningPairs","forEachGlyph","text","y","fontSize","callback","kerning","fontScale","advanceWidth","kerningValue","getPath","fullPath","Path","gX","gY","gFontSize","glyphPath","extend","draw","drawPoints","drawMetrics","validate","warnings","_this","assertStringAttribute","attrName","trim","toTables","fontToTable","toBuffer","sfntTable","bytes","encode","buffer","ArrayBuffer","intArray","Uint8Array","download","fileName","requestFileSystem","webkitRequestFileSystem","TEMPORARY","byteLength","fs","root","getFile","create","fileEntry","createWriter","writer","dataView","DataView","blob","Blob","write","addEventListener","location","href","toURL","err","./encoding","./path","./tables/sfnt",5,"check","Glyph","unicode","xMin","yMin","xMax","yMax","scale","p","commands","cmd","quadraticCurveTo","curveTo","closePath","getContours","points","contours","currentContour","pt","lastPointOfContour","getMetrics","xCoords","yCoords","metrics","min","max","leftSideBearing","rightSideBearing","drawCircles","PI_SQ","PI","arc","fill","blueCircles","redCircles","fillStyle","lineWidth","strokeStyle","./check","./draw",6,"_font","parse","cff","glyf","gpos","head","hhea","hmtx","kern","loca","maxp","_name","os2","toArrayBuffer","arrayBuffer","data","loadFromFile","readFile","loadFromUrl","url","request","XMLHttpRequest","open","responseType","onload","status","statusText","response","send","parseBuffer","indexToLocFormat","hmtxOffset","glyfOffset","locaOffset","cffOffset","kernOffset","gposOffset","getFixed","outlinesFormat","getTag","numTables","getUShort","tag","offset","getULong","numberOfHMetrics","numGlyphs","fontFamily","fontSubfamily","shortVersion","locaTable","load","isNode","loadFn","_parse","./font","./glyph","./parse","./tables/cff","./tables/cmap","./tables/glyf","./tables/gpos","./tables/head","./tables/hhea","./tables/hmtx","./tables/kern","./tables/loca","./tables/maxp","./tables/name","./tables/os2","./tables/post",7,"getByte","getUint8","getCard8","getUint16","getCard16","getShort","getInt16","getUint32","decimal","fraction","String","fromCharCode","getInt8","getOffset","offSize","v","getBytes","startOffset","endOffset","bytesToString","typeOffsets","byte","uShort","short","uLong","fixed","longDateTime","Parser","relativeOffset","parseByte","parseChar","parseCard8","parseUShort","parseCard16","parseSID","parseOffset16","parseShort","parseF2Dot14","parseULong","parseFixed","parseOffset16List","parseUShortList","count","offsets","parseString","parseTag","parseLongDateTime","parseVersion","major","minor","skip","amount",8,"strokeWidth","bezierCurveTo","quadTo","close","pathOrCommands","toPathData","decimalPlaces","floatToString","round","toFixed","packValues","d","toSVG","svg",9,"sizeOf","Table","tableName","fields","field","optionKeys","k","sizeOfFunction","TABLE","./types",10,"_glyph","table","equals","b","parseCFFIndex","start","conversionFn","objects","objectOffset","offsetSize","pos","parseFloatOperand","parser","eof","lookup","n1","n2","parseFloat","parseOperand","b0","b1","b2","b3","b4","entriesToObject","entries","values","parseCFFDict","size","operands","op","getCFFString","strings","interpretDict","dict","meta","newDict","m","parseCFFHeader","header","formatMajor","formatMinor","TOP_DICT_META","PRIVATE_DICT_META","parseCFFTopDict","parseCFFPrivateDict","parseCFFCharset","nGlyphs","sid","format","parseCFFEncoding","enc","nCodes","nRanges","first","nLeft","parseCFFCharstring","c1x","c1y","c2x","c2y","stack","nStems","haveWidth","width","defaultWidthX","newContour","parseStems","hasWidthArg","shift","nominalWidthX","codeIndex","subrCode","jpx","jpy","c3x","c3y","c4x","c4y","pop","subrsBias","subrs","abs","console","log","gsubrsBias","gsubrs","calcCFFSubroutineBias","bias","parseCFFTable","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDictData","topDict","privateDictOffset","privateDict","subrOffset","subrIndex","charStringsIndex","charStrings","charString","encodeString","makeHeader","makeNameIndex","fontNames","makeDict","attrs","entry","makeTopDict","makeTopDictIndex","topDicts","makeStringIndex","makeGlobalSubrIndex","makeCharsets","glyphName","glyphSID","glyphToOps","ops","dx","dy","_13","_23","dx1","dy1","dx2","dy2","makeCharStringsIndex","makePrivateDict","makePrivateDictIndex","privateDicts","makeCFFTable","fullName","weight","weightName","private","privateAttrs","postScriptName","charsets","privateDictIndex","make","../encoding","../glyph","../parse","../path","../table",11,"parseCmapTable","platformId","encodingId","language","segCount","endCountParser","startCountParser","idDeltaParser","idRangeOffsetParser","glyphIndexOffset","endCount","startCount","idDelta","idRangeOffset","addSegment","segments","end","delta","addTerminatorSegment","makeCmapTable","sort","segCountX2","searchRange","floor","entrySelector","rangeShift","endCounts","startCounts","idDeltas","idRangeOffsets","glyphIds","segment","concat","glyphId","../check",12,"parseGlyphCoordinate","flag","previousValue","shortVectorBitMask","sameBitMask","parseGlyph","numberOfContours","flags","endPointIndices","instructionLength","instructions","numberOfCoordinates","repeatCount","point","onCurve","px","py","isComposite","components","moreComponents","component","xScale","scale01","scale10","yScale","transformPoints","transform","newPoints","newPt","contour","firstPt","lastPt","curvePt","realFirstPoint","prevPt","midPt","parseGlyfTable","nextOffset","componentGlyph","transformedPoints",13,"parseTaggedListTable","list","parseCoverageTable","coverage","begin","parseClassDefTable","startGlyph","glyphCount","classes","glyphID","rangeCount","startGlyphs","endGlyphs","classValues","parsePairPosSubTable","coverageOffset","valueFormat1","valueFormat2","value1","value2","sharedPairSets","pairSetCount","pairSet","pairSetOffsets","firstGlyph","pairSetOffset","sharedPairSet","pairValueCount","secondGlyph","pairs","classDef1Offset","classDef2Offset","class1Count","class2Count","getClass1","getClass2","kerningMatrix","kerningRow","covered","class1","class2","parseLookupTable","lookupType","lookupFlag","useMarkFilteringSet","subTableCount","subTableOffsets","markFilteringSet","subtables","parseGposTable","tableVersion","lookupListOffset","lookupCount","lookupTableOffsets","lookupListAbsoluteOffset",14,"parseHeadTable","fontRevision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","glyphDataFormat","makeHeadTable",15,"parseHheaTable","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","makeHheaTable",16,"parseHmtxTable","numMetrics","makeHmtxTable",17,"parseKernTable","subTableVersion","nPairs","leftIndex","rightIndex",18,"parseLocaTable","parseFn","glyphOffsets","glyphOffset",19,"parseMaxpTable","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","makeMaxpTable",20,"nameTableNames","parseNameTable","stringOffset","unknownCount","platformID","encodingID","languageID","nameID","property","codePoints","str","langTagCount","makeNameRecord","addMacintoshNameRecord","recordID","stringBytes","STRING","records","addWindowsNameRecord","utf16Bytes","UTF16","makeNameTable","../types",21,"unicodeRanges","getUnicodeRange","range","parseOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContent","makeOS2Table",22,"parsePostTable","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","nameLength","makePostTable",23,"log2","computeCheckSum","sum","makeTableRecord","checkSum","makeSfntTable","highestPowerOf2","recordFields","tableFields","tableLength","tableRecord","isNaN","r1","r2","metricsForChar","chars","notFoundMetrics","average","vs","fontToSfntTable","xMins","yMins","xMaxs","yMaxs","advanceWidths","leftSideBearings","rightSideBearings","firstCharIndex","lastCharIndex","position","globals","advanceWidthAvg","maxLeftSideBearing","headTable","hheaTable","maxpTable","os2Table","hmtxTable","cmapTable","nameTable","uniqueID","preferredFamily","preferredSubfamily","postTable","cffTable","checkSumAdjusted","./cff","./cmap","./head","./hhea","./hmtx","./maxp","./name","./os2","./post",24,"LIMIT16","LIMIT32","decode","constant","BYTE","CHAR","CHARARRAY","USHORT","SHORT","UINT24","ULONG","LONG","FIXED","FWORD","UFWORD","LONGDATETIME","TAG","Card8","Card16","OffSize","SID","NUMBER","NUMBER16","NUMBER32","NAME","INDEX","dataSize","OBJECT","encodedOffsets","offsetEncoder","encodedOffset","DICT","OPERAND","OPERATOR","OP","wmm","WeakMap","CHARSTRING","has","get","set","encodingFunction","LITERAL","paper","noCanvas","process","browser","WorkerGlobalScope","Base","hidden","iter","bind","forIn","proto","__proto__","describe","getOwnPropertyDescriptor","obj","__lookupGetter__","__lookupSetter__","enumerable","configurable","writable","_define","defineProperty","desc","__defineGetter__","__defineSetter__","inject","dest","src","beans","preserve","beansNames","val","substring","isFunc","res","prev","bean","base","match","toLowerCase","part","each","getLength","exclude","statics","ctor","initialize","clone","pick","_id","_class","Formatter","instance","number","join","getClassName","exportJSON","toJSON","serialize","_set","dontCheck","orig","_filtering","obj1","obj2","checkKeys","o1","o2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","formatter","precision","definitions","references","item","id","ref","unshift","_serialize","_compact","deserialize","json","_data","isRoot","isDictionary","JSON","stringify","importJSON","target","isTarget","Item","Layer","insert","splice","items","remove","append","_index","removed","capitalize","toUpperCase","camelize","all","chr","hyphenate","Emitter","on","_eventTypes","handlers","_callbacks","install","off","uninstall","once","emit","event","stop","responds","attach","detach","fire","_installEvents","events","_events","types","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","project","projects","tools","palettes","_scopes","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","navigator","userAgent","v1","v2","rv","chrome","versionNumber","webkit","atom","getView","getPaper","execute","PaperScript","View","updateFocus","scope","that","setup","element","Project","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","val1","val2","separator","height","rectangle","Numerical","abscissas","weights","sqrt","TOLERANCE","EPSILON","MACHINE_EPSILON","KAPPA","isZero","integrate","w","A","B","Ax","findRoot","df","tolerance","fx","nx","solveQuadratic","roots","Infinity","D","gmC","mult","LOG10E","isFinite","R","q","solveCubic","c2","ec","x0","qd","tmp","Point","arg0","arg1","hasY","angle","setAngle","setLength","_angle","cos","sin","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","atan2","div","NaN","dot","acos","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","current","rotate","center","subtract","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","contains","isClose","isColinear","isOrthogonal","point1","point2","random","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","to","next","rect","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","left","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","concatenate","a1","c1","d1","a2","d2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","bounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","apx","apy","avx","avy","bpx","bpy","bvx","bvy","ta","tb","vx","vy","v2x","v2y","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","_drawSelection","Symbol","dontCenter","setDefinition","_definition","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","PlacedSymbol","symbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","visible","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","parent","setParent","mouseFlags","mousedown","mousedrag","click","doubleclick","mouseup","mousemove","mouseenter","mouseleave","mouseEvent","counters","_eventCounters","onFrame","_animateItem","onLoad","animate","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","children","_children","namedChildren","_namedChildren","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getRegistration","setRegistration","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","child","setBounds","cache","_boundsCache","ids","cached","_internal","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","copy","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","ceil","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","getIntersections","guides","parentTotalMatrix","_totalMatrix","view","totalMatrix","tolerancePadding","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","class","checkBounds","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","matches","compare","matchObject","firstOnly","overlapping","inside","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","reduce","namedArray","notifyParent","replaceWith","reverseChildren","reverse","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","toCanvasStyle","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","getViewMatrix","normalBlend","nativeBlend","direct","dontStart","clip","_canComposite","mainCtx","itemOffset","prevOffset","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","getWindingRule","getCornerCenter","halfSize","dir","corner","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","getElement","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","modify","setContext","context","toDataURL","loaded","update","document","getElementById","Image","setTimeout","DomEvent","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","isLinear","_point","_handleIn","_handleOut","_path","curves","_curves","curve","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","setLinear","linear","next1","getNext","next2","getPrevious","isArc","handle1","handle2","_selectionState","state","oldState","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","removeSegment","interpolate","segment0","segment1","coef","dxPoint","dyPoint","dxHandleIn","dyHandleIn","dxHandleOut","dyHandleOut","change","Curve","arg6","arg7","_segment2","segment2","_length","getPoint1","setPoint1","getPoint2","setPoint2","getHandle1","setHandle1","getHandle2","setHandle2","getSegment1","getSegment2","getPoints","getPart","getPartLength","filterIntersections","_getParameter","isParameter","parameter","getParameterAt","ignoreLinear","subdivide","split","p1","h1","h2","p2","evaluate","p1x","p1y","p2x","p2y","bx","ax","by","ay","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","txs","tys","sx","sy","isFlatEnough","ux","uy","getEdgeSum","_addBounds","v0","v3","padding","tMin","tMax","getLocationAt","getLocationOf","getOffsetOf","loc","getNearestLocation","minDist","minT","refine","dist","step","getNearestPoint","getLengthIntegrand","getIterations","ds","forward","rangeLength","guess","addLocation","locations","curve1","t1","curve2","t2","addCurveIntersections","uMin","uMax","oldTDiff","recursion","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","tMinNew","tMaxNew","tDiff","hull","getConvexHull","tMinClip","tMaxClip","clipConvexHull","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","flip","pmax","distZero","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rlx2","rvl","rvc","tc","tl","addLineIntersection","linear1","linear2","c1p1","c1p2","c2p1","c2p2","_expand","last","_curve","_curve2","_parameter","_parameter2","loc1","loc2","path1","path2","getParameter","getIntersection","_point2","_distance","getSegment","_preferFirst","_segment","_uncached","intersection","_intersection","_getOffset","getCurveOffset","getPointAt","curves1","curves2","matrix1","matrix2","length1","length2","values2","values1","seg1","seg2","setPathData","relative","previous","control","getCoord","command","lower","move","cubicCurveTo","arcTo","winding","_getWinding","closed","setSegments","_clockwise","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","curX","curY","prevX","prevY","inX","inY","outX","outY","skipLine","isPolygon","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","simplify","fitter","PathFitter","fit","isClockwise","setClockwise","clockwise","last1","last2","first2","first1","path0","toShape","topCenter","shape","numSegments","strokePadding","cap","hitStroke","hitFill","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","_addBevelJoin","_addSquareCap","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","overlap","knots","f1","f2","ie","je","getCurrentSegment","moveBy","through","extent","vector","middle","large","epsilon","rxSq","rySq","xSq","ySq","l1","l2","throughSide","centerSide","ext","inc","z","out","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","prevCoords","processSegment","joinBounds","addRound","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getNormal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","compoundpath0","compoundpath1","paths","getCurrentPath","operators","computeBoolean","operation","operator","preparePath","reorient","_path1","_path2","splitPath","monoCurves","collect","_getMonoCurves","_winding","startSeg","totalLength","windingSum","curveLength","getTangentAt","getWinding","tracePaths","intersections","linearHandles","resetLinear","newCurve","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","prevT","slope","selfOp","_visited","inter","startInterSeg","added","interSeg","c4","c3","t3","t4","w3","w4","nextCurve","nextSeg","firstSegment","lastSegment","prevCurve","insertCurve","y0","handleCurve","y3","getInteriorPoint","xIntercepts","maxRecursion","minDifference","addCurve","computeParts","maxT","halfT","prevVal","prevLen","error","fitCubic","tan1","tan2","pt1","pt2","uPrime","chordLengthParameterize","maxError","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","C","X","detC0C1","alpha1","alpha2","detC0X","detXC1","c0","segLength","diff","degree","maxDist","P","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","gray","rgb","hsb","hsl","gradient","componentParsers","colorCache","colorCtx","fromCSS","hsbIndices","converters","rgb-hsb","h","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","hasOverlap","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","_stops","origin","destination","canvasGradient","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","acronym","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","nativeRequest","requested","callbacks","focused","timer","focus","blur","handleCallbacks","setInterval","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","getCanvasSize","_windowEvents","resize","setViewSize","_setViewSize","Stats","_stats","stats","domElement","appendChild","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","onResize","_time","_count","_requestFrame","_requested","_handleFrame","now","Date","_before","_handlingFrame","time","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tool","prevFocus","tempFocus","dragging","handleMouseMove","_handleEvent","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","HTMLCanvasElement","deviceRatio","backingStoreRatio","prevFont","measureText","downPoint","lastPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","callEvent","MouseEvent","isStopped","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","specialKeys",27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","space","charCodeMap","keyMap","downCode","handleKey","keyCode","charCode","specialKey","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","method","xhr","ActiveXObject","overrideMimeType","onreadystatechange","readyState","responseText","canvases","createElement","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","attribute","fromSVG","exportFilter","SVGNamespaces","xlink","setAttributes","namespace","setAttributeNS","createElementNS","getTransform","coordinates","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","exporters","applyStyle","visibility","svgs","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","map","importGroup","childNodes","isClip","currentStyle","applyAttributes","importSVG","importPoly","importPath","pathData","importGradient","isRadial","importers","#document","nextSibling","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","applyTransform","transforms","applyOpacity","attributes","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","styles","group","parentNode","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","onImport","expandShapes","Collection","cb","wrapConstructor","useConstructed","wrapper","arr","params","rconstructor","constructorFilter","unwrapArg","isPlural","unwrapArgs","proxy","methodNames","getOwnPropertyNames","filter","plural","ot","glyphMap","charMap","altMap","_subset","addGlyph","addGlyphs","fonts","addedFonts","delete","styleElement","styleSheet","styleSheets","ss","ownerNode","_lastSubset","normalizeSubset","getGlyphSubset","font0","font1","updateSVGData","updateOTCommands","importOT","otFont","otGlyph","_URL","URL","webkitURL","addToFonts","fontface","FontFace","createObjectURL","fontObjectURL","revokeObjectURL","deleteRule","insertRule","onloadend","readAsDataURL","lastIndexOf","../node_modules/opentype.js/dist/opentype.js","./Glyph.js","anchors","parentAnchors","addComponent","addComponents","addAnchor","addAnchors","addParentAnchor","glyph0","glyph1","svgData","addContour","../node_modules/paper/dist/paper-core.js","defineProperties","firstNode","lastNode","_updateData","pushSimple","pushBezier","Node","./Collection.js","./Font.js","./Node.js","./Path.js","updateUtils","Utils","_","ufoToPaper","outline","lib","transformList","glyphFromSrc","fontSrc","naive","embed","mergeStatic","anchorSrc","contourSrc","nodeSrc","embedComponents","componentSrc","annotator","cursor","propFromCursor","_dependencies","_parameters","_updaters","createUpdaters","leaf","_operation","solveDependencyTree","depTree","dependencyTree","order","simplified","simplifyResolutionOrder","parentSrc","leafSrc","currCursor","rdeg","transformsToMatrix","Float32Array","curr","rslt","inSkeleton","autoExpandedNodeSrc","side","expandedNodeUpdater","expandedTo","skeletonCopier","explicitExpandedNodeSrc","expandedContourSrc","curviness","prepareContour","updateContour","additionalContours","skeleton","leftContour","rightContour","leftNodes","rightNodes","leftNodesSrc","rightNodesSrc","leftSrc","rightSrc","expandedFrom","typeIn","typeOut","addContours","isLeft","distr","_dirOut","_dirIn","tensionIn","tensionOut","tension","lineAngle","startCtrl","endCtrl","startType","endType","startTension","endTension","startDir","endDir","rri","rayRayIntersection","dirIn","dirOut","parametricFont","fontinfo","info","glyphSrc","solvingOrder","propName","transformOrigin","_node","_contour","lineLineIntersection","p4","x3","x4","y4","onLine"],"mappings":"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AAAjE,IAAA,MACAiE,MAAA,IAAAjE,IAAA,MACAiE,MAAA,IAAAjE,IAAA,MACAiE,MAAA,IAAAjE,IAAA,MACAiE,MAAA,IAAAjE,IAAA,OACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,OACAiE,MAAA,KAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,MAAAjE,IAAA,QACAiE,MAAA,M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;AACA;AACA;AACA;AACA;AACA;AACA;;ACztFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACznhzlKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClhokrbgsourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var DepTree = function() {\n  this.nodes = {}; \n};\n\nDepTree.prototype.add = function(node, dependants) {\n  var self = this;\n\n  if (!dependants) {\n    dependants = [];\n  } else if (!(dependants instanceof Array)) {\n    dependants = [dependants];\n  }\n\n  this.nodes[node] = dependants;\n};\n\n\nDepTree.prototype.resolveNode = function(node, resolved, processing) {\n\n  var self = this;\n\n  resolved = resolved || [];\n  processing = processing || {};\n  var deps = this.nodes[node] || [];\n\n  processing[node] = true;\n\n  deps.forEach(function(dep) {\n    if (resolved.indexOf(dep) != -1) {\n      return;\n    }\n    if (processing[dep]) {\n      throw new Error('Circular dependency: '+dep);\n    }\n    self.resolveNode(dep, resolved, processing);\n  });\n\n  if (resolved.indexOf(node) == -1) {\n    processing[node] = false;\n    resolved.push(node);\n  }\n  return resolved;\n};\n\nDepTree.prototype.resolve = function() {\n\n  var resolved = [];\n  for (var node in this.nodes) {\n    this.resolveNode(node, resolved);\n  }\n\n  return resolved;\n\n};\n\n\nmodule.exports = DepTree;\n","/**\n * lodash 3.1.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar arrayCopy = require('lodash._arraycopy'),\n    arrayEach = require('lodash._arrayeach'),\n    baseFor = require('lodash._basefor'),\n    createAssigner = require('lodash._createassigner'),\n    isArguments = require('lodash.isarguments'),\n    isArray = require('lodash.isarray'),\n    isNative = require('lodash.isnative'),\n    isPlainObject = require('lodash.isplainobject'),\n    isTypedArray = require('lodash.istypedarray'),\n    keys = require('lodash.keys'),\n    keysIn = require('lodash.keysin'),\n    toPlainObject = require('lodash.toplainobject');\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.merge` without support for argument juggling,\n * multiple sources, and `this` binding `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} [customizer] The function to customize merging properties.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates values with source counterparts.\n * @returns {Object} Returns the destination object.\n */\nfunction baseMerge(object, source, customizer, stackA, stackB) {\n  if (!isObject(object)) {\n    return object;\n  }\n  var isSrcArr = isLength(source.length) && (isArray(source) || isTypedArray(source));\n  (isSrcArr ? arrayEach : baseForOwn)(source, function(srcValue, key, source) {\n    if (isObjectLike(srcValue)) {\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n      return baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n    }\n    var value = object[key],\n        result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n        isCommon = typeof result == 'undefined';\n\n    if (isCommon) {\n      result = srcValue;\n    }\n    if ((isSrcArr || typeof result != 'undefined') &&\n        (isCommon || (result === result ? (result !== value) : (value === value)))) {\n      object[key] = result;\n    }\n  });\n  return object;\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize merging properties.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates values with source counterparts.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n  var length = stackA.length,\n      srcValue = source[key];\n\n  while (length--) {\n    if (stackA[length] == srcValue) {\n      object[key] = stackB[length];\n      return;\n    }\n  }\n  var value = object[key],\n      result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n      isCommon = typeof result == 'undefined';\n\n  if (isCommon) {\n    result = srcValue;\n    if (isLength(srcValue.length) && (isArray(srcValue) || isTypedArray(srcValue))) {\n      result = isArray(value)\n        ? value\n        : ((value && value.length) ? arrayCopy(value) : []);\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      result = isArguments(value)\n        ? toPlainObject(value)\n        : (isPlainObject(value) ? value : {});\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  // Add the source value to the stack of traversed objects and associate\n  // it with its merged value.\n  stackA.push(srcValue);\n  stackB.push(result);\n\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n  } else if (result === result ? (result !== value) : (value === value)) {\n    object[key] = result;\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type == 'function' || (!!value && type == 'object');\n}\n\n/**\n * Recursively merges own enumerable properties of the source object(s), that\n * don't resolve to `undefined` into the destination object. Subsequent sources\n * overwrite property assignments of previous sources. If `customizer` is\n * provided it is invoked to produce the merged values of the destination and\n * source properties. If `customizer` returns `undefined` merging is handled\n * by the method instead. The `customizer` is bound to `thisArg` and invoked\n * with five arguments: (objectValue, sourceValue, key, object, source).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @param {Function} [customizer] The function to customize merging properties.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var users = {\n *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n * };\n *\n * var ages = {\n *   'data': [{ 'age': 36 }, { 'age': 40 }]\n * };\n *\n * _.merge(users, ages);\n * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n *\n * // using a customizer callback\n * var object = {\n *   'fruits': ['apple'],\n *   'vegetables': ['beet']\n * };\n *\n * var other = {\n *   'fruits': ['banana'],\n *   'vegetables': ['carrot']\n * };\n *\n * _.merge(object, other, function(a, b) {\n *   if (_.isArray(a)) {\n *     return a.concat(b);\n *   }\n * });\n * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n */\nvar merge = createAssigner(baseMerge);\n\nmodule.exports = merge;\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction arrayCopy(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayCopy;\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `_.forEach` for arrays without support for callback\n * shorthands or `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iterator functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Converts `value` to an object if it is not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type == 'function' || (!!value && type == 'object');\n}\n\nmodule.exports = baseFor;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar bindCallback = require('lodash._bindcallback'),\n    isIterateeCall = require('lodash._isiterateecall');\n\n/**\n * Creates a function that assigns properties of source object(s) to a given\n * destination object.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return function() {\n    var args = arguments,\n        length = args.length,\n        object = args[0];\n\n    if (length < 2 || object == null) {\n      return object;\n    }\n    var customizer = args[length - 2],\n        thisArg = args[length - 1],\n        guard = args[3];\n\n    if (length > 3 && typeof customizer == 'function') {\n      customizer = bindCallback(customizer, thisArg, 5);\n      length -= 2;\n    } else {\n      customizer = (length > 2 && typeof thisArg == 'function') ? thisArg : null;\n      length -= (customizer ? 1 : 0);\n    }\n    if (guard && isIterateeCall(args[1], args[2], guard)) {\n      customizer = length == 3 ? null : customizer;\n      length = 2;\n    }\n    var index = 0;\n    while (++index < length) {\n      var source = args[index];\n      if (source) {\n        assigner(object, source, customizer);\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createAssigner;\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (typeof thisArg == 'undefined') {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = bindCallback;\n","/**\n * lodash 3.0.5 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = +value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number') {\n    var length = object.length,\n        prereq = isLength(length) && isIndex(index, length);\n  } else {\n    prereq = type == 'string' && index in object;\n  }\n  if (prereq) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type == 'function' || (!!value && type == 'object');\n}\n\nmodule.exports = isIterateeCall;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  var length = isObjectLike(value) ? value.length : undefined;\n  return isLength(length) && objToString.call(value) == argsTag;\n}\n\nmodule.exports = isArguments;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]',\n    funcTag = '[object Function]';\n\n/** Used to detect host constructors (Safari > 5). */\nvar reHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n * In addition to special characters the forward slash is escaped to allow for\n * easier `eval` use and `Function` compilation.\n */\nvar reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n    reHasRegExpChars = RegExp(reRegExpChars.source);\n\n/**\n * Converts `value` to a string if it is not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  if (typeof value == 'string') {\n    return value;\n  }\n  return value == null ? '' : (value + '');\n}\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reNative = RegExp('^' +\n  escapeRegExp(objToString)\n  .replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (objToString.call(value) == funcTag) {\n    return reNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reHostCtor.test(value);\n}\n\n/**\n * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n */\nfunction escapeRegExp(string) {\n  string = baseToString(string);\n  return (string && reHasRegExpChars.test(string))\n    ? string.replace(reRegExpChars, '\\\\$&')\n    : string;\n}\n\nmodule.exports = isArray;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used to detect host constructors (Safari > 5). */\nvar reHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n * In addition to special characters the forward slash is escaped to allow for\n * easier `eval` use and `Function` compilation.\n */\nvar reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n    reHasRegExpChars = RegExp(reRegExpChars.source);\n\n/**\n * Converts `value` to a string if it is not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  if (typeof value == 'string') {\n    return value;\n  }\n  return value == null ? '' : (value + '');\n}\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reNative = RegExp('^' +\n  escapeRegExp(objToString)\n  .replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (objToString.call(value) == funcTag) {\n    return reNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reHostCtor.test(value);\n}\n\n/**\n * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n */\nfunction escapeRegExp(string) {\n  string = baseToString(string);\n  return (string && reHasRegExpChars.test(string))\n    ? string.replace(reRegExpChars, '\\\\$&')\n    : string;\n}\n\nmodule.exports = isNative;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseFor = require('lodash._basefor'),\n    isNative = require('lodash.isnative'),\n    keysIn = require('lodash.keysin');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Native method references. */\nvar getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf;\n\n/**\n * The base implementation of `_.forIn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForIn(object, iteratee) {\n  return baseFor(object, iteratee, keysIn);\n}\n\n/**\n * A fallback implementation of `_.isPlainObject` which checks if `value`\n * is an object created by the `Object` constructor or has a `[[Prototype]]`\n * of `null`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n */\nfunction shimIsPlainObject(value) {\n  var Ctor;\n\n  // Exit early for non `Object` objects.\n  if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\n      (!hasOwnProperty.call(value, 'constructor') &&\n        (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n    return false;\n  }\n  // IE < 9 iterates inherited properties before own properties. If the first\n  // iterated property is an object's own property then there are no inherited\n  // enumerable properties.\n  var result;\n  // In most environments an object's own properties are iterated before\n  // its inherited properties. If the last iterated property is an object's\n  // own property then there are no inherited enumerable properties.\n  baseForIn(value, function(subValue, key) {\n    result = key;\n  });\n  return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * **Note:** This method assumes objects created by the `Object` constructor\n * have no inherited enumerable properties.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nvar isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n  if (!(value && objToString.call(value) == objectTag)) {\n    return false;\n  }\n  var valueOf = value.valueOf,\n      objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n  return objProto\n    ? (value == objProto || getPrototypeOf(value) == objProto)\n    : shimIsPlainObject(value);\n};\n\nmodule.exports = isPlainObject;\n","/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n}\n\nmodule.exports = isTypedArray;\n","/**\n * lodash 3.0.5 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar isArguments = require('lodash.isarguments'),\n    isArray = require('lodash.isarray'),\n    isNative = require('lodash.isnative');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * An object environment feature flags.\n *\n * @static\n * @memberOf _\n * @type Object\n */\nvar support = {};\n\n(function(x) {\n\n  /**\n   * Detect if `arguments` object indexes are non-enumerable.\n   *\n   * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n   * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n   * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n   * checks for indexes that exceed their function's formal parameters with\n   * associated values of `0`.\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  try {\n    support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n  } catch(e) {\n    support.nonEnumArgs = true;\n  }\n}(0, 0));\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = +value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = length && isLength(length) &&\n    (isArray(object) || (support.nonEnumArgs && isArguments(object)));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type == 'function' || (!!value && type == 'object');\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  if (object) {\n    var Ctor = object.constructor,\n        length = object.length;\n  }\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && (length && isLength(length)))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || (support.nonEnumArgs && isArguments(object))) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n","/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar isArguments = require('lodash.isarguments'),\n    isArray = require('lodash.isarray');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * An object environment feature flags.\n *\n * @static\n * @memberOf _\n * @type Object\n */\nvar support = {};\n\n(function(x) {\n\n  /**\n   * Detect if `arguments` object indexes are non-enumerable.\n   *\n   * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n   * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n   * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n   * checks for indexes that exceed their function's formal parameters with\n   * associated values of `0`.\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  try {\n    support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n  } catch(e) {\n    support.nonEnumArgs = true;\n  }\n}(0, 0));\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = +value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type == 'function' || (!!value && type == 'object');\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || (support.nonEnumArgs && isArguments(object))) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keysIn;\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseCopy = require('lodash._basecopy'),\n    keysIn = require('lodash.keysin');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable\n * properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return baseCopy(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Copies the properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Array} props The property names to copy.\n * @returns {Object} Returns `object`.\n */\nfunction baseCopy(source, object, props) {\n  if (!props) {\n    props = object;\n    object = {};\n  }\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    object[key] = source[key];\n  }\n  return object;\n}\n\nmodule.exports = baseCopy;\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.plumin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.opentype = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// Run-time checking of preconditions.\n\n'use strict';\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nexports.argument = function(predicate, message) {\n    if (!predicate) {\n        throw new Error(message);\n    }\n};\n\n// Precondition function that checks if the given assertion is true.\n// If not, it will throw an error.\nexports.assert = exports.argument;\n\n},{}],2:[function(require,module,exports){\n// Drawing utility functions.\n\n'use strict';\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexports.line = line;\n\n},{}],3:[function(require,module,exports){\n// Glyph encoding\n\n'use strict';\n\nvar cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nvar cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n// This is the encoding used for fonts created from scratch.\n// It loops through all glyphs and finds the appropriate unicode value.\n// Since it's linear time, other encodings will be faster.\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    var code = c.charCodeAt(0);\n    var glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs[i];\n            for (var j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    } else {\n        return null;\n    }\n};\n\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n};\n\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    var code = s.charCodeAt(0);\n    var charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction GlyphNames(post) {\n    var i;\n    switch (post.version) {\n    case 1:\n        this.names = exports.standardNames.slice();\n        break;\n    case 2:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] < exports.standardNames.length) {\n                this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n            } else {\n                this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n            }\n        }\n\n        break;\n    case 2.5:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n        }\n\n        break;\n    case 3:\n        this.names = [];\n        break;\n    }\n}\n\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNames(font) {\n    var glyph;\n    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    var charCodes = Object.keys(glyphIndexMap);\n    for (var i = 0; i < charCodes.length; i += 1) {\n        var c = charCodes[i];\n        var glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs[glyphIndex];\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs[i];\n        if (font.cffEncoding) {\n            glyph.name = font.cffEncoding.charset[i];\n        } else {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexports.cffStandardStrings = cffStandardStrings;\nexports.cffStandardEncoding = cffStandardEncoding;\nexports.cffExpertEncoding = cffExpertEncoding;\nexports.standardNames = standardNames;\nexports.DefaultEncoding = DefaultEncoding;\nexports.CmapEncoding = CmapEncoding;\nexports.CffEncoding = CffEncoding;\nexports.GlyphNames = GlyphNames;\nexports.addGlyphNames = addGlyphNames;\n\n},{}],4:[function(require,module,exports){\n// The Font object\n\n'use strict';\n\nvar path = require('./path');\nvar sfnt = require('./tables/sfnt');\nvar encoding = require('./encoding');\n\n// A Font represents a loaded OpenType font file.\n// It contains a set of glyphs and methods to draw text on a drawing context,\n// or to get a path representing the text.\nfunction Font(options) {\n    options = options || {};\n\n    // OS X will complain if the names are empty, so we put a single space everywhere by default.\n    this.familyName = options.familyName || ' ';\n    this.styleName = options.styleName || ' ';\n    this.designer = options.designer || ' ';\n    this.designerURL = options.designerURL || ' ';\n    this.manufacturer = options.manufacturer || ' ';\n    this.manufacturerURL = options.manufacturerURL || ' ';\n    this.license = options.license || ' ';\n    this.licenseURL = options.licenseURL || ' ';\n    this.version = options.version || 'Version 0.1';\n    this.description = options.description || ' ';\n    this.copyright = options.copyright || ' ';\n    this.trademark = options.trademark || ' ';\n    this.unitsPerEm = options.unitsPerEm || 1000;\n    this.ascender = options.ascender;\n    this.descender = options.descender;\n    this.supported = true;\n    this.glyphs = options.glyphs || [];\n    this.encoding = new encoding.DefaultEncoding(this);\n    this.tables = {};\n}\n\n// Check if the font has a glyph for the given character.\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n// Convert the given character to a single glyph index.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n// Convert the given character to a single Glyph object.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyph = function(c) {\n    var glyphIndex = this.charToGlyphIndex(c);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\n// Convert the given text to a list of Glyph objects.\n// Note that there is no strict one-to-one mapping between characters and\n// glyphs, so the list of returned glyphs can be larger or smaller than the\n// length of the given string.\nFont.prototype.stringToGlyphs = function(s) {\n    var glyphs = [];\n    for (var i = 0; i < s.length; i += 1) {\n        var c = s[i];\n        glyphs.push(this.charToGlyph(c));\n    }\n\n    return glyphs;\n};\n\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\nFont.prototype.nameToGlyph = function(name) {\n    var glyphIndex = this.nametoGlyphIndex(name);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n// Retrieve the value of the kerning pair between the left glyph (or its index)\n// and the right glyph (or its index). If no kerning pair is found, return 0.\n// The kerning value gets added to the advance width when calculating the spacing\n// between glyphs.\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.getGposKerningValue;\n    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n};\n\n// Helper function that invokes the given callback for each glyph in the given text.\n// The callback gets `(glyph, x, y, fontSize, options)`.\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    if (!this.supported) {\n        return;\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || {};\n    var kerning = options.kerning === undefined ? true : options.kerning;\n    var fontScale = 1 / this.unitsPerEm * fontSize;\n    var glyphs = this.stringToGlyphs(text);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        callback(glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (kerning && i < glyphs.length - 1) {\n            var kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n    }\n};\n\n// Create a Path object that represents the given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns a Path object.\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    var fullPath = new path.Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        fullPath.extend(glyphPath);\n    });\n\n    return fullPath;\n};\n\n// Draw the text on the given drawing context.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n// Draw the points of all glyphs in the text.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Draw lines indicating important font measurements for all glyphs in the text.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Validate\nFont.prototype.validate = function() {\n    var warnings = [];\n    var _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertStringAttribute(attrName) {\n        assert(_this[attrName] && _this[attrName].trim().length > 0, 'No ' + attrName + ' specified.');\n    }\n\n    // Identification information\n    assertStringAttribute('familyName');\n    assertStringAttribute('weightName');\n    assertStringAttribute('manufacturer');\n    assertStringAttribute('copyright');\n    assertStringAttribute('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n\nFont.prototype.toBuffer = function() {\n    var sfntTable = this.toTables();\n    var bytes = sfntTable.encode();\n    var buffer = new ArrayBuffer(bytes.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n// Initiate a download of the OpenType font.\nFont.prototype.download = function() {\n    var fileName = this.familyName.replace(/\\s/g, '') + '-' + this.styleName + '.otf';\n    var buffer = this.toBuffer();\n\n    window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n    window.requestFileSystem(window.TEMPORARY, buffer.byteLength, function(fs) {\n        fs.root.getFile(fileName, {create: true}, function(fileEntry) {\n            fileEntry.createWriter(function(writer) {\n                var dataView = new DataView(buffer);\n                var blob = new Blob([dataView], {type: 'font/opentype'});\n                writer.write(blob);\n\n                writer.addEventListener('writeend', function() {\n                    // Navigating to the file will download it.\n                    location.href = fileEntry.toURL();\n                }, false);\n            });\n        });\n    },\n\n    function(err) {\n        throw err;\n    });\n};\n\nexports.Font = Font;\n\n},{\"./encoding\":3,\"./path\":8,\"./tables/sfnt\":23}],5:[function(require,module,exports){\n// The Glyph object\n\n'use strict';\n\nvar check = require('./check');\nvar draw = require('./draw');\nvar path = require('./path');\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\nfunction Glyph(options) {\n    this.font = options.font || null;\n    this.index = options.index || 0;\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n    this.xMin = options.xMin || 0;\n    this.yMin = options.yMin || 0;\n    this.xMax = options.xMax || 0;\n    this.yMax = options.yMax || 0;\n    this.advanceWidth = options.advanceWidth || 0;\n    this.path = options.path || null;\n}\n\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n// Convert the glyph to a Path we can draw on a drawing context.\n//\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.getPath = function(x, y, fontSize) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n    var p = new path.Path();\n    var commands = this.path.commands;\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                               x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                      x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n                      x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n// Split the glyph into contours.\n// This function is here for backwards compatibility, and to\n// provide raw access to the TrueType glyph outlines.\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < this.points.length; i += 1) {\n        var pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n// Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\nGlyph.prototype.getMetrics = function() {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: 0\n    };\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// Draw the glyph on the given context.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.draw = function(ctx, x, y, fontSize) {\n    this.getPath(x, y, fontSize).draw(ctx);\n};\n\n// Draw the points of the glyph.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n\n    function drawCircles(l, x, y, scale) {\n        var PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (var j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n\n    var blueCircles = [];\n    var redCircles = [];\n    var path = this.path;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n// Draw lines indicating important font measurements.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    var scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (this.xMin * scale), -10000, x + (this.xMin * scale), 10000);\n    draw.line(ctx, x + (this.xMax * scale), -10000, x + (this.xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-this.yMin * scale), 10000, y + (-this.yMin * scale));\n    draw.line(ctx, -10000, y + (-this.yMax * scale), 10000, y + (-this.yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (this.advanceWidth * scale), -10000, x + (this.advanceWidth * scale), 10000);\n};\n\nexports.Glyph = Glyph;\n\n},{\"./check\":1,\"./draw\":2,\"./path\":8}],6:[function(require,module,exports){\n// opentype.js\n// https://github.com/nodebox/opentype.js\n// (c) 2014 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global ArrayBuffer, DataView, Uint8Array, XMLHttpRequest  */\n\n'use strict';\n\nvar encoding = require('./encoding');\nvar _font = require('./font');\nvar glyph = require('./glyph');\nvar parse = require('./parse');\nvar path = require('./path');\n\nvar cmap = require('./tables/cmap');\nvar cff = require('./tables/cff');\nvar glyf = require('./tables/glyf');\nvar gpos = require('./tables/gpos');\nvar head = require('./tables/head');\nvar hhea = require('./tables/hhea');\nvar hmtx = require('./tables/hmtx');\nvar kern = require('./tables/kern');\nvar loca = require('./tables/loca');\nvar maxp = require('./tables/maxp');\nvar _name = require('./tables/name');\nvar os2 = require('./tables/os2');\nvar post = require('./tables/post');\n\n// File loaders /////////////////////////////////////////////////////////\n\n// Convert a Node.js Buffer to an ArrayBuffer\nfunction toArrayBuffer(buffer) {\n    var arrayBuffer = new ArrayBuffer(buffer.length);\n    var data = new Uint8Array(arrayBuffer);\n    for (var i = 0; i < buffer.length; i += 1) {\n        data[i] = buffer[i];\n    }\n\n    return arrayBuffer;\n}\n\nfunction loadFromFile(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, toArrayBuffer(buffer));\n    });\n}\n\nfunction loadFromUrl(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.status !== 200) {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n\n        return callback(null, request.response);\n    };\n\n    request.send();\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n// Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n// If the file could not be parsed (most likely because it contains Postscript outlines)\n// we return an empty Font object with the `supported` flag set to `false`.\nfunction parseBuffer(buffer) {\n    var indexToLocFormat;\n    var hmtxOffset;\n    var glyfOffset;\n    var locaOffset;\n    var cffOffset;\n    var kernOffset;\n    var gposOffset;\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n\n    var font = new _font.Font();\n    var data = new DataView(buffer, 0);\n\n    var version = parse.getFixed(data, 0);\n    if (version === 1.0) {\n        font.outlinesFormat = 'truetype';\n    } else {\n        version = parse.getTag(data, 0);\n        if (version === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType version ' + version);\n        }\n    }\n\n    var numTables = parse.getUShort(data, 4);\n\n    // Offset into the table records.\n    var p = 12;\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var offset = parse.getULong(data, p + 8);\n        switch (tag) {\n        case 'cmap':\n            font.tables.cmap = cmap.parse(data, offset);\n            font.encoding = new encoding.CmapEncoding(font.tables.cmap);\n            if (!font.encoding) {\n                font.supported = false;\n            }\n\n            break;\n        case 'head':\n            font.tables.head = head.parse(data, offset);\n            font.unitsPerEm = font.tables.head.unitsPerEm;\n            indexToLocFormat = font.tables.head.indexToLocFormat;\n            break;\n        case 'hhea':\n            font.tables.hhea = hhea.parse(data, offset);\n            font.ascender = font.tables.hhea.ascender;\n            font.descender = font.tables.hhea.descender;\n            font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n            break;\n        case 'hmtx':\n            hmtxOffset = offset;\n            break;\n        case 'maxp':\n            font.tables.maxp = maxp.parse(data, offset);\n            font.numGlyphs = font.tables.maxp.numGlyphs;\n            break;\n        case 'name':\n            font.tables.name = _name.parse(data, offset);\n            font.familyName = font.tables.name.fontFamily;\n            font.styleName = font.tables.name.fontSubfamily;\n            break;\n        case 'OS/2':\n            font.tables.os2 = os2.parse(data, offset);\n            break;\n        case 'post':\n            font.tables.post = post.parse(data, offset);\n            font.glyphNames = new encoding.GlyphNames(font.tables.post);\n            break;\n        case 'glyf':\n            glyfOffset = offset;\n            break;\n        case 'loca':\n            locaOffset = offset;\n            break;\n        case 'CFF ':\n            cffOffset = offset;\n            break;\n        case 'kern':\n            kernOffset = offset;\n            break;\n        case 'GPOS':\n            gposOffset = offset;\n            break;\n        }\n        p += 16;\n    }\n\n    if (glyfOffset && locaOffset) {\n        var shortVersion = indexToLocFormat === 0;\n        var locaTable = loca.parse(data, locaOffset, font.numGlyphs, shortVersion);\n        font.glyphs = glyf.parse(data, glyfOffset, locaTable, font);\n        hmtx.parse(data, hmtxOffset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n        encoding.addGlyphNames(font);\n    } else if (cffOffset) {\n        cff.parse(data, cffOffset, font);\n        encoding.addGlyphNames(font);\n    } else {\n        font.supported = false;\n    }\n\n    if (font.supported) {\n        if (kernOffset) {\n            font.kerningPairs = kern.parse(data, kernOffset);\n        } else {\n            font.kerningPairs = {};\n        }\n\n        if (gposOffset) {\n            gpos.parse(data, gposOffset, font);\n        }\n    }\n\n    return font;\n}\n\n// Asynchronously load the font from a URL or a filesystem. When done, call the callback\n// with two arguments `(err, font)`. The `err` will be null on success,\n// the `font` is a Font object.\n//\n// We use the node.js callback convention so that\n// opentype.js can integrate with frameworks like async.js.\nfunction load(url, callback) {\n    var isNode = typeof window === 'undefined';\n    var loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function(err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n\n        var font = parseBuffer(arrayBuffer);\n        if (!font.supported) {\n            return callback('Font is not supported (is this a Postscript font?)');\n        }\n\n        return callback(null, font);\n    });\n}\n\nexports._parse = parse;\nexports.Font = _font.Font;\nexports.Glyph = glyph.Glyph;\nexports.Path = path.Path;\nexports.parse = parseBuffer;\nexports.load = load;\n\n},{\"./encoding\":3,\"./font\":4,\"./glyph\":5,\"./parse\":7,\"./path\":8,\"./tables/cff\":10,\"./tables/cmap\":11,\"./tables/glyf\":12,\"./tables/gpos\":13,\"./tables/head\":14,\"./tables/hhea\":15,\"./tables/hmtx\":16,\"./tables/kern\":17,\"./tables/loca\":18,\"./tables/maxp\":19,\"./tables/name\":20,\"./tables/os2\":21,\"./tables/post\":22,\"fs\":undefined}],7:[function(require,module,exports){\n// Parsing utility functions\n\n'use strict';\n\n// Retrieve an unsigned byte from the DataView.\nexports.getByte = function getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n};\n\nexports.getCard8 = exports.getByte;\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getUShort = function(dataView, offset) {\n    return dataView.getUint16(offset, false);\n};\n\nexports.getCard16 = exports.getUShort;\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getShort = function(dataView, offset) {\n    return dataView.getInt16(offset, false);\n};\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nexports.getULong = function(dataView, offset) {\n    return dataView.getUint32(offset, false);\n};\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nexports.getFixed = function(dataView, offset) {\n    var decimal = dataView.getInt16(offset, false);\n    var fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n};\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nexports.getTag = function(dataView, offset) {\n    var tag = '';\n    for (var i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n};\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nexports.getOffset = function(dataView, offset, offSize) {\n    var v = 0;\n    for (var i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n};\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nexports.getBytes = function(dataView, startOffset, endOffset) {\n    var bytes = [];\n    for (var i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n};\n\n// Convert the list of bytes to a string.\nexports.bytesToString = function(bytes) {\n    var s = '';\n    for (var i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n};\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    var offsets = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = exports.getUShort(dataView, offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\nParser.prototype.parseString = function(length) {\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    var string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\nParser.prototype.parseLongDateTime = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v / 65536;\n};\n\nParser.prototype.parseVersion = function() {\n    var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // This returns the correct number if minor = 0xN000 where N is 0-9\n    var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    return major + minor / 0x1000 / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\nexports.Parser = Parser;\n\n},{}],8:[function(require,module,exports){\n// Geometric objects\n\n'use strict';\n\n// A bézier path containing a set of path commands similar to a SVG path.\n// Paths can be drawn on a context using `draw`.\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n// Add the given path or list of commands to the commands of this path.\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n// Draw the path to a 2D context.\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n// Convert the Path to a string of path data instructions\n// See http://www.w3.org/TR/SVG/paths.html#PathData\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n// Convert the path to a SVG <path> element, as a string.\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toSVG = function(decimalPlaces) {\n    var svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill & this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\nexports.Path = Path;\n\n},{}],9:[function(require,module,exports){\n// Table metadata\n\n'use strict';\n\nvar check = require('./check');\nvar encode = require('./types').encode;\nvar sizeOf = require('./types').sizeOf;\n\nfunction Table(tableName, fields, options) {\n    var i;\n    for (i = 0; i < fields.length; i += 1) {\n        var field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        var optionKeys = Object.keys(options);\n        for (i = 0; i < optionKeys.length; i += 1) {\n            var k = optionKeys[i];\n            var v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\nTable.prototype.sizeOf = function() {\n    var v = 0;\n    for (var i = 0; i < this.fields.length; i += 1) {\n        var field = this.fields[i];\n        var value = this[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        if (typeof value.sizeOf === 'function') {\n            v += value.sizeOf();\n        } else {\n            var sizeOfFunction = sizeOf[field.type];\n            check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n            v += sizeOfFunction(value);\n        }\n    }\n\n    return v;\n};\n\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\nexports.Table = Table;\n\n},{\"./check\":1,\"./types\":24}],10:[function(require,module,exports){\n// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\nvar table = require('../table');\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (var i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    //var i, objectOffset, endOffset;\n    var offsets = [];\n    var objects = [];\n    var count = parse.getCard16(data, start);\n    var i;\n    var objectOffset;\n    var endOffset;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        var pos = start + 3;\n        for (i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (i = 0; i < offsets.length - 1; i += 1) {\n        var value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s = '';\n    var eof = 15;\n    var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        var b = parser.parseByte();\n        var n1 = b >> 4;\n        var n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1;\n    var b2;\n    var b3;\n    var b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o = {};\n    for (var i = 0; i < entries.length; i += 1) {\n        var key = entries[i][0];\n        var values = entries[i][1];\n        var value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key)) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    var parser = new parse.Parser(data, start);\n    var entries = [];\n    var operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        var op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = encoding.cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var newDict = {};\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (var i = 0; i < meta.length; i += 1) {\n        var m = meta[i];\n        var value = dict[m.op];\n        if (value === undefined) {\n            value = m.value !== undefined ? m.value : null;\n        }\n\n        if (m.type === 'SID') {\n            value = getCFFString(strings, value);\n        }\n\n        newDict[m.name] = value;\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n];\n\nvar PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var i;\n    var sid;\n    var count;\n    var parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    var charset = ['.notdef'];\n\n    var format = parser.parseCard8();\n    if (format === 0) {\n        for (i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var i;\n    var code;\n    var enc = {};\n    var parser = new parse.Parser(data, start);\n    var format = parser.parseCard8();\n    if (format === 0) {\n        var nCodes = parser.parseCard8();\n        for (i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        var nRanges = parser.parseCard8();\n        code = 1;\n        for (i = 0; i < nRanges; i += 1) {\n            var first = parser.parseCard8();\n            var nLeft = parser.parseCard8();\n            for (var j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new encoding.CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(code, font, index) {\n    var c1x;\n    var c1y;\n    var c2x;\n    var c2y;\n    var p = new path.Path();\n    var stack = [];\n    var nStems = 0;\n    var haveWidth = false;\n    var width = font.defaultWidthX;\n    var open = false;\n    var x = 0;\n    var y = 0;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + font.nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var b1;\n        var b2;\n        var b3;\n        var b4;\n        var codeIndex;\n        var subrCode;\n        var jpx;\n        var jpy;\n        var c3x;\n        var c3y;\n        var c4x;\n        var c4y;\n\n        var i = 0;\n        while (i < code.length) {\n            var v = code[i];\n            i += 1;\n            switch (v) {\n            case 1: // hstem\n                parseStems();\n                break;\n            case 3: // vstem\n                parseStems();\n                break;\n            case 4: // vmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                newContour(x, y);\n                break;\n            case 5: // rlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 6: // hlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 7: // vlineto\n                while (stack.length > 0) {\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 8: // rrcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 10: // callsubr\n                codeIndex = stack.pop() + font.subrsBias;\n                subrCode = font.subrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 11: // return\n                return;\n            case 12: // flex operators\n                v = code[i];\n                i += 1;\n                switch (v) {\n                case 35: // flex\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    y = c4y + stack.shift();      // dy6\n                    stack.shift();                // flex depth\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 34: // hflex\n                    // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y;                      // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = y;                      // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 36: // hflex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 37: // flex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                        x = c4x + stack.shift();\n                    } else {\n                        y = c4y + stack.shift();\n                    }\n\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                default:\n                    console.log('Glyph ' + index + ': unknown operator ' + 1200 + v);\n                    stack.length = 0;\n                }\n                break;\n            case 14: // endchar\n                if (stack.length > 0 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                if (open) {\n                    p.closePath();\n                    open = false;\n                }\n\n                break;\n            case 18: // hstemhm\n                parseStems();\n                break;\n            case 19: // hintmask\n            case 20: // cntrmask\n                parseStems();\n                i += (nStems + 7) >> 3;\n                break;\n            case 21: // rmoveto\n                if (stack.length > 2 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 22: // hmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 23: // vstemhm\n                parseStems();\n                break;\n            case 24: // rcurveline\n                while (stack.length > 2) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                x += stack.shift();\n                y += stack.shift();\n                p.lineTo(x, y);\n                break;\n            case 25: // rlinecurve\n                while (stack.length > 6) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                break;\n            case 26: // vvcurveto\n                if (stack.length % 2) {\n                    x += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x;\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 27: // hhcurveto\n                if (stack.length % 2) {\n                    y += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y;\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 28: // shortint\n                b1 = code[i];\n                b2 = code[i + 1];\n                stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                i += 2;\n                break;\n            case 29: // callgsubr\n                codeIndex = stack.pop() + font.gsubrsBias;\n                subrCode = font.gsubrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 30: // vhcurveto\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 31: // hvcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            default:\n                if (v < 32) {\n                    console.log('Glyph ' + index + ': unknown operator ' + v);\n                } else if (v < 247) {\n                    stack.push(v - 139);\n                } else if (v < 251) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push((v - 247) * 256 + b1 + 108);\n                } else if (v < 255) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push(-(v - 251) * 256 - b1 - 108);\n                } else {\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    b3 = code[i + 2];\n                    b4 = code[i + 3];\n                    i += 4;\n                    stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                }\n            }\n        }\n    }\n\n    parse(code);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.path = p;\n    glyph.advanceWidth = width;\n    return glyph;\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    font.tables.cff = {};\n    var header = parseCFFHeader(data, start);\n    var nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    var stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n    var topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n    font.tables.cff.topDict = topDict;\n\n    var privateDictOffset = start + topDict['private'][1];\n    var privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        var subrOffset = privateDictOffset + privateDict.subrs;\n        var subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    var charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    var charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) { // Standard encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) { // Expert encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = [];\n    for (var i = 0; i < font.nGlyphs; i += 1) {\n        var charString = charStringsIndex.objects[i];\n        font.glyphs.push(parseCFFCharstring(charString, font, i));\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    var sid;\n\n    // Is the string in the CFF standard strings?\n    var i = encoding.cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + encoding.cffStandardStrings.length;\n    } else {\n        sid = encoding.cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Table('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    var t = new table.Table('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (var i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    var m = {};\n    for (var i = 0; i < meta.length; i += 1) {\n        var entry = meta[i];\n        var value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    var t = new table.Table('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    var t = new table.Table('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    var t = new table.Table('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (var i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Table('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    var t = new table.Table('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (var i = 0; i < glyphNames.length; i += 1) {\n        var glyphName = glyphNames[i];\n        var glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    var ops = [];\n    var path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    var x = 0;\n    var y = 0;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var dx;\n        var dy;\n        var cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            var _13 = 1 / 3;\n            var _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            var dx1 = Math.round(cmd.x1 - x);\n            var dy1 = Math.round(cmd.y1 - y);\n            var dx2 = Math.round(cmd.x2 - cmd.x1);\n            var dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    var t = new table.Table('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    var t = new table.Table('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makePrivateDictIndex(privateDict) {\n    var t = new table.Table('Private DICT INDEX', [\n        {name: 'privateDicts', type: 'INDEX', value: []}\n    ]);\n    t.privateDicts = [{name: 'privateDict_0', type: 'TABLE', value: privateDict}];\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    var t = new table.Table('CFF ', [\n        {name: 'header', type: 'TABLE'},\n        {name: 'nameIndex', type: 'TABLE'},\n        {name: 'topDictIndex', type: 'TABLE'},\n        {name: 'stringIndex', type: 'TABLE'},\n        {name: 'globalSubrIndex', type: 'TABLE'},\n        {name: 'charsets', type: 'TABLE'},\n        {name: 'charStringsIndex', type: 'TABLE'},\n        {name: 'privateDictIndex', type: 'TABLE'}\n    ]);\n\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    var attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    var privateAttrs = {};\n\n    var glyphNames = [];\n\n    // Skip first glyph (.notdef)\n    for (var i = 1; i < glyphs.length; i += 1) {\n        glyphNames.push(glyphs[i].name);\n    }\n\n    var strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    var topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    var privateDict = makePrivateDict(privateAttrs, strings);\n    t.privateDictIndex = makePrivateDictIndex(privateDict);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    var startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexports.parse = parseCFFTable;\nexports.make = makeCFFTable;\n\n},{\"../encoding\":3,\"../glyph\":5,\"../parse\":7,\"../path\":8,\"../table\":9}],11:[function(require,module,exports){\n// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var i;\n    var cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 3\" table. This is a Windows format.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    var offset = -1;\n    for (i = 0; i < cmap.numTables; i += 1) {\n        var platformId = parse.getUShort(data, start + 4 + (i * 8));\n        var encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support, so return null.\n        // This font will be marked as unsupported.\n        return null;\n    }\n\n    var p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n    check.argument(cmap.format === 4, 'Only format 4 cmap tables are supported.');\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    var segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n\n    var endCountParser = new parse.Parser(data, start + offset + 14);\n    var startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    var idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    var idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    var glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (i = 0; i < segCount - 1; i += 1) {\n        var glyphIndex;\n        var endCount = endCountParser.parseUShort();\n        var startCount = startCountParser.parseUShort();\n        var idDelta = idDeltaParser.parseShort();\n        var idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (var c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\nfunction makeCmapTable(glyphs) {\n    var i;\n    var t = new table.Table('cmap', [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: 1},\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: 12},\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        for (var j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function(a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    var segCount;\n    segCount = t.segments.length;\n    t.segCountX2 = segCount * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    // Set up parallel segment arrays.\n    var endCounts = [];\n    var startCounts = [];\n    var idDeltas = [];\n    var idRangeOffsets = [];\n    var glyphIds = [];\n\n    for (i = 0; i < segCount; i += 1) {\n        var segment = t.segments[i];\n        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n        if (segment.glyphId !== undefined) {\n            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n        }\n    }\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    return t;\n}\n\nexports.parse = parseCmapTable;\nexports.make = makeCmapTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],12:[function(require,module,exports){\n// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\n'use strict';\n\nvar check = require('../check');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(data, start, index, font) {\n    //var p, glyph, flag, i, j, flags,\n    //    endPointIndices, numberOfCoordinates, repeatCount, points, point, px, py,\n    //    component, moreComponents;\n    var p = new parse.Parser(data, start);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.numberOfContours = p.parseShort();\n    glyph.xMin = p.parseShort();\n    glyph.yMin = p.parseShort();\n    glyph.xMax = p.parseShort();\n    glyph.yMax = p.parseShort();\n    var flags;\n    var flag;\n    if (glyph.numberOfContours > 0) {\n        var i;\n        // This glyph is not a composite.\n        var endPointIndices = glyph.endPointIndices = [];\n        for (i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                var repeatCount = p.parseByte();\n                for (var j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            var points = [];\n            var point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                var px = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                var py = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        var moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            var component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                component.dx = p.parseShort();\n                component.dy = p.parseShort();\n            } else {\n                // The arguments are bytes\n                component.dx = p.parseChar();\n                component.dy = p.parseChar();\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n    }\n\n    return glyph;\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        var newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p = new path.Path();\n    if (!points) {\n        return p;\n    }\n\n    var contours = getContours(points);\n    for (var i = 0; i < contours.length; i += 1) {\n        var contour = contours[i];\n        var firstPt = contour[0];\n        var lastPt = contour[contour.length - 1];\n        var curvePt;\n        var realFirstPoint;\n        if (firstPt.onCurve) {\n            curvePt = null;\n            // The first point will be consumed by the moveTo command,\n            // so skip it in the loop.\n            realFirstPoint = true;\n        } else {\n            if (lastPt.onCurve) {\n                // If the first point is off-curve and the last point is on-curve,\n                // start at the last point.\n                firstPt = lastPt;\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n            }\n\n            curvePt = firstPt;\n            // The first point is synthesized, so don't skip the real first point.\n            realFirstPoint = false;\n        }\n\n        p.moveTo(firstPt.x, firstPt.y);\n\n        for (var j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n            var pt = contour[j];\n            var prevPt = j === 0 ? firstPt : contour[j - 1];\n            if (prevPt.onCurve && pt.onCurve) {\n                // This is a straight line.\n                p.lineTo(pt.x, pt.y);\n            } else if (prevPt.onCurve && !pt.onCurve) {\n                curvePt = pt;\n            } else if (!prevPt.onCurve && !pt.onCurve) {\n                var midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n                p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n                curvePt = pt;\n            } else if (!prevPt.onCurve && pt.onCurve) {\n                // Previous point off-curve, this point on-curve.\n                p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                curvePt = null;\n            } else {\n                throw new Error('Invalid state.');\n            }\n        }\n\n        if (firstPt !== lastPt) {\n            // Connect the last and first points\n            if (curvePt) {\n                p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            } else {\n                p.lineTo(firstPt.x, firstPt.y);\n            }\n        }\n    }\n\n    p.closePath();\n    return p;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    var glyphs = [];\n    var i;\n    // The last element of the loca table is invalid.\n    for (i = 0; i < loca.length - 1; i += 1) {\n        var offset = loca[i];\n        var nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(parseGlyph(data, start + offset, i, font));\n        } else {\n            glyphs.push(new _glyph.Glyph({font: font, index: i}));\n        }\n    }\n    // Go over the glyphs again, resolving the composite glyphs.\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        if (glyph.isComposite) {\n            for (var j = 0; j < glyph.components.length; j += 1) {\n                var component = glyph.components[j];\n                var componentGlyph = glyphs[component.glyphIndex];\n                if (componentGlyph.points) {\n                    var transformedPoints = transformPoints(componentGlyph.points, component);\n                    glyph.points = glyph.points.concat(transformedPoints);\n                }\n            }\n        }\n\n        glyph.path = getPath(glyph.points);\n    }\n\n    return glyphs;\n}\n\nexports.parse = parseGlyfTable;\n\n},{\"../check\":1,\"../glyph\":5,\"../parse\":7,\"../path\":8}],13:[function(require,module,exports){\n// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n// These lists are unused by now, this function is just the basis for a real parsing.\nfunction parseTaggedListTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var n = p.parseUShort();\n    var list = [];\n    for (var i = 0; i < n; i++) {\n        list[p.parseTag()] = { offset: p.parseUShort() };\n    }\n\n    return list;\n}\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// Format 1 is a simple list of glyph ids,\n// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\nfunction parseCoverageTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    var count =  p.parseUShort();\n    if (format === 1) {\n        return p.parseUShortList(count);\n    }\n    else if (format === 2) {\n        var coverage = [];\n        for (; count--;) {\n            var begin = p.parseUShort();\n            var end = p.parseUShort();\n            var index = p.parseUShort();\n            for (var i = begin; i <= end; i++) {\n                coverage[index++] = i;\n            }\n        }\n\n        return coverage;\n    }\n}\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// Returns a function that gets a class value from a glyph ID.\nfunction parseClassDefTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    if (format === 1) {\n        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n        var startGlyph = p.parseUShort();\n        var glyphCount = p.parseUShort();\n        var classes = p.parseUShortList(glyphCount);\n        return function(glyphID) {\n            return classes[glyphID - startGlyph] || 0;\n        };\n    }\n    else if (format === 2) {\n        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n        var rangeCount = p.parseUShort();\n        var startGlyphs = [];\n        var endGlyphs = [];\n        var classValues = [];\n        for (var i = 0; i < rangeCount; i++) {\n            startGlyphs[i] = p.parseUShort();\n            endGlyphs[i] = p.parseUShort();\n            classValues[i] = p.parseUShort();\n        }\n\n        return function(glyphID) {\n            var l = 0;\n            var r = startGlyphs.length - 1;\n            while (l < r) {\n                var c = (l + r + 1) >> 1;\n                if (glyphID < startGlyphs[c]) {\n                    r = c - 1;\n                } else {\n                    l = c;\n                }\n            }\n\n            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                return classValues[l] || 0;\n            }\n\n            return 0;\n        };\n    }\n}\n\n// Parse a pair adjustment positioning subtable, format 1 or format 2\n// The subtable is returned in the form of a lookup function.\nfunction parsePairPosSubTable(data, start) {\n    var p = new parse.Parser(data, start);\n    // This part is common to format 1 and format 2 subtables\n    var format = p.parseUShort();\n    var coverageOffset = p.parseUShort();\n    var coverage = parseCoverageTable(data, start + coverageOffset);\n    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n    // Only valueFormat1=4 and valueFormat2=0 is supported.\n    var valueFormat1 = p.parseUShort();\n    var valueFormat2 = p.parseUShort();\n    var value1;\n    var value2;\n    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n    var sharedPairSets = {};\n    if (format === 1) {\n        // Pair Positioning Adjustment: Format 1\n        var pairSetCount = p.parseUShort();\n        var pairSet = [];\n        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n        var pairSetOffsets = p.parseOffset16List(pairSetCount);\n        for (var firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n            var pairSetOffset = pairSetOffsets[firstGlyph];\n            var sharedPairSet = sharedPairSets[pairSetOffset];\n            if (!sharedPairSet) {\n                // Parse a pairset table in a pair adjustment subtable format 1\n                sharedPairSet = {};\n                p.relativeOffset = pairSetOffset;\n                var pairValueCount = p.parseUShort();\n                for (; pairValueCount--;) {\n                    var secondGlyph = p.parseUShort();\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) value2 = p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    sharedPairSet[secondGlyph] = value1;\n                }\n            }\n\n            pairSet[coverage[firstGlyph]] = sharedPairSet;\n        }\n\n        return function(leftGlyph, rightGlyph) {\n            var pairs = pairSet[leftGlyph];\n            if (pairs) return pairs[rightGlyph];\n        };\n    }\n    else if (format === 2) {\n        // Pair Positioning Adjustment: Format 2\n        var classDef1Offset = p.parseUShort();\n        var classDef2Offset = p.parseUShort();\n        var class1Count = p.parseUShort();\n        var class2Count = p.parseUShort();\n        var getClass1 = parseClassDefTable(data, start + classDef1Offset);\n        var getClass2 = parseClassDefTable(data, start + classDef2Offset);\n\n        // Parse kerning values by class pair.\n        var kerningMatrix = [];\n        for (var i = 0; i < class1Count; i++) {\n            var kerningRow = kerningMatrix[i] = [];\n            for (var j = 0; j < class2Count; j++) {\n                if (valueFormat1) value1 = p.parseShort();\n                if (valueFormat2) value2 = p.parseShort();\n                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                // so value1 is the XAdvance and value2 is empty.\n                kerningRow[j] = value1;\n            }\n        }\n\n        // Convert coverage list to a hash\n        var covered = {};\n        for (i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\n        // Get the kerning value for a specific glyph pair.\n        return function(leftGlyph, rightGlyph) {\n            if (!covered[leftGlyph]) return;\n            var class1 = getClass1(leftGlyph);\n            var class2 = getClass2(rightGlyph);\n            var kerningRow = kerningMatrix[class1];\n\n            if (kerningRow) {\n                return kerningRow[class2];\n            }\n        };\n    }\n}\n\n// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\nfunction parseLookupTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var lookupType = p.parseUShort();\n    var lookupFlag = p.parseUShort();\n    var useMarkFilteringSet = lookupFlag & 0x10;\n    var subTableCount = p.parseUShort();\n    var subTableOffsets = p.parseOffset16List(subTableCount);\n    var table = {\n        lookupType: lookupType,\n        lookupFlag: lookupFlag,\n        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n    };\n    // LookupType 2, Pair adjustment\n    if (lookupType === 2) {\n        var subtables = [];\n        for (var i = 0; i < subTableCount; i++) {\n            subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n        }\n        // Return a function which finds the kerning values in the subtables.\n        table.getKerningValue = function(leftGlyph, rightGlyph) {\n            for (var i = subtables.length; i--;) {\n                var value = subtables[i](leftGlyph, rightGlyph);\n                if (value !== undefined) return value;\n            }\n\n            return 0;\n        };\n    }\n\n    return table;\n}\n\n// Parse the `GPOS` table which contains, among other things, kerning pairs.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\nfunction parseGposTable(data, start, font) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseFixed();\n    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n    // ScriptList and FeatureList - ignored for now\n    parseTaggedListTable(data, start + p.parseUShort());\n    // 'kern' is the feature we are looking for.\n    parseTaggedListTable(data, start + p.parseUShort());\n\n    // LookupList\n    var lookupListOffset = p.parseUShort();\n    p.relativeOffset = lookupListOffset;\n    var lookupCount = p.parseUShort();\n    var lookupTableOffsets = p.parseOffset16List(lookupCount);\n    var lookupListAbsoluteOffset = start + lookupListOffset;\n    for (var i = 0; i < lookupCount; i++) {\n        var table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n    }\n}\n\nexports.parse = parseGposTable;\n\n},{\"../check\":1,\"../parse\":7}],14:[function(require,module,exports){\n// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {};\n    var p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();     // 50\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: 0},\n        {name: 'modified', type: 'LONGDATETIME', value: 0},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHeadTable;\nexports.make = makeHeadTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],15:[function(require,module,exports){\n// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {};\n    var p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHheaTable;\nexports.make = makeHheaTable;\n\n},{\"../parse\":7,\"../table\":9}],16:[function(require,module,exports){\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    var advanceWidth;\n    var leftSideBearing;\n    var p = new parse.Parser(data, start);\n    for (var i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        var glyph = glyphs[i];\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    var t = new table.Table('hmtx', []);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var advanceWidth = glyph.advanceWidth || 0;\n        var leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexports.parse = parseHmtxTable;\nexports.make = makeHmtxTable;\n\n},{\"../parse\":7,\"../table\":9}],17:[function(require,module,exports){\n// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var pairs = {};\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseUShort();\n    check.argument(tableVersion === 0, 'Unsupported kern table version.');\n    // Skip nTables.\n    p.skip('uShort', 1);\n    var subTableVersion = p.parseUShort();\n    check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subTableLength, subTableCoverage\n    p.skip('uShort', 2);\n    var nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (var i = 0; i < nPairs; i += 1) {\n        var leftIndex = p.parseUShort();\n        var rightIndex = p.parseUShort();\n        var value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n\n    return pairs;\n}\n\nexports.parse = parseKernTable;\n\n},{\"../check\":1,\"../parse\":7}],18:[function(require,module,exports){\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\n'use strict';\n\nvar parse = require('../parse');\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p = new parse.Parser(data, start);\n    var parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    var glyphOffsets = [];\n    for (var i = 0; i < numGlyphs + 1; i += 1) {\n        var glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexports.parse = parseLocaTable;\n\n},{\"../parse\":7}],19:[function(require,module,exports){\n// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {};\n    var p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexports.parse = parseMaxpTable;\nexports.make = makeMaxpTable;\n\n},{\"../parse\":7,\"../table\":9}],20:[function(require,module,exports){\n// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\n'use strict';\n\nvar encode = require('../types').encode;\nvar parse = require('../parse');\nvar table = require('../table');\n\n// NameIDs for the name table.\nvar nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'licence',                // 13\n    'licenceURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\n// Parse the naming `name` table\n// Only Windows Unicode English names are supported.\n// Format 1 additional fields are not supported\nfunction parseNameTable(data, start) {\n    var name = {};\n    var p = new parse.Parser(data, start);\n    name.format = p.parseUShort();\n    var count = p.parseUShort();\n    var stringOffset = p.offset + p.parseUShort();\n    var unknownCount = 0;\n    for (var i = 0; i < count; i++) {\n        var platformID = p.parseUShort();\n        var encodingID = p.parseUShort();\n        var languageID = p.parseUShort();\n        var nameID = p.parseUShort();\n        var property = nameTableNames[nameID];\n        var byteLength = p.parseUShort();\n        var offset = p.parseUShort();\n        // platformID - encodingID - languageID standard combinations :\n        // 1 - 0 - 0 : Macintosh, Roman, English\n        // 3 - 1 - 0x409 : Windows, Unicode BMP (UCS-2), en-US\n        if (platformID === 3 && encodingID === 1 && languageID === 0x409) {\n            var codePoints = [];\n            var length = byteLength / 2;\n            for (var j = 0; j < length; j++, offset += 2) {\n                codePoints[j] = parse.getShort(data, stringOffset + offset);\n            }\n\n            var str = String.fromCharCode.apply(null, codePoints);\n            if (property) {\n                name[property] = str;\n            }\n            else {\n                unknownCount++;\n                name['unknown' + unknownCount] = str;\n            }\n        }\n\n    }\n\n    if (name.format === 1) {\n        name.langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Table('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\nfunction addMacintoshNameRecord(t, recordID, s, offset) {\n    // Macintosh, Roman, English\n    var stringBytes = encode.STRING(s);\n    t.records.push(makeNameRecord(1, 0, 0, recordID, stringBytes.length, offset));\n    t.strings.push(stringBytes);\n    offset += stringBytes.length;\n    return offset;\n}\n\nfunction addWindowsNameRecord(t, recordID, s, offset) {\n    // Windows, Unicode BMP (UCS-2), US English\n    var utf16Bytes = encode.UTF16(s);\n    t.records.push(makeNameRecord(3, 1, 0x0409, recordID, utf16Bytes.length, offset));\n    t.strings.push(utf16Bytes);\n    offset += utf16Bytes.length;\n    return offset;\n}\n\nfunction makeNameTable(options) {\n    var t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: 0},\n        {name: 'stringOffset', type: 'USHORT', value: 0}\n    ]);\n    t.records = [];\n    t.strings = [];\n    var offset = 0;\n    var i;\n    var s;\n    // Add Macintosh records first\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addMacintoshNameRecord(t, i, s, offset);\n        }\n    }\n    // Then add Windows records\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addWindowsNameRecord(t, i, s, offset);\n        }\n    }\n\n    t.count = t.records.length;\n    t.stringOffset = 6 + t.count * 12;\n    for (i = 0; i < t.records.length; i += 1) {\n        t.fields.push({name: 'record_' + i, type: 'TABLE', value: t.records[i]});\n    }\n\n    for (i = 0; i < t.strings.length; i += 1) {\n        t.fields.push({name: 'string_' + i, type: 'LITERAL', value: t.strings[i]});\n    }\n\n    return t;\n}\n\nexports.parse = parseNameTable;\nexports.make = makeNameTable;\n\n},{\"../parse\":7,\"../table\":9,\"../types\":24}],21:[function(require,module,exports){\n// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\nvar unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (var i = 0; i < unicodeRanges.length; i += 1) {\n        var range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {};\n    var p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.unicodeRanges = unicodeRanges;\nexports.getUnicodeRange = getUnicodeRange;\nexports.parse = parseOS2Table;\nexports.make = makeOS2Table;\n\n},{\"../parse\":7,\"../table\":9}],22:[function(require,module,exports){\n// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {};\n    var p = new parse.Parser(data, start);\n    var i;\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n    case 1:\n        post.names = encoding.standardNames.slice();\n        break;\n    case 2:\n        post.numberOfGlyphs = p.parseUShort();\n        post.glyphNameIndex = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.glyphNameIndex[i] = p.parseUShort();\n        }\n\n        post.names = [];\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n                var nameLength = p.parseChar();\n                post.names.push(p.parseString(nameLength));\n            }\n        }\n\n        break;\n    case 2.5:\n        post.numberOfGlyphs = p.parseUShort();\n        post.offset = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.offset[i] = p.parseChar();\n        }\n\n        break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexports.parse = parsePostTable;\nexports.make = makePostTable;\n\n},{\"../encoding\":3,\"../parse\":7,\"../table\":9}],23:[function(require,module,exports){\n// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\n'use strict';\n\nvar check = require('../check');\nvar table = require('../table');\n\nvar cmap = require('./cmap');\nvar cff = require('./cff');\nvar head = require('./head');\nvar hhea = require('./hhea');\nvar hmtx = require('./hmtx');\nvar maxp = require('./maxp');\nvar _name = require('./name');\nvar os2 = require('./os2');\nvar post = require('./post');\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    var sum = 0;\n    for (var i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Table('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    var sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    var recordFields = [];\n    var tableFields = [];\n\n    var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (var i = 0; i < tables.length; i += 1) {\n        var t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        var tableLength = t.sizeOf();\n        var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (var i = 0; i < chars.length; i += 1) {\n        var glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            var glyph = font.glyphs[glyphIndex];\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    var sum = 0;\n    for (var i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    var xMins = [];\n    var yMins = [];\n    var xMaxs = [];\n    var yMaxs = [];\n    var advanceWidths = [];\n    var leftSideBearings = [];\n    var rightSideBearings = [];\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    for (var i = 0; i < font.glyphs.length; i += 1) {\n        var glyph = font.glyphs[i];\n        var unicode = glyph.unicode | 0;\n        if (firstCharIndex > unicode || firstCharIndex === null) {\n            firstCharIndex = unicode;\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        var position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        var metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    var globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n    globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\n    var headTable = head.make({\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax\n    });\n\n    var hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    var maxpTable = maxp.make(font.glyphs.length);\n\n    var os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: 500, // Medium FIXME Make this configurable\n        usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.ascender,\n        usWinDescent: -globals.descender,\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: 0}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n    var hmtxTable = hmtx.make(font.glyphs);\n    var cmapTable = cmap.make(font.glyphs);\n\n    var fullName = font.familyName + ' ' + font.styleName;\n    var postScriptName = font.familyName.replace(/\\s/g, '') + '-' + font.styleName;\n    var nameTable = _name.make({\n        copyright: font.copyright,\n        fontFamily: font.familyName,\n        fontSubfamily: font.styleName,\n        uniqueID: font.manufacturer + ':' + fullName,\n        fullName: fullName,\n        version: font.version,\n        postScriptName: postScriptName,\n        trademark: font.trademark,\n        manufacturer: font.manufacturer,\n        designer: font.designer,\n        description: font.description,\n        manufacturerURL: font.manufacturerURL,\n        designerURL: font.designerURL,\n        license: font.license,\n        licenseURL: font.licenseURL,\n        preferredFamily: font.familyName,\n        preferredSubfamily: font.styleName\n    });\n    var postTable = post.make();\n    var cffTable = cff.make(font.glyphs, {\n        version: font.version,\n        fullName: fullName,\n        familyName: font.familyName,\n        weightName: font.styleName,\n        postScriptName: postScriptName\n    });\n    // Order the tables according to the the OpenType specification 1.4.\n    var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n\n    var sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    var bytes = sfntTable.encode();\n    var checkSum = computeCheckSum(bytes);\n    var tableFields = sfntTable.fields;\n    var checkSumAdjusted = false;\n    for (i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexports.computeCheckSum = computeCheckSum;\nexports.make = makeSfntTable;\nexports.fontToTable = fontToSfntTable;\n\n},{\"../check\":1,\"../table\":9,\"./cff\":10,\"./cmap\":11,\"./head\":14,\"./hhea\":15,\"./hmtx\":16,\"./maxp\":19,\"./name\":20,\"./os2\":21,\"./post\":22}],24:[function(require,module,exports){\n// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = require('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\nvar decode = {};\nvar encode = {};\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n// Convert an 8-bit unsigned integer to a list of 1 byte.\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert a 8-bit signed integer to a list of 1 byte.\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert an ASCII string to a list of bytes.\nencode.CHARARRAY = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n// Convert a 16-bit unsigned integer to a list of 2 bytes.\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.USHORT = constant(2);\n\n// Convert a 16-bit signed integer to a list of 2 bytes.\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.SHORT = constant(2);\n\n// Convert a 24-bit unsigned integer to a list of 3 bytes.\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.UINT24 = constant(3);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.ULONG = constant(4);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n// FIXME Implement LONGDATETIME\nencode.LONGDATETIME = function() {\n    return [0, 0, 0, 0, 0, 0, 0, 0];\n};\n\nsizeOf.LONGDATETIME = constant(8);\n\n// Convert a 4-char tag to a list of 4 bytes.\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n// Convert a signed number between -32768 and +32767 to a three-byte value.\n// This ensures we always use three bytes, but is not the most compact format.\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER16 = constant(2);\n\n// Convert a signed number between -(2^31) and +(2^31-1) to a four-byte value.\n// This is useful if you want to be sure you always use four bytes,\n// at the expense of wasting a few bytes for smaller numbers.\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER32 = constant(4);\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n// Convert a ASCII string to a list of UTF16 bytes.\nencode.UTF16 = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(0);\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\nencode.INDEX = function(l) {\n    var i;\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    dataSize, i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    var offset = 1; // First offset is always 1.\n    var offsets = [offset];\n    var data = [];\n    var dataSize = 0;\n    for (i = 0; i < l.length; i += 1) {\n        var v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        dataSize += v.length;\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    var encodedOffsets = [];\n    var offSize = (1 + Math.floor(Math.log(dataSize) / Math.log(2)) / 8) | 0;\n    var offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        var encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n// Convert an object to a CFF DICT structure.\n// The keys should be numeric.\n// The values should be objects containing name / type / value.\nencode.DICT = function(m) {\n    var d = [];\n    var keys = Object.keys(m);\n    var length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\nencode.OPERAND = function(v, type) {\n    var d = [];\n    if (Array.isArray(type)) {\n        for (var i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else {\n            // FIXME Add support for booleans\n            d = d.concat(encode.NUMBER(v));\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n// Convert a list of CharString operations to bytes.\nencode.CHARSTRING = function(ops) {\n    if (wmm && wmm.has(ops)) {\n        return wmm.get(ops);\n    }\n\n    var d = [];\n    var length = ops.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n// Convert an object containing name / type / value to bytes.\nencode.OBJECT = function(v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n// Convert a table object to bytes.\n// A table contains a list of fields containing the metadata (name, type and default value).\n// The table itself has the field values set as attributes.\nencode.TABLE = function(table) {\n    var d = [];\n    var length = table.fields.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        var bytes = encodingFunction(value);\n        d = d.concat(bytes);\n    }\n\n    return d;\n};\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n\n},{\"./check\":1}]},{},[6])(6)\n});\n},{}],2:[function(require,module,exports){\n/*!\n * Paper.js v0.9.22 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Mon Mar 23 22:20:31 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\n\t\t  var noCanvas =\n\t\t\t  ( typeof process === 'object' && process.browser !== true ) ||\n\t\t\t  ( typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope );\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && (!exclude || !exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tctor.prototype = create(this.prototype);\n\t\t\tctor.base = base;\n\t\t\tdefine(ctor.prototype, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\treturn arguments.length ? this.inject.apply(ctor, arguments) : ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function() {\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\t\tif (arguments[i] !== undefined)\n\t\t\t\t\t\treturn arguments[i];\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar orig = props._filtering || props;\n\t\t\tfor (var key in orig) {\n\t\t\t\tif (orig.hasOwnProperty(key) && !(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tfunction checkKeys(o1, o2) {\n\t\t\t\tfor (var i in o1)\n\t\t\t\t\tif (o1.hasOwnProperty(i) && !o2.hasOwnProperty(i))\n\t\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\tif (obj1.length !== obj2.length)\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i = 0, l = obj1.length; i < l; i++) {\n\t\t\t\t\tif (!Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 && typeof obj1 === 'object'\n\t\t\t\t\t&& obj2 && typeof obj2 === 'object') {\n\t\t\t\tif (!checkKeys(obj1, obj2) || !checkKeys(obj2, obj1))\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i in obj1) {\n\t\t\t\t\tif (obj1.hasOwnProperty(i)\n\t\t\t\t\t\t\t&& !Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var i in obj)\n\t\t\t\t\tif (obj.hasOwnProperty(i))\n\t\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\t\tdictionary);\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (!isDictionary) {\n\t\t\t\t\tif (_data.dictionary && json.length == 1 && /^#/.test(type))\n\t\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\t\ttype = Base.exports[type];\n\t\t\t\t}\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data));\n\t\t\t\tif (isDictionary) {\n\t\t\t\t\t_data.dictionary = res[0];\n\t\t\t\t} else if (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar entry = this._eventTypes[type];\n\t\t\tif (entry) {\n\t\t\t\tvar handlers = this._callbacks = this._callbacks || {};\n\t\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\t\thandlers.push(func);\n\t\t\t\t\tif (entry.install && handlers.length == 1)\n\t\t\t\t\t\tentry.install.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar entry = this._eventTypes[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (entry && handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false\n\t\t\t\t\t&& event && event.stop) {\n\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar entry = this._eventTypes[type],\n\t\t\t\t\tfunc = entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif ( noCanvas ) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar browser = proto.browser = {};\n\t\t\tnavigator.userAgent.toLowerCase().replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: '0.9.22',\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tTOLERANCE = 1e-6,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\treturn {\n\t\tTOLERANCE: TOLERANCE,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn abs(val) <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= 2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar pow = Math.pow,\n\t\t\t\t\tgmC = pow(abs(a*b*c), 1/3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\t/*\n\t\t\t\t\t * we multiply with a factor to normalize the\n\t\t\t\t\t * coefficients. The factor is just the nearest exponent\n\t\t\t\t\t * of 10, big enough to raise all the coefficients to\n\t\t\t\t\t * nearly [-1, +1] range.\n\t\t\t\t\t */\n\t\t\t\t\tvar mult = pow(10, abs(\n\t\t\t\t\t\tMath.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < MACHINE_EPSILON) {\n\t\t\t\tif (abs(B) < MACHINE_EPSILON)\n\t\t\t\t\treturn abs(c) < MACHINE_EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else {\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tD = D < 0 ? 0 : D;\n\t\t\t\t\tvar R = sqrt(D);\n\t\t\t\t\tif (b >= MACHINE_EPSILON && b <= MACHINE_EPSILON) {\n\t\t\t\t\t\tx1 = abs(a) >= abs(c) ? R / a : -c / R;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar q = -(b + (b < 0 ? -1 : 1) * R);\n\t\t\t\t\t\tx1 = q / a;\n\t\t\t\t\t\tx2 = c / q;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 >= min && x1 <= max))\n\t\t\t\troots[count++] = x1;\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 >= min && x2 <= max))\n\t\t\t\troots[count++] = x2;\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar x, b1, c2, count = 0;\n\t\t\tif (a === 0) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (d === 0) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x >= min && x <= max))\n\t\t\t\troots[count++] = x;\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\ts = Math.sin(angle),\n\t\t\tc = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * c - point.y * s,\n\t\t\tpoint.x * s + point.y * c\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function(point, tolerance) {\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisColinear: function(point) {\n\t\treturn Math.abs(this.cross(point)) < 1e-12;\n\t},\n\n\tisOrthogonal: function(point) {\n\t\treturn Math.abs(this.dot(point)) < 1e-12;\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments);\n\t\tif (point.isZero()) {\n\t\t\treturn new Point(0, 0);\n\t\t} else {\n\t\t\tvar scale = this.dot(point) / point.dot(point);\n\t\t\treturn new Point(\n\t\t\t\tpoint.x * scale,\n\t\t\t\tpoint.y * scale\n\t\t\t);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n}, new function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = coords.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tstatics: {\n\t\tintersect: function(apx, apy, avx, avy, bpx, bpy, bvx, bvy, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tavx -= apx;\n\t\t\t\tavy -= apy;\n\t\t\t\tbvx -= bpx;\n\t\t\t\tbvy -= bpy;\n\t\t\t}\n\t\t\tvar cross = avx * bvy - avy * bvx;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = apx - bpx,\n\t\t\t\t\tdy = apy - bpy,\n\t\t\t\t\tta = (bvx * dy - bvy * dx) / cross,\n\t\t\t\t\ttb = (avx * dy - avy * dx) / cross;\n\t\t\t\tif (isInfinite || 0 <= ta && ta <= 1 && 0 <= tb && tb <= 1)\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\t\tapx + ta * avx,\n\t\t\t\t\t\t\t\tapy + ta * avy);\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0) {\n\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\tif (ccw > 0) {\n\t\t\t\t\tv2x -= vx;\n\t\t\t\t\tv2y -= vy;\n\t\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\t\tif (ccw < 0)\n\t\t\t\t\t\tccw = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn Numerical.isZero(vx)\n\t\t\t\t\t? vy >= 0 ? px - x : x - px\n\t\t\t\t\t: Numerical.isZero(vy)\n\t\t\t\t\t\t? vx >= 0 ? y - py : py - y\n\t\t\t\t\t\t: (vx * (y - py) - vy * (x - px)) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = Symbol._id = (Symbol._id || 0) + 1;\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = Item._id = (Item._id || 0) + 1;\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, parent: true }, true);\n\t\treturn hasProps;\n\t},\n\n\t_events: new function() {\n\n\t\tvar mouseFlags = {\n\t\t\tmousedown: {\n\t\t\t\tmousedown: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmouseup: {\n\t\t\t\tmouseup: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmousemove: {\n\t\t\t\tmousedrag: 1,\n\t\t\t\tmousemove: 1,\n\t\t\t\tmouseenter: 1,\n\t\t\t\tmouseleave: 1\n\t\t\t}\n\t\t};\n\n\t\tvar mouseEvent = {\n\t\t\tinstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tuninstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = mouseEvent;\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis._animateItem(true);\n\t\t\t\t\t},\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis._animateItem(false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {}\n\t\t\t}\n\t\t);\n\t},\n\n\t_animateItem: function(animate) {\n\t\tthis.getView()._animateItem(this, animate);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments);\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n\n\tgetRegistration: '#getPivot',\n\tsetRegistration: '#setPivot'\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tvar cacheParent = this._parent || this._parentSymbol;\n\t\tif (cacheParent) {\n\t\t\tvar id = cacheItem._id,\n\t\t\t\tref = cacheParent._boundsCache = cacheParent._boundsCache || {\n\t\t\t\t\tids: {},\n\t\t\t\t\tlist: []\n\t\t\t\t};\n\t\t\tif (!ref.ids[id]) {\n\t\t\t\tref.list.push(cacheItem);\n\t\t\t\tref.ids[id] = cacheItem;\n\t\t\t}\n\t\t}\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++) {\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function(matrix) {\n\t\tthis._matrix.initialize(matrix);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert) {\n\t\tcopy.setStyle(this._style);\n\t\tif (this._children) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tcopy.addChild(this._children[i].clone(false), true);\n\t\t}\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide', '_applyMatrix'];\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tcopy.setSelected(this._selected);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(),\n\t\t\t\t_matrix || item._matrix).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 0.000001)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tif (typeof name === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param) {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect =\tbounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: rect,\n\t\t\t\t\toverlapping: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param.items,\n\t\t\t\tinside = param.inside,\n\t\t\t\toverlapping = param.overlapping;\n\t\t\tmatrix = inside && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (inside) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!inside.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(inside && inside.contains(bounds)) && !(overlapping\n\t\t\t\t\t\t\t&& overlapping.intersects(child, childMatrix)))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2;\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t});\n\t\tpath.setStyle(this._style);\n\t\tpath.transform(this._matrix);\n\t\tif (insert || insert === undefined)\n\t\t\tpath.insertAbove(this);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rect' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\t\timage = document.getElementById(src) || new Image();\n\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, {\n\t\t\t\tload: loaded\n\t\t\t});\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL() : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif (arg0.point) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.isLinear() ? this._point\n\t\t\t\t: [this._point, this._handleIn, this._handleOut],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._handleIn.isZero() && this._handleOut.isZero();\n\t},\n\n\tsetLinear: function(linear) {\n\t\tif (linear) {\n\t\t\tthis._handleIn.set(0, 0);\n\t\t\tthis._handleOut.set(0, 0);\n\t\t} else {\n\t\t}\n\t},\n\n\tisColinear: function(segment) {\n\t\tvar next1 = this.getNext(),\n\t\t\tnext2 = segment.getNext();\n\t\treturn this._handleOut.isZero() && next1._handleIn.isZero()\n\t\t\t\t&& segment._handleOut.isZero() && next2._handleIn.isZero()\n\t\t\t\t&& next1._point.subtract(this._point).isColinear(\n\t\t\t\t\tnext2._point.subtract(segment._point));\n\t},\n\n\tisOrthogonal: function() {\n\t\tvar prev = this.getPrevious(),\n\t\t\tnext = this.getNext();\n\t\treturn prev._handleOut.isZero() && this._handleIn.isZero()\n\t\t\t&& this._handleOut.isZero() && next._handleIn.isZero()\n\t\t\t&& this._point.subtract(prev._point).isOrthogonal(\n\t\t\t\t\tnext._point.subtract(this._point));\n\t},\n\n\tisArc: function() {\n\t\tvar next = this.getNext(),\n\t\t\thandle1 = this._handleOut,\n\t\t\thandle2 = next._handleIn,\n\t\t\tkappa = 0.5522847498307936;\n\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\tvar from = this._point,\n\t\t\t\tto = next._point,\n\t\t\t\tcorner = new Line(from, handle1, true).intersect(\n\t\t\t\t\t\tnew Line(to, handle2, true), true);\n\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\tcorner.subtract(from).getLength() - kappa)\n\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\tcorner.subtract(to).getLength() - kappa);\n\t\t}\n\t\treturn false;\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\treverse: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(segment0, segment1, coef) {\n\t\tvar dxPoint = segment1._point._x - segment0._point._x,\n\t\t\tdyPoint = segment1._point._y - segment0._point._y,\n\t\t\tdxHandleIn = segment1._handleIn._x - segment0._handleIn._x,\n\t\t\tdyHandleIn = segment1._handleIn._y - segment0._handleIn._y,\n\t\t\tdxHandleOut = segment1._handleOut._x - segment0._handleOut._x,\n\t\t\tdyHandleOut = segment1._handleOut._y - segment0._handleOut._y;\n\n\t\tthis._point._x = segment0._point._x + dxPoint * coef;\n\t\tthis._point._y = segment0._point._y + dyPoint * coef;\n\t\tthis._handleIn._x = segment0._handleIn._x + dxHandleIn * coef;\n\t\tthis._handleIn._y = segment0._handleIn._y + dyHandleIn * coef;\n\t\tthis._handleOut._x = segment0._handleOut._x + dxHandleOut * coef;\n\t\tthis._handleOut._y = segment0._handleOut._y + dyHandleOut * coef;\n\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tthis._segment1 = arg1;\n\t\t\tthis._segment2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tthis._segment1 = new Segment();\n\t\t\tthis._segment2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tthis._segment1 = new Segment(arg0.segment1);\n\t\t\tthis._segment2 = new Segment(arg0.segment2);\n\t\t} else if (count === 2) {\n\t\t\tthis._segment1 = new Segment(arg0);\n\t\t\tthis._segment2 = new Segment(arg1);\n\t\t} else {\n\t\t\tvar point1, handle1, handle2, point2;\n\t\t\tif (count === 4) {\n\t\t\t\tpoint1 = arg0;\n\t\t\t\thandle1 = arg1;\n\t\t\t\thandle2 = arg2;\n\t\t\t\tpoint2 = arg3;\n\t\t\t} else if (count === 8) {\n\t\t\t\tpoint1 = [arg0, arg1];\n\t\t\t\tpoint2 = [arg6, arg7];\n\t\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t\t}\n\t\t\tthis._segment1 = new Segment(point1, null, handle1);\n\t\t\tthis._segment2 = new Segment(point2, handle2, null);\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tthis._length = this.isLinear()\n\t\t\t\t? this._segment2._point.getDistance(this._segment1._point)\n\t\t\t\t: Curve.getLength(this.getValues(), 0, 1);\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._segment1._handleOut.isZero()\n\t\t\t\t&& this._segment2._handleIn.isZero();\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve.filterIntersections(Curve.getIntersections(\n\t\t\t\tthis.getValues(), curve.getValues(), this, curve, []));\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, ignoreLinear) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttolerance = 0.000001,\n\t\t\tres = null;\n\t\tif (parameter > tolerance && parameter < 1 - tolerance) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tisLinear = ignoreLinear ? false : this.isLinear(),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1];\n\n\t\t\tif (!isLinear) {\n\t\t\t\tthis._segment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tthis._segment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\t!isLinear && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\t!isLinear && new Point(right[2] - x, right[3] - y));\n\n\t\t\tif (this._path) {\n\t\t\t\tif (this._segment1._index > 0 && this._segment2._index === 0) {\n\t\t\t\t\tthis._path.add(segment);\n\t\t\t\t} else {\n\t\t\t\t\tthis._path.insert(this._segment2._index, segment);\n\t\t\t\t}\n\t\t\t\tres = this;\n\t\t\t} else {\n\t\t\t\tvar end = this._segment2;\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, end);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treverse: function() {\n\t\treturn new Curve(this._segment2.reverse(), this._segment1.reverse());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tevaluate: function(v, t, type) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tolerance || t > 1 - tolerance)) {\n\t\t\tvar isZero = t < tolerance;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tolerance && c1x === p1x && c1y === p1y\n\t\t\t\t\t\t|| t > 1 - tolerance && c2x === p2x && c2y === p2y) {\n\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t} else if (t < tolerance) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > 1 - tolerance) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by;\n\t\t\t\t\treturn (x * y2 - y * x2) / Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b,\n\t\t\tisZero = Numerical.isZero;\n\t\tif (isZero(a) && isZero(b))\n\t\t\ta = b = 0;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, x, y) {\n\t\tvar tolerance = 0.000001;\n\t\tif (Math.abs(v[0] - x) < tolerance && Math.abs(v[1] - y) < tolerance)\n\t\t\treturn 0;\n\t\tif (Math.abs(v[6] - x) < tolerance && Math.abs(v[7] - y) < tolerance)\n\t\t\treturn 1;\n\t\tvar txs = [],\n\t\t\ttys = [],\n\t\t\tsx = Curve.solveCubic(v, 0, x, txs, 0, 1),\n\t\t\tsy = Curve.solveCubic(v, 1, y, tys, 0, 1),\n\t\t\ttx, ty;\n\t\tfor (var cx = 0;  sx == -1 || cx < sx;) {\n\t\t\tif (sx == -1 || (tx = txs[cx++]) >= 0 && tx <= 1) {\n\t\t\t\tfor (var cy = 0; sy == -1 || cy < sy;) {\n\t\t\t\t\tif (sy == -1 || (ty = tys[cy++]) >= 0 && ty <= 1) {\n\t\t\t\t\t\tif (sx == -1) tx = ty;\n\t\t\t\t\t\telse if (sy == -1) ty = tx;\n\t\t\t\t\t\tif (Math.abs(tx - ty) < tolerance)\n\t\t\t\t\t\t\treturn (tx + ty) * 0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sx == -1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn v;\n\t},\n\n\tisLinear: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]);\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn (  3.0 * c1y * p1x - 1.5 * c1y * c2x\n\t\t\t\t- 1.5 * c1y * p2x - 3.0 * p1y * c1x\n\t\t\t\t- 1.5 * p1y * c2x - 0.5 * p1y * p2x\n\t\t\t\t+ 1.5 * c2y * p1x + 1.5 * c2y * c1x\n\t\t\t\t- 3.0 * c2y * p2x + 0.5 * p2y * p1x\n\t\t\t\t+ 1.5 * p2y * c1x + 3.0 * p2y * c2x) / 10;\n\t},\n\n\tgetEdgeSum: function(v) {\n\t\treturn\t  (v[0] - v[2]) * (v[3] + v[1])\n\t\t\t\t+ (v[2] - v[4]) * (v[5] + v[3])\n\t\t\t\t+ (v[4] - v[6]) * (v[7] + v[5]);\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name]([this._segment1,\n\t\t\t\t\t\tthis._segment2], false, this._path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve.evaluate(values, isParameter\n\t\t\t\t\t? offset : Curve.getParameterAt(values, offset, 0), index);\n\t\t};\n\t\tthis[name] = function(parameter) {\n\t\t\treturn Curve.evaluate(this.getValues(), parameter, index);\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Curve.getParameterOf(this.getValues(), point.x, point.y);\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tif (!isParameter)\n\t\t\toffset = this.getParameterAt(offset);\n\t\treturn offset >= 0 && offset <= 1 && new CurveLocation(this, offset);\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tcount = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(\n\t\t\t\t\t\tCurve.evaluate(values, t, 0), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 0.000001) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\tvar pt = Curve.evaluate(values, minT, 0);\n\t\treturn new CurveLocation(this, minT, pt, null, null, null,\n\t\t\t\tpoint.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n}),\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\treturn {\n\t\tstatics: true,\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tvar isZero = Numerical.isZero;\n\t\t\tif (a === 0 && b === 1\n\t\t\t\t\t&& isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t\t&& isZero(v[6] - v[4]) && isZero(v[7] - v[5])) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar forward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (Math.abs(offset) >= rangeLength)\n\t\t\t\treturn forward ? b : a;\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 16,\n\t\t\t\t\t0.000001);\n\t\t}\n\t};\n}, new function() {\n\tfunction addLocation(locations, include, curve1, t1, point1, curve2, t2,\n\t\t\tpoint2) {\n\t\tvar loc = new CurveLocation(curve1, t1, point1, curve2, t2, point2);\n\t\tif (!include || include(loc))\n\t\t\tlocations.push(loc);\n\t}\n\n\tfunction addCurveIntersections(v1, v2, curve1, curve2, locations, include,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (recursion > 32)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]) || 0,\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]) || 0,\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\ttMinNew, tMaxNew, tDiff;\n\t\tif (q0x === q3x && uMax - uMin <= tolerance && recursion > 3) {\n\t\t\ttMaxNew = tMinNew = (tMax + tMin) / 2;\n\t\t\ttDiff = 0;\n\t\t} else {\n\t\t\tvar hull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\t\ttop = hull[0],\n\t\t\t\tbottom = hull[1],\n\t\t\t\ttMinClip, tMaxClip;\n\t\t\ttMinClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\ttop.reverse();\n\t\t\tbottom.reverse();\n\t\t\ttMaxClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\tif (tMinClip == null || tMaxClip == null)\n\t\t\t\treturn;\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\ttDiff = tMaxClip - tMinClip;\n\t\t\ttMinNew = tMax * tMinClip + tMin * (1 - tMinClip);\n\t\t\ttMaxNew = tMax * tMaxClip + tMin * (1 - tMaxClip);\n\t\t}\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, curve2, curve1, locations, include,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew) < tolerance) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tif (reverse) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0),\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0));\n\t\t\t} else {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t} else if (tDiff > 0) {\n\t\t\taddCurveIntersections(v2, v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\tdist1 = getSignedDistance(0, dq0, 1, dq3, 1 / 3, dq1),\n\t\t\tdist2 = getSignedDistance(0, dq0, 1, dq3, 2 / 3, dq2),\n\t\t\tflip = false,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t\tflip = dist1 < 0;\n\t\t} else {\n\t\t\tvar pmax, cross = 0,\n\t\t\t\tdistZero = dist1 === 0 || dist2 === 0;\n\t\t\tif (Math.abs(dist1) > Math.abs(dist2)) {\n\t\t\t\tpmax = p1;\n\t\t\t\tcross = (dq3 - dq2 - (dq3 - dq0) / 3)\n\t\t\t\t\t\t* (2 * (dq3 - dq2) - dq3 + dq1) / 3;\n\t\t\t} else {\n\t\t\t\tpmax = p2;\n\t\t\t\tcross = (dq1 - dq0 + (dq0 - dq3) / 3)\n\t\t\t\t\t\t* (-2 * (dq0 - dq1) + dq0 - dq2) / 3;\n\t\t\t}\n\t\t\thull = cross < 0 || distZero\n\t\t\t\t\t? [[p0, pmax, p3], [p0, p3]]\n\t\t\t\t\t: [[p0, p1, p2, p3], [p0, p3]];\n\t\t\tflip = dist1 ? dist1 < 0 : dist2 < 0;\n\t\t}\n\t\treturn flip ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold)\n\t\t\t\treturn px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, curve1, curve2, locations,\n\t\t\tinclude) {\n\t\tvar flip = Curve.isLinear(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trlx2 = ldx * cos - ldy * sin,\n\t\t\trvl = [0, 0, 0, 0, rlx2, 0, rlx2, 0],\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\ty * cos + x * sin);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tx = Curve.evaluate(rvc, tc, 0).x;\n\t\t\tif (x >= 0 && x <= rlx2) {\n\t\t\t\tvar tl = Curve.getParameterOf(rvl, x, 0),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, curve1, curve2, locations, include) {\n\t\tvar point = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (point) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tcurve1, Curve.getParameterOf(v1, x, y), point,\n\t\t\t\t\tcurve2, Curve.getParameterOf(v2, x, y), point);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\tgetIntersections: function(v1, v2, c1, c2, locations, include) {\n\t\t\tvar linear1 = Curve.isLinear(v1),\n\t\t\t\tlinear2 = Curve.isLinear(v2),\n\t\t\t\tc1p1 = c1.getPoint1(),\n\t\t\t\tc1p2 = c1.getPoint2(),\n\t\t\t\tc2p1 = c2.getPoint1(),\n\t\t\t\tc2p2 = c2.getPoint2(),\n\t\t\t\ttolerance = 0.000001;\n\t\t\tif (c1p1.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 0, c1p1);\n\t\t\tif (c1p1.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 1, c1p1);\n\t\t\t(linear1 && linear2\n\t\t\t\t? addLineIntersection\n\t\t\t\t: linear1 || linear2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, include,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (c1p2.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 0, c1p2);\n\t\t\tif (c1p2.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 1, c1p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\tfilterIntersections: function(locations, _expand) {\n\t\t\tvar last = locations.length - 1,\n\t\t\t\ttMax = 1 - 0.000001;\n\t\t\tfor (var i = last; i >= 0; i--) {\n\t\t\t\tvar loc = locations[i],\n\t\t\t\t\tnext = loc._curve.getNext(),\n\t\t\t\t\tnext2 = loc._curve2.getNext();\n\t\t\t\tif (next && loc._parameter >= tMax) {\n\t\t\t\t\tloc._parameter = 0;\n\t\t\t\t\tloc._curve = next;\n\t\t\t\t}\n\t\t\t\tif (next2 && loc._parameter2 >= tMax) {\n\t\t\t\t\tloc._parameter2 = 0;\n\t\t\t\t\tloc._curve2 = next2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction compare(loc1, loc2) {\n\t\t\t\tvar path1 = loc1.getPath(),\n\t\t\t\t\tpath2 = loc2.getPath();\n\t\t\t\treturn path1 === path2\n\t\t\t\t\t\t? (loc1.getIndex() + loc1.getParameter())\n\t\t\t\t\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t\t\t: path1._id - path2._id;\n\t\t\t}\n\n\t\t\tif (last > 0) {\n\t\t\t\tlocations.sort(compare);\n\t\t\t\tfor (var i = last; i > 0; i--) {\n\t\t\t\t\tif (locations[i].equals(locations[i - 1])) {\n\t\t\t\t\t\tlocations.splice(i, 1);\n\t\t\t\t\t\tlast--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_expand) {\n\t\t\t\tfor (var i = last; i >= 0; i--)\n\t\t\t\t\tlocations.push(locations[i].getIntersection());\n\t\t\t\tlocations.sort(compare);\n\t\t\t}\n\t\t\treturn locations;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point, _curve2,\n\t\t\t_parameter2, _point2, _distance) {\n\t\tthis._id = CurveLocation._id = (CurveLocation._id || 0) + 1;\n\t\tthis._curve = curve;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t\tthis._parameter = parameter;\n\t\tthis._point = point;\n\t\tthis._curve2 = _curve2;\n\t\tthis._parameter2 = _parameter2;\n\t\tthis._point2 = _point2;\n\t\tthis._distance = _distance;\n\t},\n\n\tgetSegment: function(_preferFirst) {\n\t\tif (!this._segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this.getParameter();\n\t\t\tif (parameter === 1) {\n\t\t\t\tthis._segment = curve._segment2;\n\t\t\t} else if (parameter === 0 || _preferFirst) {\n\t\t\t\tthis._segment = curve._segment1;\n\t\t\t} else if (parameter == null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis._segment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t}\n\t\treturn this._segment;\n\t},\n\n\tgetCurve: function(_uncached) {\n\t\tif (!this._curve || _uncached) {\n\t\t\tthis._curve = this._segment1.getCurve();\n\t\t\tif (this._curve.getParameterOf(this._point) == null)\n\t\t\t\tthis._curve = this._segment2.getPrevious().getCurve();\n\t\t}\n\t\treturn this._curve;\n\t},\n\n\tgetIntersection: function() {\n\t\tvar intersection = this._intersection;\n\t\tif (!intersection && this._curve2) {\n\t\t\tvar param = this._parameter2;\n\t\t\tthis._intersection = intersection = new CurveLocation(\n\t\t\t\t\tthis._curve2, param, this._point2 || this._point, this);\n\t\t\tintersection._intersection = this;\n\t\t}\n\t\treturn intersection;\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetOffset: function() {\n\t\tvar path = this.getPath();\n\t\treturn path ? path._getOffset(this) : this.getCurveOffset();\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetParameter: function(_uncached) {\n\t\tif ((this._parameter == null || _uncached) && this._point) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._parameter = curve && curve.getParameterOf(this._point);\n\t\t}\n\t\treturn this._parameter;\n\t},\n\n\tgetPoint: function(_uncached) {\n\t\tif ((!this._point || _uncached) && this._parameter != null) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._point = curve && curve.getPointAt(this._parameter, true);\n\t\t}\n\t\treturn this._point;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.divide(this.getParameter(true), true);\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.split(this.getParameter(true), true);\n\t},\n\n\tequals: function(loc) {\n\t\tvar abs = Math.abs,\n\t\t\ttolerance = 0.000001;\n\t\treturn this === loc\n\t\t\t\t|| loc\n\t\t\t\t\t&& this._curve === loc._curve\n\t\t\t\t\t&& this._curve2 === loc._curve2\n\t\t\t\t\t&& abs(this._parameter - loc._parameter) <= tolerance\n\t\t\t\t\t&& abs(this._parameter2 - loc._parameter2) <= tolerance\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t}\n}, Base.each(['getTangent', 'getNormal', 'getCurvature'], function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {}));\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, _matrix, _expand) {\n\t\tif (this === path)\n\t\t\tpath = null;\n\t\tvar locations = [],\n\t\t\tcurves1 = this.getCurves(),\n\t\t\tcurves2 = path ? path.getCurves() : curves1,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = path ? (_matrix || path._matrix).orNullIfIdentity()\n\t\t\t\t: matrix1,\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = path ? curves2.length : length1,\n\t\t\tvalues2 = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tif (path && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = path ? curve1.getValues(matrix1) : values2[i];\n\t\t\tif (!path) {\n\t\t\t\tvar seg1 = curve1.getSegment1(),\n\t\t\t\t\tseg2 = curve1.getSegment2(),\n\t\t\t\t\th1 = seg1._handleOut,\n\t\t\t\t\th2 = seg2._handleIn;\n\t\t\t\tif (new Line(seg1._point.subtract(h1), h1.multiply(2), true)\n\t\t\t\t\t\t.intersect(new Line(seg2._point.subtract(h2),\n\t\t\t\t\t\th2.multiply(2), true), false)) {\n\t\t\t\t\tvar parts = Curve.subdivide(values1);\n\t\t\t\t\tCurve.getIntersections(\n\t\t\t\t\t\tparts[0], parts[1], curve1, curve1, locations,\n\t\t\t\t\t\tfunction(loc) {\n\t\t\t\t\t\t\tif (loc._parameter <= tMax) {\n\t\t\t\t\t\t\t\tloc._parameter /= 2;\n\t\t\t\t\t\t\t\tloc._parameter2 = 0.5 + loc._parameter2 / 2;\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var j = path ? 0 : i + 1; j < length2; j++) {\n\t\t\t\tCurve.getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curves2[j], locations,\n\t\t\t\t\t!path && (j === i + 1 || j === length2 - 1 && i === 0)\n\t\t\t\t\t\t&& function(loc) {\n\t\t\t\t\t\t\tvar t = loc._parameter;\n\t\t\t\t\t\t\treturn t >= tMin && t <= tMax;\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Curve.filterIntersections(locations, _expand);\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tif (move && previous && previous !== 'z')\n\t\t\t\t\tthis.closePath(true);\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._clockwise = undefined;\n\t\t\tif (this._curves && !(flags & 16)) {\n\t\t\t\tfor (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t\tthis._monoCurves = undefined;\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\tisPolygon: function() {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif (!this._segments[i].isLinear())\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves || segs._curves) {\n\t\t\tif (!curves)\n\t\t\t\tcurves = this._curves = [];\n\t\t\tvar from = index > 0 ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, this._countCurves());\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves();\n\t\t\tthis._length = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tthis._length += curves[i].getLength();\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar curves = this.getCurves();\n\t\tvar area = 0;\n\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\tarea += curves[i].getArea();\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.evaluate(pos, 0)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (curve.isLinear() && curve.getLength() === 0)\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tolerance = 0.000001;\n\t\tif (parameter >= 1 - tolerance) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter > tolerance) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = this._clone(new Path().insertAbove(this, true));\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn Path.isClockwise(this._segments);\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path.closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\tinterpolate: function(path0, path1, coef) {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif ( !path0._segments[i] || !path1._segments[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._segments[i].interpolate(\n\t\t\t\tpath0._segments[i],\n\t\t\t\tpath1._segments[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\n\t\tthis._changed(9);\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isColinear(i, j) {\n\t\t\treturn segments[i].isColinear(segments[j]);\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\treturn segments[i].isOrthogonal();\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\treturn segments[i].isArc();\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (this.isPolygon() && segments.length === 4\n\t\t\t\t&& isColinear(0, 2) && isColinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isColinear(1, 5) && isColinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t});\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\tshape.setStyle(this._style);\n\t\t\tif (insert || insert === undefined)\n\t\t\t\tshape.insertAbove(this);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\t_getOffset: function(location) {\n\t\tvar index = location && location.getIndex();\n\t\tif (index != null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\toffset = 0;\n\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\toffset += curves[i].getLength();\n\t\t\tvar curve = curves[index],\n\t\t\t\tparameter = location.getParameter();\n\t\t\tif (parameter > 0)\n\t\t\t\toffset += curve.getPartLength(0, parameter);\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset;\n\t\t\treturn curves[index].getLocationAt(offset - index, true);\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}), new function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n}, new function() {\n\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n}, new function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < epsilon)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tisClockwise: function(segments) {\n\t\tvar sum = 0;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsum += Curve.getEdgeSum(Curve.getValues(\n\t\t\t\t\tsegments[i], segments[i + 1 < l ? i + 1 : 0]));\n\t\treturn sum > 0;\n\t},\n\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isColinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().normalize(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tif (this._children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t} else {\n\t\t\treturn reduce.base.call(this);\n\t\t}\n\t},\n\n\tinterpolate: function(compoundpath0, compoundpath1, coef) {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\tif ( !compoundpath0._children[i] || !compoundpath1._children[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._children[i].interpolate(\n\t\t\t\tcompoundpath0._children[i],\n\t\t\t\tcompoundpath1._children[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : mx, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n}, new function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current : new Path();\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tvar operator = operators[operation];\n\t\tfunction preparePath(path) {\n\t\t\treturn path.clone(false).reduce().reorient().transform(null, true,\n\t\t\t\t\ttrue);\n\t\t}\n\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tsplitPath(_path1.getIntersections(_path2, null, true));\n\n\t\tvar chain = [],\n\t\t\tsegments = [],\n\t\t\tmonoCurves = [],\n\t\t\ttolerance = 0.000001;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tsegments.sort(function(a, b) {\n\t\t\tvar _a = a._intersection,\n\t\t\t\t_b = b._intersection;\n\t\t\treturn !_a && !_b || _a && _b ? 0 : _a ? -1 : 1;\n\t\t});\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding != null)\n\t\t\t\tcontinue;\n\t\t\tchain.length = 0;\n\t\t\tvar startSeg = segment,\n\t\t\t\ttotalLength = 0,\n\t\t\t\twindingSum = 0;\n\t\t\tdo {\n\t\t\t\tvar length = segment.getCurve().getLength();\n\t\t\t\tchain.push({ segment: segment, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t\tsegment = segment.getNext();\n\t\t\t} while (segment && !segment._intersection && segment !== startSeg);\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar length = totalLength * (j + 1) / 4;\n\t\t\t\tfor (k = 0, m = chain.length; k < m; k++) {\n\t\t\t\t\tvar node = chain[k],\n\t\t\t\t\t\tcurveLength = node.length;\n\t\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\t\tif (length <= tolerance\n\t\t\t\t\t\t\t\t|| curveLength - length <= tolerance)\n\t\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\t\tvar curve = node.segment.getCurve(),\n\t\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\t\thor = curve.isLinear() && Math.abs(curve\n\t\t\t\t\t\t\t\t\t.getTangentAt(0.5, true).y) <= tolerance,\n\t\t\t\t\t\t\tpath = curve._path;\n\t\t\t\t\t\tif (path._parent instanceof CompoundPath)\n\t\t\t\t\t\t\tpath = path._parent;\n\t\t\t\t\t\twindingSum += operation === 'subtract' && _path2\n\t\t\t\t\t\t\t&& (path === _path1 && _path2._getWinding(pt, hor)\n\t\t\t\t\t\t\t|| path === _path2 && !_path1._getWinding(pt, hor))\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlength -= curveLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar winding = Math.round(windingSum / 3);\n\t\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.insertAbove(path1);\n\t\tresult.addChildren(tracePaths(segments, operator), true);\n\t\tresult = result.reduce();\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction splitPath(intersections) {\n\t\tvar tMin = 0.000001,\n\t\t\ttMax = 1 - tMin,\n\t\t\tlinearHandles;\n\n\t\tfunction resetLinear() {\n\t\t\tfor (var i = 0, l = linearHandles.length; i < l; i++)\n\t\t\t\tlinearHandles[i].set(0, 0);\n\t\t}\n\n\t\tfor (var i = intersections.length - 1, curve, prev; i >= 0; i--) {\n\t\t\tvar loc = intersections[i],\n\t\t\t\tt = loc._parameter;\n\t\t\tif (prev && prev._curve === loc._curve && prev._parameter > 0) {\n\t\t\t\tt /= prev._parameter;\n\t\t\t} else {\n\t\t\t\tcurve = loc._curve;\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tresetLinear();\n\t\t\t\tlinearHandles = curve.isLinear() ? [\n\t\t\t\t\t\tcurve._segment1._handleOut,\n\t\t\t\t\t\tcurve._segment2._handleIn\n\t\t\t\t\t] : null;\n\t\t\t}\n\t\t\tvar newCurve,\n\t\t\t\tsegment;\n\t\t\tif (newCurve = curve.divide(t, true, true)) {\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tcurve = newCurve.getPrevious();\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tlinearHandles.push(segment._handleOut, segment._handleIn);\n\t\t\t} else {\n\t\t\t\tsegment = t < tMin\n\t\t\t\t\t? curve._segment1\n\t\t\t\t\t: t > tMax\n\t\t\t\t\t\t? curve._segment2\n\t\t\t\t\t\t: curve.getPartLength(0, t) < curve.getPartLength(t, 1)\n\t\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tsegment._intersection = loc.getIntersection();\n\t\t\tloc._segment = segment;\n\t\t\tprev = loc;\n\t\t}\n\t\tif (linearHandles)\n\t\t\tresetLinear();\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar tolerance = 0.000001,\n\t\t\ttMin = tolerance,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - tolerance,\n\t\t\t\tyAfter = py + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.evaluate(values, roots[j], 0).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves);\n\t\t} else {\n\t\t\tvar xBefore = px - tolerance,\n\t\t\t\txAfter = px + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding,\n\t\t\t\t\tprevT,\n\t\t\t\t\tprevX;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tx = Curve.evaluate(values, t, 0).x,\n\t\t\t\t\t\tslope = Curve.evaluate(values, t, 1).y;\n\t\t\t\t\tif (!(t > tMax\n\t\t\t\t\t\t\t&& (i === l - 1 || curve.next !== curves[i + 1])\n\t\t\t\t\t\t\t&& abs(Curve.evaluate(curve.next.values, 0, 0).x -x)\n\t\t\t\t\t\t\t\t<= tolerance\n\t\t\t\t\t\t|| i > 0 && curve.previous === curves[i - 1]\n\t\t\t\t\t\t\t&& abs(prevX - x) < tolerance\n\t\t\t\t\t\t\t&& prevT > tMax && t < tMin)) {\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isLinear(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0, 1).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprevT = t;\n\t\t\t\t\tprevX = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction tracePaths(segments, operator, selfOp) {\n\t\tvar paths = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0, seg, startSeg, l = segments.length; i < l; i++) {\n\t\t\tseg = startSeg = segments[i];\n\t\t\tif (seg._visited || !operator(seg._winding))\n\t\t\t\tcontinue;\n\t\t\tvar path = new Path(Item.NO_INSERT),\n\t\t\t\tinter = seg._intersection,\n\t\t\t\tstartInterSeg = inter && inter._segment,\n\t\t\t\tadded = false,\n\t\t\t\tdir = 1;\n\t\t\tdo {\n\t\t\t\tvar handleIn = dir > 0 ? seg._handleIn : seg._handleOut,\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn,\n\t\t\t\t\tinterSeg;\n\t\t\t\tif (added && (!operator(seg._winding) || selfOp)\n\t\t\t\t\t\t&& (inter = seg._intersection)\n\t\t\t\t\t\t&& (interSeg = inter._segment)\n\t\t\t\t\t\t&& interSeg !== startSeg) {\n\t\t\t\t\tif (selfOp) {\n\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar c1 = seg.getCurve();\n\t\t\t\t\t\tif (dir > 0)\n\t\t\t\t\t\t\tc1 = c1.getPrevious();\n\t\t\t\t\t\tvar t1 = c1.getTangentAt(dir < 1 ? tMin : tMax, true),\n\t\t\t\t\t\t\tc4 = interSeg.getCurve(),\n\t\t\t\t\t\t\tc3 = c4.getPrevious(),\n\t\t\t\t\t\t\tt3 = c3.getTangentAt(tMax, true),\n\t\t\t\t\t\t\tt4 = c4.getTangentAt(tMin, true),\n\t\t\t\t\t\t\tw3 = t1.cross(t3),\n\t\t\t\t\t\t\tw4 = t1.cross(t4);\n\t\t\t\t\t\tif (w3 * w4 !== 0) {\n\t\t\t\t\t\t\tvar curve = w3 < w4 ? c3 : c4,\n\t\t\t\t\t\t\t\tnextCurve = operator(curve._segment1._winding)\n\t\t\t\t\t\t\t\t\t? curve\n\t\t\t\t\t\t\t\t\t: w3 < w4 ? c4 : c3,\n\t\t\t\t\t\t\t\tnextSeg = nextCurve._segment1;\n\t\t\t\t\t\t\tdir = nextCurve === c3 ? -1 : 1;\n\t\t\t\t\t\t\tif (nextSeg._visited && seg._path !== nextSeg._path\n\t\t\t\t\t\t\t\t\t\t|| !operator(nextSeg._winding)) {\n\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\t\t\tif (nextSeg._visited)\n\t\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, added && handleIn, handleOut));\n\t\t\t\tadded = true;\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = dir > 0 ? seg.getNext() : seg. getPrevious();\n\t\t\t} while (seg && !seg._visited\n\t\t\t\t\t&& seg !== startSeg && seg !== startInterSeg\n\t\t\t\t\t&& (seg._intersection || operator(seg._winding)));\n\t\t\tif (seg && (seg === startSeg || seg === startInterSeg)) {\n\t\t\t\tpath.firstSegment.setHandleIn((seg === startInterSeg\n\t\t\t\t\t\t? startInterSeg : seg)._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else {\n\t\t\t\tpath.lastSegment._handleOut.set(0, 0);\n\t\t\t}\n\t\t\tif (path._segments.length >\n\t\t\t\t\t(path._closed ? path.isPolygon() ? 2 : 0 : 1))\n\t\t\t\tpaths.push(path);\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn new Group([this.subtract(path), this.intersect(path)]);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isLinear(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttolerance = 0.000001,\n\t\t\t\t\troots = [];\n\t\t\t\tvar count = Numerical.solveQuadratic(a, b, c, roots, tolerance,\n\t\t\t\t\t\t1 - tolerance);\n\t\t\t\tif (count === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.evaluate(values, roots[j], 0).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 0.000001) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tevaluate: function(offset, type) {\n\t\tvar param = this.getParameterAt(offset);\n\t\treturn Curve.evaluate(this.curves[param.index], param.value, type);\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\treturn this.evaluate(offset, index);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tthis.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1);\n\t\tepsilon *= segLength;\n\t\tif (alpha1 < epsilon || alpha2 < epsilon) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t}\n\n\t\treturn [pt1, pt1.add(tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 0.000001)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tvalue = parser.call(this, value);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tthis._components[index] = value;\n\t\t\t\t\tthis._changed();\n\t\t\t\t}\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type];\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tif (type === 'gradient')\n\t\t\t\tthis._id = Color._id = (Color._id || 0) + 1;\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n}, new function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nBase.each(Color._types, function(properties, type) {\n\tvar ctor = this[Base.capitalize(type) + 'Color'] = function(arg) {\n\t\t\tvar argType = arg != null && typeof arg,\n\t\t\t\tcomponents = argType === 'object' && arg.length != null\n\t\t\t\t\t? arg\n\t\t\t\t\t: argType === 'string'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: arguments;\n\t\t\treturn components\n\t\t\t\t\t? new Color(type, components)\n\t\t\t\t\t: new Color(arg);\n\t\t};\n\tif (type.length == 3) {\n\t\tvar acronym = type.toUpperCase();\n\t\tColor[acronym] = this[acronym + 'Color'] = ctor;\n\t}\n}, Base.exports);\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = Gradient._id = (Gradient._id || 0) + 1;\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = typeof window === 'object' &&\n\t\t\tDomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tif ( typeof window === 'object' ) {\n\t\tDomEvent.add(window, {\n\t\t\tfocus: function() {\n\t\t\t\tfocused = true;\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tfocused = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif ( !noCanvas ) {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchAction: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\tuserDrag: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\n\t\t\tfunction getSize(name) {\n\t\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t\t}\n\n\t\t\tfunction getCanvasSize() {\n\t\t\t\tvar size = DomElement.getSize(element);\n\t\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t\t: size;\n\t\t\t}\n\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._setViewSize(size = getCanvasSize());\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = 1;\n\t\t\tthis._id = 'view-' + View._id++;\n\t\t\tsize = new Size(element.width, element.height);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: {\n\t\tonFrame: {\n\t\t\tinstall: function() {\n\t\t\t\tthis.play();\n\t\t\t},\n\n\t\t\tuninstall: function() {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t},\n\n\t\tonResize: {}\n\t},\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n}, new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif ( !noCanvas ) {\n\t\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tif (size.isZero())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t\t}\n\t\t\tthis._context = canvas.getContext('2d');\n\t\t}\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!noCanvas && !/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font;\n\t\tctx.font = size + ' serif';\n\t\tsize = parseFloat(ctx.font);\n\t\tctx.font = prevFont;\n\t\treturn size;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function() {\n\t\tvar project = this._project;\n\t\tif (!project || !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n}, new function() {\n\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers)\n\t\t\tmodifiers[name] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = this._minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = distance;\n\t\tthis._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tvar maxDist = maxDistance != null ? maxDistance : 0;\n\t\t\t\tif (maxDist != 0) {\n\t\t\t\t\tif (distance > maxDist) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDist));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback) {\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, true);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif ( noCanvas ) {\n\t\t\treturn { getContext: function() {} };\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tif (options.matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (item.isPolygon()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (applyMatrix && item)\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n\n},{}],3:[function(require,module,exports){\nfunction Collection( args ) {\n\t// already a Collection? Job's done\n\tif ( arguments.length === 1 && args instanceof Collection ) {\n\t\treturn args;\n\n\t} else if ( arguments.length > 1 || !Array.isArray( args ) ) {\n\t\targs = [].slice.call( arguments, 0 );\n\t}\n\n\tthis.length = 0;\n\n\targs.forEach(function( arg ) {\n\t\t// unwrap any collection\n\t\tif ( arg instanceof Collection ) {\n\t\t\tfor ( var i = -1; ++i < arg.length; ) {\n\t\t\t\tthis[this.length++] = arg[i];\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis[this.length++] = arg;\n\t\t}\n\n\t}, this);\n\n\treturn this;\n}\n\nCollection.prototype.forEach = function(cb, scope) {\n\tfor ( var i = -1; ++i < this.length; ) {\n\t\tcb.call(scope || this[i], this[i], i, this);\n\t}\n\n\treturn this;\n};\n\nCollection.prototype.prop = function(name, val) {\n\tvar i;\n\n\t// object setter\n\tif ( typeof name === 'object' ) {\n\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\tthis[i].set( name );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// getter\n\tif ( val === undefined ) {\n\t\treturn this[0][name];\n\t}\n\n\t// simple setter\n\tfor ( i = -1; ++i < this.length; ) {\n\t\tthis[i][name] = val;\n\t}\n\n\treturn this;\n};\n\nfunction wrapConstructor( constructor, prototype, useConstructed ) {\n\treturn function wrapper() {\n\t\tvar c,\n\t\t\ttmp,\n\t\t\tarr = [];\n\n\t\t// constructor used with new\n\t\tif ( this instanceof wrapper ) {\n\t\t\t// proxy to paper native constructor\n\t\t\tc = Object.create(prototype);\n\t\t\ttmp = constructor.apply(c, arguments);\n\t\t\treturn useConstructed ?\n\t\t\t\ttmp : c;\n\n\t\t// without new, build a collection\n\t\t} else {\n\t\t\tif ( Array.isArray( arguments[0] ) ) {\n\t\t\t\targuments[0].forEach(function(params, i) {\n\t\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\t\tc = constructor.call( arr[i], params );\n\t\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\t\tarr[i] = c;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\tc = constructor.apply( arr[0], arguments );\n\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\tarr[0] = c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Collection( arr );\n\t\t}\n\t};\n}\n\nvar rconstructor = /(^|\\.)[A-Z][A-z]+$/;\nfunction constructorFilter( name ) {\n\treturn typeof this[name] === 'function' && rconstructor.test(name);\n}\n\n// unwrap a collection or array of collection\nfunction unwrapArg( arr, id, isPlural ) {\n\t// unwrap a single collection\n\tif ( arr && arr[id] instanceof Collection ) {\n\t\tarr[id] = isPlural ?\n\t\t\t[].slice.call( arr[id], 0 ) :\n\t\t\tarr[id][0];\n\n\t// unwrap an array of collection\n\t} else if ( arr && arr[id].length && arr[id][0] instanceof Collection ) {\n\t\tfor ( var i = -1; ++i < arr[id].length; ) {\n\t\t\tarr[id][i] = arr[id][i][0];\n\t\t}\n\t}\n}\n\nfunction unwrapArgs() {\n\tvar isPlural = this.isPlural,\n\t\targs = [].slice.call( arguments, 0 ),\n\t\tid,\n\t\ti;\n\n\t// first arg is an object and might have a collection or array of collection\n\t// Todo: objects should be unwrapped recursively\n\tif ( args[0] && args[0].constructor === Object ) {\n\t\tif ( 'children' in args[0] ) {\n\t\t\tid = 'children';\n\n\t\t} else if ( 'segments' in args[0] ) {\n\t\t\tid = 'segments';\n\n\t\t} else if ( 'nodes' in args[0] ) {\n\t\t\tid = 'nodes';\n\t\t}\n\n\t\tunwrapArg( args[0], id, true );\n\n\t// otherwise unwrap each arg\n\t} else {\n\t\tfor ( i = -1; ++i < args.length; ) {\n\t\t\t// if the method is plural (addChildren) and we're unwrapping\n\t\t\t// the last argument, we want to keep it in an array\n\t\t\tunwrapArg( args, i, i === args.length - 1 && isPlural );\n\t\t}\n\t}\n\n\treturn args;\n}\n\nCollection.proxy = function( paper ) {\n\tvar plumin = this;\n\n\tplumin.paper = paper;\n\n\tvar methodNames = {};\n\tObject.getOwnPropertyNames( paper.PaperScope.prototype )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype )\n\t\t.forEach(function(name) {\n\t\t\tplumin[name] = wrapConstructor( this[name], this[name].prototype );\n\n\t\t\t// we don't want to proxy methods of Collection\n\t\t\tif ( name === 'Collection' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tObject.getOwnPropertyNames( this[name].prototype )\n\t\t\t\t.forEach(function(_name) {\n\t\t\t\t\t// collect unique method names (first test avoids getters)\n\t\t\t\t\tif ( !Object.getOwnPropertyDescriptor(this, _name).get &&\n\t\t\t\t\t\t\ttypeof this[_name] === 'function' ) {\n\n\t\t\t\t\t\tmethodNames[_name] = true;\n\t\t\t\t\t}\n\n\t\t\t\t}, this[name].prototype);\n\n\t\t}, paper.PaperScope.prototype);\n\n\tObject.keys( paper.PaperScope.prototype.Path )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Path )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Path[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Path );\n\n\tObject.keys( paper.PaperScope.prototype.Shape )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Shape )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Shape[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Shape );\n\n\t// proxy the most commonly used method of paper\n\t// do it only after proxying constructors otherwise it's overwritten\n\tplumin.setup = paper.setup.bind(paper);\n\n\t// proxy all methods from every constructor\n\t// by default methods aren't chainable\n\tObject.keys( methodNames ).sort().forEach(function(name) {\n\t\t// please oh please, don't overwrite my constructor, I need it.\n\t\tif ( name === 'constructor' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(null, arguments),\n\t\t\t\ti,\n\t\t\t\tresult;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tresult = this[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// by default methods aren't chainable\n\t\t\t// return the last result\n\t\t\treturn result;\n\t\t};\n\t});\n\n\t\t// addChild( item ) and other methods with similar signatures\n\t\t// that we want to make chainable\n\tvar chain = [\n\t\t\t'set',\n\t\t\t'setX',\n\t\t\t'setY',\n\t\t\t'insertAbove',\n\t\t\t'insertBelow',\n\t\t\t'sendToBack',\n\t\t\t'bringToFront',\n\t\t\t'remove',\n\t\t\t'removeChildren',\n\t\t\t'reverseChildren',\n\n\t\t\t'translate',\n\t\t\t'rotate',\n\t\t\t'scale',\n\t\t\t'shear',\n\t\t\t'skew',\n\t\t\t'transform',\n\t\t\t'fitBounds',\n\t\t\t'emit',\n\n\t\t\t'activate',\n\n\t\t\t'setPixel',\n\n\t\t\t'smooth',\n\t\t\t'moveTo',\n\t\t\t'lineTo',\n\t\t\t'cubicCurveTo',\n\t\t\t'quadraticCurveTo',\n\t\t\t'curveTo',\n\t\t\t'arcTo',\n\t\t\t'closePath',\n\t\t\t'moveBy',\n\t\t\t'lineBy',\n\t\t\t'cubicCurveBy',\n\t\t\t'quadraticCurveBy',\n\t\t\t'curveBy',\n\t\t\t'arcBy',\n\n\t\t\t'removeSegments',\n\t\t\t'simplify',\n\t\t\t'reverse',\n\n\t\t\t// Rectangle\n\t\t\t'include',\n\t\t\t'expand',\n\t\t\t'scale',\n\t\t// ],\n\t\t// createAndChain = [\n\t\t\t'addChild',\n\t\t\t'insertChild',\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'replaceWith',\n\n\t\t\t'appendTop',\n\t\t\t'appendBottom',\n\n\t\t\t'add',\n\t\t\t'insert',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNode',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\n\t\t\t'addGlyph',\n\t\t\t'addGlyphs',\n\n\t\t\t'addContour',\n\t\t\t'insertContour',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addAnchor',\n\t\t\t'addAnchors',\n\t\t\t'addComponent',\n\t\t\t'addComponents',\n\n\t\t\t'addUnicode',\n\t\t\t'prepareOt',\n\t\t\t'addToFonts',\n\t\t\t'download'\n\t\t],\n\t\tplural = [\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\t\t\t'addGlyphs',\n\t\t\t'addAnchors',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addComponents'\n\t\t]/*,\n\t\tmathPoinFn = [\n\t\t\t'round',\n\t\t\t'ceil',\n\t\t\t'floor',\n\t\t\t'abs'\n\t\t],\n\t\tbooleanPathOp = [\n\t\t\t'unite',\n\t\t\t'intersect',\n\t\t\t'subtract',\n\t\t\t'exclude',\n\t\t\t'divide'\n\t\t]*/;\n\n\tchain.forEach(function(name) {\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(\n\t\t\t\t\t{ isPlural: plural.indexOf(name) !== -1 },\n\t\t\t\t\targuments\n\t\t\t\t),\n\t\t\t\ti;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tthis[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// make method chainable\n\t\t\treturn this;\n\t\t};\n\t});\n\n\t// singular chainable method\n};\n\nmodule.exports = Collection;\n\n},{}],4:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tGlyph = require('./Glyph.js');\n\nfunction Font( args ) {\n\tif ( !args ) {\n\t\targs = {};\n\t}\n\n\tif ( !args.styleName ) {\n\t\targs.styleName = 'Regular';\n\t}\n\n\tif ( !args.unitsPerEm ) {\n\t\targs.unitsPerEm = 1024;\n\t}\n\n\tthis.ot = new opentype.Font( args );\n\n\tthis.glyphs = [];\n\tthis.glyphMap = {};\n\tthis.charMap = {};\n\tthis.altMap = {};\n\tthis._subset = false;\n\n\tthis.addGlyph(new Glyph({\n\t\tname: '.notdef',\n\t\tunicode: 0\n\t}));\n\n\tif ( args && args.glyphs ) {\n\t\tthis.addGlyphs( args.glyphs );\n\t}\n\n\tif ( typeof window === 'object' && window.document ) {\n\t\t// work around https://bugzilla.mozilla.org/show_bug.cgi?id=1100005\n\t\t// by using fonts.delete in batch, every 1 second\n\t\tif ( document.fonts ) {\n\t\t\tthis.addedFonts = [];\n\n\t\t\tsetInterval(function() {\n\t\t\t\twhile ( this.addedFonts.length > 1 ) {\n\t\t\t\t\tdocument.fonts.delete( this.addedFonts.shift() );\n\t\t\t\t}\n\t\t\t}.bind(this), 1000);\n\n\t\t} else {\n\t\t\tdocument.head.appendChild(\n\t\t\t\tthis.styleElement = document.createElement('style')\n\t\t\t);\n\t\t\t// let's find the corresponding CSSStyleSheet\n\t\t\t// (would be much easier with Array#find)\n\t\t\tthis.styleSheet = document.styleSheets[\n\t\t\t\t[].map.call(document.styleSheets, function(ss) {\n\t\t\t\t\treturn ss.ownerNode;\n\t\t\t\t}).indexOf(this.styleElement)\n\t\t\t];\n\t\t}\n\t}\n}\n\n// Todo: handle unicode updates\nObject.defineProperty(Glyph.prototype, 'children', {\n\tget: function() {\n\t\treturn this.glyphs;\n\t}\n});\n\nFont.prototype.addGlyph = function( glyph ) {\n\tthis.glyphs.push( glyph );\n\tthis.glyphMap[glyph.name] = glyph;\n\tglyph._parent = this;\n\n\tif ( glyph.ot.unicode === undefined ) {\n\t\treturn glyph;\n\t}\n\n\t// build the default cmap\n\t// if multiple glyphs share the same unicode, use the glyph where unicode\n\t// and name are equal\n\tif ( !this.charMap[glyph.ot.unicode] ||\n\t\t\t( glyph.name.length === 1 &&\n\t\t\t\tglyph.name.charCodeAt(0) === glyph.ot.unicode ) ) {\n\n\t\tthis.charMap[glyph.ot.unicode] = glyph;\n\t}\n\n\t// build the alternates map\n\tif ( !this.altMap[glyph.ot.unicode] ) {\n\t\tthis.altMap[glyph.ot.unicode] = [];\n\t}\n\tthis.altMap[glyph.ot.unicode].push( glyph );\n\n\t// invalidate glyph subset cache\n\t// TODO: switch to immutable.js to avoid this maddness\n\tthis._lastSubset = undefined;\n\n\treturn glyph;\n};\n\nFont.prototype.addGlyphs = function( glyphs ) {\n\treturn glyphs.forEach(function( glyph ) {\n\t\tthis.addGlyph(glyph);\n\n\t}, this);\n};\n\nObject.defineProperty( Font.prototype, 'subset', {\n\tget: function() {\n\t\treturn this._subset;\n\t},\n\tset: function( set ) {\n\t\tthis._subset = set === false ?\n\t\t\tfalse : Font.normalizeSubset( set );\n\n\t\treturn this._subset;\n\t}\n});\n\nFont.prototype.getGlyphSubset = function( set ) {\n\tif ( set === true ) {\n\t\treturn this.glyphs;\n\t}\n\n\tset = set !== undefined ?\n\t\tFont.normalizeSubset( set ) :\n\t\tthis._subset;\n\n\t// reuse last subset if possible\n\t// TODO: implement caching using immutable.js\n\tif ( this._lastSubset &&\n\t\t\tthis._lastSubset[0] === ( this._subset || [] ).join() ) {\n\n\t\treturn this._lastSubset[1];\n\t}\n\n\t// memoize last subset\n\tthis._lastSubset = [\n\t\t( this._subset || [] ).join(),\n\t\tthis.glyphs.filter(function( glyph ) {\n\t\t\tif ( this._subset === false &&\n\t\t\t\t\t( glyph.ot.unicode !== undefined ||\n\t\t\t\t\t( glyph.ot.unicodes && glyph.ot.unicodes.length ) ) ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( this._subset &&\n\t\t\t\t\tthis._subset.indexOf( glyph.ot.unicode ) !== -1 ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// TODO: handle multiple unicodes\n\t\t\treturn false;\n\n\t\t}, this)\n\t];\n\n\treturn this._lastSubset[1];\n};\n\nFont.prototype.interpolate = function( font0, font1, coef, set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\tglyph.interpolate(\n\t\t\tfont0.glyphMap[glyph.name],\n\t\t\tfont1.glyphMap[glyph.name],\n\t\t\tcoef\n\t\t);\n\t});\n\n\t// TODO: evaluate if taking subsetting into account makes kerning\n\t// interpolation faster or slower.\n\tif ( this.ot.kerningPairs ) {\n\t\tfor ( var i in this.ot.kerningPairs ) {\n\t\t\tthis.ot.kerningPairs[i] =\n\t\t\t\tfont0.ot.kerningPairs[i] +\n\t\t\t\t( font1.ot.kerningPairs[i] - font0.ot.kerningPairs[i] ) * coef;\n\t\t}\n\t}\n\n\tthis.ot.ascender =\n\t\tfont0.ot.ascender + ( font1.ot.ascender - font0.ot.ascender ) * coef;\n\tthis.ot.descender =\n\t\tfont0.ot.descender + ( font1.ot.descender - font0.ot.descender ) * coef;\n\n\treturn this;\n};\n\nFont.prototype.updateSVGData = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateSVGData();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.updateOTCommands = function( set ) {\n\tthis.ot.glyphs = this.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateOTCommands();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.importOT = function( otFont ) {\n\tthis.ot = otFont;\n\n\totFont.glyphs.forEach(function( otGlyph ) {\n\t\tvar glyph = new Glyph({\n\t\t\t\tname: otGlyph.name,\n\t\t\t\tunicode: otGlyph.unicode\n\t\t\t});\n\n\t\tthis.addGlyph( glyph );\n\t\tglyph.importOT( otGlyph );\n\n\t}, this);\n\n\treturn this;\n};\n\nif ( typeof window === 'object' && window.document ) {\n\n\tvar _URL = window.URL || window.webkitURL;\n\tFont.prototype.addToFonts = document.fonts ?\n\t\t// CSS font loading, lightning fast\n\t\tfunction( buffer ) {\n\t\t\tvar fontface = new window.FontFace(\n\t\t\t\tthis.ot.familyName,\n\t\t\t\tbuffer || this.ot.toBuffer()\n\t\t\t);\n\n\t\t\tdocument.fonts.add( fontface );\n\t\t\tthis.addedFonts.push( fontface );\n\n\t\t\treturn this;\n\t\t} :\n\t\tfunction( buffer ) {\n\t\t\tvar url = _URL.createObjectURL(\n\t\t\t\t\tnew Blob(\n\t\t\t\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t\t\t\t{ type: 'font/opentype' }\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tif ( this.fontObjectURL ) {\n\t\t\t\t_URL.revokeObjectURL( this.fontObjectURL );\n\t\t\t\tthis.styleSheet.deleteRule(0);\n\t\t\t}\n\n\t\t\tthis.styleSheet.insertRule(\n\t\t\t\t'@font-face { font-family: \"' + this.ot.familyName + '\";' +\n\t\t\t\t'src: url(' + url + '); }',\n\t\t\t\t0\n\t\t\t);\n\t\t\tthis.fontObjectURL = url;\n\n\t\t\treturn this;\n\t\t};\n\n\tFont.prototype.download = function( buffer ) {\n\t\tvar reader = new FileReader();\n\n\t\treader.onloadend = function() {\n\t\t\twindow.location = reader.result;\n\t\t};\n\n\t\treader.readAsDataURL(new Blob(\n\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t{ type: 'font/opentype' }\n\t\t));\n\n\t\treturn this;\n\t};\n\n}\n\nFont.normalizeSubset = function( set ) {\n\treturn ( typeof set === 'string' ?\n\t\t\tset.split('').map(function(e) {\n\t\t\t\treturn e.charCodeAt(0);\n\t\t\t}) :\n\t\t\tset\n\t\t)\n\t\t.filter(function(e, i, arr) {\n\t\t\treturn arr.lastIndexOf(e) === i;\n\t\t})\n\t\t.sort();\n};\n\nmodule.exports = Font;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"./Glyph.js\":5}],5:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js');\n\nfunction Glyph( args ) {\n\tpaper.CompoundPath.prototype.constructor.apply( this );\n\n\tif ( args && typeof args.unicode === 'string' ) {\n\t\targs.unicode = args.unicode.charCodeAt(0);\n\t}\n\n\tthis.ot = new opentype.Glyph( args );\n\tthis.ot.path = new opentype.Path();\n\n\tthis.name = args.name;\n\t// workaround opentype 'unicode === 0' bug\n\tthis.ot.unicode = args.unicode;\n\n\t//this.contours = ( args && args.contours ) || [];\n\tthis.anchors = ( args && args.anchors ) || [];\n\tthis.components = ( args && args.components ) || [];\n\tthis.parentAnchors = ( args && args.parentAnchors ) || [];\n\n\t// default fill color needed to display the glyph in a canvas\n\tthis.fillColor = new paper.Color(0, 0, 0);\n\t// but each individual glyph must be explicitely made visible\n\tthis.visible = false;\n}\n\nGlyph.prototype = Object.create(paper.CompoundPath.prototype);\nGlyph.prototype.constructor = Glyph;\n\n// Todo: handle unicode updates\nObject.defineProperty(Glyph.prototype, 'unicode', {\n\tset: function( code ) {\n\t\tthis.ot.unicode = typeof code === 'string' ?\n\t\t\tcode.charCodeAt(0) :\n\t\t\tcode;\n\t},\n\tget: function() {\n\t\treturn this.ot.unicode;\n\t}\n});\n\n// proxy *Child/*Children methods to *Contour/*Contours\n// This has the added benefit of preventing CompoundPath#insertChildren\n// from arbitrarily changing the direction of paths\nObject.getOwnPropertyNames( paper.Item.prototype )\n\t.forEach(function(name) {\n\t\t// exclude getters and non-methods\n\t\tif ( Object.getOwnPropertyDescriptor(this, name).get ||\n\t\t\t\ttypeof this[name] !== 'function' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( name.indexOf('Children') !== -1 ) {\n\t\t\tthis[name.replace('Children', 'Contours')] = this[name];\n\n\t\t} else if ( name.indexOf('Child') !== -1 ) {\n\t\t\tthis[name.replace('Child', 'Contour')] = this[name];\n\t\t}\n\n\t}, paper.Item.prototype);\n\n// Fix two problems with CompoundPath#insertChildren:\n// - it arbitrarily changes the direction of paths\n// - it seems that it doesn't handle CompoundPath arguments\nGlyph.prototype.insertChildren = function(index, items, _preserve) {\n\tif ( Array.isArray( items ) ) {\n\t\t// flatten items to handle CompoundPath children\n\t\titems = [].concat.apply([], items.map(function(item) {\n\t\t\treturn item instanceof paper.Path ? item : item.children;\n\t\t}));\n\t}\n\n\treturn paper.Item.prototype.insertChildren.call(\n\t\tthis, index, items, _preserve, paper.Path\n\t);\n};\n\n// proxy .children to .contours\nObject.defineProperty(\n\tGlyph.prototype,\n\t'contours',\n\tObject.getOwnPropertyDescriptor( paper.Item.prototype, 'children' )\n);\n\nGlyph.prototype.addComponent = function( item ) {\n\tthis.components.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addComponents = function( components ) {\n\treturn components.forEach(function(component) {\n\t\tthis.addComponent(component);\n\t}, this);\n};\n\nGlyph.prototype.addAnchor = function( item ) {\n\tthis.anchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addAnchors = function( anchors ) {\n\treturn anchors.forEach(function(anchor) {\n\t\tthis.addAnchor(anchor);\n\t}, this);\n};\n\nGlyph.prototype.addParentAnchor = function( item ) {\n\tthis.parentAnchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addUnicode = function( code ) {\n\tthis.ot.addUnicode( code );\n\n\treturn this;\n};\n\nGlyph.prototype.interpolate = function( glyph0, glyph1, coef ) {\n\tfor (var i = 0, l = this.contours.length; i < l; i++) {\n\t\t// The number of children should be the same everywhere,\n\t\t// but we're going to try our best anyway\n\t\tif ( !glyph0.contours[i] || !glyph1.contours[i] ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.contours[i].interpolate(\n\t\t\tglyph0.contours[i],\n\t\t\tglyph1.contours[i],\n\t\t\tcoef\n\t\t);\n\n\t\t/* eslint-disable no-loop-func */\n\t\tthis.components.forEach(function(component, j) {\n\t\t\tcomponent.interpolate(\n\t\t\t\tglyph0.components[j], glyph1.components[j], coef\n\t\t\t);\n\t\t});\n\t\t/* eslint-enable no-loop-func */\n\n\t\tthis.ot.advanceWidth =\n\t\t\tglyph0.ot.advanceWidth +\n\t\t\t( glyph1.ot.advanceWidth - glyph0.ot.advanceWidth ) * coef;\n\t\tthis.ot.leftSideBearing =\n\t\t\tglyph0.ot.leftSideBearing +\n\t\t\t( glyph1.ot.leftSideBearing - glyph0.ot.leftSideBearing ) * coef;\n\t\tthis.ot.xMax =\n\t\t\tglyph0.ot.xMax + ( glyph1.ot.xMax - glyph0.ot.xMax ) * coef;\n\t\tthis.ot.xMin =\n\t\t\tglyph0.ot.xMin + ( glyph1.ot.xMin - glyph0.ot.xMin ) * coef;\n\t\tthis.ot.yMax =\n\t\t\tglyph0.ot.yMax + ( glyph1.ot.yMax - glyph0.ot.yMax ) * coef;\n\t\tthis.ot.yMin =\n\t\t\tglyph0.ot.yMin + ( glyph1.ot.yMin - glyph0.ot.yMin ) * coef;\n\t}\n\n\treturn this;\n};\n\nGlyph.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.contours.forEach(function( contour ) {\n\t\tcontour.updateSVGData( path );\n\t}, this);\n\n\tthis.components.forEach(function( component ) {\n\t\tcomponent.updateSVGData( path );\n\t});\n\n\treturn this.svgData;\n};\n\nGlyph.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.contours.forEach(function( contour ) {\n\t\tcontour.updateOTCommands( path );\n\t}, this);\n\n\tthis.components.forEach(function( component ) {\n\t\tcomponent.updateOTCommands( path );\n\t});\n\n\treturn this.ot;\n};\n\nGlyph.prototype.importOT = function( otGlyph ) {\n\tvar current;\n\tthis.ot = otGlyph;\n\n\tif ( !otGlyph.path || !otGlyph.path.commands ) {\n\t\treturn this;\n\t}\n\n\tthis.ot.path.commands.forEach(function(command) {\n\t\tswitch ( command.type ) {\n\t\t\tcase 'M':\n\t\t\t\tcurrent = new paper.Path();\n\t\t\t\tthis.addContour( current );\n\n\t\t\t\tcurrent.moveTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tcurrent.lineTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tcurrent.cubicCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\t[ command.x2, command.y2 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tcurrent.quadraticCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\t// When the glyph has no contour,\n\t\t\t\t// they contain a single Z command in\n\t\t\t\t// opentype.js.\n\t\t\t\t// TODO: see how we should handle that\n\t\t\t\tif ( current ) {\n\t\t\t\t\tcurrent.closePath();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}, this);\n\n\treturn this;\n};\n\nmodule.exports = Glyph;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2}],6:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nObject.defineProperty( paper.Segment.prototype, 'x', {\n\tget: function() {\n\t\treturn this.point.x;\n\t},\n\tset: function( value ) {\n\t\tthis.point.x = value;\n\t}\n});\n\nObject.defineProperty( paper.Segment.prototype, 'y', {\n\tget: function() {\n\t\treturn this.point.y;\n\t},\n\tset: function( value ) {\n\t\tthis.point.y = value;\n\t}\n});\n\nmodule.exports = paper.Segment;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],7:[function(require,module,exports){\n/* Extend the Path prototype to add OpenType conversion\n * and alias *segments methods and properties to *nodes\n */\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nvar proto = paper.PaperScope.prototype.Path.prototype;\n\n// alias *Segments methods to *Nodes equivalents\n[ 'add', 'insert', 'remove' ].forEach(function(name) {\n\tproto[name + 'Nodes'] =\n\t\tproto[name + 'Segments'];\n});\n\n// alias .segments to .nodes\nObject.defineProperties(proto, {\n\tnodes: Object.getOwnPropertyDescriptor( proto, 'segments' ),\n\tfirstNode: Object.getOwnPropertyDescriptor( proto, 'firstSegment' ),\n\tlastNode: Object.getOwnPropertyDescriptor( proto, 'lastSegment' )\n});\n\nproto._updateData = function( data, pushSimple, pushBezier ) {\n\tif ( this.visible === false ) {\n\t\treturn data;\n\t}\n\n\tpushSimple(\n\t\t'M',\n\t\tMath.round( this.curves[0].point1.x ) || 0,\n\t\tMath.round( this.curves[0].point1.y ) || 0\n\t);\n\n\tthis.curves.forEach(function( curve ) {\n\t\tif ( curve.isLinear() ) {\n\t\t\tpushSimple(\n\t\t\t\t'L',\n\t\t\t\tMath.round( curve.point2.x ) || 0,\n\t\t\t\tMath.round( curve.point2.y ) || 0\n\t\t\t);\n\n\t\t} else {\n\t\t\tpushBezier(\n\t\t\t\t'C',\n\t\t\t\tMath.round( curve.point1.x + curve.handle1.x ) || 0,\n\t\t\t\tMath.round( curve.point1.y + curve.handle1.y ) || 0,\n\t\t\t\tMath.round( curve.point2.x + curve.handle2.x ) || 0,\n\t\t\t\tMath.round( curve.point2.y + curve.handle2.y ) || 0,\n\t\t\t\tMath.round( curve.point2.x ) || 0,\n\t\t\t\tMath.round( curve.point2.y ) || 0\n\t\t\t);\n\t\t}\n\t});\n\n\tif ( this.closed ) {\n\t\tpushSimple('Z');\n\t}\n\n\treturn data;\n};\n\nproto.updateOTCommands = function( data ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tfunction pushSimple() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx: arguments[1],\n\t\t\t\ty: arguments[2]\n\t\t\t});\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx1: arguments[1],\n\t\t\t\ty1: arguments[2],\n\t\t\t\tx2: arguments[3],\n\t\t\t\ty2: arguments[4],\n\t\t\t\tx: arguments[5],\n\t\t\t\ty: arguments[6]\n\t\t\t});\n\t\t}\n\t);\n};\n\nproto.updateSVGData = function( data ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tfunction pushSimple() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t}\n\t);\n};\n\nmodule.exports = paper.Path;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],8:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tFont = require('./Font.js'),\n\tGlyph = require('./Glyph.js'),\n\tPath = require('./Path.js'),\n\tNode = require('./Node.js'),\n\tCollection = require('./Collection.js');\n\npaper.PaperScope.prototype.Font = Font;\npaper.PaperScope.prototype.Glyph = Glyph;\npaper.PaperScope.prototype.Path = Path;\npaper.PaperScope.prototype.Node = Node;\npaper.PaperScope.prototype.Collection = Collection;\n\nfunction plumin( arg ) {\n\tif ( arguments.length === 1 && arg instanceof Collection ) {\n\t\treturn arg;\n\t}\n\n\tvar c = Object.create( Collection.prototype );\n\tCollection.apply( c, arguments );\n\treturn c;\n}\n\nplumin.opentype = opentype;\n\nplumin.proxy = Collection.proxy.bind(plumin);\nplumin.proxy(paper);\n\nmodule.exports = plumin;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Collection.js\":3,\"./Font.js\":4,\"./Glyph.js\":5,\"./Node.js\":6,\"./Path.js\":7}]},{},[8,2])(8)\n});\n\n\n//# sourceMappingURL=plumin.js.map","var plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tDepTree = require('../node_modules/deptree/index.js'),\n\tupdateUtils = require('./updateUtils.js'),\n\tmerge = require('lodash.merge');\n\nvar paper = plumin.paper,\n\tUtils = updateUtils,\n\t_ = { merge: merge };\n\n// convert the glyph source from the ufo object model to the paper object model\n// this is the inverse operation done by jsufonify\nUtils.ufoToPaper = function( src ) {\n\tif ( src.anchor ) {\n\t\tsrc.anchors = src.anchor;\n\t\tdelete src.anchor;\n\t}\n\n\tif ( src.outline && src.outline.contour ) {\n\t\tsrc.contours = src.outline.contour;\n\t\tdelete src.outline.contour;\n\t}\n\n\tsrc.contours.forEach(function(contour) {\n\t\tif ( contour.point ) {\n\t\t\tcontour.nodes = contour.point;\n\t\t\tdelete contour.point;\n\t\t}\n\t});\n\n\tif ( src.outline && src.outline.component ) {\n\t\tsrc.components = src.outline.component;\n\n\t\tsrc.components.forEach(function(component) {\n\t\t\tif ( component.anchor ) {\n\t\t\t\tcomponent.parentAnchors = component.anchor;\n\t\t\t\tdelete component.anchor;\n\t\t\t}\n\t\t});\n\n\t\tdelete src.outline.component;\n\t}\n\n\tdelete src.outline;\n\n\tif ( src.lib && src.lib.transformList ) {\n\t\tsrc.transformList = src.lib.transformList;\n\t\tdelete src.lib.transformList;\n\t}\n\n\treturn src;\n};\n\n// create Glyph instance and all its child items: anchors, contours\n// and components\nUtils.glyphFromSrc = function( src, fontSrc, naive, embed ) {\n\tvar glyph = new paper.Glyph({\n\t\tname: src.name,\n\t\tunicode: src.unicode\n\t});\n\t// Clone glyph src to allow altering it without impacnting components srcs.\n\tglyph.src = _.merge( {}, src );\n\tUtils.mergeStatic( glyph, glyph.src );\n\n\t(glyph.src.anchors || []).forEach(function(anchorSrc) {\n\t\tvar anchor = new paper.Node();\n\t\tanchor.src = anchorSrc;\n\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\tglyph.addAnchor( anchor );\n\t});\n\n\t(glyph.src.contours || []).forEach(function(contourSrc) {\n\t\tvar contour = new paper.Path();\n\t\tcontour.src = contourSrc;\n\t\tUtils.mergeStatic( contour, contourSrc );\n\n\t\tglyph.addContour( contour );\n\n\t\t// TODO: handle oncurve/offcurve points\n\t\tcontourSrc.nodes.forEach(function(nodeSrc) {\n\t\t\tvar node = new paper.Node();\n\t\t\tnode.src = nodeSrc;\n\t\t\tUtils.mergeStatic( node, nodeSrc );\n\n\t\t\tcontour.add( node );\n\t\t});\n\t});\n\n\tif ( !glyph.src.components ) {\n\t\treturn glyph;\n\t}\n\n\t// components can only be embedded once all glyphs have been generated\n\t// from source\n\tglyph.embedComponents = function() {\n\t\tglyph.src.components.forEach(function(componentSrc) {\n\t\t\t// components are glyphs, quite simply\n\t\t\tvar component = Utils.glyphFromSrc(\n\t\t\t\t\tfontSrc.glyphs[componentSrc.base],\n\t\t\t\t\tfontSrc,\n\t\t\t\t\tnaive,\n\t\t\t\t\t// components' subcomponents can be embedded immediatly\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\tnaive.annotator( component );\n\t\t\tglyph.addComponent( component );\n\n\t\t\t(componentSrc.parentAnchors || []).forEach(function(anchorSrc) {\n\t\t\t\tvar anchor = new paper.Node();\n\t\t\t\tanchor.src = anchorSrc;\n\t\t\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\t\t\tcomponent.addParentAnchor( anchor );\n\t\t\t});\n\t\t});\n\n\t\tdelete glyph.embedComponents;\n\t};\n\n\tif ( embed ) {\n\t\tglyph.embedComponents();\n\t}\n\n\treturn glyph;\n};\n\n// build a full cursor from arguments\n// adds 'contours' and 'nodes' automagically when arguments start with a number\nUtils.cursor = function() {\n\tvar cursor = [];\n\n\tfor ( var i = -1; ++i < arguments.length; ) {\n\t\tif ( i === 0 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'contours' );\n\t\t}\n\t\tif ( i === 1 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'nodes' );\n\t\t}\n\t\tcursor.push( arguments[i] );\n\t}\n\n\treturn cursor.join('.');\n};\n\nUtils.propFromCursor = function( cursor, context, length ) {\n\tif ( length === undefined ) {\n\t\tlength = cursor.length;\n\t}\n\n\tfor ( var i = -1; ++i < length; ) {\n\t\tcontext = context[ cursor[i] ];\n\t}\n\n\treturn context;\n};\n\nUtils.mergeStatic = function( obj, src ) {\n\tfor ( var i in src ) {\n\t\tif ( typeof src[i] !== 'object' ) {\n\t\t\tobj[i] = src[i];\n\n\t\t// props that have empty dependencies and params are static\n\t\t} else if ( src[i]._dependencies && src[i]._dependencies.length === 0 &&\n\t\t\t\tsrc[i]._parameters.length === 0 ) {\n\n\t\t\tobj[i] = src[i]._updaters[0].apply(\n\t\t\t\tobj,\n\t\t\t\t[ null, null, null, null, Utils ]\n\t\t\t);\n\n\t\t\tdelete src[i];\n\t\t}\n\t}\n};\n\nUtils.createUpdaters = function( leaf, path ) {\n\tif ( leaf.constructor === Object &&\n\t\t\t( typeof leaf._operation === 'string' ||\n\t\t\ttypeof leaf._operation === 'function' ) ) {\n\n\t\tvar args = [\n\t\t\t\t\t'propName', 'contours', 'anchors', 'parentAnchors', 'Utils'\n\t\t\t\t]\n\t\t\t\t.concat( leaf._parameters || [] )\n\t\t\t\t.concat(\n\t\t\t\t\t( typeof leaf._operation === 'string' &&\n\t\t\t\t\t\t\tleaf._operation.indexOf('return ') === -1 ?\n\t\t\t\t\t\t'return ' : ''\n\t\t\t\t\t) +\n\t\t\t\t\t// The operation might be wrapped in a function (e.g. multi-\n\t\t\t\t\t// line code for debugging purpose). In this case, return\n\t\t\t\t\t// must be explicit\n\t\t\t\t\tleaf._operation.toString()\n\t\t\t\t\t\t// [\\s\\S] need to be used instead of . because\n\t\t\t\t\t\t// javascript doesn't have a dotall flag (s)\n\t\t\t\t\t\t.replace(/function\\s*\\(\\)\\s*\\{([\\s\\S]*?)\\}$/, '$1')\n\t\t\t\t\t\t.trim() +\n\t\t\t\t\t// add sourceURL pragma to help debugging\n\t\t\t\t\t'\\n\\n//# sourceURL=' + path\n\t\t\t\t);\n\n\t\tleaf._updaters = [ Function.apply( null, args ) ];\n\t\treturn leaf._updaters;\n\t}\n\n\tif ( leaf.constructor === Object ) {\n\t\tfor ( var i in leaf ) {\n\t\t\tUtils.createUpdaters( leaf[i], path + '.' + i );\n\t\t}\n\t}\n\n\tif ( leaf.constructor === Array ) {\n\t\tleaf.forEach(function(child, j) {\n\t\t\tUtils.createUpdaters( child, path + '.' + j );\n\t\t});\n\t}\n};\n\nUtils.solveDependencyTree = function( glyph ) {\n\tvar depTree = Utils.dependencyTree( glyph.src, null ),\n\t\torder = depTree.resolve(),\n\t\tsimplified = Utils.simplifyResolutionOrder( order );\n\n\treturn simplified;\n};\n\nUtils.dependencyTree = function( parentSrc, cursor, depTree ) {\n\tif ( !depTree ) {\n\t\tdepTree = new DepTree();\n\t}\n\n\tObject.keys( parentSrc ).forEach(function( i ) {\n\t\t// don't inspect private properties or non-object\n\t\tif ( i.indexOf('_') === 0 || typeof parentSrc[i] !== 'object' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar leafSrc = parentSrc[i],\n\t\t\tcurrCursor = cursor ? cursor + '.' + i : i;\n\n\t\tif ( ( leafSrc._updaters && leafSrc._updaters.length ) ||\n\t\t\t\t( leafSrc._dependencies && leafSrc._dependencies.length ) ) {\n\n\t\t\tdepTree.add( currCursor,\n\t\t\t\tleafSrc._dependencies.filter(function(dep) {\n\t\t\t\t\t// parentAnchors are always here when you need them\n\t\t\t\t\treturn !/^parentAnchors/.test(dep);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif ( !leafSrc._operation ) {\n\t\t\tUtils.dependencyTree( leafSrc, currCursor, depTree );\n\t\t}\n\t});\n\n\treturn depTree;\n};\n\n// Simplify resolution order by removing cursors that don't point to objects\n// with updater functions\nUtils.simplifyResolutionOrder = function( depTree ) {\n\t// TODO: test + implement this optimization\n\treturn depTree;\n};\n\nvar rdeg = /deg$/;\nUtils.transformsToMatrix = function( transforms, origin ) {\n\tvar prev = new Float32Array(6),\n\t\tcurr = new Float32Array(6),\n\t\trslt = new Float32Array([ 1, 0, 0, 1, 0, 0 ]);\n\n\tif ( origin && Array.isArray( origin ) ) {\n\t\ttransforms.unshift([ 'translate', origin[0], origin[1] ]);\n\t\ttransforms.push([ 'translate', -origin[0], -origin[1] ]);\n\n\t} else if ( origin ) {\n\t\ttransforms.unshift([ 'translate', origin.x, origin.y ]);\n\t\ttransforms.push([ 'translate', -origin.x, -origin.y ]);\n\t}\n\n\ttransforms.forEach(function( transform ) {\n\t\tcurr[0] = curr[3] = 1;\n\t\tcurr[1] = curr[2] = curr[4] = curr[5] = 0;\n\n\t\t// convert degrees to radian\n\t\tfor ( var i = 1; i < transform.length; i++ ) {\n\t\t\tif ( transform[i] && typeof transform[i] === 'string' &&\n\t\t\t\t\trdeg.test(transform[i]) ) {\n\t\t\t\ttransform[i] = parseFloat(transform[i]) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\t\t}\n\n\t\tswitch ( transform[0] ) {\n\t\tcase 'translateX':\n\t\t\tcurr[4] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translateY':\n\t\t\tcurr[5] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translate':\n\t\t\tcurr[4] = transform[1];\n\t\t\tcurr[5] = transform[2] || 0;\n\t\t\tbreak;\n\n\t\tcase 'rotate':\n\t\t\tcurr[0] = Math.cos( transform[1] );\n\t\t\tcurr[1] = Math.sin( transform[1] );\n\t\t\tcurr[2] = -curr[1];\n\t\t\tcurr[3] = curr[0];\n\t\t\tbreak;\n\n\t\tcase 'scaleX':\n\t\t\tcurr[0] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scaleY':\n\t\t\tcurr[3] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scale':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[3] = transform.length > 2 ? transform[2] : transform[1];\n\t\t\tbreak;\n\n\t\tcase 'skewX':\n\t\t\t// stop parsing transform when encountering skewX(90)\n\t\t\t// see http://stackoverflow.com/questions/21094958/how-to-deal-with-infinity-in-a-2d-matrix\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[2] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'skewY':\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[1] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'matrix':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[1] = transform[2];\n\t\t\tcurr[2] = transform[3];\n\t\t\tcurr[3] = transform[4];\n\t\t\tcurr[4] = transform[5];\n\t\t\tcurr[5] = transform[6];\n\t\t\tbreak;\n\t\t}\n\n\t\tprev[0] = rslt[0];\n\t\tprev[1] = rslt[1];\n\t\tprev[2] = rslt[2];\n\t\tprev[3] = rslt[3];\n\t\tprev[4] = rslt[4];\n\t\tprev[5] = rslt[5];\n\n\t\trslt[0] = prev[0] * curr[0] + prev[2] * curr[1];\n\t\trslt[1] = prev[1] * curr[0] + prev[3] * curr[1];\n\t\trslt[2] = ( prev[0] * curr[2] || 0 ) + prev[2] * curr[3];\n\t\trslt[3] = ( prev[1] * curr[2] || 0 ) + prev[3] * curr[3];\n\t\trslt[4] = prev[0] * curr[4] + prev[2] * curr[5] + prev[4];\n\t\trslt[5] = prev[1] * curr[4] + prev[3] * curr[5] + prev[5];\n\t});\n\n\treturn new paper.Matrix(\n\t\trslt[0],\n\t\trslt[1],\n\t\trslt[2],\n\t\trslt[3],\n\t\trslt[4],\n\t\trslt[5]\n\t);\n};\n\n// Utils.normalizeAngle = function( angle ) {\n// \treturn angle % ( 2 * Math.PI ) + ( angle < 0 ? 2 * Math.PI : 0 );\n// };\n\n// Utils.findUpdater = function( glyph, cursor ) {\n// \tvar steps = [ 'glyph' ].concat( cursor.split('.') ),\n// \t\tcontext = { glyph: glyph };\n//\n// \tfor ( var i = -1; ++i < steps.length; ) {\n// \t\tcontext = context[ steps[i] ];\n//\n// \t\tif ()\n// \t}\n// };\n\n// patterns that should be searched for in dependencies and expanded\n// This list is expandable by plugins, 'naive' uses this possibility\n// hashtag #expandableception\n// Utils.expandables = [\n// \t[ /\\.nodes\\.\\d+\\.point$/, function( dep ) {\n// \t\tdep = dep.replace(/\\.point$/, '');\n//\n// \t\treturn [\n// \t\t\tdep + '.x',\n// \t\t\tdep + '.y'\n// \t\t];\n// \t} ],\n// \t[ /\\.nodes\\.\\d+$/, function( dep ) {\n// \t\treturn [\n// \t\t\tdep + '.x',\n// \t\t\tdep + '.y',\n// \t\t\tdep + '.handleIn.point',\n// \t\t\tdep + '.handleOut.point'\n// \t\t];\n// \t} ]\n// ];\n// Utils.expandDependencies = function( glyphSrc, deps, excludeList ) {\n// \tdeps = deps.map(function(dep) {\n// \t\t// search for an expandable pattern and... expand the dependency\n// \t\tfor ( var i = -1, l = Utils.expandables.length; ++i < l; ) {\n// \t\t\tif ( Utils.expandables[i][0].test( dep ) ) {\n// \t\t\t\treturn Utils.expandables[i][1]( dep, glyphSrc );\n// \t\t\t}\n// \t\t}\n//\n// \t\treturn dep;\n// \t});\n//\n// \t// flatten deps array and remove items from excludeList\n// \treturn [].concat.apply([], deps).filter(function(dep) {\n// \t\treturn excludeList.indexOf( dep ) === -1;\n// \t});\n// };\n\nmodule.exports = Utils;\n","var plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tUtils = require('./Utils.js'),\n\tmerge = require('lodash.merge');\n\nvar paper = plumin.paper,\n\tnaive = {},\n\t_ = { merge: merge };\n\nfunction nodeSrc( node, i, j, inSkeleton ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\tUtils.cursor( i, j, 'y' )\n\t\t] },\n\t\tall: { _dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\treturn Utils.cursor( i, j, key );\n\t\t}) },\n\t\t_dependencies: inSkeleton ?\n\t\t\t// nodes in skeleton are never fully calculated (we don't calculate\n\t\t\t// the position of handles because we never draw their contour).\n\t\t\t// So we don't care about their dependencies.\n\t\t\t[] :\n\t\t\t[ Utils.cursor( 'contours', i, 'all' ) ]\n\t};\n}\n\nfunction autoExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tx: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\ty: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\tpoint: {\n\t\t\t_dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'y' ),\n\t\t\t\tUtils.cursor( i, j, 'expand' )\n\t\t\t],\n\t\t\t_parameters: [ 'width' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar width = arguments[\n\t\t\t\t\t\targuments.length - 1\n\t\t\t\t\t];\n\n\t\t\t\tnaive.expandedNodeUpdater(\n\t\t\t\t\tnode.expandedTo[side], side === 0, width\n\t\t\t\t);\n\t\t\t} ]\n\t\t},\n\t\tall: {\n\t\t\t_dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\t\treturn Utils.cursor( i, j, key );\n\t\t\t}).concat([\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t\t]),\n\t\t\t_updaters: [ function() {\n\t\t\t\tnaive.skeletonCopier( node );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'all' )\n\t\t]\n\t};\n}\n\nfunction explicitExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'y' )\n\t\t] },\n\t\tall: { _dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\treturn Utils.cursor( i, j, 'expandedTo', side, key );\n\t\t}) },\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'points' )\n\t\t]\n\t};\n}\n\n//function expandedContourSrc( contour, i, side, nodesSrc ) {\nfunction expandedContourSrc( contour, i, side ) {\n\tvar half = contour.nodes.length / 2;\n\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function(node, j) {\n\t\t\t\treturn side !== undefined ?\n\t\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'all' ) :\n\t\t\t\t\tUtils.cursor(\n\t\t\t\t\t\ti, j % half, 'expandedTo', ( j < half ? 0 : 1 ), 'all'\n\t\t\t\t\t);\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t// nodes: nodesSrc,\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo', side || 0, 'all' )\n\t\t]\n\t};\n}\n\nfunction contourSrc( contour, i ) {\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\t\treturn Utils.cursor( i, j, 'all' );\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\treturn Utils.cursor( i, j );\n\t\t})\n\t};\n}\n\n// default method to expand skeletons:\n// derives two additional node from every node with an .expand object\nnaive.annotator = function( glyph ) {\n\tvar additionalContours = [];\n\n\tglyph.contours.forEach(function( contour, i ) {\n\t\tif ( contour.skeleton !== true ) {\n\t\t\t// annotate nodes+points that aren't in a skeleton\n\t\t\tcontour.nodes.forEach(function( node, j ) {\n\t\t\t\t_.merge( node.src, nodeSrc( node, i, j ) );\n\t\t\t});\n\n\t\t\t_.merge( contour.src, contourSrc( contour, i ) );\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar leftContour,\n\t\t\trightContour,\n\t\t\tleftNodes = [],\n\t\t\trightNodes = [],\n\t\t\tleftNodesSrc = [],\n\t\t\trightNodesSrc = [],\n\t\t\tfirstNode,\n\t\t\tlastNode;\n\n\t\t// skeletons should be hidden\n\t\tcontour.visible = false;\n\n\t\tcontour.nodes.forEach(function( node, j ) {\n\n\t\t\tvar left = new paper.Node(),\n\t\t\t\tright = new paper.Node(),\n\t\t\t\tleftSrc,\n\t\t\t\trightSrc;\n\n\t\t\tleftNodes.push(left);\n\t\t\trightNodes.unshift(right);\n\t\t\tnode.expandedTo = [ left, right ];\n\t\t\tleft.expandedFrom = right.expandedFrom = node;\n\n\t\t\tif ( !node.src.expandedTo ) {\n\t\t\t\t// annotate nodes+points that are automatically expanded\n\t\t\t\tleftSrc = autoExpandedNodeSrc( node, i, j, 0, contour.closed );\n\t\t\t\trightSrc = autoExpandedNodeSrc( node, i, j, 1, contour.closed );\n\t\t\t\tnode.src.expandedTo = [ leftSrc, rightSrc ];\n\t\t\t\t_.merge( node.src, nodeSrc( node, i, j, !!'inSkeleton' ) );\n\n\t\t\t// the expanded node might have been defined explicitely\n\t\t\t} else if ( node.src.expandedTo[0] &&\n\t\t\t\t\t!node.src.expandedTo[0]._updaters ) {\n\t\t\t\tnode.src.expandedTo.forEach(function( src, k ) {\n\t\t\t\t\tUtils.mergeStatic( node.expandedTo[k], src );\n\t\t\t\t});\n\n\t\t\t\t// annotate nodes+points that are explicitely expanded\n\t\t\t\tleftSrc = _.merge( node.src.expandedTo[0],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 0, contour.closed )\n\t\t\t\t);\n\t\t\t\trightSrc = _.merge( node.src.expandedTo[1],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 1, contour.closed )\n\t\t\t\t);\n\n\t\t\t\t// A leaf shouldn't appear twice during the recursive\n\t\t\t\t// dependency-tree building. Make the expanded nodes accessible\n\t\t\t\t// from expanded contours, and provide accessors on the\n\t\t\t\t// .expandedFrom node.\n\t\t\t\t// leftNodesSrc.push( leftSrc );\n\t\t\t\t// rightNodesSrc.push( rightSrc );\n\t\t\t}\n\n\t\t\t// if ( leftSrc && rightSrc ) {\n\t\t\t// \tObject.defineProperties( node.src.expandedTo = {}, {\n\t\t\t// \t\t0: { get: function() {\n\t\t\t// \t\t\treturn leftSrc;\n\t\t\t// \t\t}},\n\t\t\t// \t\t1: { get: function() {\n\t\t\t// \t\t\t\treturn rightSrc;\n\t\t\t// \t\t}}\n\t\t\t// \t});\n\t\t\t// }\n\t\t});\n\n\t\tif ( !contour.expandedTo && !contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes.concat(rightNodes)\n\t\t\t});\n\t\t\tcontour.expandedTo = [ leftContour ];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i\n\t\t\t\t\t//, 0, leftNodesSrc.concat( rightNodesSrc )\n\t\t\t\t)\n\t\t\t];\n\t\t\tleftContour.expandedFrom = contour;\n\t\t\tadditionalContours.push( leftContour );\n\n\t\t\tfirstNode = contour.firstNode;\n\t\t\tlastNode = contour.lastNode;\n\n\t\t\tfirstNode.type = 'corner';\n\t\t\tlastNode.type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].type = 'corner';\n\t\t\tfirstNode.expandedTo[1].type = 'corner';\n\t\t\tlastNode.expandedTo[0].type = 'corner';\n\t\t\tlastNode.expandedTo[1].type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].typeIn = 'line';\n\t\t\tfirstNode.expandedTo[1].typeOut = 'line';\n\t\t\tlastNode.expandedTo[0].typeOut = 'line';\n\t\t\tlastNode.expandedTo[1].typeIn = 'line';\n\n\t\t} else if ( !contour.expandedTo && contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes\n\t\t\t});\n\t\t\tadditionalContours.push( leftContour );\n\t\t\trightContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: rightNodes\n\t\t\t});\n\t\t\tadditionalContours.push( rightContour );\n\n\t\t\tcontour.expandedTo = [\n\t\t\t\tleftContour,\n\t\t\t\trightContour\n\t\t\t];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i, 0, leftNodesSrc ),\n\t\t\t\texpandedContourSrc( rightContour, i, 1, rightNodesSrc )\n\t\t\t];\n\t\t\tleftContour.expandedFrom = rightContour.expandedFrom = contour;\n\t\t}\n\t});\n\n\tglyph.addContours( additionalContours );\n};\n\n// Calculate expanded node position\nnaive.expandedNodeUpdater = function( node, isLeft, _width ) {\n\tvar origin = node.expandedFrom,\n\t\texpand = origin.expand,\n\t\twidth = expand && expand.width !== undefined ?\n\t\t\texpand.width : _width,\n\t\tcoef = expand && expand.distr !== undefined ?\n\t\t\t( isLeft ? expand.distr : 1 - expand.distr ) :\n\t\t\t0.5,\n\t\tangle = ( isLeft ? Math.PI : 0 ) +\n\t\t\t( expand && expand.angle !== undefined ?\n\t\t\t\texpand.angle :\n\t\t\t\t// We resort to using directions.\n\t\t\t\t// This is wrong, directions are not included in the\n\t\t\t\t// dependencies of the updater and might not be ready yet.\n\t\t\t\t// TODO: Fix this (always require angle to be specified?)\n\t\t\t\t( origin._dirOut !== undefined ?\n\t\t\t\t\torigin._dirOut - Math.PI / 2 :\n\t\t\t\t\torigin._dirIn + Math.PI / 2\n\t\t\t\t)\n\t\t\t);\n\n\t// position\n\tnode.point.x = origin.point.x + ( width * coef * Math.cos( angle ) );\n\tnode.point.y = origin.point.y + ( width * coef * Math.sin( angle ) );\n};\n\n// copy skeleton properties such as types, directions and tensions to expanded\n// nodes\nnaive.skeletonCopier = function( node ) {\n\tvar angle = node.expand && node.expand.angle || 0,\n\t\tleft = node.expandedTo[0],\n\t\tright = node.expandedTo[1];\n\n\t// node type\n\tif ( node.type !== undefined ) {\n\t\tleft.type = right.type = node.type;\n\t}\n\n\t// direction type\n\tif ( node.typeIn !== undefined ) {\n\t\tleft.typeIn = right.typeOut = node.typeIn;\n\t}\n\tif ( node.typeOut !== undefined ) {\n\t\tleft.typeOut = right.typeIn = node.typeOut;\n\t}\n\n\t// direction\n\tif ( node._dirIn !== undefined ) {\n\t\tleft._dirIn = right._dirOut = node._dirIn;\n\n\t\tif ( node.type === 'smooth' && node._dirOut === undefined ) {\n\t\t\tleft._dirOut = right._dirIn = node._dirIn + Math.PI;\n\t\t}\n\t}\n\tif ( node._dirOut !== undefined ) {\n\t\tleft._dirOut = right._dirIn = node._dirOut;\n\n\t\tif ( node.type === 'smooth' && node._dirIn === undefined ) {\n\t\t\tleft._dirIn = right._dirOut = node._dirOut + Math.PI;\n\t\t}\n\t}\n\t// use angle if direction isn't already defined\n\tif ( left._dirIn === undefined ) { // implies right._dirOut === undefined\n\t\tleft._dirIn = angle - Math.PI / 2;\n\t\tright._dirOut = angle + Math.PI / 2;\n\t}\n\tif ( left._dirOut === undefined ) { // implies right._dirIn === undefined\n\t\tleft._dirOut = angle + Math.PI / 2;\n\t\tright._dirIn = angle - Math.PI / 2;\n\t}\n\n\t// tension\n\tleft.tensionIn = right.tensionOut = node.tensionIn !== undefined ?\n\t\tnode.tensionIn :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n\tleft.tensionOut = right.tensionIn = node.tensionOut !== undefined ?\n\t\tnode.tensionOut :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n};\n\n// Make sure 'line' types are set on both side of segments\n// and if a smooth node is used in a straight segment, update the directions\n// appropriately this can only be done once the types, directions and position\n// of all nodes have been updated can be renamed #prepareLines if no other\n// operation is added\n// TODO: try doing it at the same time as updateContour (once we have more\n// complex glyphs)\nnaive.prepareContour = function( path ) {\n\tpath.nodes.forEach(function(node) {\n\t\tif ( node.typeIn === 'line' && node.previous ) {\n\t\t\tnode.previous.typeOut = 'line';\n\n\t\t\tif ( node.type === 'smooth' ) {\n\t\t\t\tnode._dirIn = Utils.lineAngle(\n\t\t\t\t\tnode.point, node.previous.point\n\t\t\t\t);\n\t\t\t\tnode._dirOut = node._dirIn + Math.PI;\n\t\t\t}\n\t\t}\n\n\t\tif ( node.typeOut === 'line' && node.next ) {\n\t\t\tnode.next.typeIn = 'line';\n\n\t\t\tif ( node.type === 'smooth' ) {\n\t\t\t\tnode._dirOut = Utils.lineAngle(\n\t\t\t\t\tnode.point, node.next.point\n\t\t\t\t);\n\t\t\t\tnode._dirIn = node._dirOut + Math.PI;\n\t\t\t}\n\t\t}\n\t});\n};\n\n// sets the position of control points\n// can be renamed #updateControls if no other operation is added\nnaive.updateContour = function( path, curviness ) {\n\tif ( curviness === undefined ) {\n\t\tcurviness = 2 / 3;\n\t}\n\n\tpath.nodes.forEach(function(node) {\n\t\tvar start = node,\n\t\t\tend,\n\t\t\tstartCtrl,\n\t\t\tendCtrl,\n\t\t\tstartType,\n\t\t\tendType,\n\t\t\tstartTension,\n\t\t\tendTension,\n\t\t\tstartDir,\n\t\t\tendDir,\n\t\t\trri;\n\n\t\tif ( !node.next ) {\n\t\t\treturn;\n\t\t}\n\n\t\tend = node.next;\n\t\tstartCtrl = start.handleOut;\n\t\tendCtrl = end.handleIn;\n\n\t\tstartType = start.typeOut;\n\t\tendType = end.typeIn;\n\n\t\tif ( startType === 'line' || endType === 'line' ) {\n\t\t\tstartCtrl.x = 0;\n\t\t\tstartCtrl.y = 0;\n\t\t\tendCtrl.x = 0;\n\t\t\tendCtrl.y = 0;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartTension = start.tensionOut !== undefined ?\n\t\t\tstart.tensionOut :\n\t\t\t( start.tension !== undefined ? start.tension : 1 );\n\t\tendTension = end.tensionIn !== undefined ?\n\t\t\tend.tensionIn :\n\t\t\t( end.tension !== undefined ? end.tension : 1 );\n\n\t\tstartDir = start._dirOut !== undefined ?\n\t\t\tstart._dirOut :\n\t\t\tstart.type === 'smooth' ? start._dirIn + Math.PI : 0;\n\t\tendDir = end._dirIn !== undefined ?\n\t\t\tend._dirIn :\n\t\t\tend.type === 'smooth' ? end._dirOut - Math.PI : 0;\n\n\t\trri = Utils.rayRayIntersection(\n\t\t\tstart._point,\n\t\t\tstartDir,\n\t\t\tend._point,\n\t\t\tendDir\n\t\t);\n\n\t\t// direction of handles is parallel\n\t\tif ( rri === null ) {\n\t\t\tvar angle = Utils.lineAngle( start._point, end._point ),\n\t\t\t\tmiddle = {\n\t\t\t\t\tx: ( end._point.x - start._point.x ) / 2 + start._point.x,\n\t\t\t\t\ty: ( end._point.y - start._point.y ) / 2 + start._point.y\n\t\t\t\t},\n\t\t\t\tp0 = Utils.rayRayIntersection(\n\t\t\t\t\tstart._point, startDir, middle, angle - Math.PI / 2\n\t\t\t\t),\n\t\t\t\tp1 = Utils.rayRayIntersection(\n\t\t\t\t\tmiddle, angle + Math.PI / 2, end._point, endDir\n\t\t\t\t);\n\n\t\t\tstartCtrl.x = ( Math.round(p0[0]) - start._point.x ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tstartCtrl.y = ( Math.round(p0[1]) - start._point.y ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tendCtrl.x = ( Math.round(p1[0]) - end._point.x ) *\n\t\t\t\tcurviness * endTension;\n\t\t\tendCtrl.y = ( Math.round(p1[1]) - end._point.y ) *\n\t\t\t\tcurviness * endTension;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartCtrl.x = ( Math.round(rri[0]) - start.point.x ) *\n\t\t\tcurviness * startTension;\n\t\tstartCtrl.y = ( Math.round(rri[1]) - start.point.y ) *\n\t\t\tcurviness * startTension;\n\t\tendCtrl.x = ( Math.round(rri[0]) - end.point.x ) *\n\t\t\tcurviness * endTension;\n\t\tendCtrl.y = ( Math.round(rri[1]) - end.point.y ) *\n\t\t\tcurviness * endTension;\n\t});\n};\n\nvar rdeg = /deg$/;\nObject.defineProperties(paper.PaperScope.prototype.Segment.prototype, {\n\texpand: {\n\t\tget: function() {\n\t\t\treturn this._expand;\n\t\t},\n\t\tset: function( expand ) {\n\t\t\tif ( typeof expand.angle === 'string' && rdeg.test(expand.angle) ) {\n\t\t\t\texpand.angle = parseFloat(expand.angle) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\n\t\t\tthis._expand = expand;\n\t\t}\n\t},\n\tdirIn: {\n\t\tget: function() {\n\t\t\treturn this._dirIn;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirIn = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirIn = dir;\n\t\t\t}\n\t\t}\n\t},\n\tdirOut: {\n\t\tget: function() {\n\t\t\treturn this._dirOut;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirOut = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirOut = dir;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = naive;\n","/*jshint -W098 */\nvar plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tUtils = require('./Utils.js'),\n\tnaive = require('./naive.js');\n\nvar paper = plumin.paper;\n\nfunction parametricFont( src ) {\n\t// TODO: this, block is only here for backward compat\n\t// and should be removed at some point in the future\n\tif ( !src.fontinfo ) {\n\t\tsrc.fontinfo = src.info;\n\t}\n\n\tvar font = new paper.Font( src.fontinfo );\n\n\tfont.src = src;\n\n\tObject.keys( src.glyphs ).forEach(function( name ) {\n\t\tvar glyphSrc = src.glyphs[name];\n\n\t\tUtils.ufoToPaper( glyphSrc );\n\n\t\t// turn ._operation strings to ._updaters functions\n\t\tUtils.createUpdaters( glyphSrc, 'glyphs/glyph_' + name );\n\n\t\tvar glyph = Utils.glyphFromSrc( glyphSrc, src, naive );\n\n\t\tfont.addGlyph( glyph );\n\n\t\t// Create additional paths for skeletons and set ._dependencies\n\t\t// appropriately\n\t\tnaive.annotator( glyph );\n\n\t\tglyph.solvingOrder =\n\t\t\tUtils.solveDependencyTree( glyph ).map(function( cursor ) {\n\t\t\t\treturn cursor.split('.');\n\t\t\t});\n\t});\n\n\t// all glyphs are ready, embed components now\n\tfont.glyphs.forEach(function( _glyph ) {\n\t\tif ( _glyph.embedComponents ) {\n\t\t\t_glyph.embedComponents();\n\t\t}\n\t});\n\n\treturn font;\n}\n\nplumin.parametricFont = parametricFont;\nplumin.Utils = Utils;\nplumin.Utils.naive = naive;\n\npaper.PaperScope.prototype.Font.prototype.update = function( params, set ) {\n\treturn this.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.update( params, this );\n\t}, this);\n};\n\n/* Update the shape of the glyph, according to formula and parameters\n * 0. before running, nodes have already been created by ParametricFont\n *   (including expanded ones thanks to naive.expandSkeletons). And static\n *   properties have been copied over to those nodes\n * 1. We use the solving order to calculate all node properties\n * 2. transform contours\n * 3. Update components and transform them\n */\npaper.PaperScope.prototype.Glyph.prototype.update =\n\tfunction( params, solvingOrder ) {\n\t\tvar glyph = this;\n\n\t\t// 1. calculate node properties\n\t\t( solvingOrder || glyph.solvingOrder || [] ).forEach(function(cursor) {\n\t\t\tvar propName = cursor[ cursor.length - 1 ],\n\t\t\t\tsrc = Utils.propFromCursor( cursor, glyph.src ),\n\t\t\t\tobj = Utils.propFromCursor( cursor, glyph, cursor.length - 1 ),\n\t\t\t\t// TODO: one day we could allow multiple _updaters\n\t\t\t\tresult = src && src._updaters && src._updaters[0].apply( obj,\n\t\t\t\t\t[\n\t\t\t\t\t\tpropName, glyph.contours, glyph.anchors,\n\t\t\t\t\t\tglyph.parentAnchors, Utils\n\t\t\t\t\t].concat(\n\t\t\t\t\t\t( src._parameters || [] ).map(function(name) {\n\t\t\t\t\t\t\treturn params[name];\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t// Assume that updaters returning undefined have their own\n\t\t\t// assignment logic\n\t\t\tif ( result !== undefined ) {\n\t\t\t\tobj[propName] = result;\n\t\t\t}\n\t\t}, this);\n\n\t\t// 2. transform contours\n\t\tthis.contours.forEach(function(contour) {\n\t\t\tvar matrix;\n\n\t\t\t// a. transform the nodes\n\t\t\tcontour.nodes.forEach(function(node) {\n\t\t\t\tif ( node.transforms ) {\n\t\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\t\tnode.transforms.slice(0), node.transformOrigin\n\t\t\t\t\t);\n\n\t\t\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\t\t\t// We don't want to apply the transforms immediatly,\n\t\t\t\t\t\t// otherwise the transformation will add-up on each\n\t\t\t\t\t\t// update.\n\t\t\t\t\t\t// Don't ask me why it isn't false by default...\n\t\t\t\t\t\tnode.applyMatrix = false;\n\t\t\t\t\t\tnode.matrix = matrix;\n\n\t\t\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t\t\t// expanded items\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.expandedTo.forEach(function( _node ) {\n\t\t\t\t\t\t\t_node.applyMatrix = false;\n\t\t\t\t\t\t\t_node.matrix = matrix;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// b. transform the contour\n\t\t\t// prepare and update outlines and expanded contours, but not\n\t\t\t// skeletons\n\t\t\tif ( contour.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tcontour.transforms.slice(0), contour.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\t\tcontour.applyMatrix = false;\n\t\t\t\t\tcontour.matrix = matrix;\n\n\t\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t\t// expanded items\n\t\t\t\t} else {\n\t\t\t\t\tcontour.expandedTo.forEach(function( _contour ) {\n\t\t\t\t\t\t_contour.applyMatrix = false;\n\t\t\t\t\t\t_contour.matrix = matrix;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}, this);\n\n\t\t// 3. update components and transform components\n\t\tthis.components.forEach(function(component) {\n\t\t\tcomponent.update(\n\t\t\t\tparams, this.parent.glyphMap[component.name].solvingOrder\n\t\t\t);\n\n\t\t\tif ( component.transforms ) {\n\t\t\t\tvar matrix = Utils.transformsToMatrix(\n\t\t\t\t\tcomponent.transforms.slice(0),\n\t\t\t\t\tcomponent.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tcomponent.applyMatrix = false;\n\t\t\t\tif ( !component.pivot ) {\n\t\t\t\t\tcomponent.pivot = new paper.Point( 0, 0 );\n\t\t\t\t}\n\n\t\t\t\tcomponent.matrix = matrix;\n\t\t\t}\n\t\t}, this);\n\t};\n\nmodule.exports = plumin;\n","var Utils = {};\n\n// The following function should be useless, thanks to paper\nUtils.lineLineIntersection = function( p1, p2, p3, p4 ) {\n\tvar x1 = p1.x,\n\t\ty1 = p1.y,\n\t\tx2 = p2.x,\n\t\ty2 = p2.y,\n\t\tx3 = p3.x,\n\t\ty3 = p3.y,\n\t\tx4 = p4.x,\n\t\ty4 = p4.y,\n\t\td = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n\tif ( d === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn new Float32Array([\n\t\t( (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4) ) /\n\t\td,\n\t\t( (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4) ) /\n\t\td\n\t]);\n};\n\n// Find the intersection of two rays.\n// A ray is defined by a point and an angle.\nUtils.rayRayIntersection = function( p1, a1, p2, a2 ) {\n\t// line equations\n\tvar a = Math.tan(a1),\n\t\tb = Math.tan(a2),\n\t\tc = p1.y - a * p1.x,\n\t\td = p2.y - b * p2.x,\n\t\tx,\n\t\ty;\n\n\t// When searching for lines intersection,\n\t// angles can be normalized to 0 < a < PI\n\t// This will be helpful in detecting special cases below.\n\ta1 = a1 % Math.PI;\n\tif ( a1 < 0 ) {\n\t\ta1 += Math.PI;\n\t}\n\ta2 = a2 % Math.PI;\n\tif ( a2 < 0 ) {\n\t\ta2 += Math.PI;\n\t}\n\n\t// no intersection\n\tif ( a1 === a2 ) {\n\t\treturn null;\n\t}\n\n\t// Optimize frequent and easy special cases.\n\t// Without optimization, results would be incorrect when cos(a) === 0\n\tif ( a1 === 0 ) {\n\t\ty = p1.y;\n\t} else if ( a1 === Math.PI / 2 ) {\n\t\tx = p1.x;\n\t}\n\tif ( a2 === 0 ) {\n\t\ty = p2.y;\n\t} else if ( a2 === Math.PI / 2 ) {\n\t\tx = p2.x;\n\t}\n\n\t// easiest case\n\tif ( x !== undefined && y !== undefined ) {\n\t\treturn new Float32Array([ x, y ]);\n\t}\n\n\t// other cases that can be optimized\n\tif ( a1 === 0 ) {\n\t\treturn new Float32Array([ ( y - d ) / b, y ]);\n\t}\n\tif ( a1 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, b * x + d ]);\n\t}\n\tif ( a2 === 0 ) {\n\t\treturn new Float32Array([ ( y - c ) / a, y ]);\n\t}\n\tif ( a2 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, a * x + c ]);\n\t}\n\n\t// intersection from two line equations\n\t// algo: http://en.wikipedia.org/wiki/Line–line_intersection#Given_the_equations_of_the_lines\n\treturn new Float32Array([\n\t\tx = (d - c) / (a - b),\n\t\t// this should work equally well with ax+c or bx+d\n\t\ta * x + c\n\t]);\n};\n\n// return the angle between two points\nUtils.lineAngle = function( p0, p1 ) {\n\treturn Math.atan2( p1.y - p0.y, p1.x - p0.x );\n};\n\nUtils.onLine = function( params ) {\n\tvar origin = params.on[0],\n\t\tvector = [\n\t\t\tparams.on[1].x - params.on[0].x,\n\t\t\tparams.on[1].y - params.on[0].y\n\t\t];\n\n\treturn 'x' in params ?\n\t\t( params.x - origin.x ) / vector[0] * vector[1] + origin.y :\n\t\t( params.y - origin.y ) / vector[1] * vector[0] + origin.x;\n};\n\nUtils.log = function() {\n\tconsole.log.apply( console, arguments );\n\treturn arguments[0];\n};\n\nmodule.exports = Utils;\n"]}